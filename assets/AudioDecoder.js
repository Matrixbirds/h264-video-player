(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory(require("fs"));
	else if(typeof define === 'function' && define.amd)
		define(["fs"], factory);
	else if(typeof exports === 'object')
		exports["AudioDecoder"] = factory(require("fs"));
	else
		root["AudioDecoder"] = factory(root["fs"]);
})(window, function(__WEBPACK_EXTERNAL_MODULE_fs__) {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./src/index.ts");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./lib/libopus.js":
/*!************************!*\
  !*** ./lib/libopus.js ***!
  \************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(__dirname) {var Module;if(!Module)Module=(typeof Module!=="undefined"?Module:null)||{};var moduleOverrides={};for(var key in Module){if(Module.hasOwnProperty(key)){moduleOverrides[key]=Module[key]}}var ENVIRONMENT_IS_NODE=typeof process==="object"&&"function"==="function";var ENVIRONMENT_IS_WEB=typeof window==="object";var ENVIRONMENT_IS_WORKER=typeof importScripts==="function";var ENVIRONMENT_IS_SHELL=!ENVIRONMENT_IS_WEB&&!ENVIRONMENT_IS_NODE&&!ENVIRONMENT_IS_WORKER;if(ENVIRONMENT_IS_NODE){if(!Module["print"])Module["print"]=function print(x){process["stdout"].write(x+"\n")};if(!Module["printErr"])Module["printErr"]=function printErr(x){process["stderr"].write(x+"\n")};var nodeFS=__webpack_require__(/*! fs */ "fs");var nodePath=__webpack_require__(/*! path */ "./node_modules/.0.0.0@path-browserify/index.js");Module["read"]=function read(filename,binary){filename=nodePath["normalize"](filename);var ret=nodeFS["readFileSync"](filename);if(!ret&&filename!=nodePath["resolve"](filename)){filename=path.join(__dirname,"..","src",filename);ret=nodeFS["readFileSync"](filename)}if(ret&&!binary)ret=ret.toString();return ret};Module["readBinary"]=function readBinary(filename){return Module["read"](filename,true)};Module["load"]=function load(f){globalEval(read(f))};Module["thisProgram"]=process["argv"][1];Module["arguments"]=process["argv"].slice(2);module["exports"]=Module}else if(ENVIRONMENT_IS_SHELL){if(!Module["print"])Module["print"]=print;if(typeof printErr!="undefined")Module["printErr"]=printErr;if(typeof read!="undefined"){Module["read"]=read}else{Module["read"]=function read(){throw"no read() available (jsc?)"}}Module["readBinary"]=function readBinary(f){return read(f,"binary")};if(typeof scriptArgs!="undefined"){Module["arguments"]=scriptArgs}else if(typeof arguments!="undefined"){Module["arguments"]=arguments}this["Module"]=Module}else if(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER){Module["read"]=function read(url){var xhr=new XMLHttpRequest;xhr.open("GET",url,false);xhr.send(null);return xhr.responseText};if(typeof arguments!="undefined"){Module["arguments"]=arguments}if(typeof console!=="undefined"){if(!Module["print"])Module["print"]=function print(x){console.log(x)};if(!Module["printErr"])Module["printErr"]=function printErr(x){console.log(x)}}else{var TRY_USE_DUMP=false;if(!Module["print"])Module["print"]=TRY_USE_DUMP&&typeof dump!=="undefined"?(function(x){dump(x)}):(function(x){})}if(ENVIRONMENT_IS_WEB){window["Module"]=Module}else{Module["load"]=importScripts}}else{throw"Unknown runtime environment. Where are we?"}function globalEval(x){eval.call(null,x)}if(!Module["load"]=="undefined"&&Module["read"]){Module["load"]=function load(f){globalEval(Module["read"](f))}}if(!Module["print"]){Module["print"]=(function(){})}if(!Module["printErr"]){Module["printErr"]=Module["print"]}if(!Module["arguments"]){Module["arguments"]=[]}Module.print=Module["print"];Module.printErr=Module["printErr"];Module["preRun"]=[];Module["postRun"]=[];for(var key in moduleOverrides){if(moduleOverrides.hasOwnProperty(key)){Module[key]=moduleOverrides[key]}}var Runtime={setTempRet0:(function(value){tempRet0=value}),getTempRet0:(function(){return tempRet0}),stackSave:(function(){return STACKTOP}),stackRestore:(function(stackTop){STACKTOP=stackTop}),forceAlign:(function(target,quantum){quantum=quantum||4;if(quantum==1)return target;if(isNumber(target)&&isNumber(quantum)){return Math.ceil(target/quantum)*quantum}else if(isNumber(quantum)&&isPowerOfTwo(quantum)){return"((("+target+")+"+(quantum-1)+")&"+ -quantum+")"}return"Math.ceil(("+target+")/"+quantum+")*"+quantum}),isNumberType:(function(type){return type in Runtime.INT_TYPES||type in Runtime.FLOAT_TYPES}),isPointerType:function isPointerType(type){return type[type.length-1]=="*"},isStructType:function isStructType(type){if(isPointerType(type))return false;if(isArrayType(type))return true;if(/<?\{ ?[^}]* ?\}>?/.test(type))return true;return type[0]=="%"},INT_TYPES:{"i1":0,"i8":0,"i16":0,"i32":0,"i64":0},FLOAT_TYPES:{"float":0,"double":0},or64:(function(x,y){var l=x|0|(y|0);var h=(Math.round(x/4294967296)|Math.round(y/4294967296))*4294967296;return l+h}),and64:(function(x,y){var l=(x|0)&(y|0);var h=(Math.round(x/4294967296)&Math.round(y/4294967296))*4294967296;return l+h}),xor64:(function(x,y){var l=(x|0)^(y|0);var h=(Math.round(x/4294967296)^Math.round(y/4294967296))*4294967296;return l+h}),getNativeTypeSize:(function(type){switch(type){case"i1":case"i8":return 1;case"i16":return 2;case"i32":return 4;case"i64":return 8;case"float":return 4;case"double":return 8;default:{if(type[type.length-1]==="*"){return Runtime.QUANTUM_SIZE}else if(type[0]==="i"){var bits=parseInt(type.substr(1));assert(bits%8===0);return bits/8}else{return 0}}}}),getNativeFieldSize:(function(type){return Math.max(Runtime.getNativeTypeSize(type),Runtime.QUANTUM_SIZE)}),dedup:function dedup(items,ident){var seen={};if(ident){return items.filter((function(item){if(seen[item[ident]])return false;seen[item[ident]]=true;return true}))}else{return items.filter((function(item){if(seen[item])return false;seen[item]=true;return true}))}},set:function set(){var args=typeof arguments[0]==="object"?arguments[0]:arguments;var ret={};for(var i=0;i<args.length;i++){ret[args[i]]=0}return ret},STACK_ALIGN:8,getAlignSize:(function(type,size,vararg){if(!vararg&&(type=="i64"||type=="double"))return 8;if(!type)return Math.min(size,8);return Math.min(size||(type?Runtime.getNativeFieldSize(type):0),Runtime.QUANTUM_SIZE)}),calculateStructAlignment:function calculateStructAlignment(type){type.flatSize=0;type.alignSize=0;var diffs=[];var prev=-1;var index=0;type.flatIndexes=type.fields.map((function(field){index++;var size,alignSize;if(Runtime.isNumberType(field)||Runtime.isPointerType(field)){size=Runtime.getNativeTypeSize(field);alignSize=Runtime.getAlignSize(field,size)}else if(Runtime.isStructType(field)){if(field[1]==="0"){size=0;if(Types.types[field]){alignSize=Runtime.getAlignSize(null,Types.types[field].alignSize)}else{alignSize=type.alignSize||QUANTUM_SIZE}}else{size=Types.types[field].flatSize;alignSize=Runtime.getAlignSize(null,Types.types[field].alignSize)}}else if(field[0]=="b"){size=field.substr(1)|0;alignSize=1}else if(field[0]==="<"){size=alignSize=Types.types[field].flatSize}else if(field[0]==="i"){size=alignSize=parseInt(field.substr(1))/8;assert(size%1===0,"cannot handle non-byte-size field "+field)}else{assert(false,"invalid type for calculateStructAlignment")}if(type.packed)alignSize=1;type.alignSize=Math.max(type.alignSize,alignSize);var curr=Runtime.alignMemory(type.flatSize,alignSize);type.flatSize=curr+size;if(prev>=0){diffs.push(curr-prev)}prev=curr;return curr}));if(type.name_&&type.name_[0]==="["){type.flatSize=parseInt(type.name_.substr(1))*type.flatSize/2}type.flatSize=Runtime.alignMemory(type.flatSize,type.alignSize);if(diffs.length==0){type.flatFactor=type.flatSize}else if(Runtime.dedup(diffs).length==1){type.flatFactor=diffs[0]}type.needsFlattening=type.flatFactor!=1;return type.flatIndexes},generateStructInfo:(function(struct,typeName,offset){var type,alignment;if(typeName){offset=offset||0;type=(typeof Types==="undefined"?Runtime.typeInfo:Types.types)[typeName];if(!type)return null;if(type.fields.length!=struct.length){printErr("Number of named fields must match the type for "+typeName+": possibly duplicate struct names. Cannot return structInfo");return null}alignment=type.flatIndexes}else{var type={fields:struct.map((function(item){return item[0]}))};alignment=Runtime.calculateStructAlignment(type)}var ret={__size__:type.flatSize};if(typeName){struct.forEach((function(item,i){if(typeof item==="string"){ret[item]=alignment[i]+offset}else{var key;for(var k in item)key=k;ret[key]=Runtime.generateStructInfo(item[key],type.fields[i],alignment[i])}}))}else{struct.forEach((function(item,i){ret[item[1]]=alignment[i]}))}return ret}),dynCall:(function(sig,ptr,args){if(args&&args.length){if(!args.splice)args=Array.prototype.slice.call(args);args.splice(0,0,ptr);return Module["dynCall_"+sig].apply(null,args)}else{return Module["dynCall_"+sig].call(null,ptr)}}),functionPointers:[],addFunction:(function(func){for(var i=0;i<Runtime.functionPointers.length;i++){if(!Runtime.functionPointers[i]){Runtime.functionPointers[i]=func;return 2*(1+i)}}throw"Finished up all reserved function pointers. Use a higher value for RESERVED_FUNCTION_POINTERS."}),removeFunction:(function(index){Runtime.functionPointers[(index-2)/2]=null}),getAsmConst:(function(code,numArgs){if(!Runtime.asmConstCache)Runtime.asmConstCache={};var func=Runtime.asmConstCache[code];if(func)return func;var args=[];for(var i=0;i<numArgs;i++){args.push(String.fromCharCode(36)+i)}var source=Pointer_stringify(code);if(source[0]==='"'){if(source.indexOf('"',1)===source.length-1){source=source.substr(1,source.length-2)}else{abort("invalid EM_ASM input |"+source+"|. Please use EM_ASM(..code..) (no quotes) or EM_ASM({ ..code($0).. }, input) (to input values)")}}try{var evalled=eval("(function("+args.join(",")+"){ "+source+" })")}catch(e){Module.printErr("error in executing inline EM_ASM code: "+e+" on: \n\n"+source+"\n\nwith args |"+args+"| (make sure to use the right one out of EM_ASM, EM_ASM_ARGS, etc.)");throw e}return Runtime.asmConstCache[code]=evalled}),warnOnce:(function(text){if(!Runtime.warnOnce.shown)Runtime.warnOnce.shown={};if(!Runtime.warnOnce.shown[text]){Runtime.warnOnce.shown[text]=1;Module.printErr(text)}}),funcWrappers:{},getFuncWrapper:(function(func,sig){assert(sig);if(!Runtime.funcWrappers[func]){Runtime.funcWrappers[func]=function dynCall_wrapper(){return Runtime.dynCall(sig,func,arguments)}}return Runtime.funcWrappers[func]}),UTF8Processor:(function(){var buffer=[];var needed=0;this.processCChar=(function(code){code=code&255;if(buffer.length==0){if((code&128)==0){return String.fromCharCode(code)}buffer.push(code);if((code&224)==192){needed=1}else if((code&240)==224){needed=2}else{needed=3}return""}if(needed){buffer.push(code);needed--;if(needed>0)return""}var c1=buffer[0];var c2=buffer[1];var c3=buffer[2];var c4=buffer[3];var ret;if(buffer.length==2){ret=String.fromCharCode((c1&31)<<6|c2&63)}else if(buffer.length==3){ret=String.fromCharCode((c1&15)<<12|(c2&63)<<6|c3&63)}else{var codePoint=(c1&7)<<18|(c2&63)<<12|(c3&63)<<6|c4&63;ret=String.fromCharCode(Math.floor((codePoint-65536)/1024)+55296,(codePoint-65536)%1024+56320)}buffer.length=0;return ret});this.processJSString=function processJSString(string){string=unescape(encodeURIComponent(string));var ret=[];for(var i=0;i<string.length;i++){ret.push(string.charCodeAt(i))}return ret}}),getCompilerSetting:(function(name){throw"You must build with -s RETAIN_COMPILER_SETTINGS=1 for Runtime.getCompilerSetting or emscripten_get_compiler_setting to work"}),stackAlloc:(function(size){var ret=STACKTOP;STACKTOP=STACKTOP+size|0;STACKTOP=STACKTOP+7&-8;return ret}),staticAlloc:(function(size){var ret=STATICTOP;STATICTOP=STATICTOP+size|0;STATICTOP=STATICTOP+7&-8;return ret}),dynamicAlloc:(function(size){var ret=DYNAMICTOP;DYNAMICTOP=DYNAMICTOP+size|0;DYNAMICTOP=DYNAMICTOP+7&-8;if(DYNAMICTOP>=TOTAL_MEMORY)enlargeMemory();return ret}),alignMemory:(function(size,quantum){var ret=size=Math.ceil(size/(quantum?quantum:8))*(quantum?quantum:8);return ret}),makeBigInt:(function(low,high,unsigned){var ret=unsigned?+(low>>>0)+ +(high>>>0)*+4294967296:+(low>>>0)+ +(high|0)*+4294967296;return ret}),GLOBAL_BASE:8,QUANTUM_SIZE:4,__dummy__:0};Module["Runtime"]=Runtime;var __THREW__=0;var ABORT=false;var EXITSTATUS=0;var undef=0;var tempValue,tempInt,tempBigInt,tempInt2,tempBigInt2,tempPair,tempBigIntI,tempBigIntR,tempBigIntS,tempBigIntP,tempBigIntD,tempDouble,tempFloat;var tempI64,tempI64b;var tempRet0,tempRet1,tempRet2,tempRet3,tempRet4,tempRet5,tempRet6,tempRet7,tempRet8,tempRet9;function assert(condition,text){if(!condition){abort("Assertion failed: "+text)}}var globalScope=this;function getCFunc(ident){var func=Module["_"+ident];if(!func){try{func=eval("_"+ident)}catch(e){}}assert(func,"Cannot call unknown function "+ident+" (perhaps LLVM optimizations or closure removed it?)");return func}var cwrap,ccall;((function(){var stack=0;var JSfuncs={"stackSave":(function(){stack=Runtime.stackSave()}),"stackRestore":(function(){Runtime.stackRestore(stack)}),"arrayToC":(function(arr){var ret=Runtime.stackAlloc(arr.length);writeArrayToMemory(arr,ret);return ret}),"stringToC":(function(str){var ret=0;if(str!==null&&str!==undefined&&str!==0){ret=Runtime.stackAlloc(str.length+1);writeStringToMemory(str,ret)}return ret})};var toC={"string":JSfuncs["stringToC"],"array":JSfuncs["arrayToC"]};ccall=function ccallFunc(ident,returnType,argTypes,args){var func=getCFunc(ident);var cArgs=[];if(args){for(var i=0;i<args.length;i++){var converter=toC[argTypes[i]];if(converter){if(stack===0)stack=Runtime.stackSave();cArgs[i]=converter(args[i])}else{cArgs[i]=args[i]}}}var ret=func.apply(null,cArgs);if(returnType==="string")ret=Pointer_stringify(ret);if(stack!==0)JSfuncs["stackRestore"]();return ret};var sourceRegex=/^function\s*\(([^)]*)\)\s*{\s*([^*]*?)[\s;]*(?:return\s*(.*?)[;\s]*)?}$/;function parseJSFunc(jsfunc){var parsed=jsfunc.toString().match(sourceRegex).slice(1);return{arguments:parsed[0],body:parsed[1],returnValue:parsed[2]}}var JSsource={};for(var fun in JSfuncs){if(JSfuncs.hasOwnProperty(fun)){JSsource[fun]=parseJSFunc(JSfuncs[fun])}}cwrap=function cwrap(ident,returnType,argTypes){var cfunc=getCFunc(ident);var numericArgs=argTypes.every((function(type){return type==="number"}));var numericRet=returnType!=="string";if(numericRet&&numericArgs){return cfunc}var argNames=argTypes.map((function(x,i){return"$"+i}));var funcstr="(function("+argNames.join(",")+") {";var nargs=argTypes.length;if(!numericArgs){funcstr+=JSsource["stackSave"].body+";";for(var i=0;i<nargs;i++){var arg=argNames[i],type=argTypes[i];if(type==="number")continue;var convertCode=JSsource[type+"ToC"];funcstr+="var "+convertCode.arguments+" = "+arg+";";funcstr+=convertCode.body+";";funcstr+=arg+"="+convertCode.returnValue+";"}}var cfuncname=parseJSFunc((function(){return cfunc})).returnValue;funcstr+="var ret = "+cfuncname+"("+argNames.join(",")+");";if(!numericRet){var strgfy=parseJSFunc((function(){return Pointer_stringify})).returnValue;funcstr+="ret = "+strgfy+"(ret);"}if(!numericArgs){funcstr+=JSsource["stackRestore"].body+";"}funcstr+="return ret})";return eval(funcstr)}}))();Module["cwrap"]=cwrap;Module["ccall"]=ccall;function setValue(ptr,value,type,noSafe){type=type||"i8";if(type.charAt(type.length-1)==="*")type="i32";switch(type){case"i1":HEAP8[ptr>>0]=value;break;case"i8":HEAP8[ptr>>0]=value;break;case"i16":HEAP16[ptr>>1]=value;break;case"i32":HEAP32[ptr>>2]=value;break;case"i64":tempI64=[value>>>0,(tempDouble=value,+Math_abs(tempDouble)>=+1?tempDouble>+0?(Math_min(+Math_floor(tempDouble/+4294967296),+4294967295)|0)>>>0:~~+Math_ceil((tempDouble- +(~~tempDouble>>>0))/+4294967296)>>>0:0)],HEAP32[ptr>>2]=tempI64[0],HEAP32[ptr+4>>2]=tempI64[1];break;case"float":HEAPF32[ptr>>2]=value;break;case"double":HEAPF64[ptr>>3]=value;break;default:abort("invalid type for setValue: "+type)}}Module["setValue"]=setValue;function getValue(ptr,type,noSafe){type=type||"i8";if(type.charAt(type.length-1)==="*")type="i32";switch(type){case"i1":return HEAP8[ptr>>0];case"i8":return HEAP8[ptr>>0];case"i16":return HEAP16[ptr>>1];case"i32":return HEAP32[ptr>>2];case"i64":return HEAP32[ptr>>2];case"float":return HEAPF32[ptr>>2];case"double":return HEAPF64[ptr>>3];default:abort("invalid type for setValue: "+type)}return null}Module["getValue"]=getValue;var ALLOC_NORMAL=0;var ALLOC_STACK=1;var ALLOC_STATIC=2;var ALLOC_DYNAMIC=3;var ALLOC_NONE=4;Module["ALLOC_NORMAL"]=ALLOC_NORMAL;Module["ALLOC_STACK"]=ALLOC_STACK;Module["ALLOC_STATIC"]=ALLOC_STATIC;Module["ALLOC_DYNAMIC"]=ALLOC_DYNAMIC;Module["ALLOC_NONE"]=ALLOC_NONE;function allocate(slab,types,allocator,ptr){var zeroinit,size;if(typeof slab==="number"){zeroinit=true;size=slab}else{zeroinit=false;size=slab.length}var singleType=typeof types==="string"?types:null;var ret;if(allocator==ALLOC_NONE){ret=ptr}else{ret=[_malloc,Runtime.stackAlloc,Runtime.staticAlloc,Runtime.dynamicAlloc][allocator===undefined?ALLOC_STATIC:allocator](Math.max(size,singleType?1:types.length))}if(zeroinit){var ptr=ret,stop;assert((ret&3)==0);stop=ret+(size&~3);for(;ptr<stop;ptr+=4){HEAP32[ptr>>2]=0}stop=ret+size;while(ptr<stop){HEAP8[ptr++>>0]=0}return ret}if(singleType==="i8"){if(slab.subarray||slab.slice){HEAPU8.set(slab,ret)}else{HEAPU8.set(new Uint8Array(slab),ret)}return ret}var i=0,type,typeSize,previousType;while(i<size){var curr=slab[i];if(typeof curr==="function"){curr=Runtime.getFunctionIndex(curr)}type=singleType||types[i];if(type===0){i++;continue}if(type=="i64")type="i32";setValue(ret+i,curr,type);if(previousType!==type){typeSize=Runtime.getNativeTypeSize(type);previousType=type}i+=typeSize}return ret}Module["allocate"]=allocate;function Pointer_stringify(ptr,length){var hasUtf=false;var t;var i=0;while(1){t=HEAPU8[ptr+i>>0];if(t>=128)hasUtf=true;else if(t==0&&!length)break;i++;if(length&&i==length)break}if(!length)length=i;var ret="";if(!hasUtf){var MAX_CHUNK=1024;var curr;while(length>0){curr=String.fromCharCode.apply(String,HEAPU8.subarray(ptr,ptr+Math.min(length,MAX_CHUNK)));ret=ret?ret+curr:curr;ptr+=MAX_CHUNK;length-=MAX_CHUNK}return ret}var utf8=new Runtime.UTF8Processor;for(i=0;i<length;i++){t=HEAPU8[ptr+i>>0];ret+=utf8.processCChar(t)}return ret}Module["Pointer_stringify"]=Pointer_stringify;function UTF16ToString(ptr){var i=0;var str="";while(1){var codeUnit=HEAP16[ptr+i*2>>1];if(codeUnit==0)return str;++i;str+=String.fromCharCode(codeUnit)}}Module["UTF16ToString"]=UTF16ToString;function stringToUTF16(str,outPtr){for(var i=0;i<str.length;++i){var codeUnit=str.charCodeAt(i);HEAP16[outPtr+i*2>>1]=codeUnit}HEAP16[outPtr+str.length*2>>1]=0}Module["stringToUTF16"]=stringToUTF16;function UTF32ToString(ptr){var i=0;var str="";while(1){var utf32=HEAP32[ptr+i*4>>2];if(utf32==0)return str;++i;if(utf32>=65536){var ch=utf32-65536;str+=String.fromCharCode(55296|ch>>10,56320|ch&1023)}else{str+=String.fromCharCode(utf32)}}}Module["UTF32ToString"]=UTF32ToString;function stringToUTF32(str,outPtr){var iChar=0;for(var iCodeUnit=0;iCodeUnit<str.length;++iCodeUnit){var codeUnit=str.charCodeAt(iCodeUnit);if(codeUnit>=55296&&codeUnit<=57343){var trailSurrogate=str.charCodeAt(++iCodeUnit);codeUnit=65536+((codeUnit&1023)<<10)|trailSurrogate&1023}HEAP32[outPtr+iChar*4>>2]=codeUnit;++iChar}HEAP32[outPtr+iChar*4>>2]=0}Module["stringToUTF32"]=stringToUTF32;function demangle(func){var i=3;var basicTypes={"v":"void","b":"bool","c":"char","s":"short","i":"int","l":"long","f":"float","d":"double","w":"wchar_t","a":"signed char","h":"unsigned char","t":"unsigned short","j":"unsigned int","m":"unsigned long","x":"long long","y":"unsigned long long","z":"..."};var subs=[];var first=true;function dump(x){if(x)Module.print(x);Module.print(func);var pre="";for(var a=0;a<i;a++)pre+=" ";Module.print(pre+"^")}function parseNested(){i++;if(func[i]==="K")i++;var parts=[];while(func[i]!=="E"){if(func[i]==="S"){i++;var next=func.indexOf("_",i);var num=func.substring(i,next)||0;parts.push(subs[num]||"?");i=next+1;continue}if(func[i]==="C"){parts.push(parts[parts.length-1]);i+=2;continue}var size=parseInt(func.substr(i));var pre=size.toString().length;if(!size||!pre){i--;break}var curr=func.substr(i+pre,size);parts.push(curr);subs.push(curr);i+=pre+size}i++;return parts}function parse(rawList,limit,allowVoid){limit=limit||Infinity;var ret="",list=[];function flushList(){return"("+list.join(", ")+")"}var name;if(func[i]==="N"){name=parseNested().join("::");limit--;if(limit===0)return rawList?[name]:name}else{if(func[i]==="K"||first&&func[i]==="L")i++;var size=parseInt(func.substr(i));if(size){var pre=size.toString().length;name=func.substr(i+pre,size);i+=pre+size}}first=false;if(func[i]==="I"){i++;var iList=parse(true);var iRet=parse(true,1,true);ret+=iRet[0]+" "+name+"<"+iList.join(", ")+">"}else{ret=name}paramLoop:while(i<func.length&&limit-->0){var c=func[i++];if(c in basicTypes){list.push(basicTypes[c])}else{switch(c){case"P":list.push(parse(true,1,true)[0]+"*");break;case"R":list.push(parse(true,1,true)[0]+"&");break;case"L":{i++;var end=func.indexOf("E",i);var size=end-i;list.push(func.substr(i,size));i+=size+2;break};case"A":{var size=parseInt(func.substr(i));i+=size.toString().length;if(func[i]!=="_")throw"?";i++;list.push(parse(true,1,true)[0]+" ["+size+"]");break};case"E":break paramLoop;default:ret+="?"+c;break paramLoop}}}if(!allowVoid&&list.length===1&&list[0]==="void")list=[];if(rawList){if(ret){list.push(ret+"?")}return list}else{return ret+flushList()}}try{if(func=="Object._main"||func=="_main"){return"main()"}if(typeof func==="number")func=Pointer_stringify(func);if(func[0]!=="_")return func;if(func[1]!=="_")return func;if(func[2]!=="Z")return func;switch(func[3]){case"n":return"operator new()";case"d":return"operator delete()"}return parse()}catch(e){return func}}function demangleAll(text){return text.replace(/__Z[\w\d_]+/g,(function(x){var y=demangle(x);return x===y?x:x+" ["+y+"]"}))}function stackTrace(){var stack=(new Error).stack;return stack?demangleAll(stack):"(no stack trace available)"}var PAGE_SIZE=4096;function alignMemoryPage(x){return x+4095&-4096}var HEAP;var HEAP8,HEAPU8,HEAP16,HEAPU16,HEAP32,HEAPU32,HEAPF32,HEAPF64;var STATIC_BASE=0,STATICTOP=0,staticSealed=false;var STACK_BASE=0,STACKTOP=0,STACK_MAX=0;var DYNAMIC_BASE=0,DYNAMICTOP=0;function enlargeMemory(){abort("Cannot enlarge memory arrays. Either (1) compile with -s TOTAL_MEMORY=X with X higher than the current value "+TOTAL_MEMORY+", (2) compile with ALLOW_MEMORY_GROWTH which adjusts the size at runtime but prevents some optimizations, or (3) set Module.TOTAL_MEMORY before the program runs.")}var TOTAL_STACK=Module["TOTAL_STACK"]||5242880;var TOTAL_MEMORY=Module["TOTAL_MEMORY"]||16777216;var FAST_MEMORY=Module["FAST_MEMORY"]||2097152;var totalMemory=4096;while(totalMemory<TOTAL_MEMORY||totalMemory<2*TOTAL_STACK){if(totalMemory<16*1024*1024){totalMemory*=2}else{totalMemory+=16*1024*1024}}if(totalMemory!==TOTAL_MEMORY){Module.printErr("increasing TOTAL_MEMORY to "+totalMemory+" to be more reasonable");TOTAL_MEMORY=totalMemory}assert(typeof Int32Array!=="undefined"&&typeof Float64Array!=="undefined"&&!!(new Int32Array(1))["subarray"]&&!!(new Int32Array(1))["set"],"JS engine does not provide full typed array support");var buffer=new ArrayBuffer(TOTAL_MEMORY);HEAP8=new Int8Array(buffer);HEAP16=new Int16Array(buffer);HEAP32=new Int32Array(buffer);HEAPU8=new Uint8Array(buffer);HEAPU16=new Uint16Array(buffer);HEAPU32=new Uint32Array(buffer);HEAPF32=new Float32Array(buffer);HEAPF64=new Float64Array(buffer);HEAP32[0]=255;assert(HEAPU8[0]===255&&HEAPU8[3]===0,"Typed arrays 2 must be run on a little-endian system");Module["HEAP"]=HEAP;Module["HEAP8"]=HEAP8;Module["HEAP16"]=HEAP16;Module["HEAP32"]=HEAP32;Module["HEAPU8"]=HEAPU8;Module["HEAPU16"]=HEAPU16;Module["HEAPU32"]=HEAPU32;Module["HEAPF32"]=HEAPF32;Module["HEAPF64"]=HEAPF64;function callRuntimeCallbacks(callbacks){while(callbacks.length>0){var callback=callbacks.shift();if(typeof callback=="function"){callback();continue}var func=callback.func;if(typeof func==="number"){if(callback.arg===undefined){Runtime.dynCall("v",func)}else{Runtime.dynCall("vi",func,[callback.arg])}}else{func(callback.arg===undefined?null:callback.arg)}}}var __ATPRERUN__=[];var __ATINIT__=[];var __ATMAIN__=[];var __ATEXIT__=[];var __ATPOSTRUN__=[];var runtimeInitialized=false;function preRun(){if(Module["preRun"]){if(typeof Module["preRun"]=="function")Module["preRun"]=[Module["preRun"]];while(Module["preRun"].length){addOnPreRun(Module["preRun"].shift())}}callRuntimeCallbacks(__ATPRERUN__)}function ensureInitRuntime(){if(runtimeInitialized)return;runtimeInitialized=true;callRuntimeCallbacks(__ATINIT__)}function preMain(){callRuntimeCallbacks(__ATMAIN__)}function exitRuntime(){callRuntimeCallbacks(__ATEXIT__);runtimeInitialized=false}function postRun(){if(Module["postRun"]){if(typeof Module["postRun"]=="function")Module["postRun"]=[Module["postRun"]];while(Module["postRun"].length){addOnPostRun(Module["postRun"].shift())}}callRuntimeCallbacks(__ATPOSTRUN__)}function addOnPreRun(cb){__ATPRERUN__.unshift(cb)}Module["addOnPreRun"]=Module.addOnPreRun=addOnPreRun;function addOnInit(cb){__ATINIT__.unshift(cb)}Module["addOnInit"]=Module.addOnInit=addOnInit;function addOnPreMain(cb){__ATMAIN__.unshift(cb)}Module["addOnPreMain"]=Module.addOnPreMain=addOnPreMain;function addOnExit(cb){__ATEXIT__.unshift(cb)}Module["addOnExit"]=Module.addOnExit=addOnExit;function addOnPostRun(cb){__ATPOSTRUN__.unshift(cb)}Module["addOnPostRun"]=Module.addOnPostRun=addOnPostRun;function intArrayFromString(stringy,dontAddNull,length){var ret=(new Runtime.UTF8Processor).processJSString(stringy);if(length){ret.length=length}if(!dontAddNull){ret.push(0)}return ret}Module["intArrayFromString"]=intArrayFromString;function intArrayToString(array){var ret=[];for(var i=0;i<array.length;i++){var chr=array[i];if(chr>255){chr&=255}ret.push(String.fromCharCode(chr))}return ret.join("")}Module["intArrayToString"]=intArrayToString;function writeStringToMemory(string,buffer,dontAddNull){var array=intArrayFromString(string,dontAddNull);var i=0;while(i<array.length){var chr=array[i];HEAP8[buffer+i>>0]=chr;i=i+1}}Module["writeStringToMemory"]=writeStringToMemory;function writeArrayToMemory(array,buffer){for(var i=0;i<array.length;i++){HEAP8[buffer+i>>0]=array[i]}}Module["writeArrayToMemory"]=writeArrayToMemory;function writeAsciiToMemory(str,buffer,dontAddNull){for(var i=0;i<str.length;i++){HEAP8[buffer+i>>0]=str.charCodeAt(i)}if(!dontAddNull)HEAP8[buffer+str.length>>0]=0}Module["writeAsciiToMemory"]=writeAsciiToMemory;function unSign(value,bits,ignore){if(value>=0){return value}return bits<=32?2*Math.abs(1<<bits-1)+value:Math.pow(2,bits)+value}function reSign(value,bits,ignore){if(value<=0){return value}var half=bits<=32?Math.abs(1<<bits-1):Math.pow(2,bits-1);if(value>=half&&(bits<=32||value>half)){value=-2*half+value}return value}if(!Math["imul"]||Math["imul"](4294967295,5)!==-5)Math["imul"]=function imul(a,b){var ah=a>>>16;var al=a&65535;var bh=b>>>16;var bl=b&65535;return al*bl+(ah*bl+al*bh<<16)|0};Math.imul=Math["imul"];var Math_abs=Math.abs;var Math_cos=Math.cos;var Math_sin=Math.sin;var Math_tan=Math.tan;var Math_acos=Math.acos;var Math_asin=Math.asin;var Math_atan=Math.atan;var Math_atan2=Math.atan2;var Math_exp=Math.exp;var Math_log=Math.log;var Math_sqrt=Math.sqrt;var Math_ceil=Math.ceil;var Math_floor=Math.floor;var Math_pow=Math.pow;var Math_imul=Math.imul;var Math_fround=Math.fround;var Math_min=Math.min;var runDependencies=0;var runDependencyWatcher=null;var dependenciesFulfilled=null;function addRunDependency(id){runDependencies++;if(Module["monitorRunDependencies"]){Module["monitorRunDependencies"](runDependencies)}}Module["addRunDependency"]=addRunDependency;function removeRunDependency(id){runDependencies--;if(Module["monitorRunDependencies"]){Module["monitorRunDependencies"](runDependencies)}if(runDependencies==0){if(runDependencyWatcher!==null){clearInterval(runDependencyWatcher);runDependencyWatcher=null}if(dependenciesFulfilled){var callback=dependenciesFulfilled;dependenciesFulfilled=null;callback()}}}Module["removeRunDependency"]=removeRunDependency;Module["preloadedImages"]={};Module["preloadedAudios"]={};var memoryInitializer=null;STATIC_BASE=8;STATICTOP=STATIC_BASE+Runtime.alignMemory(19883);__ATINIT__.push();allocate([0,64,202,69,27,76,255,82,130,90,179,98,162,107,96,117,0,1,1,1,2,3,3,3,2,3,3,3,2,3,3,3,0,3,12,15,48,51,60,63,192,195,204,207,240,243,252,255,1,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,2,0,0,0,1,0,0,0,7,0,0,0,0,0,0,0,4,0,0,0,3,0,0,0,6,0,0,0,1,0,0,0,5,0,0,0,2,0,0,0,15,0,0,0,0,0,0,0,8,0,0,0,7,0,0,0,12,0,0,0,3,0,0,0,11,0,0,0,4,0,0,0,14,0,0,0,1,0,0,0,9,0,0,0,6,0,0,0,13,0,0,0,2,0,0,0,10,0,0,0,5,0,0,0,64,39,200,27,152,16,96,59,80,34,0,0,96,102,208,12,0,0,0,0,0,0,0,0,0,255,0,255,0,255,0,255,0,255,0,254,1,0,1,255,0,254,0,253,2,0,1,255,0,254,0,253,3,0,1,255,2,1,0,0,0,0,0,0,25,23,2,0,0,0,0,0,126,124,119,109,87,41,19,9,4,2,0,0,0,0,0,0,72,1,0,0,8,4,0,0,196,6,0,0,124,9,0,0,48,12,0,0,224,14,0,0,140,17,0,0,244,18,0,0,176,19,0,0,36,20,0,0,112,20,0,0,168,20,0,0,200,20,0,0,224,20,0,0,236,20,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,3,0,0,0,5,0,0,0,7,0,0,0,9,0,0,0,11,0,0,0,13,0,0,0,15,0,0,0,17,0,0,0,19,0,0,0,21,0,0,0,23,0,0,0,25,0,0,0,27,0,0,0,29,0,0,0,31,0,0,0,33,0,0,0,35,0,0,0,37,0,0,0,39,0,0,0,41,0,0,0,43,0,0,0,45,0,0,0,47,0,0,0,49,0,0,0,51,0,0,0,53,0,0,0,55,0,0,0,57,0,0,0,59,0,0,0,61,0,0,0,63,0,0,0,65,0,0,0,67,0,0,0,69,0,0,0,71,0,0,0,73,0,0,0,75,0,0,0,77,0,0,0,79,0,0,0,81,0,0,0,83,0,0,0,85,0,0,0,87,0,0,0,89,0,0,0,91,0,0,0,93,0,0,0,95,0,0,0,97,0,0,0,99,0,0,0,101,0,0,0,103,0,0,0,105,0,0,0,107,0,0,0,109,0,0,0,111,0,0,0,113,0,0,0,115,0,0,0,117,0,0,0,119,0,0,0,121,0,0,0,123,0,0,0,125,0,0,0,127,0,0,0,129,0,0,0,131,0,0,0,133,0,0,0,135,0,0,0,137,0,0,0,139,0,0,0,141,0,0,0,143,0,0,0,145,0,0,0,147,0,0,0,149,0,0,0,151,0,0,0,153,0,0,0,155,0,0,0,157,0,0,0,159,0,0,0,161,0,0,0,163,0,0,0,165,0,0,0,167,0,0,0,169,0,0,0,171,0,0,0,173,0,0,0,175,0,0,0,177,0,0,0,179,0,0,0,181,0,0,0,183,0,0,0,185,0,0,0,187,0,0,0,189,0,0,0,191,0,0,0,193,0,0,0,195,0,0,0,197,0,0,0,199,0,0,0,201,0,0,0,203,0,0,0,205,0,0,0,207,0,0,0,209,0,0,0,211,0,0,0,213,0,0,0,215,0,0,0,217,0,0,0,219,0,0,0,221,0,0,0,223,0,0,0,225,0,0,0,227,0,0,0,229,0,0,0,231,0,0,0,233,0,0,0,235,0,0,0,237,0,0,0,239,0,0,0,241,0,0,0,243,0,0,0,245,0,0,0,247,0,0,0,249,0,0,0,251,0,0,0,253,0,0,0,255,0,0,0,1,1,0,0,3,1,0,0,5,1,0,0,7,1,0,0,9,1,0,0,11,1,0,0,13,1,0,0,15,1,0,0,17,1,0,0,19,1,0,0,21,1,0,0,23,1,0,0,25,1,0,0,27,1,0,0,29,1,0,0,31,1,0,0,33,1,0,0,35,1,0,0,37,1,0,0,39,1,0,0,41,1,0,0,43,1,0,0,45,1,0,0,47,1,0,0,49,1,0,0,51,1,0,0,53,1,0,0,55,1,0,0,57,1,0,0,59,1,0,0,61,1,0,0,63,1,0,0,65,1,0,0,67,1,0,0,69,1,0,0,71,1,0,0,73,1,0,0,75,1,0,0,77,1,0,0,79,1,0,0,81,1,0,0,83,1,0,0,85,1,0,0,87,1,0,0,89,1,0,0,91,1,0,0,93,1,0,0,95,1,0,0,13,0,0,0,25,0,0,0,41,0,0,0,61,0,0,0,85,0,0,0,113,0,0,0,145,0,0,0,181,0,0,0,221,0,0,0,9,1,0,0,57,1,0,0,109,1,0,0,165,1,0,0,225,1,0,0,33,2,0,0,101,2,0,0,173,2,0,0,249,2,0,0,73,3,0,0,157,3,0,0,245,3,0,0,81,4,0,0,177,4,0,0,21,5,0,0,125,5,0,0,233,5,0,0,89,6,0,0,205,6,0,0,69,7,0,0,193,7,0,0,65,8,0,0,197,8,0,0,77,9,0,0,217,9,0,0,105,10,0,0,253,10,0,0,149,11,0,0,49,12,0,0,209,12,0,0,117,13,0,0,29,14,0,0,201,14,0,0,121,15,0,0,45,16,0,0,229,16,0,0,161,17,0,0,97,18,0,0,37,19,0,0,237,19,0,0,185,20,0,0,137,21,0,0,93,22,0,0,53,23,0,0,17,24,0,0,241,24,0,0,213,25,0,0,189,26,0,0,169,27,0,0,153,28,0,0,141,29,0,0,133,30,0,0,129,31,0,0,129,32,0,0,133,33,0,0,141,34,0,0,153,35,0,0,169,36,0,0,189,37,0,0,213,38,0,0,241,39,0,0,17,41,0,0,53,42,0,0,93,43,0,0,137,44,0,0,185,45,0,0,237,46,0,0,37,48,0,0,97,49,0,0,161,50,0,0,229,51,0,0,45,53,0,0,121,54,0,0,201,55,0,0,29,57,0,0,117,58,0,0,209,59,0,0,49,61,0,0,149,62,0,0,253,63,0,0,105,65,0,0,217,66,0,0,77,68,0,0,197,69,0,0,65,71,0,0,193,72,0,0,69,74,0,0,205,75,0,0,89,77,0,0,233,78,0,0,125,80,0,0,21,82,0,0,177,83,0,0,81,85,0,0,245,86,0,0,157,88,0,0,73,90,0,0,249,91,0,0,173,93,0,0,101,95,0,0,33,97,0,0,225,98,0,0,165,100,0,0,109,102,0,0,57,104,0,0,9,106,0,0,221,107,0,0,181,109,0,0,145,111,0,0,113,113,0,0,85,115,0,0,61,117,0,0,41,119,0,0,25,121,0,0,13,123,0,0,5,125,0,0,1,127,0,0,1,129,0,0,5,131,0,0,13,133,0,0,25,135,0,0,41,137,0,0,61,139,0,0,85,141,0,0,113,143,0,0,145,145,0,0,181,147,0,0,221,149,0,0,9,152,0,0,57,154,0,0,109,156,0,0,165,158,0,0,225,160,0,0,33,163,0,0,101,165,0,0,173,167,0,0,249,169,0,0,73,172,0,0,157,174,0,0,245,176,0,0,81,179,0,0,177,181,0,0,21,184,0,0,125,186,0,0,233,188,0,0,89,191,0,0,205,193,0,0,69,196,0,0,193,198,0,0,65,201,0,0,197,203,0,0,77,206,0,0,217,208,0,0,105,211,0,0,253,213,0,0,149,216,0,0,49,219,0,0,209,221,0,0,117,224,0,0,29,227,0,0,201,229,0,0,121,232,0,0,45,235,0,0,229,237,0,0,161,240,0,0,63,0,0,0,129,0,0,0,231,0,0,0,121,1,0,0,63,2,0,0,65,3,0,0,135,4,0,0,25,6,0,0,255,7,0,0,65,10,0,0,231,12,0,0,249,15,0,0,127,19,0,0,129,23,0,0,7,28,0,0,25,33,0,0,191,38,0,0,1,45,0,0,231,51,0,0,121,59,0,0,191,67,0,0,193,76,0,0,135,86,0,0,25,97,0,0,127,108,0,0,193,120,0,0,231,133,0,0,249,147,0,0,255,162,0,0,1,179,0,0,7,196,0,0,25,214,0,0,63,233,0,0,129,253,0,0,231,18,1,0,121,41,1,0,63,65,1,0,65,90,1,0,135,116,1,0,25,144,1,0,255,172,1,0,65,203,1,0,231,234,1,0,249,11,2,0,127,46,2,0,129,82,2,0,7,120,2,0,25,159,2,0,191,199,2,0,1,242,2,0,231,29,3,0,121,75,3,0,191,122,3,0,193,171,3,0,135,222,3,0,25,19,4,0,127,73,4,0,193,129,4,0,231,187,4,0,249,247,4,0,255,53,5,0,1,118,5,0,7,184,5,0,25,252,5,0,63,66,6,0,129,138,6,0,231,212,6,0,121,33,7,0,63,112,7,0,65,193,7,0,135,20,8,0,25,106,8,0,255,193,8,0,65,28,9,0,231,120,9,0,249,215,9,0,127,57,10,0,129,157,10,0,7,4,11,0,25,109,11,0,191,216,11,0,1,71,12,0,231,183,12,0,121,43,13,0,191,161,13,0,193,26,14,0,135,150,14,0,25,21,15,0,127,150,15,0,193,26,16,0,231,161,16,0,249,43,17,0,255,184,17,0,1,73,18,0,7,220,18,0,25,114,19,0,63,11,20,0,129,167,20,0,231,70,21,0,121,233,21,0,63,143,22,0,65,56,23,0,135,228,23,0,25,148,24,0,255,70,25,0,65,253,25,0,231,182,26,0,249,115,27,0,127,52,28,0,129,248,28,0,7,192,29,0,25,139,30,0,191,89,31,0,1,44,32,0,231,1,33,0,121,219,33,0,191,184,34,0,193,153,35,0,135,126,36,0,25,103,37,0,127,83,38,0,193,67,39,0,231,55,40,0,249,47,41,0,255,43,42,0,1,44,43,0,7,48,44,0,25,56,45,0,63,68,46,0,129,84,47,0,231,104,48,0,121,129,49,0,63,158,50,0,65,191,51,0,135,228,52,0,25,14,54,0,255,59,55,0,65,110,56,0,231,164,57,0,249,223,58,0,127,31,60,0,129,99,61,0,7,172,62,0,25,249,63,0,191,74,65,0,1,161,66,0,231,251,67,0,121,91,69,0,191,191,70,0,193,40,72,0,135,150,73,0,25,9,75,0,127,128,76,0,193,252,77,0,231,125,79,0,249,3,81,0,255,142,82,0,1,31,84,0,7,180,85,0,25,78,87,0,63,237,88,0,129,145,90,0,231,58,92,0,121,233,93,0,63,157,95,0,65,86,97,0,135,20,99,0,25,216,100,0,255,160,102,0,65,111,104,0,231,66,106,0,249,27,108,0,127,250,109,0,65,1,0,0,169,2,0,0,9,5,0,0,193,8,0,0,65,14,0,0,9,22,0,0,169,32,0,0,193,46,0,0,1,65,0,0,41,88,0,0,9,117,0,0,129,152,0,0,129,195,0,0,9,247,0,0,41,52,1,0,1,124,1,0,193,207,1,0,169,48,2,0,9,160,2,0,65,31,3,0,193,175,3,0,9,83,4,0,169,10,5,0,65,216,5,0,129,189,6,0,41,188,7,0,9,214,8,0,1,13,10,0,1,99,11,0,9,218,12,0,41,116,14,0,129,51,16,0,65,26,18,0,169,42,20,0,9,103,22,0,193,209,24,0,65,109,27,0,9,60,30,0,169,64,33,0,193,125,36,0,1,246,39,0,41,172,43,0,9,163,47,0,129,221,51,0,129,94,56,0,9,41,61,0,41,64,66,0,1,167,71,0,193,96,77,0,169,112,83,0,9,218,89,0,65,160,96,0,193,198,103,0,9,81,111,0,169,66,119,0,65,159,127,0,129,106,136,0,41,168,145,0,9,92,155,0,1,138,165,0,1,54,176,0,9,100,187,0,41,24,199,0,129,86,211,0,65,35,224,0,169,130,237,0,9,121,251,0,193,10,10,1,65,60,25,1,9,18,41,1,169,144,57,1,193,188,74,1,1,155,92,1,41,48,111,1,9,129,130,1,129,146,150,1,129,105,171,1,9,11,193,1,41,124,215,1,1,194,238,1,193,225,6,2,169,224,31,2,9,196,57,2,65,145,84,2,193,77,112,2,9,255,140,2,169,170,170,2,65,86,201,2,129,7,233,2,41,196,9,3,9,146,43,3,1,119,78,3,1,121,114,3,9,158,151,3,41,236,189,3,129,105,229,3,65,28,14,4,169,10,56,4,9,59,99,4,193,179,143,4,65,123,189,4,9,152,236,4,169,16,29,5,193,235,78,5,1,48,130,5,41,228,182,5,9,15,237,5,129,183,36,6,129,228,93,6,9,157,152,6,41,232,212,6,1,205,18,7,193,82,82,7,169,128,147,7,9,94,214,7,65,242,26,8,193,68,97,8,9,93,169,8,169,66,243,8,65,253,62,9,129,148,140,9,41,16,220,9,9,120,45,10,1,212,128,10,1,44,214,10,9,136,45,11,41,240,134,11,129,108,226,11,65,5,64,12,169,194,159,12,9,173,1,13,193,204,101,13,65,42,204,13,9,206,52,14,169,192,159,14,193,10,13,15,1,181,124,15,41,200,238,15,9,77,99,16,129,76,218,16,129,207,83,17,9,223,207,17,41,132,78,18,1,200,207,18,193,179,83,19,169,80,218,19,9,168,99,20,65,195,239,20,193,171,126,21,9,107,16,22,169,10,165,22,65,148,60,23,129,17,215,23,41,140,116,24,9,14,21,25,1,161,184,25,1,79,95,26,9,34,9,27,41,36,182,27,129,95,102,28,65,222,25,29,169,170,208,29,9,207,138,30,193,85,72,31,65,73,9,32,9,180,205,32,169,160,149,33,193,25,97,34,1,42,48,35,41,220,2,36,9,59,217,36,129,81,179,37,147,6,0,0,69,14,0,0,15,28,0,0,17,51,0,0,91,87,0,0,13,142,0,0,119,221,0,0,57,77,1,0,99,230,1,0,149,179,2,0,31,193,3,0,33,29,5,0,171,215,6,0,221,2,9,0,7,179,11,0,201,254,14,0,51,255,18,0,229,207,23,0,47,143,29,0,49,94,36,0,251,96,44,0,173,190,53,0,151,161,64,0,89,55,77,0,3,177,91,0,53,67,108,0,63,38,127,0,65,150,148,0,75,211,172,0,125,33,200,0,39,201,230,0,233,22,9,1,211,91,47,1,133,237,89,1,79,38,137,1,81,101,189,1,155,14,247,1,77,139,54,2,183,73,124,2,121,189,200,2,163,95,28,3,213,174,119,3,95,47,219,3,97,107,71,4,235,242,188,4,29,92,60,5,71,67,198,5,9,75,91,6,115,28,252,6,37,103,169,7,111,225,99,8,113,72,44,9,59,96,3,10,237,243,233,10,215,213,224,11,153,223,232,12,67,242,2,14,117,246,47,15,127,220,112,16,129,156,198,17,139,54,50,19,189,178,180,20,103,33,79,22,41,155,2,24,19,65,208,25,197,60,185,27,143,192,190,29,145,7,226,31,219,85,36,34,141,248,134,36,247,69,11,39,185,157,178,41,227,104,126,44,21,26,112,47,159,45,137,50,161,41,203,53,43,158,55,57,93,37,208,60,135,99,150,64,73,7,140,68,179,201,178,72,101,110,12,77,175,195,154,81,177,162,95,86,123,239,92,91,45,153,148,96,23,154,8,102,217,247,186,107,131,195,173,113,181,25,227,119,191,34,93,126,29,35,0,0,113,77,0,0,145,156,0,0,253,38,1,0,101,12,2,0,233,119,3,0,153,162,5,0,53,214,8,0,45,112,13,0,225,228,19,0,33,195,28,0,237,183,40,0,117,146,56,0,89,72,77,0,41,250,103,0,37,248,137,0,61,199,180,0,81,38,234,0,177,19,44,1,221,210,124,1,133,242,222,1,201,82,85,2,185,43,227,2,21,20,140,3,77,8,84,4,193,113,63,5,65,46,83,6,205,151,148,7,149,140,9,9,57,119,184,10,73,87,168,12,5,202,224,14,93,19,106,17,49,39,77,20,209,178,147,23,189,38,72,27,165,192,117,31,169,149,40,36,217,156,109,41,245,185,82,47,109,200,230,53,161,166,57,61,97,65,92,69,173,159,96,78,181,238,89,88,25,142,92,99,105,28,126,111,229,131,213,124,255,189,0,0,1,168,1,0,143,107,3,0,241,158,6,0,63,35,12,0,193,61,21,0,143,182,35,0,241,252,57,0,255,81,91,0,1,250,139,0,15,117,209,0,113,191,50,1,63,154,184,1,193,220,109,2,15,207,95,3,113,142,158,4,255,123,61,6,1,182,83,8,143,156,252,10,241,97,88,14,63,167,140,18,193,37,197,23,143,101,52,30,241,129,20,38,255,251,167,47,1,156,58,59,15,98,34,73,113,134,192,89,63,138,130,109,193,88,227,132,1,14,4,0,145,33,9,0,17,44,19,0,65,238,37,0,65,79,71,0,145,67,128,0,17,247,221,0,1,70,115,1,1,146,90,2,17,1,184,3,145,53,188,5,65,143,167,8,65,6,206,12,17,178,155,18,145,15,154,26,1,26,118,37,1,76,7,52,145,158,87,71,17,157,172,96,65,166,145,129,35,81,22,0,197,158,50,0,23,185,107,0,153,246,216,0,107,137,160,1,13,196,254,2,31,1,80,5,33,217,29,9,51,108,48,15,213,162,164,24,167,103,8,39,41,253,125,60,123,181,231,91,29,119,29,137,175,160,45,201,173,142,123,0,137,230,25,1,57,150,94,2,61,22,216,4,181,99,119,9,225,40,198,17,33,3,52,32,117,72,130,56,125,87,87,96,191,91,175,2,129,216,39,6,247,132,94,13,233,254,173,27,127,139,235,54,129,183,229,104,23,3,156,193,193,12,255,14,57,106,133,34,25,238,145,75,129,120,43,158,51,225,9,84,149,139,0,0,55,152,0,0,255,165,0,0,4,181,0,0,103,197,0,0,69,215,0,0,193,234,0,0,255,255,0,0,135,90,41,45,61,244,163,6,104,253,0,0,0,0,0,0,96,21,0,0,0,0,0,0,128,187,0,0,120,0,0,0,21,0,0,0,21,0,0,0,205,108,0,0,0,16,0,32,200,21,0,0,3,0,0,0,8,0,0,0,120,0,0,0,11,0,0,0,248,21,0,0,224,22,0,0,16,23,0,0,128,7,0,0,3,0,0,0,0,24,0,0,56,24,0,0,112,24,0,0,168,24,0,0,224,24,0,0,136,1,0,0,240,38,0,0,200,39,0,0,80,41,0,0,0,0,0,0,0,0,1,0,2,0,3,0,4,0,5,0,6,0,7,0,8,0,10,0,12,0,14,0,16,0,20,0,24,0,28,0,34,0,40,0,48,0,60,0,78,0,100,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,90,80,75,69,63,56,49,40,34,29,20,18,10,0,0,0,0,0,0,0,0,110,100,90,84,78,71,65,58,51,45,39,32,26,20,12,0,0,0,0,0,0,118,110,103,93,86,80,75,70,65,59,53,47,40,31,23,15,4,0,0,0,0,126,119,112,104,95,89,83,78,72,66,60,54,47,39,32,25,17,12,1,0,0,134,127,120,114,103,97,91,85,78,72,66,60,54,47,41,35,29,23,16,10,1,144,137,130,124,113,107,101,95,88,82,76,70,64,57,51,45,39,33,26,15,1,152,145,138,132,123,117,111,105,98,92,86,80,74,67,61,55,49,43,36,20,1,162,155,148,142,133,127,121,115,108,102,96,90,84,77,71,65,59,53,46,30,1,172,165,158,152,143,137,131,125,118,112,106,100,94,87,81,75,69,63,56,45,20,200,200,200,200,200,200,200,200,198,193,188,183,178,173,168,163,158,153,148,129,104,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,0,8,0,8,0,8,0,16,0,16,0,16,0,21,0,21,0,24,0,29,0,34,0,36,0,0,0,0,0,0,0,2,0,20,0,55,0,108,0,178,0,10,1,116,1,238,1,123,2,24,3,198,3,133,4,85,5,54,6,39,7,41,8,58,9,91,10,140,11,204,12,27,14,121,15,229,16,95,18,230,19,123,21,28,23,202,24,132,26,73,28,25,30,243,31,215,33,196,35,185,37,183,39,188,41,199,43,216,45,239,47,10,50,41,52,75,54,111,56,149,58,187,60,226,62,8,65,45,67,80,69,111,71,139,73,163,75,181,77,194,79,200,81,199,83,190,85,173,87,147,89,111,91,66,93,10,95,198,96,120,98,29,100,183,101,67,103,195,104,54,106,156,107,245,108,64,110,125,111,173,112,207,113,227,114,234,115,228,116,208,117,176,118,130,119,72,120,1,121,175,121,81,122,231,122,114,123,243,123,105,124,214,124,57,125,148,125,229,125,47,126,114,126,173,126,225,126,16,127,56,127,92,127,122,127,149,127,171,127,189,127,205,127,217,127,228,127,236,127,242,127,246,127,250,127,252,127,254,127,255,127,255,127,255,127,255,127,255,127,255,127,224,1,0,0,68,68,0,0,8,0,0,0,255,255,255,255,5,0,96,0,3,0,32,0,4,0,8,0,2,0,4,0,4,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,192,52,0,0,112,42,0,0,240,0,0,0,68,68,0,0,7,0,0,0,1,0,0,0,5,0,48,0,3,0,16,0,4,0,4,0,4,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,224,50,0,0,112,42,0,0,120,0,0,0,68,68,0,0,6,0,0,0,2,0,0,0,5,0,24,0,3,0,8,0,2,0,4,0,4,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,240,49,0,0,112,42,0,0,60,0,0,0,68,68,0,0,5,0,0,0,3,0,0,0,5,0,12,0,3,0,4,0,4,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,248,41,0,0,112,42,0,0,255,127,255,127,255,127,254,127,253,127,251,127,249,127,247,127,244,127,241,127,238,127,234,127,230,127,226,127,221,127,216,127,210,127,205,127,198,127,192,127,185,127,178,127,170,127,162,127,154,127,145,127,136,127,127,127,117,127,107,127,97,127,86,127,75,127,64,127,52,127,40,127,27,127,14,127,1,127,244,126,230,126,216,126,201,126,186,126,171,126,155,126,139,126,123,126,106,126,89,126,72,126,54,126,36,126,18,126,255,125,236,125,217,125,197,125,177,125,157,125,136,125,115,125,93,125,71,125,49,125,27,125,4,125,237,124,213,124,189,124,165,124,140,124,115,124,90,124,65,124,39,124,12,124,242,123,215,123,188,123,160,123,132,123,104,123,75,123,46,123,17,123,243,122,213,122,183,122,152,122,121,122,90,122,58,122,26,122,250,121,217,121,184,121,151,121,117,121,83,121,49,121,14,121,235,120,200,120,164,120,128,120,92,120,55,120,18,120,237,119,199,119,161,119,123,119,84,119,45,119,6,119,222,118,182,118,142,118,101,118,61,118,19,118,234,117,192,117,150,117,107,117,64,117,21,117,234,116,190,116,146,116,101,116,56,116,11,116,222,115,176,115,130,115,84,115,37,115,246,114,199,114,151,114,103,114,55,114,6,114,214,113,164,113,115,113,65,113,15,113,220,112,170,112,119,112,67,112,16,112,220,111,167,111,115,111,62,111,9,111,211,110,157,110,103,110,49,110,250,109,195,109,140,109,84,109,28,109,228,108,172,108,115,108,58,108,0,108,199,107,141,107,82,107,24,107,221,106,162,106,102,106,42,106,238,105,178,105,117,105,56,105,251,104,190,104,128,104,66,104,4,104,197,103,134,103,71,103,7,103,200,102,135,102,71,102,7,102,198,101,132,101,67,101,1,101,191,100,125,100,58,100,248,99,180,99,113,99,45,99,234,98,165,98,97,98,28,98,215,97,146,97,76,97,6,97,192,96,122,96,51,96,237,95,165,95,94,95,22,95,206,94,134,94,62,94,245,93,172,93,99,93,26,93,208,92,134,92,60,92,241,91,166,91,91,91,16,91,197,90,121,90,45,90,225,89,148,89,72,89,251,88,173,88,96,88,18,88,196,87,118,87,40,87,217,86,138,86,59,86,236,85,156,85,76,85,252,84,172,84,91,84,11,84,186,83,104,83,23,83,197,82,115,82,33,82,207,81,124,81,41,81,214,80,131,80,48,80,220,79,136,79,52,79,224,78,139,78,54,78,225,77,140,77,55,77,225,76,139,76,53,76,223,75,136,75,50,75,219,74,132,74,44,74,213,73,125,73,37,73,205,72,117,72,28,72,196,71,107,71,18,71,184,70,95,70,5,70,171,69,81,69,247,68,157,68,66,68,231,67,140,67,49,67,214,66,122,66,31,66,195,65,103,65,10,65,174,64,81,64,244,63,151,63,58,63,221,62,127,62,34,62,196,61,102,61,8,61,169,60,75,60,236,59,141,59,46,59,207,58,112,58,16,58,177,57,81,57,241,56,145,56,49,56,208,55,112,55,15,55,174,54,77,54,236,53,138,53,41,53,199,52,102,52,4,52,162,51,63,51,221,50,123,50,24,50,181,49,82,49,239,48,140,48,41,48,198,47,98,47,254,46,154,46,55,46,210,45,110,45,10,45,166,44,65,44,220,43,120,43,19,43,174,42,72,42,227,41,126,41,24,41,179,40,77,40,231,39,129,39,27,39,181,38,79,38,232,37,130,37,27,37,181,36,78,36,231,35,128,35,25,35,178,34,74,34,227,33,124,33,20,33,172,32,69,32,221,31,117,31,13,31,165,30,61,30,213,29,108,29,4,29,155,28,51,28,202,27,97,27,249,26,144,26,39,26,190,25,85,25,236,24,130,24,25,24,176,23,70,23,221,22,115,22,10,22,160,21,54,21,205,20,99,20,249,19,143,19,37,19,187,18,81,18,231,17,124,17,18,17,168,16,61,16,211,15,105,15,254,14,148,14,41,14,190,13,84,13,233,12,126,12,20,12,169,11,62,11,211,10,104,10,254,9,147,9,40,9,189,8,82,8,231,7,124,7,17,7,166,6,58,6,207,5,100,5,249,4,142,4,35,4,184,3,76,3,225,2,118,2,11,2,160,1,52,1,201,0,94,0,243,255,135,255,28,255,177,254,70,254,218,253,111,253,4,253,153,252,46,252,194,251,87,251,236,250,129,250,22,250,171,249,64,249,213,248,106,248,255,247,147,247,41,247,190,246,83,246,232,245,125,245,18,245,167,244,60,244,210,243,103,243,252,242,145,242,39,242,188,241,82,241,231,240,125,240,18,240,168,239,62,239,211,238,105,238,255,237,149,237,43,237,193,236,87,236,237,235,131,235,25,235,175,234,70,234,220,233,114,233,9,233,159,232,54,232,205,231,99,231,250,230,145,230,40,230,191,229,86,229,237,228,132,228,28,228,179,227,75,227,226,226,122,226,17,226,169,225,65,225,217,224,113,224,9,224,161,223,58,223,210,222,107,222,3,222,156,221,53,221,205,220,102,220,255,219,153,219,50,219,203,218,101,218,254,217,152,217,50,217,203,216,101,216,255,215,154,215,52,215,206,214,105,214,4,214,158,213,57,213,212,212,111,212,11,212,166,211,65,211,221,210,121,210,20,210,176,209,77,209,233,208,133,208,34,208,190,207,91,207,248,206,149,206,50,206,207,205,109,205,10,205,168,204,70,204,228,203,130,203,32,203,191,202,93,202,252,201,155,201,58,201,217,200,120,200,24,200,183,199,87,199,247,198,151,198,55,198,216,197,120,197,25,197,186,196,91,196,252,195,157,195,63,195,225,194,131,194,37,194,199,193,105,193,12,193,174,192,81,192,244,191,152,191,59,191,223,190,130,190,38,190,203,189,111,189,19,189,184,188,93,188,2,188,167,187,77,187,242,186,152,186,62,186,228,185,139,185,49,185,216,184,127,184,38,184,205,183,117,183,29,183,197,182,109,182,21,182,190,181,102,181,15,181,185,180,98,180,12,180,181,179,95,179,10,179,180,178,95,178,9,178,181,177,96,177,11,177,183,176,99,176,15,176,187,175,104,175,21,175,194,174,111,174,29,174,202,173,120,173,38,173,213,172,131,172,50,172,225,171,144,171,64,171,240,170,160,170,80,170,0,170,177,169,98,169,19,169,197,168,118,168,40,168,218,167,141,167,63,167,242,166,165,166,89,166,12,166,192,165,116,165,40,165,221,164,146,164,71,164,252,163,178,163,104,163,30,163,212,162,139,162,66,162,249,161,176,161,104,161,32,161,216,160,144,160,73,160,2,160,187,159,116,159,46,159,232,158,162,158,93,158,24,158,211,157,142,157,74,157,5,157,194,156,126,156,59,156,248,155,181,155,114,155,48,155,238,154,173,154,107,154,42,154,233,153,169,153,104,153,41,153,233,152,169,152,106,152,43,152,237,151,175,151,113,151,51,151,245,150,184,150,123,150,63,150,3,150,199,149,139,149,80,149,20,149,218,148,159,148,101,148,43,148,241,147,184,147,127,147,70,147,14,147,214,146,158,146,102,146,47,146,248,145,193,145,139,145,85,145,31,145,234,144,181,144,128,144,76,144,23,144,227,143,176,143,125,143,74,143,23,143,229,142,178,142,129,142,79,142,30,142,237,141,189,141,141,141,93,141,45,141,254,140,207,140,161,140,114,140,68,140,23,140,233,139,188,139,144,139,99,139,55,139,11,139,224,138,181,138,138,138,96,138,54,138,12,138,226,137,185,137,144,137,104,137,64,137,24,137,240,136,201,136,162,136,124,136,85,136,48,136,10,136,229,135,192,135,155,135,119,135,83,135,47,135,12,135,233,134,199,134,164,134,130,134,97,134,64,134,31,134,254,133,222,133,190,133,158,133,127,133,96,133,66,133,35,133,5,133,232,132,203,132,174,132,145,132,117,132,89,132,62,132,34,132,7,132,237,131,211,131,185,131,159,131,134,131,109,131,85,131,61,131,37,131,14,131,246,130,224,130,201,130,179,130,157,130,136,130,115,130,94,130,74,130,54,130,34,130,15,130,252,129,233,129,215,129,197,129,179,129,162,129,145,129,129,129,113,129,97,129,81,129,66,129,51,129,37,129,23,129,9,129,251,128,238,128,226,128,213,128,201,128,189,128,178,128,167,128,156,128,146,128,136,128,127,128,117,128,109,128,100,128,92,128,84,128,76,128,69,128,62,128,56,128,50,128,44,128,39,128,34,128,29,128,25,128,21,128,17,128,14,128,11,128,8,128,6,128,4,128,3,128,1,128,1,128,1,128,255,127,255,127,253,127,249,127,244,127,238,127,230,127,220,127,210,127,198,127,184,127,169,127,153,127,135,127,116,127,96,127,74,127,50,127,26,127,0,127,228,126,199,126,169,126,137,126,104,126,70,126,34,126,253,125,214,125,174,125,133,125,90,125,46,125,1,125,210,124,162,124,112,124,61,124,9,124,212,123,157,123,100,123,42,123,239,122,179,122,117,122,54,122,246,121,180,121,113,121,44,121,231,120,160,120,87,120,13,120,194,119,118,119,40,119,217,118,137,118,55,118,229,117,144,117,59,117,228,116,140,116,51,116,216,115,124,115,31,115,193,114,97,114,0,114,158,113,59,113,214,112,112,112,9,112,161,111,55,111,205,110,97,110,243,109,133,109,21,109,164,108,50,108,191,107,75,107,213,106,95,106,231,105,110,105,244,104,120,104,252,103,126,103,255,102,127,102,254,101,124,101,249,100,117,100,239,99,105,99,225,98,88,98,206,97,68,97,184,96,43,96,157,95,13,95,125,94,236,93,90,93,199,92,50,92,157,91,7,91,112,90,215,89,62,89,164,88,9,88,108,87,207,86,49,86,146,85,242,84,81,84,175,83,13,83,105,82,197,81,31,81,121,80,210,79,41,79,128,78,215,77,44,77,128,76,212,75,39,75,121,74,202,73,26,73,106,72,185,71,7,71,84,70,160,69,236,68,55,68,129,67,202,66,19,66,91,65,162,64,233,63,47,63,116,62,184,61,252,60,63,60,130,59,195,58,4,58,69,57,133,56,196,55,3,55,65,54,126,53,187,52,247,51,51,51,110,50,169,49,227,48,29,48,86,47,142,46,198,45,253,44,52,44,107,43,161,42,214,41,12,41,64,40,116,39,168,38,219,37,14,37,65,36,115,35,165,34,214,33,7,33,56,32,104,31,152,30,199,29,247,28,38,28,84,27,131,26,177,25,222,24,12,24,57,23,102,22,147,21,191,20,236,19,24,19,67,18,111,17,155,16,198,15,241,14,28,14,71,13,113,12,156,11,198,10,240,9,26,9,68,8,110,7,152,6,194,5,236,4,21,4,63,3,105,2,146,1,188,0,229,255,15,255,56,254,98,253,139,252,181,251,223,250,8,250,50,249,92,248,134,247,176,246,218,245,5,245,47,244,89,243,132,242,175,241,218,240,5,240,48,239,92,238,136,237,179,236,223,235,12,235,56,234,101,233,146,232,191,231,237,230,27,230,73,229,119,228,166,227,213,226,4,226,52,225,100,224,148,223,197,222,246,221,40,221,89,220,140,219,190,218,241,217,37,217,89,216,141,215,194,214,247,213,45,213,99,212,153,211,208,210,8,210,64,209,121,208,178,207,235,206,38,206,96,205,156,204,216,203,20,203,81,202,143,201,205,200,12,200,75,199,139,198,204,197,13,197,79,196,146,195,213,194,25,194,93,193,163,192,233,191,47,191,119,190,191,189,8,189,82,188,156,187,231,186,51,186,127,185,205,184,27,184,106,183,186,182,10,182,92,181,174,180,1,180,85,179,169,178,255,177,85,177,172,176,5,176,94,175,183,174,18,174,110,173,203,172,40,172,134,171,230,170,70,170,167,169,9,169,108,168,209,167,54,167,156,166,3,166,107,165,212,164,62,164,168,163,20,163,129,162,240,161,95,161,207,160,64,160,178,159,37,159,154,158,15,158,133,157,253,156,118,156,239,155,106,155,230,154,99,154,225,153,96,153,225,152,98,152,229,151,105,151,238,150,116,150,251,149,132,149,13,149,152,148,36,148,177,147,63,147,207,146,95,146,241,145,132,145,25,145,174,144,69,144,221,143,118,143,17,143,172,142,73,142,231,141,135,141,39,141,201,140,109,140,17,140,183,139,94,139,6,139,176,138,90,138,7,138,180,137,99,137,19,137,196,136,119,136,43,136,224,135,151,135,79,135,8,135,194,134,126,134,60,134,250,133,186,133,123,133,62,133,2,133,199,132,142,132,86,132,31,132,234,131,182,131,131,131,82,131,34,131,244,130,198,130,155,130,112,130,71,130,32,130,250,129,213,129,177,129,143,129,111,129,79,129,49,129,21,129,250,128,224,128,200,128,177,128,155,128,135,128,116,128,99,128,83,128,68,128,55,128,44,128,33,128,24,128,17,128,11,128,6,128,2,128,1,128,255,127,252,127,243,127,229,127,208,127,182,127,151,127,114,127,71,127,23,127,225,126,165,126,100,126,30,126,209,125,128,125,41,125,204,124,106,124,3,124,150,123,35,123,171,122,46,122,172,121,36,121,151,120,4,120,108,119,207,118,45,118,134,117,217,116,40,116,113,115,181,114,244,113,46,113,99,112,148,111,191,110,230,109,7,109,36,108,60,107,80,106,95,105,105,104,110,103,111,102,108,101,100,100,88,99,71,98,50,97,25,96,251,94,218,93,180,92,138,91,93,90,43,89,245,87,188,86,126,85,61,84,248,82,176,81,100,80,20,79,193,77,107,76,17,75,180,73,84,72,240,70,138,69,32,68,179,66,68,65,210,63,92,62,228,60,106,59,237,57,109,56,235,54,102,53,223,51,86,50,202,48,61,47,173,45,27,44,136,42,242,40,91,39,194,37,39,36,139,34,237,32,78,31,173,29,12,28,104,26,196,24,31,23,120,21,209,19,41,18,128,16,214,14,44,13,129,11,213,9,42,8,125,6,209,4,36,3,119,1,202,255,29,254,113,252,196,250,24,249,107,247,192,245,20,244,105,242,191,240,22,239,109,237,197,235,30,234,120,232,211,230,47,229,140,227,234,225,74,224,171,222,14,221,114,219,216,217,63,216,168,214,19,213,128,211,239,209,96,208,211,206,72,205,191,203,57,202,181,200,51,199,180,197,55,196,189,194,70,193,210,191,96,190,241,188,133,187,28,186,183,184,84,183,244,181,152,180,63,179,234,177,151,176,73,175,254,173,182,172,114,171,50,170,246,168,189,167,136,166,88,165,43,164,2,163,221,161,189,160,160,159,136,158,116,157,101,156,90,155,83,154,80,153,83,152,89,151,101,150,117,149,137,148,163,147,193,146,228,145,11,145,56,144,105,143,160,142,219,141,28,141,97,140,172,139,251,138,80,138,170,137,9,137,109,136,215,135,70,135,186,134,51,134,178,133,54,133,192,132,79,132,227,131,125,131,28,131,193,130,107,130,27,130,208,129,139,129,75,129,17,129,221,128,174,128,133,128,97,128,67,128,42,128,23,128,10,128,2,128,255,127,242,127,205,127,146,127,65,127,217,126,92,126,200,125,29,125,93,124,136,123,156,122,155,121,133,120,89,119,24,118,195,116,90,115,220,113,74,112,164,110,235,108,31,107,64,105,79,103,75,101,54,99,15,97,215,94,143,92,55,90,206,87,86,85,207,82,58,80,151,77,230,74,40,72,93,69,134,66,163,63,181,60,189,57,186,54,174,51,153,48,123,45,85,42,40,39,244,35,185,32,121,29,52,26,234,22,156,19,75,16,247,12,160,9,72,6,239,2,149,255,59,252,226,248,138,245,52,242,225,238,144,235,67,232,250,228,182,225,119,222,63,219,12,216,225,212,189,209,161,206,142,203,132,200,132,197,142,194,163,191,195,188,239,185,40,183,109,180,191,177,31,175,141,172,10,170,150,167,50,165,221,162,153,160,102,158,67,156,50,154,51,152,70,150,108,148,165,146,241,144,80,143,195,141,74,140,229,138,149,137,90,136,52,135,35,134,39,133,65,132,113,131,182,130,17,130,131,129,11,129,168,128,93,128,39,128,9,128,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,0,0,0,0,0,0,0,0,41,0,41,0,41,0,82,0,82,0,123,0,164,0,200,0,222,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,41,0,41,0,41,0,41,0,123,0,123,0,123,0,164,0,164,0,240,0,10,1,27,1,39,1,41,0,41,0,41,0,41,0,41,0,41,0,41,0,41,0,123,0,123,0,123,0,123,0,240,0,240,0,240,0,10,1,10,1,49,1,62,1,72,1,80,1,123,0,123,0,123,0,123,0,123,0,123,0,123,0,123,0,240,0,240,0,240,0,240,0,49,1,49,1,49,1,62,1,62,1,87,1,95,1,102,1,108,1,240,0,240,0,240,0,240,0,240,0,240,0,240,0,240,0,49,1,49,1,49,1,49,1,87,1,87,1,87,1,95,1,95,1,114,1,120,1,126,1,131,1,0,0,0,0,0,0,40,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,40,15,23,28,31,34,36,38,39,41,42,43,44,45,46,47,47,49,50,51,52,53,54],"i8",ALLOC_NONE,Runtime.GLOBAL_BASE);allocate([55,55,57,58,59,60,61,62,63,63,65,66,67,68,69,70,71,71,40,20,33,41,48,53,57,61,64,66,69,71,73,75,76,78,80,82,85,87,89,91,92,94,96,98,101,103,105,107,108,110,112,114,117,119,121,123,124,126,128,40,23,39,51,60,67,73,79,83,87,91,94,97,100,102,105,107,111,115,118,121,124,126,129,131,135,139,142,145,148,150,153,155,159,163,166,169,172,174,177,179,35,28,49,65,78,89,99,107,114,120,126,132,136,141,145,149,153,159,165,171,176,180,185,189,192,199,205,211,216,220,225,229,232,239,245,251,21,33,58,79,97,112,125,137,148,157,166,174,182,189,195,201,207,217,227,235,243,251,17,35,63,86,106,123,139,152,165,177,187,197,206,214,222,230,237,250,25,31,55,75,91,105,117,128,138,146,154,161,168,174,180,185,190,200,208,215,222,229,235,240,245,255,16,36,65,89,110,128,144,159,173,185,196,207,217,226,234,242,250,11,41,74,103,128,151,172,191,209,225,241,255,9,43,79,110,138,163,186,207,227,246,12,39,71,99,123,144,164,182,198,214,228,241,253,9,44,81,113,142,168,192,214,235,255,7,49,90,127,160,191,220,247,6,51,95,134,170,203,234,7,47,87,123,155,184,212,237,6,52,97,137,174,208,240,5,57,106,151,192,231,5,59,111,158,202,243,5,55,103,147,187,224,5,60,113,161,206,248,4,65,122,175,224,4,67,127,182,234,224,224,224,224,224,224,224,224,160,160,160,160,185,185,185,178,178,168,134,61,37,224,224,224,224,224,224,224,224,240,240,240,240,207,207,207,198,198,183,144,66,40,160,160,160,160,160,160,160,160,185,185,185,185,193,193,193,183,183,172,138,64,38,240,240,240,240,240,240,240,240,207,207,207,207,204,204,204,193,193,180,143,66,40,185,185,185,185,185,185,185,185,193,193,193,193,193,193,193,183,183,172,138,65,39,207,207,207,207,207,207,207,207,204,204,204,204,201,201,201,188,188,176,141,66,40,193,193,193,193,193,193,193,193,193,193,193,193,194,194,194,184,184,173,139,65,39,204,204,204,204,204,204,204,204,201,201,201,201,198,198,198,187,187,175,140,66,40,0,0,12,0,24,0,36,0,48,0,4,0,16,0,28,0,40,0,52,0,8,0,20,0,32,0,44,0,56,0,1,0,13,0,25,0,37,0,49,0,5,0,17,0,29,0,41,0,53,0,9,0,21,0,33,0,45,0,57,0,2,0,14,0,26,0,38,0,50,0,6,0,18,0,30,0,42,0,54,0,10,0,22,0,34,0,46,0,58,0,3,0,15,0,27,0,39,0,51,0,7,0,19,0,31,0,43,0,55,0,11,0,23,0,35,0,47,0,59,0,255,127,0,0,254,127,83,254,245,127,166,252,231,127,249,250,212,127,77,249,186,127,161,247,155,127,246,245,119,127,74,244,76,127,159,242,29,127,245,240,232,126,75,239,173,126,163,237,108,126,251,235,39,126,84,234,219,125,173,232,138,125,7,231,51,125,99,229,216,124,193,227,119,124,30,226,16,124,125,224,164,123,223,222,51,123,65,221,187,122,166,219,62,122,12,218,189,121,114,216,54,121,220,214,169,120,71,213,23,120,180,211,128,119,35,210,228,118,147,208,66,118,4,207,155,117,121,205,240,116,240,203,62,116,106,202,137,115,229,200,206,114,99,199,13,114,229,197,72,113,103,196,125,112,237,194,174,111,118,193,219,110,0,192,2,110,143,190,36,109,33,189,66,108,180,187,90,107,75,186,110,106,227,184,126,105,128,183,136,104,33,182,142,103,196,180,145,102,106,179,141,101,21,178,134,100,194,176,122,99,115,175,106,98,40,174,86,97,223,172,61,96,155,171,33,95,90,170,255,93,30,169,218,92,229,167,177,91,175,166,131,90,125,165,82,89,80,164,29,88,39,163,228,86,1,162,167,85,224,160,102,84,196,159,34,83,171,158,218,81,150,157,142,80,135,156,64,79,123,155,237,77,115,154,151,76,113,153,61,75,115,152,226,73,120,151,129,72,132,150,29,71,146,149,182,69,167,148,77,68,191,147,226,66,220,146,115,65,254,145,1,64,38,145,140,62,82,144,20,61,131,143,154,59,185,142,30,58,243,141,158,56,51,141,28,55,120,140,152,53,195,139,17,52,18,139,137,50,101,138,252,48,190,137,110,47,29,137,224,45,128,136,78,44,233,135,187,42,87,135,38,41,202,134,143,39,68,134,246,37,194,133,91,36,70,133,191,34,207,132,34,33,92,132,131,31,241,131,226,29,138,131,65,28,40,131,159,26,205,130,249,24,118,130,85,23,37,130,173,21,218,129,7,20,148,129,95,18,83,129,182,16,25,129,12,15,227,128,98,13,180,128,183,11,138,128,12,10,101,128,96,8,70,128,180,6,44,128,7,5,26,128,92,3,11,128,174,1,2,128,0,0,1,128,83,254,2,128,166,252,11,128,249,250,25,128,77,249,44,128,161,247,70,128,246,245,101,128,74,244,137,128,159,242,180,128,245,240,227,128,75,239,24,129,163,237,83,129,251,235,148,129,84,234,217,129,173,232,37,130,7,231,118,130,99,229,205,130,193,227,40,131,30,226,137,131,125,224,240,131,223,222,92,132,65,221,205,132,166,219,69,133,12,218,194,133,114,216,67,134,220,214,202,134,71,213,87,135,180,211,233,135,35,210,128,136,147,208,28,137,4,207,190,137,121,205,101,138,240,203,16,139,106,202,194,139,229,200,119,140,99,199,50,141,229,197,243,141,103,196,184,142,237,194,131,143,118,193,82,144,0,192,37,145,143,190,254,145,33,189,220,146,180,187,190,147,75,186,166,148,227,184,146,149,128,183,130,150,33,182,120,151,196,180,114,152,106,179,111,153,21,178,115,154,194,176,122,155,115,175,134,156,40,174,150,157,223,172,170,158,155,171,195,159,90,170,223,160,30,169,1,162,229,167,38,163,175,166,79,164,125,165,125,165,80,164,174,166,39,163,227,167,1,162,28,169,224,160,89,170,196,159,154,171,171,158,222,172,150,157,38,174,135,156,114,175,123,155,192,176,115,154,19,178,113,153,105,179,115,152,195,180,120,151,30,182,132,150,127,183,146,149,227,184,167,148,74,186,191,147,179,187,220,146,30,189,254,145,141,190,38,145,255,191,82,144,116,193,131,143,236,194,185,142,102,196,243,141,226,197,51,141,98,199,120,140,228,200,195,139,104,202,18,139,239,203,101,138,119,205,190,137,4,207,29,137,146,208,128,136,32,210,233,135,178,211,87,135,69,213,202,134,218,214,68,134,113,216,194,133,10,218,70,133,165,219,207,132,65,221,92,132,222,222,241,131,125,224,138,131,30,226,40,131,191,227,205,130,97,229,118,130,7,231,37,130,171,232,218,129,83,234,148,129,249,235,83,129,161,237,25,129,74,239,227,128,244,240,180,128,158,242,138,128,73,244,101,128,244,245,70,128,160,247,44,128,76,249,26,128,249,250,11,128,164,252,2,128,82,254,1,128,0,0,2,128,173,1,11,128,90,3,25,128,7,5,44,128,179,6,70,128,95,8,101,128,10,10,137,128,182,11,180,128,97,13,227,128,11,15,24,129,181,16,83,129,93,18,148,129,5,20,217,129,172,21,37,130,83,23,118,130,249,24,205,130,157,26,40,131,63,28,137,131,226,29,240,131,131,31,92,132,33,33,205,132,191,34,69,133,90,36,194,133,244,37,67,134,142,39,202,134,36,41,87,135,185,42,233,135,76,44,128,136,221,45,28,137,109,47,190,137,252,48,101,138,135,50,16,139,16,52,194,139,150,53,119,140,27,55,50,141,157,56,243,141,27,58,184,142,153,59,131,143,19,61,82,144,138,62,37,145,0,64,254,145,113,65,220,146,223,66,190,147,76,68,166,148,181,69,146,149,29,71,130,150,128,72,120,151,223,73,114,152,60,75,111,153,150,76,115,154,235,77,122,155,62,79,134,156,141,80,150,157,216,81,170,158,33,83,195,159,101,84,223,160,166,85,1,162,226,86,38,163,27,88,79,164,81,89,125,165,131,90,174,166,176,91,227,167,217,92,28,169,255,93,89,170,32,95,154,171,60,96,222,172,85,97,38,174,106,98,114,175,121,99,192,176,133,100,19,178,141,101,105,179,143,102,195,180,141,103,30,182,136,104,127,183,124,105,227,184,110,106,74,186,89,107,179,187,65,108,30,189,36,109,141,190,2,110,255,191,218,110,116,193,174,111,236,194,125,112,102,196,71,113,226,197,13,114,98,199,205,114,228,200,136,115,104,202,61,116,239,203,238,116,119,205,155,117,4,207,66,118,146,208,227,118,32,210,128,119,178,211,23,120,69,213,169,120,218,214,54,121,113,216,188,121,10,218,62,122,165,219,186,122,65,221,49,123,222,222,164,123,125,224,15,124,30,226,118,124,191,227,216,124,97,229,51,125,7,231,138,125,171,232,219,125,83,234,38,126,249,235,108,126,161,237,173,126,74,239,231,126,244,240,29,127,158,242,76,127,73,244,118,127,244,245,155,127,160,247,186,127,76,249,212,127,249,250,230,127,164,252,245,127,82,254,254,127,0,0,255,127,173,1,254,127,90,3,245,127,7,5,231,127,179,6,212,127,95,8,186,127,10,10,155,127,182,11,119,127,97,13,76,127,11,15,29,127,181,16,232,126,93,18,173,126,5,20,108,126,172,21,39,126,83,23,219,125,249,24,138,125,157,26,51,125,63,28,216,124,226,29,119,124,131,31,16,124,33,33,164,123,191,34,51,123,90,36,187,122,244,37,62,122,142,39,189,121,36,41,54,121,185,42,169,120,76,44,23,120,221,45,128,119,109,47,228,118,252,48,66,118,135,50,155,117,16,52,240,116,150,53,62,116,27,55,137,115,157,56,206,114,27,58,13,114,153,59,72,113,19,61,125,112,138,62,174,111,0,64,219,110,113,65,2,110,223,66,36,109,76,68,66,108,181,69,90,107,29,71,110,106,128,72,126,105,223,73,136,104,60,75,142,103,150,76,145,102,235,77,141,101,62,79,134,100,141,80,122,99,216,81,106,98,33,83,86,97,101,84,61,96,166,85,33,95,226,86,255,93,27,88,218,92,81,89,177,91,131,90,131,90,176,91,82,89,217,92,29,88,255,93,228,86,32,95,167,85,60,96,102,84,85,97,34,83,106,98,218,81,121,99,142,80,133,100,64,79,141,101,237,77,143,102,151,76,141,103,61,75,136,104,226,73,124,105,129,72,110,106,29,71,89,107,182,69,65,108,77,68,36,109,226,66,2,110,115,65,218,110,1,64,174,111,140,62,125,112,20,61,71,113,154,59,13,114,30,58,205,114,158,56,136,115,28,55,61,116,152,53,238,116,17,52,155,117,137,50,66,118,252,48,227,118,110,47,128,119,224,45,23,120,78,44,169,120,187,42,54,121,38,41,188,121,143,39,62,122,246,37,186,122,91,36,49,123,191,34,164,123,34,33,15,124,131,31,118,124,226,29,216,124,65,28,51,125,159,26,138,125,249,24,219,125,85,23,38,126,173,21,108,126,7,20,173,126,95,18,231,126,182,16,29,127,12,15,76,127,98,13,118,127,183,11,155,127,12,10,186,127,96,8,212,127,180,6,230,127,7,5,245,127,92,3,254,127,174,1,0,0,24,0,48,0,72,0,96,0,8,0,32,0,56,0,80,0,104,0,16,0,40,0,64,0,88,0,112,0,4,0,28,0,52,0,76,0,100,0,12,0,36,0,60,0,84,0,108,0,20,0,44,0,68,0,92,0,116,0,1,0,25,0,49,0,73,0,97,0,9,0,33,0,57,0,81,0,105,0,17,0,41,0,65,0,89,0,113,0,5,0,29,0,53,0,77,0,101,0,13,0,37,0,61,0,85,0,109,0,21,0,45,0,69,0,93,0,117,0,2,0,26,0,50,0,74,0,98,0,10,0,34,0,58,0,82,0,106,0,18,0,42,0,66,0,90,0,114,0,6,0,30,0,54,0,78,0,102,0,14,0,38,0,62,0,86,0,110,0,22,0,46,0,70,0,94,0,118,0,3,0,27,0,51,0,75,0,99,0,11,0,35,0,59,0,83,0,107,0,19,0,43,0,67,0,91,0,115,0,7,0,31,0,55,0,79,0,103,0,15,0,39,0,63,0,87,0,111,0,23,0,47,0,71,0,95,0,119,0,0,0,48,0,96,0,144,0,192,0,16,0,64,0,112,0,160,0,208,0,32,0,80,0,128,0,176,0,224,0,4,0,52,0,100,0,148,0,196,0,20,0,68,0,116,0,164,0,212,0,36,0,84,0,132,0,180,0,228,0,8,0,56,0,104,0,152,0,200,0,24,0,72,0,120,0,168,0,216,0,40,0,88,0,136,0,184,0,232,0,12,0,60,0,108,0,156,0,204,0,28,0,76,0,124,0,172,0,220,0,44,0,92,0,140,0,188,0,236,0,1,0,49,0,97,0,145,0,193,0,17,0,65,0,113,0,161,0,209,0,33,0,81,0,129,0,177,0,225,0,5,0,53,0,101,0,149,0,197,0,21,0,69,0,117,0,165,0,213,0,37,0,85,0,133,0,181,0,229,0,9,0,57,0,105,0,153,0,201,0,25,0,73,0,121,0,169,0,217,0,41,0,89,0,137,0,185,0,233,0,13,0,61,0,109,0,157,0,205,0,29,0,77,0,125,0,173,0,221,0,45,0,93,0,141,0,189,0,237,0,2,0,50,0,98,0,146,0,194,0,18,0,66,0,114,0,162,0,210,0,34,0,82,0,130,0,178,0,226,0,6,0,54,0,102,0,150,0,198,0,22,0,70,0,118,0,166,0,214,0,38,0,86,0,134,0,182,0,230,0,10,0,58,0,106,0,154,0,202,0,26,0,74,0,122,0,170,0,218,0,42,0,90,0,138,0,186,0,234,0,14,0,62,0,110,0,158,0,206,0,30,0,78,0,126,0,174,0,222,0,46,0,94,0,142,0,190,0,238,0,3,0,51,0,99,0,147,0,195,0,19,0,67,0,115,0,163,0,211,0,35,0,83,0,131,0,179,0,227,0,7,0,55,0,103,0,151,0,199,0,23,0,71,0,119,0,167,0,215,0,39,0,87,0,135,0,183,0,231,0,11,0,59,0,107,0,155,0,203,0,27,0,75,0,123,0,171,0,219,0,43,0,91,0,139,0,187,0,235,0,15,0,63,0,111,0,159,0,207,0,31,0,79,0,127,0,175,0,223,0,47,0,95,0,143,0,191,0,239,0,0,0,96,0,192,0,32,1,128,1,32,0,128,0,224,0,64,1,160,1,64,0,160,0,0,1,96,1,192,1,8,0,104,0,200,0,40,1,136,1,40,0,136,0,232,0,72,1,168,1,72,0,168,0,8,1,104,1,200,1,16,0,112,0,208,0,48,1,144,1,48,0,144,0,240,0,80,1,176,1,80,0,176,0,16,1,112,1,208,1,24,0,120,0,216,0,56,1,152,1,56,0,152,0,248,0,88,1,184,1,88,0,184,0,24,1,120,1,216,1,4,0,100,0,196,0,36,1,132,1,36,0,132,0,228,0,68,1,164,1,68,0,164,0,4,1,100,1,196,1,12,0,108,0,204,0,44,1,140,1,44,0,140,0,236,0,76,1,172,1,76,0,172,0,12,1,108,1,204,1,20,0,116,0,212,0,52,1,148,1,52,0,148,0,244,0,84,1,180,1,84,0,180,0,20,1,116,1,212,1,28,0,124,0,220,0,60,1,156,1,60,0,156,0,252,0,92,1,188,1,92,0,188,0,28,1,124,1,220,1,1,0,97,0,193,0,33,1,129,1,33,0,129,0,225,0,65,1,161,1,65,0,161,0,1,1,97,1,193,1,9,0,105,0,201,0,41,1,137,1,41,0,137,0,233,0,73,1,169,1,73,0,169,0,9,1,105,1,201,1,17,0,113,0,209,0,49,1,145,1,49,0,145,0,241,0,81,1,177,1,81,0,177,0,17,1,113,1,209,1,25,0,121,0,217,0,57,1,153,1,57,0,153,0,249,0,89,1,185,1,89,0,185,0,25,1,121,1,217,1,5,0,101,0,197,0,37,1,133,1,37,0,133,0,229,0,69,1,165,1,69,0,165,0,5,1,101,1,197,1,13,0,109,0,205,0,45,1,141,1,45,0,141,0,237,0,77,1,173,1,77,0,173,0,13,1,109,1,205,1,21,0,117,0,213,0,53,1,149,1,53,0,149,0,245,0,85,1,181,1,85,0,181,0,21,1,117,1,213,1,29,0,125,0,221,0,61,1,157,1,61,0,157,0,253,0,93,1,189,1,93,0,189,0,29,1,125,1,221,1,2,0,98,0,194,0,34,1,130,1,34,0,130,0,226,0,66,1,162,1,66,0,162,0,2,1,98,1,194,1,10,0,106,0,202,0,42,1,138,1,42,0,138,0,234,0,74,1,170,1,74,0,170,0,10,1,106,1,202,1,18,0,114,0,210,0,50,1,146,1,50,0,146,0,242,0,82,1,178,1,82,0,178,0,18,1,114,1,210,1,26,0,122,0,218,0,58,1,154,1,58,0,154,0,250,0,90,1,186,1,90,0,186,0,26,1,122,1,218,1,6,0,102,0,198,0,38,1,134,1,38,0,134,0,230,0,70,1,166,1,70,0,166,0,6,1,102,1,198,1,14,0,110,0,206,0,46,1,142,1,46,0,142,0,238,0,78,1,174,1,78,0,174,0,14,1,110,1,206,1,22,0,118,0,214,0,54,1,150,1,54,0,150,0,246,0,86,1,182,1,86,0,182,0,22,1,118,1,214,1,30,0,126,0,222,0,62,1,158,1,62,0,158,0,254,0,94,1,190,1,94,0,190,0,30,1,126,1,222,1,3,0,99,0,195,0,35,1,131,1,35,0,131,0,227,0,67,1,163,1,67,0,163,0,3,1,99,1,195,1,11,0,107,0,203,0,43,1,139,1,43,0,139,0,235,0,75,1,171,1,75,0,171,0,11,1,107,1,203,1,19,0,115,0,211,0,51,1,147,1,51,0,147,0,243,0,83,1,179,1,83,0,179,0,19,1,115,1,211,1,27,0,123,0,219,0,59,1,155,1,59,0,155,0,251,0,91,1,187,1,91,0,187,0,27,1,123,1,219,1,7,0,103,0,199,0,39,1,135,1,39,0,135,0,231,0,71,1,167,1,71,0,167,0,7,1,103,1,199,1,15,0,111,0,207,0,47,1,143,1,47,0,143,0,239,0,79,1,175,1,79,0,175,0,15,1,111,1,207,1,23,0,119,0,215,0,55,1,151,1,55,0,151,0,247,0,87,1,183,1,87,0,183,0,23,1,119,1,215,1,31,0,127,0,223,0,63,1,159,1,63,0,159,0,255,0,95,1,191,1,95,0,191,0,31,1,127,1,223,1,103,100,92,85,81,77,72,70,78,75,73,71,78,74,69,72,70,74,76,71,60,60,60,60,60,0,0,0,0,0,0,0,72,127,65,129,66,128,65,128,64,128,62,128,64,128,64,128,92,78,92,79,92,78,90,79,116,41,115,40,114,40,132,26,132,26,145,17,161,12,176,10,177,11,24,179,48,138,54,135,54,132,53,134,56,133,55,132,55,132,61,114,70,96,74,88,75,88,87,74,89,66,91,67,100,59,108,50,120,40,122,37,97,43,78,50,83,78,84,81,88,75,86,74,87,71,90,73,93,74,93,74,109,40,114,36,117,34,117,34,143,17,145,18,146,19,162,12,165,10,178,7,189,6,190,8,177,9,23,178,54,115,63,102,66,98,69,99,74,89,71,91,73,91,78,89,86,80,92,66,93,64,102,59,103,60,104,60,117,52,123,44,138,35,133,31,97,38,77,45,61,90,93,60,105,42,107,41,110,45,116,38,113,38,112,38,124,26,132,27,136,19,140,20,155,14,159,16,158,18,170,13,177,10,187,8,192,6,175,9,159,10,21,178,59,110,71,86,75,85,84,83,91,66,88,73,87,72,92,75,98,72,105,58,107,54,115,52,114,55,112,56,129,51,132,40,150,33,140,29,98,35,77,42,42,121,96,66,108,43,111,40,117,44,123,32,120,36,119,33,127,33,134,34,139,21,147,23,152,20,158,25,154,26,166,21,173,16,184,13,184,10,150,13,139,15,22,178,63,114,74,82,84,83,92,82,103,62,96,72,96,67,101,73,107,72,113,55,118,52,125,52,118,52,117,55,135,49,137,39,157,32,145,29,97,33,77,40,0,115,0,102,0,83,0,64,195,117,10,87,92,47,154,25,2,1,0,0,0,0,0,0,0,8,13,16,19,21,23,24,26,27,28,29,30,31,32,32,33,34,34,35,36,36,37,37,15,0,0,0,10,0,0,0,5,0,0,0,0,0,0,0,0,15,8,7,4,11,12,3,2,13,10,5,6,9,14,1,0,9,6,3,4,5,8,1,2,7,0,0,0,0,0,0,184,126,154,121,0,0,0,0,154,121,102,102,0,0,0,0,184,126,51,115,0,0,0,0,6,0,0,0,4,0,0,0,3,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,1,255,1,255,2,254,2,254,3,253,0,1,0,1,255,2,255,2,254,3,254,3,0,2,255,255,255,0,0,1,1,0,1,0,1,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,255,2,1,0,1,1,0,0,255,255,0,0,0,0,0,0,1,255,0,1,255,0,255,1,254,2,254,254,2,253,2,3,253,252,3,252,4,4,251,5,250,251,6,249,6,5,8,247,0,0,1,0,0,0,0,0,0,0,255,1,0,0,1,255,0,1,255,255,1,255,2,1,255,2,254,254,2,254,2,2,3,253,0,1,0,0,0,0,0,0,1,0,1,0,0,1,255,1,0,0,2,1,255,2,255,255,2,255,2,2,255,3,254,254,254,3,0,1,0,0,1,0,1,255,2,255,2,255,2,3,254,3,254,254,4,4,253,5,253,252,6,252,6,5,251,8,250,251,249,9,6,0,3,0,7,3,0,1,10,0,2,6,18,10,12,0,4,0,2,0,0,0,9,4,7,4,0,3,12,7,7,0,210,6,138,58,171,152,0,0,198,26,169,100,246,216,0,0,42,175,213,201,207,255,64,0,17,0,99,255,97,1,16,254,163,0,39,43,189,86,217,255,6,0,91,0,86,255,186,0,23,0,128,252,192,24,216,77,237,255,220,255,102,0,167,255,232,255,72,1,73,252,8,10,37,62,0,0,0,0,0,0,135,199,61,201,64,0,128,0,134,255,36,0,54,1,0,253,72,2,51,36,69,69,12,0,128,0,18,0,114,255,32,1,139,255,159,252,27,16,123,56,104,2,13,200,246,255,39,0,58,0,210,255,172,255,120,0,184,0,197,254,227,253,4,5,4,21,64,35,0,0,0,0,230,62,198,196,243,255,0,0,20,0,26,0,5,0,225,255,213,255,252,255,65,0,90,0,7,0,99,255,8,255,212,255,81,2,47,6,52,10,199,12,228,87,5,197,3,0,242,255,236,255,241,255,2,0,25,0,37,0,25,0,240,255,185,255,149,255,177,255,50,0,36,1,111,2,214,3,8,5,184,5,148,107,103,196,17,0,12,0,8,0,1,0,246,255,234,255,226,255,224,255,234,255,3,0,44,0,100,0,168,0,243,0,61,1,125,1,173,1,199,1,189,0,168,253,105,2,103,119,117,0,97,255,210,251,8,116,52,0,221,0,168,246,116,110,252,255,17,2,234,242,229,102,208,255,246,2,140,240,165,93,176,255,137,3,117,239,6,83,157,255,204,3,130,239,102,71,149,255,199,3,139,240,39,59,153,255,128,3,97,242,174,46,165,255,5,3,207,244,94,34,185,255,99,2,161,247,152,22,210,255,169,1,161,250,180,11,0,32,254,31,246,31,234,31,216,31,194,31,168,31,136,31,98,31,58,31,10,31,216,30,160,30,98,30,34,30,220,29,144,29,66,29,238,28,150,28,58,28,216,27,114,27,10,27,156,26,42,26,180,25,58,25,188,24,60,24,182,23,46,23,160,22,16,22,126,21,232,20,78,20,176,19,16,19,110,18,200,17,30,17,116,16,198,15,22,15,100,14,174,13,248,12,64,12,132,11,200,10,10,10,74,9,138,8,198,7,2,7,62,6,120,5,178,4,234,3,34,3,90,2,146,1,202,0,0,0,54,255,110,254,166,253,222,252,22,252,78,251,136,250,194,249,254,248,58,248,118,247,182,246,246,245,56,245,124,244,192,243,8,243,82,242,156,241,234,240,58,240,140,239,226,238,56,238,146,237,240,236,80,236,178,235,24,235,130,234,240,233,96,233,210,232,74,232,196,231,68,231,198,230,76,230,214,229,100,229,246,228,142,228,40,228,198,227,106,227,18,227,190,226,112,226,36,226,222,225,158,225,96,225,40,225,246,224,198,224,158,224,120,224,88,224,62,224,40,224,22,224,10,224,2,224,0,224,0,0,0,0,0,0,179,99,0,0,0,0,0,0,71,56,43,30,21,12,6,0,199,165,144,124,109,96,84,71,61,51,42,32,23,15,8,0,241,225,211,199,187,175,164,153,142,132,123,114,105,96,88,80,72,64,57,50,44,38,33,29,24,20,16,12,9,5,2,0,240,61,0,0,248,61,0,0,8,62,0,0,0,0,0,0,4,6,24,7,5,0,0,2,0,0,12,28,41,13,252,247,15,42,25,14,1,254,62,41,247,246,37,65,252,3,250,4,66,7,248,16,14,38,253,33,13,22,39,23,12,255,36,64,27,250,249,10,55,43,17,1,1,8,1,1,6,245,74,53,247,244,55,76,244,8,253,3,93,27,252,26,39,59,3,248,2,0,77,11,9,248,22,44,250,7,40,9,26,3,9,249,20,101,249,4,3,248,42,26,0,241,33,68,2,23,254,55,46,254,15,3,255,21,16,41,250,27,61,39,5,245,42,88,4,1,254,60,65,6,252,255,251,73,56,1,247,19,94,29,247,0,12,99,6,4,8,237,102,46,243,3,2,13,3,2,9,235,84,72,238,245,46,104,234,8,18,38,48,23,0,240,70,83,235,11,5,245,117,22,248,250,23,117,244,3,3,248,95,28,4,246,15,77,60,241,255,4,124,2,252,3,38,84,24,231,2,13,42,13,31,21,252,56,46,255,255,35,79,243,19,249,65,88,247,242,20,4,81,49,227,20,0,75,3,239,5,247,44,92,248,1,253,22,69,31,250,95,41,244,5,39,67,16,252,1,0,250,120,55,220,243,44,122,4,232,81,5,11,3,7,2,0,9,10,88,56,62,0,0,96,62,0,0,176,62,0,0,0,0,0,0,12,35,60,83,108,132,157,180,206,228,15,32,55,77,101,125,151,175,201,225,19,42,66,89,114,137,162,184,209,230,12,25,50,72,97,120,147,172,200,223,26,44,69,90,114,135,159,180,205,225,13,22,53,80,106,130,156,180,205,228,15,25,44,64,90,115,142,168,196,222,19,24,62,82,100,120,145,168,190,214,22,31,50,79,103,120,151,170,203,227,21,29,45,65,106,124,150,171,196,224,30,49,75,97,121,142,165,186,209,229,19,25,52,70,93,116,143,166,192,219,26,34,62,75,97,118,145,167,194,217,25,33,56,70,91,113,143,165,196,223,21,34,51,72,97,117,145,171,196,222,20,29,50,67,90,117,144,168,197,221,22,31,48,66,95,117,146,168,196,222,24,33,51,77,116,134,158,180,200,224,21,28,70,87,106,124,149,170,194,217,26,33,53,64,83,117,152,173,204,225,27,34,65,95,108,129,155,174,210,225,20,26,72,99,113,131,154,176,200,219,34,43,61,78,93,114,155,177,205,229,23,29,54,97,124,138,163,179,209,229,30,38,56,89,118,129,158,178,200,231,21,29,49,63,85,111,142,163,193,222,27,48,77,103,133,158,179,196,215,232,29,47,74,99,124,151,176,198,220,237,33,42,61,76,93,121,155,174,207,225,29,53,87,112,136,154,170,188,208,227,24,30,52,84,131,150,166,186,203,229,37,48,64,84,104,118,156,177,201,230,212,178,148,129,108,96,85,82,79,77,61,59,57,56,51,49,48,45,42,41,40,38,36,34,31,30,21,12,10,3,1,0,255,245,244,236,233,225,217,203,190,176,175,161,149,136,125,114,102,91,81,71,60,52,43,35,28,20,19,18,12,11,5,0,179,138,140,148,151,149,153,151,163,116,67,82,59,92,72,100,89,92,0,0,0,0,0,0,16,0,0,0,0,99,66,36,36,34,36,34,34,34,34,83,69,36,52,34,116,102,70,68,68,176,102,68,68,34,65,85,68,84,36,116,141,152,139,170,132,187,184,216,137,132,249,168,185,139,104,102,100,68,68,178,218,185,185,170,244,216,187,187,170,244,187,187,219,138,103,155,184,185,137,116,183,155,152,136,132,217,184,184,170,164,217,171,155,139,244,169,184,185,170,164,216,223,218,138,214,143,188,218,168,244,141,136,155,170,168,138,220,219,139,164,219,202,216,137,168,186,246,185,139,116,185,219,185,138,100,100,134,100,102,34,68,68,100,68,168,203,221,218,168,167,154,136,104,70,164,246,171,137,139,137,155,218,219,139,255,254,253,238,14,3,2,1,0,255,254,252,218,35,3,2,1,0,255,254,250,208,59,4,2,1,0,255,254,246,194,71,10,2,1,0,255,252,236,183,82,8,2,1,0,255,252,235,180,90,17,2,1,0,255,248,224,171,97,30,4,1,0,255,254,236,173,95,37,7,1,0,255,255,255,131,6,145,255,255,255,255,255,236,93,15,96,255,255,255,255,255,194,83,25,71,221,255,255,255,255,162,73,34,66,162,255,255,255,210,126,73,43,57,173,255,255,255,201,125,71,48,58,130,255,255,255,166,110,73,57,62,104,210,255,255,251,123,65,55,68,100,171,255,250,0,3,0,6,0,3,0,3,0,3,0,4,0,3,0,3,0,3,0,205,1,0,0,32,0,10,0,20,46,100,1,96,63,0,0,160,64,0,0,224,64,0,0,248,64,0,0,152,65,0,0,224,65,0,0,40,66,0,0,0,0,0,0,7,23,38,54,69,85,100,116,131,147,162,178,193,208,223,239,13,25,41,55,69,83,98,112,127,142,157,171,187,203,220,236,15,21,34,51,61,78,92,106,126,136,152,167,185,205,225,240,10,21,36,50,63,79,95,110,126,141,157,173,189,205,221,237,17,20,37,51,59,78,89,107,123,134,150,164,184,205,224,240,10,15,32,51,67,81,96,112,129,142,158,173,189,204,220,236,8,21,37,51,65,79,98,113,126,138,155,168,179,192,209,218,12,15,34,55,63,78,87,108,118,131,148,167,185,203,219,236,16,19,32,36,56,79,91,108,118,136,154,171,186,204,220,237,11,28,43,58,74,89,105,120,135,150,165,180,196,211,226,241,6,16,33,46,60,75,92,107,123,137,156,169,185,199,214,225,11,19,30,44,57,74,89,105,121,135,152,169,186,202,218,234,12,19,29,46,57,71,88,100,120,132,148,165,182,199,216,233,17,23,35,46,56,77,92,106,123,134,152,167,185,204,222,237,14,17,45,53,63,75,89,107,115,132,151,171,188,206,221,240,9,16,29,40,56,71,88,103,119,137,154,171,189,205,222,237,16,19,36,48,57,76,87,105,118,132,150,167,185,202,218,236,12,17,29,54,71,81,94,104,126,136,149,164,182,201,221,237,15,28,47,62,79,97,115,129,142,155,168,180,194,208,223,238,8,14,30,45,62,78,94,111,127,143,159,175,192,207,223,239,17,30,49,62,79,92,107,119,132,145,160,174,190,204,220,235,14,19,36,45,61,76,91,108,121,138,154,172,189,205,222,238,12,18,31,45,60,76,91,107,123,138,154,171,187,204,221,236,13,17,31,43,53,70,83,103,114,131,149,167,185,203,220,237,17,22,35,42,58,78,93,110,125,139,155,170,188,206,224,240,8,15,34,50,67,83,99,115,131,146,162,178,193,209,224,239,13,16,41,66,73,86,95,111,128,137,150,163,183,206,225,241,17,25,37,52,63,75,92,102,119,132,144,160,175,191,212,231,19,31,49,65,83,100,117,133,147,161,174,187,200,213,227,242,18,31,52,68,88,103,117,126,138,149,163,177,192,207,223,239,16,29,47,61,76,90,106,119,133,147,161,176,193,209,224,240,15,21,35,50,61,73,86,97,110,119,129,141,175,198,218,237,225,204,201,184,183,175,158,154,153,135,119,115,113,110,109,99,98,95,79,68,52,50,48,45,43,32,31,27,18,10,3,0,255,251,235,230,212,201,196,182,167,166,163,151,138,124,110,104,90,78,76,70,69,57,45,34,24,21,11,6,5,4,3,0,175,148,160,176,178,173,174,164,177,174,196,182,198,192,182,68,62,66,60,72,117,85,90,118,136,151,142,160,142,155,0,0,0,0,0,0,0,0,0,1,100,102,102,68,68,36,34,96,164,107,158,185,180,185,139,102,64,66,36,34,34,0,1,32,208,139,141,191,152,185,155,104,96,171,104,166,102,102,102,132,1,0,0,0,0,16,16,0,80,109,78,107,185,139,103,101,208,212,141,139,173,153,123,103,36,0,0,0,0,0,0,1,48,0,0,0,0,0,0,32,68,135,123,119,119,103,69,98,68,103,120,118,118,102,71,98,134,136,157,184,182,153,139,134,208,168,248,75,189,143,121,107,32,49,34,34,34,0,17,2,210,235,139,123,185,137,105,134,98,135,104,182,100,183,171,134,100,70,68,70,66,66,34,131,64,166,102,68,36,2,1,0,134,166,102,68,34,34,66,132,212,246,158,139,107,107,87,102,100,219,125,122,137,118,103,132,114,135,137,105,171,106,50,34,164,214,141,143,185,151,121,103,192,34,0,0,0,0,0,1,208,109,74,187,134,249,159,137,102,110,154,118,87,101,119,101,0,2,0,36,36,66,68,35,96,164,102,100,36,0,2,33,167,138,174,102,100,84,2,2,100,107,120,119,36,197,24,0,255,254,253,244,12,3,2,1,0,255,254,252,224,38,3,2,1,0,255,254,251,209,57,4,2,1,0,255,254,244,195,69,4,2,1,0,255,251,232,184,84,7,2,1,0,255,254,240,186,86,14,2,1,0,255,254,239,178,91,30,5,1,0,255,248,227,177,100,19,2,1,0,255,255,255,156,4,154,255,255,255,255,255,227,102,15,92,255,255,255,255,255,213,83,24,72,236,255,255,255,255,150,76,33,63,214,255,255,255,190,121,77,43,55,185,255,255,255,245,137,71,43,59,139,255,255,255,255,131,66,50,66,107,194,255,255,166,116,76,55,53,125,255,255,100,0,3,0,40,0,3,0,3,0,3,0,5,0,14,0,14,0,10,0,11,0,3,0,8,0,9,0,7,0,3,0,91,1,0,0,0,0,0,0,32,0,16,0,102,38,171,1,104,66,0,0,104,68,0,0,168,68,0,0,200,68,0,0,200,69,0,0,16,70,0,0,88,70,0,0,0,0,0,0,224,112,44,15,3,2,1,0,254,237,192,132,70,23,4,0,255,252,226,155,61,11,2,0,250,245,234,203,71,50,42,38,35,33,31,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,0,0,0,0,0,0,0,0,92,202,190,216,182,223,154,226,156,230,120,236,122,244,204,252,52,3,134,11,136,19,100,25,102,29,74,32,66,39,164,53,249,247,246,245,244,234,210,202,201,200,197,174,82,59,56,55,54,46,22,12,11,10,9,7,0,0,0,0,0,0,0,0,64,0,0,0,0,0,0,0,203,150,0,0,0,0,0,0,215,195,166,125,110,82,0,0,56,71,0,0,64,71,0,0,120,0,0,0,0,0,0,0,128,64,0,0,0,0,0,0,232,158,10,0,0,0,0,0,230,0,0,0,0,0,0,0,243,221,192,181,0,0,0,0,100,0,240,0,32,0,100,0,205,60,0,48,0,32,0,0,171,85,0,0,0,0,0,0,192,128,64,0,0,0,0,0,205,154,102,51,0,0,0,0,213,171,128,85,43,0,0,0,224,192,160,128,96,64,32,0,100,40,16,7,3,1,0,0,253,250,244,233,212,182,150,131,120,110,98,85,72,60,49,40,32,25,19,15,13,11,9,8,7,6,5,4,3,2,1,0,210,208,206,203,199,193,183,168,142,104,74,52,37,27,20,14,10,6,4,2,0,0,0,0,223,201,183,167,152,138,124,111,98,88,79,70,62,56,50,44,39,35,31,27,24,21,18,16,14,12,10,8,6,4,3,2,1,0,0,0,0,0,0,0,188,176,155,138,119,97,67,43,26,10,0,0,0,0,0,0,165,119,80,61,47,35,27,20,14,9,4,0,0,0,0,0,113,63,0,0,0,0,0,0,125,51,26,18,15,12,11,10,9,8,7,6,5,4,3,2,1,0,198,105,45,22,15,12,11,10,9,8,7,6,5,4,3,2,1,0,213,162,116,83,59,43,32,24,18,15,12,9,7,6,5,3,2,0,239,187,116,59,28,16,11,10,9,8,7,6,5,4,3,2,1,0,250,229,188,135,86,51,30,19,13,10,8,6,5,4,3,2,1,0,249,235,213,185,156,128,103,83,66,53,42,33,26,21,17,13,10,0,254,249,235,206,164,118,77,46,27,16,10,7,5,4,3,2,1,0,255,253,249,239,220,191,156,119,85,57,37,23,15,10,6,4,2,0,255,253,251,246,237,223,203,179,152,124,98,75,55,40,29,21,15,0,255,254,253,247,220,162,106,67,42,28,18,12,9,6,4,3,2,0,0,0,0,0,241,190,178,132,87,74,41,14,0,223,193,157,140,106,57,39,18,0,0,0,0,0,0,0,128,0,214,42,0,235,128,21,0,244,184,72,11,0,248,214,128,42,7,0,248,225,170,80,25,5,0,251,236,198,126,54,18,3,0,250,238,211,159,82,35,15,5,0,250,231,203,168,128,88,53,25,6,0,252,238,216,185,148,108,71,40,18,4,0,253,243,225,199,166,128,90,57,31,13,3,0,254,246,233,212,183,147,109,73,44,23,10,2,0,255,250,240,223,198,166,128,90,58,33,16,6,1,0,255,251,244,231,210,181,146,110,75,46,25,12,5,1,0,255,253,248,238,221,196,164,128,92,60,35,18,8,3,1,0,255,253,249,242,229,208,180,146,110,76,48,27,14,7,3,1,0,129,0,207,50,0,236,129,20,0,245,185,72,10,0,249,213,129,42,6,0,250,226,169,87,27,4,0,251,233,194,130,62,20,4,0,250,236,207,160,99,47,17,3,0,255,240,217,182,131,81,41,11,1,0,255,254,233,201,159,107,61,20,2,1,0,255,249,233,206,170,128,86,50,23,7,1,0,255,250,238,217,186,148,108,70,39,18,6,1,0,255,252,243,226,200,166,128,90,56,30,13,4,1,0,255,252,245,231,209,180,146,110,76,47,25,11,4,1,0,255,253,248,237,219,194,163,128,93,62,37,19,8,3,1,0,255,254,250,241,226,205,177,145,111,79,51,30,15,6,2,1,0,129,0,203,54,0,234,129,23,0,245,184,73,10,0,250,215,129,41,5,0,252,232,173,86,24,3,0,253,240,200,129,56,15,2,0,253,244,217,164,94,38,10,1,0,253,245,226,189,132,71,27,7,1,0,253,246,231,203,159,105,56,23,6,1,0,255,248,235,213,179,133,85,47,19,5,1,0,255,254,243,221,194,159,117,70,37,12,2,1,0,255,254,248,234,208,171,128,85,48,22,8,2,1,0,255,254,250,240,220,189,149,107,67,36,16,6,2,1,0,255,254,251,243,227,201,166,128,90,55,29,13,5,2,1,0,255,254,252,246,234,213,183,147,109,73,43,22,10,4,2,1,0,130,0,200,58,0,231,130,26,0,244,184,76,12,0,249,214,130,43,6,0,252,232,173,87,24,3,0,253,241,203,131,56,14,2,0,254,246,221,167,94,35,8,1,0,254,249,232,193,130,65,23,5,1,0,255,251,239,211,162,99,45,15,4,1,0,255,251,243,223,186,131,74,33,11,3,1,0,255,252,245,230,202,158,105,57,24,8,2,1,0,255,253,247,235,214,179,132,84,44,19,7,2,1,0,255,254,250,240,223,196,159,112,69,36,15,6,2,1,0,255,254,253,245,231,209,176,136,93,55,27,11,3,2,1,0,255,254,253,252,239,221,194,158,117,76,42,18,4,3,2,1,0,0,0,2,5,9,14,20,27,35,44,54,65,77,90,104,119,135,0,0,0,0,0,0,0,254,49,67,77,82,93,99,198,11,18,24,31,36,45,255,46,66,78,87,94,104,208,14,21,32,42,51,66,255,94,104,109,112,115,118,248,53,69,80,88,95,102,0,0,0,0,0,0,255,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"i8",ALLOC_NONE,Runtime.GLOBAL_BASE+10240);var tempDoublePtr=Runtime.alignMemory(allocate(12,"i8",ALLOC_STATIC),8);assert(tempDoublePtr%8==0);function copyTempFloat(ptr){HEAP8[tempDoublePtr]=HEAP8[ptr];HEAP8[tempDoublePtr+1]=HEAP8[ptr+1];HEAP8[tempDoublePtr+2]=HEAP8[ptr+2];HEAP8[tempDoublePtr+3]=HEAP8[ptr+3]}function copyTempDouble(ptr){HEAP8[tempDoublePtr]=HEAP8[ptr];HEAP8[tempDoublePtr+1]=HEAP8[ptr+1];HEAP8[tempDoublePtr+2]=HEAP8[ptr+2];HEAP8[tempDoublePtr+3]=HEAP8[ptr+3];HEAP8[tempDoublePtr+4]=HEAP8[ptr+4];HEAP8[tempDoublePtr+5]=HEAP8[ptr+5];HEAP8[tempDoublePtr+6]=HEAP8[ptr+6];HEAP8[tempDoublePtr+7]=HEAP8[ptr+7]}Module["_bitshift64Ashr"]=_bitshift64Ashr;var ___errno_state=0;function ___setErrNo(value){HEAP32[___errno_state>>2]=value;return value}var ERRNO_CODES={EPERM:1,ENOENT:2,ESRCH:3,EINTR:4,EIO:5,ENXIO:6,E2BIG:7,ENOEXEC:8,EBADF:9,ECHILD:10,EAGAIN:11,EWOULDBLOCK:11,ENOMEM:12,EACCES:13,EFAULT:14,ENOTBLK:15,EBUSY:16,EEXIST:17,EXDEV:18,ENODEV:19,ENOTDIR:20,EISDIR:21,EINVAL:22,ENFILE:23,EMFILE:24,ENOTTY:25,ETXTBSY:26,EFBIG:27,ENOSPC:28,ESPIPE:29,EROFS:30,EMLINK:31,EPIPE:32,EDOM:33,ERANGE:34,ENOMSG:42,EIDRM:43,ECHRNG:44,EL2NSYNC:45,EL3HLT:46,EL3RST:47,ELNRNG:48,EUNATCH:49,ENOCSI:50,EL2HLT:51,EDEADLK:35,ENOLCK:37,EBADE:52,EBADR:53,EXFULL:54,ENOANO:55,EBADRQC:56,EBADSLT:57,EDEADLOCK:35,EBFONT:59,ENOSTR:60,ENODATA:61,ETIME:62,ENOSR:63,ENONET:64,ENOPKG:65,EREMOTE:66,ENOLINK:67,EADV:68,ESRMNT:69,ECOMM:70,EPROTO:71,EMULTIHOP:72,EDOTDOT:73,EBADMSG:74,ENOTUNIQ:76,EBADFD:77,EREMCHG:78,ELIBACC:79,ELIBBAD:80,ELIBSCN:81,ELIBMAX:82,ELIBEXEC:83,ENOSYS:38,ENOTEMPTY:39,ENAMETOOLONG:36,ELOOP:40,EOPNOTSUPP:95,EPFNOSUPPORT:96,ECONNRESET:104,ENOBUFS:105,EAFNOSUPPORT:97,EPROTOTYPE:91,ENOTSOCK:88,ENOPROTOOPT:92,ESHUTDOWN:108,ECONNREFUSED:111,EADDRINUSE:98,ECONNABORTED:103,ENETUNREACH:101,ENETDOWN:100,ETIMEDOUT:110,EHOSTDOWN:112,EHOSTUNREACH:113,EINPROGRESS:115,EALREADY:114,EDESTADDRREQ:89,EMSGSIZE:90,EPROTONOSUPPORT:93,ESOCKTNOSUPPORT:94,EADDRNOTAVAIL:99,ENETRESET:102,EISCONN:106,ENOTCONN:107,ETOOMANYREFS:109,EUSERS:87,EDQUOT:122,ESTALE:116,ENOTSUP:95,ENOMEDIUM:123,EILSEQ:84,EOVERFLOW:75,ECANCELED:125,ENOTRECOVERABLE:131,EOWNERDEAD:130,ESTRPIPE:86};function _sysconf(name){switch(name){case 30:return PAGE_SIZE;case 132:case 133:case 12:case 137:case 138:case 15:case 235:case 16:case 17:case 18:case 19:case 20:case 149:case 13:case 10:case 236:case 153:case 9:case 21:case 22:case 159:case 154:case 14:case 77:case 78:case 139:case 80:case 81:case 79:case 82:case 68:case 67:case 164:case 11:case 29:case 47:case 48:case 95:case 52:case 51:case 46:return 200809;case 27:case 246:case 127:case 128:case 23:case 24:case 160:case 161:case 181:case 182:case 242:case 183:case 184:case 243:case 244:case 245:case 165:case 178:case 179:case 49:case 50:case 168:case 169:case 175:case 170:case 171:case 172:case 97:case 76:case 32:case 173:case 35:return-1;case 176:case 177:case 7:case 155:case 8:case 157:case 125:case 126:case 92:case 93:case 129:case 130:case 131:case 94:case 91:return 1;case 74:case 60:case 69:case 70:case 4:return 1024;case 31:case 42:case 72:return 32;case 87:case 26:case 33:return 2147483647;case 34:case 1:return 47839;case 38:case 36:return 99;case 43:case 37:return 2048;case 0:return 2097152;case 3:return 65536;case 28:return 32768;case 44:return 32767;case 75:return 16384;case 39:return 1e3;case 89:return 700;case 71:return 256;case 40:return 255;case 2:return 100;case 180:return 64;case 25:return 20;case 5:return 16;case 6:return 6;case 73:return 4;case 84:{if(typeof navigator==="object")return navigator["hardwareConcurrency"]||1;return 1}}___setErrNo(ERRNO_CODES.EINVAL);return-1}var ctlz_i8=allocate([8,7,6,6,5,5,5,5,4,4,4,4,4,4,4,4,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"i8",ALLOC_STATIC);Module["_llvm_ctlz_i32"]=_llvm_ctlz_i32;Module["_memset"]=_memset;function _abort(){Module["abort"]()}Module["_strlen"]=_strlen;function _emscripten_memcpy_big(dest,src,num){HEAPU8.set(HEAPU8.subarray(src,src+num),dest);return dest}Module["_memcpy"]=_memcpy;Module["_i64Add"]=_i64Add;function _llvm_stackrestore(p){var self=_llvm_stacksave;var ret=self.LLVM_SAVEDSTACKS[p];self.LLVM_SAVEDSTACKS.splice(p,1);Runtime.stackRestore(ret)}function _sbrk(bytes){var self=_sbrk;if(!self.called){DYNAMICTOP=alignMemoryPage(DYNAMICTOP);self.called=true;assert(Runtime.dynamicAlloc);self.alloc=Runtime.dynamicAlloc;Runtime.dynamicAlloc=(function(){abort("cannot dynamically allocate, sbrk now has control")})}var ret=DYNAMICTOP;if(bytes!=0)self.alloc(bytes);return ret}function _llvm_stacksave(){var self=_llvm_stacksave;if(!self.LLVM_SAVEDSTACKS){self.LLVM_SAVEDSTACKS=[]}self.LLVM_SAVEDSTACKS.push(Runtime.stackSave());return self.LLVM_SAVEDSTACKS.length-1}Module["_memmove"]=_memmove;function ___errno_location(){return ___errno_state}function _abs(){return Math_abs.apply(null,arguments)}var ERRNO_MESSAGES={0:"Success",1:"Not super-user",2:"No such file or directory",3:"No such process",4:"Interrupted system call",5:"I/O error",6:"No such device or address",7:"Arg list too long",8:"Exec format error",9:"Bad file number",10:"No children",11:"No more processes",12:"Not enough core",13:"Permission denied",14:"Bad address",15:"Block device required",16:"Mount device busy",17:"File exists",18:"Cross-device link",19:"No such device",20:"Not a directory",21:"Is a directory",22:"Invalid argument",23:"Too many open files in system",24:"Too many open files",25:"Not a typewriter",26:"Text file busy",27:"File too large",28:"No space left on device",29:"Illegal seek",30:"Read only file system",31:"Too many links",32:"Broken pipe",33:"Math arg out of domain of func",34:"Math result not representable",35:"File locking deadlock error",36:"File or path name too long",37:"No record locks available",38:"Function not implemented",39:"Directory not empty",40:"Too many symbolic links",42:"No message of desired type",43:"Identifier removed",44:"Channel number out of range",45:"Level 2 not synchronized",46:"Level 3 halted",47:"Level 3 reset",48:"Link number out of range",49:"Protocol driver not attached",50:"No CSI structure available",51:"Level 2 halted",52:"Invalid exchange",53:"Invalid request descriptor",54:"Exchange full",55:"No anode",56:"Invalid request code",57:"Invalid slot",59:"Bad font file fmt",60:"Device not a stream",61:"No data (for no delay io)",62:"Timer expired",63:"Out of streams resources",64:"Machine is not on the network",65:"Package not installed",66:"The object is remote",67:"The link has been severed",68:"Advertise error",69:"Srmount error",70:"Communication error on send",71:"Protocol error",72:"Multihop attempted",73:"Cross mount point (not really error)",74:"Trying to read unreadable message",75:"Value too large for defined data type",76:"Given log. name not unique",77:"f.d. invalid for this operation",78:"Remote address changed",79:"Can   access a needed shared lib",80:"Accessing a corrupted shared lib",81:".lib section in a.out corrupted",82:"Attempting to link in too many libs",83:"Attempting to exec a shared library",84:"Illegal byte sequence",86:"Streams pipe error",87:"Too many users",88:"Socket operation on non-socket",89:"Destination address required",90:"Message too long",91:"Protocol wrong type for socket",92:"Protocol not available",93:"Unknown protocol",94:"Socket type not supported",95:"Not supported",96:"Protocol family not supported",97:"Address family not supported by protocol family",98:"Address already in use",99:"Address not available",100:"Network interface is not configured",101:"Network is unreachable",102:"Connection reset by network",103:"Connection aborted",104:"Connection reset by peer",105:"No buffer space available",106:"Socket is already connected",107:"Socket is not connected",108:"Can't send after socket shutdown",109:"Too many references",110:"Connection timed out",111:"Connection refused",112:"Host is down",113:"Host is unreachable",114:"Socket already connected",115:"Connection already in progress",116:"Stale file handle",122:"Quota exceeded",123:"No medium (in tape drive)",125:"Operation canceled",130:"Previous owner died",131:"State not recoverable"};var TTY={ttys:[],init:(function(){}),shutdown:(function(){}),register:(function(dev,ops){TTY.ttys[dev]={input:[],output:[],ops:ops};FS.registerDevice(dev,TTY.stream_ops)}),stream_ops:{open:(function(stream){var tty=TTY.ttys[stream.node.rdev];if(!tty){throw new FS.ErrnoError(ERRNO_CODES.ENODEV)}stream.tty=tty;stream.seekable=false}),close:(function(stream){if(stream.tty.output.length){stream.tty.ops.put_char(stream.tty,10)}}),read:(function(stream,buffer,offset,length,pos){if(!stream.tty||!stream.tty.ops.get_char){throw new FS.ErrnoError(ERRNO_CODES.ENXIO)}var bytesRead=0;for(var i=0;i<length;i++){var result;try{result=stream.tty.ops.get_char(stream.tty)}catch(e){throw new FS.ErrnoError(ERRNO_CODES.EIO)}if(result===undefined&&bytesRead===0){throw new FS.ErrnoError(ERRNO_CODES.EAGAIN)}if(result===null||result===undefined)break;bytesRead++;buffer[offset+i]=result}if(bytesRead){stream.node.timestamp=Date.now()}return bytesRead}),write:(function(stream,buffer,offset,length,pos){if(!stream.tty||!stream.tty.ops.put_char){throw new FS.ErrnoError(ERRNO_CODES.ENXIO)}for(var i=0;i<length;i++){try{stream.tty.ops.put_char(stream.tty,buffer[offset+i])}catch(e){throw new FS.ErrnoError(ERRNO_CODES.EIO)}}if(length){stream.node.timestamp=Date.now()}return i})},default_tty_ops:{get_char:(function(tty){if(!tty.input.length){var result=null;if(ENVIRONMENT_IS_NODE){result=process["stdin"]["read"]();if(!result){if(process["stdin"]["_readableState"]&&process["stdin"]["_readableState"]["ended"]){return null}return undefined}}else if(typeof window!="undefined"&&typeof window.prompt=="function"){result=window.prompt("Input: ");if(result!==null){result+="\n"}}else if(typeof readline=="function"){result=readline();if(result!==null){result+="\n"}}if(!result){return null}tty.input=intArrayFromString(result,true)}return tty.input.shift()}),put_char:(function(tty,val){if(val===null||val===10){Module["print"](tty.output.join(""));tty.output=[]}else{tty.output.push(TTY.utf8.processCChar(val))}})},default_tty1_ops:{put_char:(function(tty,val){if(val===null||val===10){Module["printErr"](tty.output.join(""));tty.output=[]}else{tty.output.push(TTY.utf8.processCChar(val))}})}};var MEMFS={ops_table:null,mount:(function(mount){return MEMFS.createNode(null,"/",16384|511,0)}),createNode:(function(parent,name,mode,dev){if(FS.isBlkdev(mode)||FS.isFIFO(mode)){throw new FS.ErrnoError(ERRNO_CODES.EPERM)}if(!MEMFS.ops_table){MEMFS.ops_table={dir:{node:{getattr:MEMFS.node_ops.getattr,setattr:MEMFS.node_ops.setattr,lookup:MEMFS.node_ops.lookup,mknod:MEMFS.node_ops.mknod,rename:MEMFS.node_ops.rename,unlink:MEMFS.node_ops.unlink,rmdir:MEMFS.node_ops.rmdir,readdir:MEMFS.node_ops.readdir,symlink:MEMFS.node_ops.symlink},stream:{llseek:MEMFS.stream_ops.llseek}},file:{node:{getattr:MEMFS.node_ops.getattr,setattr:MEMFS.node_ops.setattr},stream:{llseek:MEMFS.stream_ops.llseek,read:MEMFS.stream_ops.read,write:MEMFS.stream_ops.write,allocate:MEMFS.stream_ops.allocate,mmap:MEMFS.stream_ops.mmap}},link:{node:{getattr:MEMFS.node_ops.getattr,setattr:MEMFS.node_ops.setattr,readlink:MEMFS.node_ops.readlink},stream:{}},chrdev:{node:{getattr:MEMFS.node_ops.getattr,setattr:MEMFS.node_ops.setattr},stream:FS.chrdev_stream_ops}}}var node=FS.createNode(parent,name,mode,dev);if(FS.isDir(node.mode)){node.node_ops=MEMFS.ops_table.dir.node;node.stream_ops=MEMFS.ops_table.dir.stream;node.contents={}}else if(FS.isFile(node.mode)){node.node_ops=MEMFS.ops_table.file.node;node.stream_ops=MEMFS.ops_table.file.stream;node.usedBytes=0;node.contents=null}else if(FS.isLink(node.mode)){node.node_ops=MEMFS.ops_table.link.node;node.stream_ops=MEMFS.ops_table.link.stream}else if(FS.isChrdev(node.mode)){node.node_ops=MEMFS.ops_table.chrdev.node;node.stream_ops=MEMFS.ops_table.chrdev.stream}node.timestamp=Date.now();if(parent){parent.contents[name]=node}return node}),getFileDataAsRegularArray:(function(node){if(node.contents&&node.contents.subarray){var arr=[];for(var i=0;i<node.usedBytes;++i)arr.push(node.contents[i]);return arr}return node.contents}),getFileDataAsTypedArray:(function(node){if(node.contents&&node.contents.subarray)return node.contents.subarray(0,node.usedBytes);return new Uint8Array(node.contents)}),expandFileStorage:(function(node,newCapacity){if(node.contents&&node.contents.subarray&&newCapacity>node.contents.length){node.contents=MEMFS.getFileDataAsRegularArray(node);node.usedBytes=node.contents.length}if(!node.contents||node.contents.subarray){var prevCapacity=node.contents?node.contents.buffer.byteLength:0;if(prevCapacity>=newCapacity)return;var CAPACITY_DOUBLING_MAX=1024*1024;newCapacity=Math.max(newCapacity,prevCapacity*(prevCapacity<CAPACITY_DOUBLING_MAX?2:1.125)|0);if(prevCapacity!=0)newCapacity=Math.max(newCapacity,256);var oldContents=node.contents;node.contents=new Uint8Array(newCapacity);if(node.usedBytes>0)node.contents.set(oldContents.subarray(0,node.usedBytes),0);return}if(!node.contents&&newCapacity>0)node.contents=[];while(node.contents.length<newCapacity)node.contents.push(0)}),resizeFileStorage:(function(node,newSize){if(node.usedBytes==newSize)return;if(newSize==0){node.contents=null;node.usedBytes=0;return}if(!node.contents||node.contents.subarray){var oldContents=node.contents;node.contents=new Uint8Array(new ArrayBuffer(newSize));node.contents.set(oldContents.subarray(0,Math.min(newSize,node.usedBytes)));node.usedBytes=newSize;return}if(!node.contents)node.contents=[];if(node.contents.length>newSize)node.contents.length=newSize;else while(node.contents.length<newSize)node.contents.push(0);node.usedBytes=newSize}),node_ops:{getattr:(function(node){var attr={};attr.dev=FS.isChrdev(node.mode)?node.id:1;attr.ino=node.id;attr.mode=node.mode;attr.nlink=1;attr.uid=0;attr.gid=0;attr.rdev=node.rdev;if(FS.isDir(node.mode)){attr.size=4096}else if(FS.isFile(node.mode)){attr.size=node.usedBytes}else if(FS.isLink(node.mode)){attr.size=node.link.length}else{attr.size=0}attr.atime=new Date(node.timestamp);attr.mtime=new Date(node.timestamp);attr.ctime=new Date(node.timestamp);attr.blksize=4096;attr.blocks=Math.ceil(attr.size/attr.blksize);return attr}),setattr:(function(node,attr){if(attr.mode!==undefined){node.mode=attr.mode}if(attr.timestamp!==undefined){node.timestamp=attr.timestamp}if(attr.size!==undefined){MEMFS.resizeFileStorage(node,attr.size)}}),lookup:(function(parent,name){throw FS.genericErrors[ERRNO_CODES.ENOENT]}),mknod:(function(parent,name,mode,dev){return MEMFS.createNode(parent,name,mode,dev)}),rename:(function(old_node,new_dir,new_name){if(FS.isDir(old_node.mode)){var new_node;try{new_node=FS.lookupNode(new_dir,new_name)}catch(e){}if(new_node){for(var i in new_node.contents){throw new FS.ErrnoError(ERRNO_CODES.ENOTEMPTY)}}}delete old_node.parent.contents[old_node.name];old_node.name=new_name;new_dir.contents[new_name]=old_node;old_node.parent=new_dir}),unlink:(function(parent,name){delete parent.contents[name]}),rmdir:(function(parent,name){var node=FS.lookupNode(parent,name);for(var i in node.contents){throw new FS.ErrnoError(ERRNO_CODES.ENOTEMPTY)}delete parent.contents[name]}),readdir:(function(node){var entries=[".",".."];for(var key in node.contents){if(!node.contents.hasOwnProperty(key)){continue}entries.push(key)}return entries}),symlink:(function(parent,newname,oldpath){var node=MEMFS.createNode(parent,newname,511|40960,0);node.link=oldpath;return node}),readlink:(function(node){if(!FS.isLink(node.mode)){throw new FS.ErrnoError(ERRNO_CODES.EINVAL)}return node.link})},stream_ops:{read:(function(stream,buffer,offset,length,position){var contents=stream.node.contents;if(position>=stream.node.usedBytes)return 0;var size=Math.min(stream.node.usedBytes-position,length);assert(size>=0);if(size>8&&contents.subarray){buffer.set(contents.subarray(position,position+size),offset)}else{for(var i=0;i<size;i++)buffer[offset+i]=contents[position+i]}return size}),write:(function(stream,buffer,offset,length,position,canOwn){if(!length)return 0;var node=stream.node;node.timestamp=Date.now();if(buffer.subarray&&(!node.contents||node.contents.subarray)){if(canOwn){node.contents=buffer.subarray(offset,offset+length);node.usedBytes=length;return length}else if(node.usedBytes===0&&position===0){node.contents=new Uint8Array(buffer.subarray(offset,offset+length));node.usedBytes=length;return length}else if(position+length<=node.usedBytes){node.contents.set(buffer.subarray(offset,offset+length),position);return length}}MEMFS.expandFileStorage(node,position+length);if(node.contents.subarray&&buffer.subarray)node.contents.set(buffer.subarray(offset,offset+length),position);else for(var i=0;i<length;i++){node.contents[position+i]=buffer[offset+i]}node.usedBytes=Math.max(node.usedBytes,position+length);return length}),llseek:(function(stream,offset,whence){var position=offset;if(whence===1){position+=stream.position}else if(whence===2){if(FS.isFile(stream.node.mode)){position+=stream.node.usedBytes}}if(position<0){throw new FS.ErrnoError(ERRNO_CODES.EINVAL)}stream.ungotten=[];stream.position=position;return position}),allocate:(function(stream,offset,length){MEMFS.expandFileStorage(stream.node,offset+length);stream.node.usedBytes=Math.max(stream.node.usedBytes,offset+length)}),mmap:(function(stream,buffer,offset,length,position,prot,flags){if(!FS.isFile(stream.node.mode)){throw new FS.ErrnoError(ERRNO_CODES.ENODEV)}var ptr;var allocated;var contents=stream.node.contents;if(!(flags&2)&&(contents.buffer===buffer||contents.buffer===buffer.buffer)){allocated=false;ptr=contents.byteOffset}else{if(position>0||position+length<stream.node.usedBytes){if(contents.subarray){contents=contents.subarray(position,position+length)}else{contents=Array.prototype.slice.call(contents,position,position+length)}}allocated=true;ptr=_malloc(length);if(!ptr){throw new FS.ErrnoError(ERRNO_CODES.ENOMEM)}buffer.set(contents,ptr)}return{ptr:ptr,allocated:allocated}})}};var IDBFS={dbs:{},indexedDB:(function(){return window.indexedDB||window.mozIndexedDB||window.webkitIndexedDB||window.msIndexedDB}),DB_VERSION:21,DB_STORE_NAME:"FILE_DATA",mount:(function(mount){return MEMFS.mount.apply(null,arguments)}),syncfs:(function(mount,populate,callback){IDBFS.getLocalSet(mount,(function(err,local){if(err)return callback(err);IDBFS.getRemoteSet(mount,(function(err,remote){if(err)return callback(err);var src=populate?remote:local;var dst=populate?local:remote;IDBFS.reconcile(src,dst,callback)}))}))}),getDB:(function(name,callback){var db=IDBFS.dbs[name];if(db){return callback(null,db)}var req;try{req=IDBFS.indexedDB().open(name,IDBFS.DB_VERSION)}catch(e){return callback(e)}req.onupgradeneeded=(function(e){var db=e.target.result;var transaction=e.target.transaction;var fileStore;if(db.objectStoreNames.contains(IDBFS.DB_STORE_NAME)){fileStore=transaction.objectStore(IDBFS.DB_STORE_NAME)}else{fileStore=db.createObjectStore(IDBFS.DB_STORE_NAME)}fileStore.createIndex("timestamp","timestamp",{unique:false})});req.onsuccess=(function(){db=req.result;IDBFS.dbs[name]=db;callback(null,db)});req.onerror=(function(){callback(this.error)})}),getLocalSet:(function(mount,callback){var entries={};function isRealDir(p){return p!=="."&&p!==".."}function toAbsolute(root){return(function(p){return PATH.join2(root,p)})}var check=FS.readdir(mount.mountpoint).filter(isRealDir).map(toAbsolute(mount.mountpoint));while(check.length){var path=check.pop();var stat;try{stat=FS.stat(path)}catch(e){return callback(e)}if(FS.isDir(stat.mode)){check.push.apply(check,FS.readdir(path).filter(isRealDir).map(toAbsolute(path)))}entries[path]={timestamp:stat.mtime}}return callback(null,{type:"local",entries:entries})}),getRemoteSet:(function(mount,callback){var entries={};IDBFS.getDB(mount.mountpoint,(function(err,db){if(err)return callback(err);var transaction=db.transaction([IDBFS.DB_STORE_NAME],"readonly");transaction.onerror=(function(){callback(this.error)});var store=transaction.objectStore(IDBFS.DB_STORE_NAME);var index=store.index("timestamp");index.openKeyCursor().onsuccess=(function(event){var cursor=event.target.result;if(!cursor){return callback(null,{type:"remote",db:db,entries:entries})}entries[cursor.primaryKey]={timestamp:cursor.key};cursor.continue()})}))}),loadLocalEntry:(function(path,callback){var stat,node;try{var lookup=FS.lookupPath(path);node=lookup.node;stat=FS.stat(path)}catch(e){return callback(e)}if(FS.isDir(stat.mode)){return callback(null,{timestamp:stat.mtime,mode:stat.mode})}else if(FS.isFile(stat.mode)){node.contents=MEMFS.getFileDataAsTypedArray(node);return callback(null,{timestamp:stat.mtime,mode:stat.mode,contents:node.contents})}else{return callback(new Error("node type not supported"))}}),storeLocalEntry:(function(path,entry,callback){try{if(FS.isDir(entry.mode)){FS.mkdir(path,entry.mode)}else if(FS.isFile(entry.mode)){FS.writeFile(path,entry.contents,{encoding:"binary",canOwn:true})}else{return callback(new Error("node type not supported"))}FS.utime(path,entry.timestamp,entry.timestamp)}catch(e){return callback(e)}callback(null)}),removeLocalEntry:(function(path,callback){try{var lookup=FS.lookupPath(path);var stat=FS.stat(path);if(FS.isDir(stat.mode)){FS.rmdir(path)}else if(FS.isFile(stat.mode)){FS.unlink(path)}}catch(e){return callback(e)}callback(null)}),loadRemoteEntry:(function(store,path,callback){var req=store.get(path);req.onsuccess=(function(event){callback(null,event.target.result)});req.onerror=(function(){callback(this.error)})}),storeRemoteEntry:(function(store,path,entry,callback){var req=store.put(entry,path);req.onsuccess=(function(){callback(null)});req.onerror=(function(){callback(this.error)})}),removeRemoteEntry:(function(store,path,callback){var req=store.delete(path);req.onsuccess=(function(){callback(null)});req.onerror=(function(){callback(this.error)})}),reconcile:(function(src,dst,callback){var total=0;var create=[];Object.keys(src.entries).forEach((function(key){var e=src.entries[key];var e2=dst.entries[key];if(!e2||e.timestamp>e2.timestamp){create.push(key);total++}}));var remove=[];Object.keys(dst.entries).forEach((function(key){var e=dst.entries[key];var e2=src.entries[key];if(!e2){remove.push(key);total++}}));if(!total){return callback(null)}var errored=false;var completed=0;var db=src.type==="remote"?src.db:dst.db;var transaction=db.transaction([IDBFS.DB_STORE_NAME],"readwrite");var store=transaction.objectStore(IDBFS.DB_STORE_NAME);function done(err){if(err){if(!done.errored){done.errored=true;return callback(err)}return}if(++completed>=total){return callback(null)}}transaction.onerror=(function(){done(this.error)});create.sort().forEach((function(path){if(dst.type==="local"){IDBFS.loadRemoteEntry(store,path,(function(err,entry){if(err)return done(err);IDBFS.storeLocalEntry(path,entry,done)}))}else{IDBFS.loadLocalEntry(path,(function(err,entry){if(err)return done(err);IDBFS.storeRemoteEntry(store,path,entry,done)}))}}));remove.sort().reverse().forEach((function(path){if(dst.type==="local"){IDBFS.removeLocalEntry(path,done)}else{IDBFS.removeRemoteEntry(store,path,done)}}))})};var NODEFS={isWindows:false,staticInit:(function(){debugger;NODEFS.isWindows=!!process.platform.match(/^win/)}),mount:(function(mount){assert(ENVIRONMENT_IS_NODE);return NODEFS.createNode(null,"/",NODEFS.getMode(mount.opts.root),0)}),createNode:(function(parent,name,mode,dev){if(!FS.isDir(mode)&&!FS.isFile(mode)&&!FS.isLink(mode)){throw new FS.ErrnoError(ERRNO_CODES.EINVAL)}var node=FS.createNode(parent,name,mode);node.node_ops=NODEFS.node_ops;node.stream_ops=NODEFS.stream_ops;return node}),getMode:(function(path){var stat;try{stat=fs.lstatSync(path);if(NODEFS.isWindows){stat.mode=stat.mode|(stat.mode&146)>>1}}catch(e){if(!e.code)throw e;throw new FS.ErrnoError(ERRNO_CODES[e.code])}return stat.mode}),realPath:(function(node){var parts=[];while(node.parent!==node){parts.push(node.name);node=node.parent}parts.push(node.mount.opts.root);parts.reverse();return PATH.join.apply(null,parts)}),flagsToPermissionStringMap:{0:"r",1:"r+",2:"r+",64:"r",65:"r+",66:"r+",129:"rx+",193:"rx+",514:"w+",577:"w",578:"w+",705:"wx",706:"wx+",1024:"a",1025:"a",1026:"a+",1089:"a",1090:"a+",1153:"ax",1154:"ax+",1217:"ax",1218:"ax+",4096:"rs",4098:"rs+"},flagsToPermissionString:(function(flags){if(flags in NODEFS.flagsToPermissionStringMap){return NODEFS.flagsToPermissionStringMap[flags]}else{return flags}}),node_ops:{getattr:(function(node){var path=NODEFS.realPath(node);var stat;try{stat=fs.lstatSync(path)}catch(e){if(!e.code)throw e;throw new FS.ErrnoError(ERRNO_CODES[e.code])}if(NODEFS.isWindows&&!stat.blksize){stat.blksize=4096}if(NODEFS.isWindows&&!stat.blocks){stat.blocks=(stat.size+stat.blksize-1)/stat.blksize|0}return{dev:stat.dev,ino:stat.ino,mode:stat.mode,nlink:stat.nlink,uid:stat.uid,gid:stat.gid,rdev:stat.rdev,size:stat.size,atime:stat.atime,mtime:stat.mtime,ctime:stat.ctime,blksize:stat.blksize,blocks:stat.blocks}}),setattr:(function(node,attr){var path=NODEFS.realPath(node);try{if(attr.mode!==undefined){fs.chmodSync(path,attr.mode);node.mode=attr.mode}if(attr.timestamp!==undefined){var date=new Date(attr.timestamp);fs.utimesSync(path,date,date)}if(attr.size!==undefined){fs.truncateSync(path,attr.size)}}catch(e){if(!e.code)throw e;throw new FS.ErrnoError(ERRNO_CODES[e.code])}}),lookup:(function(parent,name){var path=PATH.join2(NODEFS.realPath(parent),name);var mode=NODEFS.getMode(path);return NODEFS.createNode(parent,name,mode)}),mknod:(function(parent,name,mode,dev){var node=NODEFS.createNode(parent,name,mode,dev);var path=NODEFS.realPath(node);try{if(FS.isDir(node.mode)){fs.mkdirSync(path,node.mode)}else{fs.writeFileSync(path,"",{mode:node.mode})}}catch(e){if(!e.code)throw e;throw new FS.ErrnoError(ERRNO_CODES[e.code])}return node}),rename:(function(oldNode,newDir,newName){var oldPath=NODEFS.realPath(oldNode);var newPath=PATH.join2(NODEFS.realPath(newDir),newName);try{fs.renameSync(oldPath,newPath)}catch(e){if(!e.code)throw e;throw new FS.ErrnoError(ERRNO_CODES[e.code])}}),unlink:(function(parent,name){var path=PATH.join2(NODEFS.realPath(parent),name);try{fs.unlinkSync(path)}catch(e){if(!e.code)throw e;throw new FS.ErrnoError(ERRNO_CODES[e.code])}}),rmdir:(function(parent,name){var path=PATH.join2(NODEFS.realPath(parent),name);try{fs.rmdirSync(path)}catch(e){if(!e.code)throw e;throw new FS.ErrnoError(ERRNO_CODES[e.code])}}),readdir:(function(node){var path=NODEFS.realPath(node);try{return fs.readdirSync(path)}catch(e){if(!e.code)throw e;throw new FS.ErrnoError(ERRNO_CODES[e.code])}}),symlink:(function(parent,newName,oldPath){var newPath=PATH.join2(NODEFS.realPath(parent),newName);try{fs.symlinkSync(oldPath,newPath)}catch(e){if(!e.code)throw e;throw new FS.ErrnoError(ERRNO_CODES[e.code])}}),readlink:(function(node){var path=NODEFS.realPath(node);try{return fs.readlinkSync(path)}catch(e){if(!e.code)throw e;throw new FS.ErrnoError(ERRNO_CODES[e.code])}})},stream_ops:{open:(function(stream){var path=NODEFS.realPath(stream.node);try{if(FS.isFile(stream.node.mode)){stream.nfd=fs.openSync(path,NODEFS.flagsToPermissionString(stream.flags))}}catch(e){if(!e.code)throw e;throw new FS.ErrnoError(ERRNO_CODES[e.code])}}),close:(function(stream){try{if(FS.isFile(stream.node.mode)&&stream.nfd){fs.closeSync(stream.nfd)}}catch(e){if(!e.code)throw e;throw new FS.ErrnoError(ERRNO_CODES[e.code])}}),read:(function(stream,buffer,offset,length,position){var nbuffer=new Buffer(length);var res;try{res=fs.readSync(stream.nfd,nbuffer,0,length,position)}catch(e){throw new FS.ErrnoError(ERRNO_CODES[e.code])}if(res>0){for(var i=0;i<res;i++){buffer[offset+i]=nbuffer[i]}}return res}),write:(function(stream,buffer,offset,length,position){var nbuffer=new Buffer(buffer.subarray(offset,offset+length));var res;try{res=fs.writeSync(stream.nfd,nbuffer,0,length,position)}catch(e){throw new FS.ErrnoError(ERRNO_CODES[e.code])}return res}),llseek:(function(stream,offset,whence){var position=offset;if(whence===1){position+=stream.position}else if(whence===2){if(FS.isFile(stream.node.mode)){try{var stat=fs.fstatSync(stream.nfd);position+=stat.size}catch(e){throw new FS.ErrnoError(ERRNO_CODES[e.code])}}}if(position<0){throw new FS.ErrnoError(ERRNO_CODES.EINVAL)}stream.position=position;return position})}};var _stdin=allocate(1,"i32*",ALLOC_STATIC);var _stdout=allocate(1,"i32*",ALLOC_STATIC);var _stderr=allocate(1,"i32*",ALLOC_STATIC);function _fflush(stream){}var FS={root:null,mounts:[],devices:[null],streams:[],nextInode:1,nameTable:null,currentPath:"/",initialized:false,ignorePermissions:true,trackingDelegate:{},tracking:{openFlags:{READ:1,WRITE:2}},ErrnoError:null,genericErrors:{},handleFSError:(function(e){if(!(e instanceof FS.ErrnoError))throw e+" : "+stackTrace();return ___setErrNo(e.errno)}),lookupPath:(function(path,opts){path=PATH.resolve(FS.cwd(),path);opts=opts||{};var defaults={follow_mount:true,recurse_count:0};for(var key in defaults){if(opts[key]===undefined){opts[key]=defaults[key]}}if(opts.recurse_count>8){throw new FS.ErrnoError(ERRNO_CODES.ELOOP)}var parts=PATH.normalizeArray(path.split("/").filter((function(p){return!!p})),false);var current=FS.root;var current_path="/";for(var i=0;i<parts.length;i++){var islast=i===parts.length-1;if(islast&&opts.parent){break}current=FS.lookupNode(current,parts[i]);current_path=PATH.join2(current_path,parts[i]);if(FS.isMountpoint(current)){if(!islast||islast&&opts.follow_mount){current=current.mounted.root}}if(!islast||opts.follow){var count=0;while(FS.isLink(current.mode)){var link=FS.readlink(current_path);current_path=PATH.resolve(PATH.dirname(current_path),link);var lookup=FS.lookupPath(current_path,{recurse_count:opts.recurse_count});current=lookup.node;if(count++>40){throw new FS.ErrnoError(ERRNO_CODES.ELOOP)}}}}return{path:current_path,node:current}}),getPath:(function(node){var path;while(true){if(FS.isRoot(node)){var mount=node.mount.mountpoint;if(!path)return mount;return mount[mount.length-1]!=="/"?mount+"/"+path:mount+path}path=path?node.name+"/"+path:node.name;node=node.parent}}),hashName:(function(parentid,name){var hash=0;for(var i=0;i<name.length;i++){hash=(hash<<5)-hash+name.charCodeAt(i)|0}return(parentid+hash>>>0)%FS.nameTable.length}),hashAddNode:(function(node){var hash=FS.hashName(node.parent.id,node.name);node.name_next=FS.nameTable[hash];FS.nameTable[hash]=node}),hashRemoveNode:(function(node){var hash=FS.hashName(node.parent.id,node.name);if(FS.nameTable[hash]===node){FS.nameTable[hash]=node.name_next}else{var current=FS.nameTable[hash];while(current){if(current.name_next===node){current.name_next=node.name_next;break}current=current.name_next}}}),lookupNode:(function(parent,name){var err=FS.mayLookup(parent);if(err){throw new FS.ErrnoError(err)}var hash=FS.hashName(parent.id,name);for(var node=FS.nameTable[hash];node;node=node.name_next){var nodeName=node.name;if(node.parent.id===parent.id&&nodeName===name){return node}}return FS.lookup(parent,name)}),createNode:(function(parent,name,mode,rdev){if(!FS.FSNode){FS.FSNode=(function(parent,name,mode,rdev){if(!parent){parent=this}this.parent=parent;this.mount=parent.mount;this.mounted=null;this.id=FS.nextInode++;this.name=name;this.mode=mode;this.node_ops={};this.stream_ops={};this.rdev=rdev});FS.FSNode.prototype={};var readMode=292|73;var writeMode=146;Object.defineProperties(FS.FSNode.prototype,{read:{get:(function(){return(this.mode&readMode)===readMode}),set:(function(val){val?this.mode|=readMode:this.mode&=~readMode})},write:{get:(function(){return(this.mode&writeMode)===writeMode}),set:(function(val){val?this.mode|=writeMode:this.mode&=~writeMode})},isFolder:{get:(function(){return FS.isDir(this.mode)})},isDevice:{get:(function(){return FS.isChrdev(this.mode)})}})}var node=new FS.FSNode(parent,name,mode,rdev);FS.hashAddNode(node);return node}),destroyNode:(function(node){FS.hashRemoveNode(node)}),isRoot:(function(node){return node===node.parent}),isMountpoint:(function(node){return!!node.mounted}),isFile:(function(mode){return(mode&61440)===32768}),isDir:(function(mode){return(mode&61440)===16384}),isLink:(function(mode){return(mode&61440)===40960}),isChrdev:(function(mode){return(mode&61440)===8192}),isBlkdev:(function(mode){return(mode&61440)===24576}),isFIFO:(function(mode){return(mode&61440)===4096}),isSocket:(function(mode){return(mode&49152)===49152}),flagModes:{"r":0,"rs":1052672,"r+":2,"w":577,"wx":705,"xw":705,"w+":578,"wx+":706,"xw+":706,"a":1089,"ax":1217,"xa":1217,"a+":1090,"ax+":1218,"xa+":1218},modeStringToFlags:(function(str){var flags=FS.flagModes[str];if(typeof flags==="undefined"){throw new Error("Unknown file open mode: "+str)}return flags}),flagsToPermissionString:(function(flag){var accmode=flag&2097155;var perms=["r","w","rw"][accmode];if(flag&512){perms+="w"}return perms}),nodePermissions:(function(node,perms){if(FS.ignorePermissions){return 0}if(perms.indexOf("r")!==-1&&!(node.mode&292)){return ERRNO_CODES.EACCES}else if(perms.indexOf("w")!==-1&&!(node.mode&146)){return ERRNO_CODES.EACCES}else if(perms.indexOf("x")!==-1&&!(node.mode&73)){return ERRNO_CODES.EACCES}return 0}),mayLookup:(function(dir){return FS.nodePermissions(dir,"x")}),mayCreate:(function(dir,name){try{var node=FS.lookupNode(dir,name);return ERRNO_CODES.EEXIST}catch(e){}return FS.nodePermissions(dir,"wx")}),mayDelete:(function(dir,name,isdir){var node;try{node=FS.lookupNode(dir,name)}catch(e){return e.errno}var err=FS.nodePermissions(dir,"wx");if(err){return err}if(isdir){if(!FS.isDir(node.mode)){return ERRNO_CODES.ENOTDIR}if(FS.isRoot(node)||FS.getPath(node)===FS.cwd()){return ERRNO_CODES.EBUSY}}else{if(FS.isDir(node.mode)){return ERRNO_CODES.EISDIR}}return 0}),mayOpen:(function(node,flags){if(!node){return ERRNO_CODES.ENOENT}if(FS.isLink(node.mode)){return ERRNO_CODES.ELOOP}else if(FS.isDir(node.mode)){if((flags&2097155)!==0||flags&512){return ERRNO_CODES.EISDIR}}return FS.nodePermissions(node,FS.flagsToPermissionString(flags))}),MAX_OPEN_FDS:4096,nextfd:(function(fd_start,fd_end){fd_start=fd_start||0;fd_end=fd_end||FS.MAX_OPEN_FDS;for(var fd=fd_start;fd<=fd_end;fd++){if(!FS.streams[fd]){return fd}}throw new FS.ErrnoError(ERRNO_CODES.EMFILE)}),getStream:(function(fd){return FS.streams[fd]}),createStream:(function(stream,fd_start,fd_end){if(!FS.FSStream){FS.FSStream=(function(){});FS.FSStream.prototype={};Object.defineProperties(FS.FSStream.prototype,{object:{get:(function(){return this.node}),set:(function(val){this.node=val})},isRead:{get:(function(){return(this.flags&2097155)!==1})},isWrite:{get:(function(){return(this.flags&2097155)!==0})},isAppend:{get:(function(){return this.flags&1024})}})}var newStream=new FS.FSStream;for(var p in stream){newStream[p]=stream[p]}stream=newStream;var fd=FS.nextfd(fd_start,fd_end);stream.fd=fd;FS.streams[fd]=stream;return stream}),closeStream:(function(fd){FS.streams[fd]=null}),getStreamFromPtr:(function(ptr){return FS.streams[ptr-1]}),getPtrForStream:(function(stream){return stream?stream.fd+1:0}),chrdev_stream_ops:{open:(function(stream){var device=FS.getDevice(stream.node.rdev);stream.stream_ops=device.stream_ops;if(stream.stream_ops.open){stream.stream_ops.open(stream)}}),llseek:(function(){throw new FS.ErrnoError(ERRNO_CODES.ESPIPE)})},major:(function(dev){return dev>>8}),minor:(function(dev){return dev&255}),makedev:(function(ma,mi){return ma<<8|mi}),registerDevice:(function(dev,ops){FS.devices[dev]={stream_ops:ops}}),getDevice:(function(dev){return FS.devices[dev]}),getMounts:(function(mount){var mounts=[];var check=[mount];while(check.length){var m=check.pop();mounts.push(m);check.push.apply(check,m.mounts)}return mounts}),syncfs:(function(populate,callback){if(typeof populate==="function"){callback=populate;populate=false}var mounts=FS.getMounts(FS.root.mount);var completed=0;function done(err){if(err){if(!done.errored){done.errored=true;return callback(err)}return}if(++completed>=mounts.length){callback(null)}}mounts.forEach((function(mount){if(!mount.type.syncfs){return done(null)}mount.type.syncfs(mount,populate,done)}))}),mount:(function(type,opts,mountpoint){var root=mountpoint==="/";var pseudo=!mountpoint;var node;if(root&&FS.root){throw new FS.ErrnoError(ERRNO_CODES.EBUSY)}else if(!root&&!pseudo){var lookup=FS.lookupPath(mountpoint,{follow_mount:false});mountpoint=lookup.path;node=lookup.node;if(FS.isMountpoint(node)){throw new FS.ErrnoError(ERRNO_CODES.EBUSY)}if(!FS.isDir(node.mode)){throw new FS.ErrnoError(ERRNO_CODES.ENOTDIR)}}var mount={type:type,opts:opts,mountpoint:mountpoint,mounts:[]};var mountRoot=type.mount(mount);mountRoot.mount=mount;mount.root=mountRoot;if(root){FS.root=mountRoot}else if(node){node.mounted=mount;if(node.mount){node.mount.mounts.push(mount)}}return mountRoot}),unmount:(function(mountpoint){var lookup=FS.lookupPath(mountpoint,{follow_mount:false});if(!FS.isMountpoint(lookup.node)){throw new FS.ErrnoError(ERRNO_CODES.EINVAL)}var node=lookup.node;var mount=node.mounted;var mounts=FS.getMounts(mount);Object.keys(FS.nameTable).forEach((function(hash){var current=FS.nameTable[hash];while(current){var next=current.name_next;if(mounts.indexOf(current.mount)!==-1){FS.destroyNode(current)}current=next}}));node.mounted=null;var idx=node.mount.mounts.indexOf(mount);assert(idx!==-1);node.mount.mounts.splice(idx,1)}),lookup:(function(parent,name){return parent.node_ops.lookup(parent,name)}),mknod:(function(path,mode,dev){var lookup=FS.lookupPath(path,{parent:true});var parent=lookup.node;var name=PATH.basename(path);var err=FS.mayCreate(parent,name);if(err){throw new FS.ErrnoError(err)}if(!parent.node_ops.mknod){throw new FS.ErrnoError(ERRNO_CODES.EPERM)}return parent.node_ops.mknod(parent,name,mode,dev)}),create:(function(path,mode){mode=mode!==undefined?mode:438;mode&=4095;mode|=32768;return FS.mknod(path,mode,0)}),mkdir:(function(path,mode){mode=mode!==undefined?mode:511;mode&=511|512;mode|=16384;return FS.mknod(path,mode,0)}),mkdev:(function(path,mode,dev){if(typeof dev==="undefined"){dev=mode;mode=438}mode|=8192;return FS.mknod(path,mode,dev)}),symlink:(function(oldpath,newpath){var lookup=FS.lookupPath(newpath,{parent:true});var parent=lookup.node;var newname=PATH.basename(newpath);var err=FS.mayCreate(parent,newname);if(err){throw new FS.ErrnoError(err)}if(!parent.node_ops.symlink){throw new FS.ErrnoError(ERRNO_CODES.EPERM)}return parent.node_ops.symlink(parent,newname,oldpath)}),rename:(function(old_path,new_path){var old_dirname=PATH.dirname(old_path);var new_dirname=PATH.dirname(new_path);var old_name=PATH.basename(old_path);var new_name=PATH.basename(new_path);var lookup,old_dir,new_dir;try{lookup=FS.lookupPath(old_path,{parent:true});old_dir=lookup.node;lookup=FS.lookupPath(new_path,{parent:true});new_dir=lookup.node}catch(e){throw new FS.ErrnoError(ERRNO_CODES.EBUSY)}if(old_dir.mount!==new_dir.mount){throw new FS.ErrnoError(ERRNO_CODES.EXDEV)}var old_node=FS.lookupNode(old_dir,old_name);var relative=PATH.relative(old_path,new_dirname);if(relative.charAt(0)!=="."){throw new FS.ErrnoError(ERRNO_CODES.EINVAL)}relative=PATH.relative(new_path,old_dirname);if(relative.charAt(0)!=="."){throw new FS.ErrnoError(ERRNO_CODES.ENOTEMPTY)}var new_node;try{new_node=FS.lookupNode(new_dir,new_name)}catch(e){}if(old_node===new_node){return}var isdir=FS.isDir(old_node.mode);var err=FS.mayDelete(old_dir,old_name,isdir);if(err){throw new FS.ErrnoError(err)}err=new_node?FS.mayDelete(new_dir,new_name,isdir):FS.mayCreate(new_dir,new_name);if(err){throw new FS.ErrnoError(err)}if(!old_dir.node_ops.rename){throw new FS.ErrnoError(ERRNO_CODES.EPERM)}if(FS.isMountpoint(old_node)||new_node&&FS.isMountpoint(new_node)){throw new FS.ErrnoError(ERRNO_CODES.EBUSY)}if(new_dir!==old_dir){err=FS.nodePermissions(old_dir,"w");if(err){throw new FS.ErrnoError(err)}}try{if(FS.trackingDelegate["willMovePath"]){FS.trackingDelegate["willMovePath"](old_path,new_path)}}catch(e){console.log("FS.trackingDelegate['willMovePath']('"+old_path+"', '"+new_path+"') threw an exception: "+e.message)}FS.hashRemoveNode(old_node);try{old_dir.node_ops.rename(old_node,new_dir,new_name)}catch(e){throw e}finally{FS.hashAddNode(old_node)}try{if(FS.trackingDelegate["onMovePath"])FS.trackingDelegate["onMovePath"](old_path,new_path)}catch(e){console.log("FS.trackingDelegate['onMovePath']('"+old_path+"', '"+new_path+"') threw an exception: "+e.message)}}),rmdir:(function(path){var lookup=FS.lookupPath(path,{parent:true});var parent=lookup.node;var name=PATH.basename(path);var node=FS.lookupNode(parent,name);var err=FS.mayDelete(parent,name,true);if(err){throw new FS.ErrnoError(err)}if(!parent.node_ops.rmdir){throw new FS.ErrnoError(ERRNO_CODES.EPERM)}if(FS.isMountpoint(node)){throw new FS.ErrnoError(ERRNO_CODES.EBUSY)}try{if(FS.trackingDelegate["willDeletePath"]){FS.trackingDelegate["willDeletePath"](path)}}catch(e){console.log("FS.trackingDelegate['willDeletePath']('"+path+"') threw an exception: "+e.message)}parent.node_ops.rmdir(parent,name);FS.destroyNode(node);try{if(FS.trackingDelegate["onDeletePath"])FS.trackingDelegate["onDeletePath"](path)}catch(e){console.log("FS.trackingDelegate['onDeletePath']('"+path+"') threw an exception: "+e.message)}}),readdir:(function(path){var lookup=FS.lookupPath(path,{follow:true});var node=lookup.node;if(!node.node_ops.readdir){throw new FS.ErrnoError(ERRNO_CODES.ENOTDIR)}return node.node_ops.readdir(node)}),unlink:(function(path){var lookup=FS.lookupPath(path,{parent:true});var parent=lookup.node;var name=PATH.basename(path);var node=FS.lookupNode(parent,name);var err=FS.mayDelete(parent,name,false);if(err){if(err===ERRNO_CODES.EISDIR)err=ERRNO_CODES.EPERM;throw new FS.ErrnoError(err)}if(!parent.node_ops.unlink){throw new FS.ErrnoError(ERRNO_CODES.EPERM)}if(FS.isMountpoint(node)){throw new FS.ErrnoError(ERRNO_CODES.EBUSY)}try{if(FS.trackingDelegate["willDeletePath"]){FS.trackingDelegate["willDeletePath"](path)}}catch(e){console.log("FS.trackingDelegate['willDeletePath']('"+path+"') threw an exception: "+e.message)}parent.node_ops.unlink(parent,name);FS.destroyNode(node);try{if(FS.trackingDelegate["onDeletePath"])FS.trackingDelegate["onDeletePath"](path)}catch(e){console.log("FS.trackingDelegate['onDeletePath']('"+path+"') threw an exception: "+e.message)}}),readlink:(function(path){var lookup=FS.lookupPath(path);var link=lookup.node;if(!link.node_ops.readlink){throw new FS.ErrnoError(ERRNO_CODES.EINVAL)}return link.node_ops.readlink(link)}),stat:(function(path,dontFollow){var lookup=FS.lookupPath(path,{follow:!dontFollow});var node=lookup.node;if(!node.node_ops.getattr){throw new FS.ErrnoError(ERRNO_CODES.EPERM)}return node.node_ops.getattr(node)}),lstat:(function(path){return FS.stat(path,true)}),chmod:(function(path,mode,dontFollow){var node;if(typeof path==="string"){var lookup=FS.lookupPath(path,{follow:!dontFollow});node=lookup.node}else{node=path}if(!node.node_ops.setattr){throw new FS.ErrnoError(ERRNO_CODES.EPERM)}node.node_ops.setattr(node,{mode:mode&4095|node.mode&~4095,timestamp:Date.now()})}),lchmod:(function(path,mode){FS.chmod(path,mode,true)}),fchmod:(function(fd,mode){var stream=FS.getStream(fd);if(!stream){throw new FS.ErrnoError(ERRNO_CODES.EBADF)}FS.chmod(stream.node,mode)}),chown:(function(path,uid,gid,dontFollow){var node;if(typeof path==="string"){var lookup=FS.lookupPath(path,{follow:!dontFollow});node=lookup.node}else{node=path}if(!node.node_ops.setattr){throw new FS.ErrnoError(ERRNO_CODES.EPERM)}node.node_ops.setattr(node,{timestamp:Date.now()})}),lchown:(function(path,uid,gid){FS.chown(path,uid,gid,true)}),fchown:(function(fd,uid,gid){var stream=FS.getStream(fd);if(!stream){throw new FS.ErrnoError(ERRNO_CODES.EBADF)}FS.chown(stream.node,uid,gid)}),truncate:(function(path,len){if(len<0){throw new FS.ErrnoError(ERRNO_CODES.EINVAL)}var node;if(typeof path==="string"){var lookup=FS.lookupPath(path,{follow:true});node=lookup.node}else{node=path}if(!node.node_ops.setattr){throw new FS.ErrnoError(ERRNO_CODES.EPERM)}if(FS.isDir(node.mode)){throw new FS.ErrnoError(ERRNO_CODES.EISDIR)}if(!FS.isFile(node.mode)){throw new FS.ErrnoError(ERRNO_CODES.EINVAL)}var err=FS.nodePermissions(node,"w");if(err){throw new FS.ErrnoError(err)}node.node_ops.setattr(node,{size:len,timestamp:Date.now()})}),ftruncate:(function(fd,len){var stream=FS.getStream(fd);if(!stream){throw new FS.ErrnoError(ERRNO_CODES.EBADF)}if((stream.flags&2097155)===0){throw new FS.ErrnoError(ERRNO_CODES.EINVAL)}FS.truncate(stream.node,len)}),utime:(function(path,atime,mtime){var lookup=FS.lookupPath(path,{follow:true});var node=lookup.node;node.node_ops.setattr(node,{timestamp:Math.max(atime,mtime)})}),open:(function(path,flags,mode,fd_start,fd_end){if(path===""){throw new FS.ErrnoError(ERRNO_CODES.ENOENT)}flags=typeof flags==="string"?FS.modeStringToFlags(flags):flags;mode=typeof mode==="undefined"?438:mode;if(flags&64){mode=mode&4095|32768}else{mode=0}var node;if(typeof path==="object"){node=path}else{path=PATH.normalize(path);try{var lookup=FS.lookupPath(path,{follow:!(flags&131072)});node=lookup.node}catch(e){}}if(flags&64){if(node){if(flags&128){throw new FS.ErrnoError(ERRNO_CODES.EEXIST)}}else{node=FS.mknod(path,mode,0)}}if(!node){throw new FS.ErrnoError(ERRNO_CODES.ENOENT)}if(FS.isChrdev(node.mode)){flags&=~512}var err=FS.mayOpen(node,flags);if(err){throw new FS.ErrnoError(err)}if(flags&512){FS.truncate(node,0)}flags&=~(128|512);var stream=FS.createStream({node:node,path:FS.getPath(node),flags:flags,seekable:true,position:0,stream_ops:node.stream_ops,ungotten:[],error:false},fd_start,fd_end);if(stream.stream_ops.open){stream.stream_ops.open(stream)}if(Module["logReadFiles"]&&!(flags&1)){if(!FS.readFiles)FS.readFiles={};if(!(path in FS.readFiles)){FS.readFiles[path]=1;Module["printErr"]("read file: "+path)}}try{if(FS.trackingDelegate["onOpenFile"]){var trackingFlags=0;if((flags&2097155)!==1){trackingFlags|=FS.tracking.openFlags.READ}if((flags&2097155)!==0){trackingFlags|=FS.tracking.openFlags.WRITE}FS.trackingDelegate["onOpenFile"](path,trackingFlags)}}catch(e){console.log("FS.trackingDelegate['onOpenFile']('"+path+"', flags) threw an exception: "+e.message)}return stream}),close:(function(stream){try{if(stream.stream_ops.close){stream.stream_ops.close(stream)}}catch(e){throw e}finally{FS.closeStream(stream.fd)}}),llseek:(function(stream,offset,whence){if(!stream.seekable||!stream.stream_ops.llseek){throw new FS.ErrnoError(ERRNO_CODES.ESPIPE)}return stream.stream_ops.llseek(stream,offset,whence)}),read:(function(stream,buffer,offset,length,position){if(length<0||position<0){throw new FS.ErrnoError(ERRNO_CODES.EINVAL)}if((stream.flags&2097155)===1){throw new FS.ErrnoError(ERRNO_CODES.EBADF)}if(FS.isDir(stream.node.mode)){throw new FS.ErrnoError(ERRNO_CODES.EISDIR)}if(!stream.stream_ops.read){throw new FS.ErrnoError(ERRNO_CODES.EINVAL)}var seeking=true;if(typeof position==="undefined"){position=stream.position;seeking=false}else if(!stream.seekable){throw new FS.ErrnoError(ERRNO_CODES.ESPIPE)}var bytesRead=stream.stream_ops.read(stream,buffer,offset,length,position);if(!seeking)stream.position+=bytesRead;return bytesRead}),write:(function(stream,buffer,offset,length,position,canOwn){if(length<0||position<0){throw new FS.ErrnoError(ERRNO_CODES.EINVAL)}if((stream.flags&2097155)===0){throw new FS.ErrnoError(ERRNO_CODES.EBADF)}if(FS.isDir(stream.node.mode)){throw new FS.ErrnoError(ERRNO_CODES.EISDIR)}if(!stream.stream_ops.write){throw new FS.ErrnoError(ERRNO_CODES.EINVAL)}if(stream.flags&1024){FS.llseek(stream,0,2)}var seeking=true;if(typeof position==="undefined"){position=stream.position;seeking=false}else if(!stream.seekable){throw new FS.ErrnoError(ERRNO_CODES.ESPIPE)}var bytesWritten=stream.stream_ops.write(stream,buffer,offset,length,position,canOwn);if(!seeking)stream.position+=bytesWritten;try{if(stream.path&&FS.trackingDelegate["onWriteToFile"])FS.trackingDelegate["onWriteToFile"](stream.path)}catch(e){console.log("FS.trackingDelegate['onWriteToFile']('"+path+"') threw an exception: "+e.message)}return bytesWritten}),allocate:(function(stream,offset,length){if(offset<0||length<=0){throw new FS.ErrnoError(ERRNO_CODES.EINVAL)}if((stream.flags&2097155)===0){throw new FS.ErrnoError(ERRNO_CODES.EBADF)}if(!FS.isFile(stream.node.mode)&&!FS.isDir(node.mode)){throw new FS.ErrnoError(ERRNO_CODES.ENODEV)}if(!stream.stream_ops.allocate){throw new FS.ErrnoError(ERRNO_CODES.EOPNOTSUPP)}stream.stream_ops.allocate(stream,offset,length)}),mmap:(function(stream,buffer,offset,length,position,prot,flags){if((stream.flags&2097155)===1){throw new FS.ErrnoError(ERRNO_CODES.EACCES)}if(!stream.stream_ops.mmap){throw new FS.ErrnoError(ERRNO_CODES.ENODEV)}return stream.stream_ops.mmap(stream,buffer,offset,length,position,prot,flags)}),ioctl:(function(stream,cmd,arg){if(!stream.stream_ops.ioctl){throw new FS.ErrnoError(ERRNO_CODES.ENOTTY)}return stream.stream_ops.ioctl(stream,cmd,arg)}),readFile:(function(path,opts){opts=opts||{};opts.flags=opts.flags||"r";opts.encoding=opts.encoding||"binary";if(opts.encoding!=="utf8"&&opts.encoding!=="binary"){throw new Error('Invalid encoding type "'+opts.encoding+'"')}var ret;var stream=FS.open(path,opts.flags);var stat=FS.stat(path);var length=stat.size;var buf=new Uint8Array(length);FS.read(stream,buf,0,length,0);if(opts.encoding==="utf8"){ret="";var utf8=new Runtime.UTF8Processor;for(var i=0;i<length;i++){ret+=utf8.processCChar(buf[i])}}else if(opts.encoding==="binary"){ret=buf}FS.close(stream);return ret}),writeFile:(function(path,data,opts){opts=opts||{};opts.flags=opts.flags||"w";opts.encoding=opts.encoding||"utf8";if(opts.encoding!=="utf8"&&opts.encoding!=="binary"){throw new Error('Invalid encoding type "'+opts.encoding+'"')}var stream=FS.open(path,opts.flags,opts.mode);if(opts.encoding==="utf8"){var utf8=new Runtime.UTF8Processor;var buf=new Uint8Array(utf8.processJSString(data));FS.write(stream,buf,0,buf.length,0,opts.canOwn)}else if(opts.encoding==="binary"){FS.write(stream,data,0,data.length,0,opts.canOwn)}FS.close(stream)}),cwd:(function(){return FS.currentPath}),chdir:(function(path){var lookup=FS.lookupPath(path,{follow:true});if(!FS.isDir(lookup.node.mode)){throw new FS.ErrnoError(ERRNO_CODES.ENOTDIR)}var err=FS.nodePermissions(lookup.node,"x");if(err){throw new FS.ErrnoError(err)}FS.currentPath=lookup.path}),createDefaultDirectories:(function(){FS.mkdir("/tmp")}),createDefaultDevices:(function(){FS.mkdir("/dev");FS.registerDevice(FS.makedev(1,3),{read:(function(){return 0}),write:(function(){return 0})});FS.mkdev("/dev/null",FS.makedev(1,3));TTY.register(FS.makedev(5,0),TTY.default_tty_ops);TTY.register(FS.makedev(6,0),TTY.default_tty1_ops);FS.mkdev("/dev/tty",FS.makedev(5,0));FS.mkdev("/dev/tty1",FS.makedev(6,0));var random_device;if(typeof crypto!=="undefined"){var randomBuffer=new Uint8Array(1);random_device=(function(){crypto.getRandomValues(randomBuffer);return randomBuffer[0]})}else if(ENVIRONMENT_IS_NODE){random_device=(function(){return __webpack_require__(/*! crypto */ "./node_modules/.3.12.0@crypto-browserify/index.js").randomBytes(1)[0]})}else{random_device=(function(){return Math.floor(Math.random()*256)})}FS.createDevice("/dev","random",random_device);FS.createDevice("/dev","urandom",random_device);FS.mkdir("/dev/shm");FS.mkdir("/dev/shm/tmp")}),createStandardStreams:(function(){if(Module["stdin"]){FS.createDevice("/dev","stdin",Module["stdin"])}else{FS.symlink("/dev/tty","/dev/stdin")}if(Module["stdout"]){FS.createDevice("/dev","stdout",null,Module["stdout"])}else{FS.symlink("/dev/tty","/dev/stdout")}if(Module["stderr"]){FS.createDevice("/dev","stderr",null,Module["stderr"])}else{FS.symlink("/dev/tty1","/dev/stderr")}var stdin=FS.open("/dev/stdin","r");HEAP32[_stdin>>2]=FS.getPtrForStream(stdin);assert(stdin.fd===0,"invalid handle for stdin ("+stdin.fd+")");var stdout=FS.open("/dev/stdout","w");HEAP32[_stdout>>2]=FS.getPtrForStream(stdout);assert(stdout.fd===1,"invalid handle for stdout ("+stdout.fd+")");var stderr=FS.open("/dev/stderr","w");HEAP32[_stderr>>2]=FS.getPtrForStream(stderr);assert(stderr.fd===2,"invalid handle for stderr ("+stderr.fd+")")}),ensureErrnoError:(function(){if(FS.ErrnoError)return;FS.ErrnoError=function ErrnoError(errno){this.errno=errno;for(var key in ERRNO_CODES){if(ERRNO_CODES[key]===errno){this.code=key;break}}this.message=ERRNO_MESSAGES[errno]};FS.ErrnoError.prototype=new Error;FS.ErrnoError.prototype.constructor=FS.ErrnoError;[ERRNO_CODES.ENOENT].forEach((function(code){FS.genericErrors[code]=new FS.ErrnoError(code);FS.genericErrors[code].stack="<generic error, no stack>"}))}),staticInit:(function(){FS.ensureErrnoError();FS.nameTable=new Array(4096);FS.mount(MEMFS,{},"/");FS.createDefaultDirectories();FS.createDefaultDevices()}),init:(function(input,output,error){assert(!FS.init.initialized,"FS.init was previously called. If you want to initialize later with custom parameters, remove any earlier calls (note that one is automatically added to the generated code)");FS.init.initialized=true;FS.ensureErrnoError();Module["stdin"]=input||Module["stdin"];Module["stdout"]=output||Module["stdout"];Module["stderr"]=error||Module["stderr"];FS.createStandardStreams()}),quit:(function(){FS.init.initialized=false;for(var i=0;i<FS.streams.length;i++){var stream=FS.streams[i];if(!stream){continue}FS.close(stream)}}),getMode:(function(canRead,canWrite){var mode=0;if(canRead)mode|=292|73;if(canWrite)mode|=146;return mode}),joinPath:(function(parts,forceRelative){var path=PATH.join.apply(null,parts);if(forceRelative&&path[0]=="/")path=path.substr(1);return path}),absolutePath:(function(relative,base){return PATH.resolve(base,relative)}),standardizePath:(function(path){return PATH.normalize(path)}),findObject:(function(path,dontResolveLastLink){var ret=FS.analyzePath(path,dontResolveLastLink);if(ret.exists){return ret.object}else{___setErrNo(ret.error);return null}}),analyzePath:(function(path,dontResolveLastLink){try{var lookup=FS.lookupPath(path,{follow:!dontResolveLastLink});path=lookup.path}catch(e){}var ret={isRoot:false,exists:false,error:0,name:null,path:null,object:null,parentExists:false,parentPath:null,parentObject:null};try{var lookup=FS.lookupPath(path,{parent:true});ret.parentExists=true;ret.parentPath=lookup.path;ret.parentObject=lookup.node;ret.name=PATH.basename(path);lookup=FS.lookupPath(path,{follow:!dontResolveLastLink});ret.exists=true;ret.path=lookup.path;ret.object=lookup.node;ret.name=lookup.node.name;ret.isRoot=lookup.path==="/"}catch(e){ret.error=e.errno}return ret}),createFolder:(function(parent,name,canRead,canWrite){var path=PATH.join2(typeof parent==="string"?parent:FS.getPath(parent),name);var mode=FS.getMode(canRead,canWrite);return FS.mkdir(path,mode)}),createPath:(function(parent,path,canRead,canWrite){parent=typeof parent==="string"?parent:FS.getPath(parent);var parts=path.split("/").reverse();while(parts.length){var part=parts.pop();if(!part)continue;var current=PATH.join2(parent,part);try{FS.mkdir(current)}catch(e){}parent=current}return current}),createFile:(function(parent,name,properties,canRead,canWrite){var path=PATH.join2(typeof parent==="string"?parent:FS.getPath(parent),name);var mode=FS.getMode(canRead,canWrite);return FS.create(path,mode)}),createDataFile:(function(parent,name,data,canRead,canWrite,canOwn){var path=name?PATH.join2(typeof parent==="string"?parent:FS.getPath(parent),name):parent;var mode=FS.getMode(canRead,canWrite);var node=FS.create(path,mode);if(data){if(typeof data==="string"){var arr=new Array(data.length);for(var i=0,len=data.length;i<len;++i)arr[i]=data.charCodeAt(i);data=arr}FS.chmod(node,mode|146);var stream=FS.open(node,"w");FS.write(stream,data,0,data.length,0,canOwn);FS.close(stream);FS.chmod(node,mode)}return node}),createDevice:(function(parent,name,input,output){var path=PATH.join2(typeof parent==="string"?parent:FS.getPath(parent),name);var mode=FS.getMode(!!input,!!output);if(!FS.createDevice.major)FS.createDevice.major=64;var dev=FS.makedev(FS.createDevice.major++,0);FS.registerDevice(dev,{open:(function(stream){stream.seekable=false}),close:(function(stream){if(output&&output.buffer&&output.buffer.length){output(10)}}),read:(function(stream,buffer,offset,length,pos){var bytesRead=0;for(var i=0;i<length;i++){var result;try{result=input()}catch(e){throw new FS.ErrnoError(ERRNO_CODES.EIO)}if(result===undefined&&bytesRead===0){throw new FS.ErrnoError(ERRNO_CODES.EAGAIN)}if(result===null||result===undefined)break;bytesRead++;buffer[offset+i]=result}if(bytesRead){stream.node.timestamp=Date.now()}return bytesRead}),write:(function(stream,buffer,offset,length,pos){for(var i=0;i<length;i++){try{output(buffer[offset+i])}catch(e){throw new FS.ErrnoError(ERRNO_CODES.EIO)}}if(length){stream.node.timestamp=Date.now()}return i})});return FS.mkdev(path,mode,dev)}),createLink:(function(parent,name,target,canRead,canWrite){var path=PATH.join2(typeof parent==="string"?parent:FS.getPath(parent),name);return FS.symlink(target,path)}),forceLoadFile:(function(obj){if(obj.isDevice||obj.isFolder||obj.link||obj.contents)return true;var success=true;if(typeof XMLHttpRequest!=="undefined"){throw new Error("Lazy loading should have been performed (contents set) in createLazyFile, but it was not. Lazy loading only works in web workers. Use --embed-file or --preload-file in emcc on the main thread.")}else if(Module["read"]){try{obj.contents=intArrayFromString(Module["read"](obj.url),true);obj.usedBytes=obj.contents.length}catch(e){success=false}}else{throw new Error("Cannot load without read() or XMLHttpRequest.")}if(!success)___setErrNo(ERRNO_CODES.EIO);return success}),createLazyFile:(function(parent,name,url,canRead,canWrite){function LazyUint8Array(){this.lengthKnown=false;this.chunks=[]}LazyUint8Array.prototype.get=function LazyUint8Array_get(idx){if(idx>this.length-1||idx<0){return undefined}var chunkOffset=idx%this.chunkSize;var chunkNum=Math.floor(idx/this.chunkSize);return this.getter(chunkNum)[chunkOffset]};LazyUint8Array.prototype.setDataGetter=function LazyUint8Array_setDataGetter(getter){this.getter=getter};LazyUint8Array.prototype.cacheLength=function LazyUint8Array_cacheLength(){var xhr=new XMLHttpRequest;xhr.open("HEAD",url,false);xhr.send(null);if(!(xhr.status>=200&&xhr.status<300||xhr.status===304))throw new Error("Couldn't load "+url+". Status: "+xhr.status);var datalength=Number(xhr.getResponseHeader("Content-length"));var header;var hasByteServing=(header=xhr.getResponseHeader("Accept-Ranges"))&&header==="bytes";var chunkSize=1024*1024;if(!hasByteServing)chunkSize=datalength;var doXHR=(function(from,to){if(from>to)throw new Error("invalid range ("+from+", "+to+") or no bytes requested!");if(to>datalength-1)throw new Error("only "+datalength+" bytes available! programmer error!");var xhr=new XMLHttpRequest;xhr.open("GET",url,false);if(datalength!==chunkSize)xhr.setRequestHeader("Range","bytes="+from+"-"+to);if(typeof Uint8Array!="undefined")xhr.responseType="arraybuffer";if(xhr.overrideMimeType){xhr.overrideMimeType("text/plain; charset=x-user-defined")}xhr.send(null);if(!(xhr.status>=200&&xhr.status<300||xhr.status===304))throw new Error("Couldn't load "+url+". Status: "+xhr.status);if(xhr.response!==undefined){return new Uint8Array(xhr.response||[])}else{return intArrayFromString(xhr.responseText||"",true)}});var lazyArray=this;lazyArray.setDataGetter((function(chunkNum){var start=chunkNum*chunkSize;var end=(chunkNum+1)*chunkSize-1;end=Math.min(end,datalength-1);if(typeof lazyArray.chunks[chunkNum]==="undefined"){lazyArray.chunks[chunkNum]=doXHR(start,end)}if(typeof lazyArray.chunks[chunkNum]==="undefined")throw new Error("doXHR failed!");return lazyArray.chunks[chunkNum]}));this._length=datalength;this._chunkSize=chunkSize;this.lengthKnown=true};if(typeof XMLHttpRequest!=="undefined"){if(!ENVIRONMENT_IS_WORKER)throw"Cannot do synchronous binary XHRs outside webworkers in modern browsers. Use --embed-file or --preload-file in emcc";var lazyArray=new LazyUint8Array;Object.defineProperty(lazyArray,"length",{get:(function(){if(!this.lengthKnown){this.cacheLength()}return this._length})});Object.defineProperty(lazyArray,"chunkSize",{get:(function(){if(!this.lengthKnown){this.cacheLength()}return this._chunkSize})});var properties={isDevice:false,contents:lazyArray}}else{var properties={isDevice:false,url:url}}var node=FS.createFile(parent,name,properties,canRead,canWrite);if(properties.contents){node.contents=properties.contents}else if(properties.url){node.contents=null;node.url=properties.url}Object.defineProperty(node,"usedBytes",{get:(function(){return this.contents.length})});var stream_ops={};var keys=Object.keys(node.stream_ops);keys.forEach((function(key){var fn=node.stream_ops[key];stream_ops[key]=function forceLoadLazyFile(){if(!FS.forceLoadFile(node)){throw new FS.ErrnoError(ERRNO_CODES.EIO)}return fn.apply(null,arguments)}}));stream_ops.read=function stream_ops_read(stream,buffer,offset,length,position){if(!FS.forceLoadFile(node)){throw new FS.ErrnoError(ERRNO_CODES.EIO)}var contents=stream.node.contents;if(position>=contents.length)return 0;var size=Math.min(contents.length-position,length);assert(size>=0);if(contents.slice){for(var i=0;i<size;i++){buffer[offset+i]=contents[position+i]}}else{for(var i=0;i<size;i++){buffer[offset+i]=contents.get(position+i)}}return size};node.stream_ops=stream_ops;return node}),createPreloadedFile:(function(parent,name,url,canRead,canWrite,onload,onerror,dontCreateFile,canOwn){Browser.init();var fullname=name?PATH.resolve(PATH.join2(parent,name)):parent;function processData(byteArray){function finish(byteArray){if(!dontCreateFile){FS.createDataFile(parent,name,byteArray,canRead,canWrite,canOwn)}if(onload)onload();removeRunDependency("cp "+fullname)}var handled=false;Module["preloadPlugins"].forEach((function(plugin){if(handled)return;if(plugin["canHandle"](fullname)){plugin["handle"](byteArray,fullname,finish,(function(){if(onerror)onerror();removeRunDependency("cp "+fullname)}));handled=true}}));if(!handled)finish(byteArray)}addRunDependency("cp "+fullname);if(typeof url=="string"){Browser.asyncLoad(url,(function(byteArray){processData(byteArray)}),onerror)}else{processData(url)}}),indexedDB:(function(){return window.indexedDB||window.mozIndexedDB||window.webkitIndexedDB||window.msIndexedDB}),DB_NAME:(function(){return"EM_FS_"+window.location.pathname}),DB_VERSION:20,DB_STORE_NAME:"FILE_DATA",saveFilesToDB:(function(paths,onload,onerror){onload=onload||(function(){});onerror=onerror||(function(){});var indexedDB=FS.indexedDB();try{var openRequest=indexedDB.open(FS.DB_NAME(),FS.DB_VERSION)}catch(e){return onerror(e)}openRequest.onupgradeneeded=function openRequest_onupgradeneeded(){console.log("creating db");var db=openRequest.result;db.createObjectStore(FS.DB_STORE_NAME)};openRequest.onsuccess=function openRequest_onsuccess(){var db=openRequest.result;var transaction=db.transaction([FS.DB_STORE_NAME],"readwrite");var files=transaction.objectStore(FS.DB_STORE_NAME);var ok=0,fail=0,total=paths.length;function finish(){if(fail==0)onload();else onerror()}paths.forEach((function(path){var putRequest=files.put(FS.analyzePath(path).object.contents,path);putRequest.onsuccess=function putRequest_onsuccess(){ok++;if(ok+fail==total)finish()};putRequest.onerror=function putRequest_onerror(){fail++;if(ok+fail==total)finish()}}));transaction.onerror=onerror};openRequest.onerror=onerror}),loadFilesFromDB:(function(paths,onload,onerror){onload=onload||(function(){});onerror=onerror||(function(){});var indexedDB=FS.indexedDB();try{var openRequest=indexedDB.open(FS.DB_NAME(),FS.DB_VERSION)}catch(e){return onerror(e)}openRequest.onupgradeneeded=onerror;openRequest.onsuccess=function openRequest_onsuccess(){var db=openRequest.result;try{var transaction=db.transaction([FS.DB_STORE_NAME],"readonly")}catch(e){onerror(e);return}var files=transaction.objectStore(FS.DB_STORE_NAME);var ok=0,fail=0,total=paths.length;function finish(){if(fail==0)onload();else onerror()}paths.forEach((function(path){var getRequest=files.get(path);getRequest.onsuccess=function getRequest_onsuccess(){if(FS.analyzePath(path).exists){FS.unlink(path)}FS.createDataFile(PATH.dirname(path),PATH.basename(path),getRequest.result,true,true,true);ok++;if(ok+fail==total)finish()};getRequest.onerror=function getRequest_onerror(){fail++;if(ok+fail==total)finish()}}));transaction.onerror=onerror};openRequest.onerror=onerror})};var PATH={splitPath:(function(filename){var splitPathRe=/^(\/?|)([\s\S]*?)((?:\.{1,2}|[^\/]+?|)(\.[^.\/]*|))(?:[\/]*)$/;return splitPathRe.exec(filename).slice(1)}),normalizeArray:(function(parts,allowAboveRoot){var up=0;for(var i=parts.length-1;i>=0;i--){var last=parts[i];if(last==="."){parts.splice(i,1)}else if(last===".."){parts.splice(i,1);up++}else if(up){parts.splice(i,1);up--}}if(allowAboveRoot){for(;up--;up){parts.unshift("..")}}return parts}),normalize:(function(path){var isAbsolute=path.charAt(0)==="/",trailingSlash=path.substr(-1)==="/";path=PATH.normalizeArray(path.split("/").filter((function(p){return!!p})),!isAbsolute).join("/");if(!path&&!isAbsolute){path="."}if(path&&trailingSlash){path+="/"}return(isAbsolute?"/":"")+path}),dirname:(function(path){var result=PATH.splitPath(path),root=result[0],dir=result[1];if(!root&&!dir){return"."}if(dir){dir=dir.substr(0,dir.length-1)}return root+dir}),basename:(function(path){if(path==="/")return"/";var lastSlash=path.lastIndexOf("/");if(lastSlash===-1)return path;return path.substr(lastSlash+1)}),extname:(function(path){return PATH.splitPath(path)[3]}),join:(function(){var paths=Array.prototype.slice.call(arguments,0);return PATH.normalize(paths.join("/"))}),join2:(function(l,r){return PATH.normalize(l+"/"+r)}),resolve:(function(){var resolvedPath="",resolvedAbsolute=false;for(var i=arguments.length-1;i>=-1&&!resolvedAbsolute;i--){var path=i>=0?arguments[i]:FS.cwd();if(typeof path!=="string"){throw new TypeError("Arguments to path.resolve must be strings")}else if(!path){continue}resolvedPath=path+"/"+resolvedPath;resolvedAbsolute=path.charAt(0)==="/"}resolvedPath=PATH.normalizeArray(resolvedPath.split("/").filter((function(p){return!!p})),!resolvedAbsolute).join("/");return(resolvedAbsolute?"/":"")+resolvedPath||"."}),relative:(function(from,to){from=PATH.resolve(from).substr(1);to=PATH.resolve(to).substr(1);function trim(arr){var start=0;for(;start<arr.length;start++){if(arr[start]!=="")break}var end=arr.length-1;for(;end>=0;end--){if(arr[end]!=="")break}if(start>end)return[];return arr.slice(start,end-start+1)}var fromParts=trim(from.split("/"));var toParts=trim(to.split("/"));var length=Math.min(fromParts.length,toParts.length);var samePartsLength=length;for(var i=0;i<length;i++){if(fromParts[i]!==toParts[i]){samePartsLength=i;break}}var outputParts=[];for(var i=samePartsLength;i<fromParts.length;i++){outputParts.push("..")}outputParts=outputParts.concat(toParts.slice(samePartsLength));return outputParts.join("/")})};var Browser={mainLoop:{scheduler:null,method:"",shouldPause:false,paused:false,queue:[],pause:(function(){Browser.mainLoop.shouldPause=true}),resume:(function(){if(Browser.mainLoop.paused){Browser.mainLoop.paused=false;Browser.mainLoop.scheduler()}Browser.mainLoop.shouldPause=false}),updateStatus:(function(){if(Module["setStatus"]){var message=Module["statusMessage"]||"Please wait...";var remaining=Browser.mainLoop.remainingBlockers;var expected=Browser.mainLoop.expectedBlockers;if(remaining){if(remaining<expected){Module["setStatus"](message+" ("+(expected-remaining)+"/"+expected+")")}else{Module["setStatus"](message)}}else{Module["setStatus"]("")}}}),runIter:(function(func){if(ABORT)return;if(Module["preMainLoop"]){var preRet=Module["preMainLoop"]();if(preRet===false){return}}try{func()}catch(e){if(e instanceof ExitStatus){return}else{if(e&&typeof e==="object"&&e.stack)Module.printErr("exception thrown: "+[e,e.stack]);throw e}}if(Module["postMainLoop"])Module["postMainLoop"]()})},isFullScreen:false,pointerLock:false,moduleContextCreatedCallbacks:[],workers:[],init:(function(){if(!Module["preloadPlugins"])Module["preloadPlugins"]=[];if(Browser.initted)return;Browser.initted=true;try{new Blob;Browser.hasBlobConstructor=true}catch(e){Browser.hasBlobConstructor=false;console.log("warning: no blob constructor, cannot create blobs with mimetypes")}Browser.BlobBuilder=typeof MozBlobBuilder!="undefined"?MozBlobBuilder:typeof WebKitBlobBuilder!="undefined"?WebKitBlobBuilder:!Browser.hasBlobConstructor?console.log("warning: no BlobBuilder"):null;Browser.URLObject=typeof window!="undefined"?window.URL?window.URL:window.webkitURL:undefined;if(!Module.noImageDecoding&&typeof Browser.URLObject==="undefined"){console.log("warning: Browser does not support creating object URLs. Built-in browser image decoding will not be available.");Module.noImageDecoding=true}var imagePlugin={};imagePlugin["canHandle"]=function imagePlugin_canHandle(name){return!Module.noImageDecoding&&/\.(jpg|jpeg|png|bmp)$/i.test(name)};imagePlugin["handle"]=function imagePlugin_handle(byteArray,name,onload,onerror){var b=null;if(Browser.hasBlobConstructor){try{b=new Blob([byteArray],{type:Browser.getMimetype(name)});if(b.size!==byteArray.length){b=new Blob([(new Uint8Array(byteArray)).buffer],{type:Browser.getMimetype(name)})}}catch(e){Runtime.warnOnce("Blob constructor present but fails: "+e+"; falling back to blob builder")}}if(!b){var bb=new Browser.BlobBuilder;bb.append((new Uint8Array(byteArray)).buffer);b=bb.getBlob()}var url=Browser.URLObject.createObjectURL(b);var img=new Image;img.onload=function img_onload(){assert(img.complete,"Image "+name+" could not be decoded");var canvas=document.createElement("canvas");canvas.width=img.width;canvas.height=img.height;var ctx=canvas.getContext("2d");ctx.drawImage(img,0,0);Module["preloadedImages"][name]=canvas;Browser.URLObject.revokeObjectURL(url);if(onload)onload(byteArray)};img.onerror=function img_onerror(event){console.log("Image "+url+" could not be decoded");if(onerror)onerror()};img.src=url};Module["preloadPlugins"].push(imagePlugin);var audioPlugin={};audioPlugin["canHandle"]=function audioPlugin_canHandle(name){return!Module.noAudioDecoding&&name.substr(-4)in{".ogg":1,".wav":1,".mp3":1}};audioPlugin["handle"]=function audioPlugin_handle(byteArray,name,onload,onerror){var done=false;function finish(audio){if(done)return;done=true;Module["preloadedAudios"][name]=audio;if(onload)onload(byteArray)}function fail(){if(done)return;done=true;Module["preloadedAudios"][name]=new Audio;if(onerror)onerror()}if(Browser.hasBlobConstructor){try{var b=new Blob([byteArray],{type:Browser.getMimetype(name)})}catch(e){return fail()}var url=Browser.URLObject.createObjectURL(b);var audio=new Audio;audio.addEventListener("canplaythrough",(function(){finish(audio)}),false);audio.onerror=function audio_onerror(event){if(done)return;console.log("warning: browser could not fully decode audio "+name+", trying slower base64 approach");function encode64(data){var BASE="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";var PAD="=";var ret="";var leftchar=0;var leftbits=0;for(var i=0;i<data.length;i++){leftchar=leftchar<<8|data[i];leftbits+=8;while(leftbits>=6){var curr=leftchar>>leftbits-6&63;leftbits-=6;ret+=BASE[curr]}}if(leftbits==2){ret+=BASE[(leftchar&3)<<4];ret+=PAD+PAD}else if(leftbits==4){ret+=BASE[(leftchar&15)<<2];ret+=PAD}return ret}audio.src="data:audio/x-"+name.substr(-3)+";base64,"+encode64(byteArray);finish(audio)};audio.src=url;Browser.safeSetTimeout((function(){finish(audio)}),1e4)}else{return fail()}};Module["preloadPlugins"].push(audioPlugin);var canvas=Module["canvas"];function pointerLockChange(){Browser.pointerLock=document["pointerLockElement"]===canvas||document["mozPointerLockElement"]===canvas||document["webkitPointerLockElement"]===canvas||document["msPointerLockElement"]===canvas}if(canvas){canvas.requestPointerLock=canvas["requestPointerLock"]||canvas["mozRequestPointerLock"]||canvas["webkitRequestPointerLock"]||canvas["msRequestPointerLock"]||(function(){});canvas.exitPointerLock=document["exitPointerLock"]||document["mozExitPointerLock"]||document["webkitExitPointerLock"]||document["msExitPointerLock"]||(function(){});canvas.exitPointerLock=canvas.exitPointerLock.bind(document);document.addEventListener("pointerlockchange",pointerLockChange,false);document.addEventListener("mozpointerlockchange",pointerLockChange,false);document.addEventListener("webkitpointerlockchange",pointerLockChange,false);document.addEventListener("mspointerlockchange",pointerLockChange,false);if(Module["elementPointerLock"]){canvas.addEventListener("click",(function(ev){if(!Browser.pointerLock&&canvas.requestPointerLock){canvas.requestPointerLock();ev.preventDefault()}}),false)}}}),createContext:(function(canvas,useWebGL,setInModule,webGLContextAttributes){if(useWebGL&&Module.ctx)return Module.ctx;var ctx;var errorInfo="?";function onContextCreationError(event){errorInfo=event.statusMessage||errorInfo}try{if(useWebGL){var contextAttributes={antialias:false,alpha:false};if(webGLContextAttributes){for(var attribute in webGLContextAttributes){contextAttributes[attribute]=webGLContextAttributes[attribute]}}canvas.addEventListener("webglcontextcreationerror",onContextCreationError,false);try{["experimental-webgl","webgl"].some((function(webglId){return ctx=canvas.getContext(webglId,contextAttributes)}))}finally{canvas.removeEventListener("webglcontextcreationerror",onContextCreationError,false)}}else{ctx=canvas.getContext("2d")}if(!ctx)throw":("}catch(e){Module.print("Could not create canvas: "+[errorInfo,e]);return null}if(useWebGL){canvas.style.backgroundColor="black"}if(setInModule){if(!useWebGL)assert(typeof GLctx==="undefined","cannot set in module if GLctx is used, but we are a non-GL context that would replace it");Module.ctx=ctx;if(useWebGL)GLctx=ctx;Module.useWebGL=useWebGL;Browser.moduleContextCreatedCallbacks.forEach((function(callback){callback()}));Browser.init()}return ctx}),destroyContext:(function(canvas,useWebGL,setInModule){}),fullScreenHandlersInstalled:false,lockPointer:undefined,resizeCanvas:undefined,requestFullScreen:(function(lockPointer,resizeCanvas){Browser.lockPointer=lockPointer;Browser.resizeCanvas=resizeCanvas;if(typeof Browser.lockPointer==="undefined")Browser.lockPointer=true;if(typeof Browser.resizeCanvas==="undefined")Browser.resizeCanvas=false;var canvas=Module["canvas"];function fullScreenChange(){Browser.isFullScreen=false;var canvasContainer=canvas.parentNode;if((document["webkitFullScreenElement"]||document["webkitFullscreenElement"]||document["mozFullScreenElement"]||document["mozFullscreenElement"]||document["fullScreenElement"]||document["fullscreenElement"]||document["msFullScreenElement"]||document["msFullscreenElement"]||document["webkitCurrentFullScreenElement"])===canvasContainer){canvas.cancelFullScreen=document["cancelFullScreen"]||document["mozCancelFullScreen"]||document["webkitCancelFullScreen"]||document["msExitFullscreen"]||document["exitFullscreen"]||(function(){});canvas.cancelFullScreen=canvas.cancelFullScreen.bind(document);if(Browser.lockPointer)canvas.requestPointerLock();Browser.isFullScreen=true;if(Browser.resizeCanvas)Browser.setFullScreenCanvasSize()}else{canvasContainer.parentNode.insertBefore(canvas,canvasContainer);canvasContainer.parentNode.removeChild(canvasContainer);if(Browser.resizeCanvas)Browser.setWindowedCanvasSize()}if(Module["onFullScreen"])Module["onFullScreen"](Browser.isFullScreen);Browser.updateCanvasDimensions(canvas)}if(!Browser.fullScreenHandlersInstalled){Browser.fullScreenHandlersInstalled=true;document.addEventListener("fullscreenchange",fullScreenChange,false);document.addEventListener("mozfullscreenchange",fullScreenChange,false);document.addEventListener("webkitfullscreenchange",fullScreenChange,false);document.addEventListener("MSFullscreenChange",fullScreenChange,false)}var canvasContainer=document.createElement("div");canvas.parentNode.insertBefore(canvasContainer,canvas);canvasContainer.appendChild(canvas);canvasContainer.requestFullScreen=canvasContainer["requestFullScreen"]||canvasContainer["mozRequestFullScreen"]||canvasContainer["msRequestFullscreen"]||(canvasContainer["webkitRequestFullScreen"]?(function(){canvasContainer["webkitRequestFullScreen"](Element["ALLOW_KEYBOARD_INPUT"])}):null);canvasContainer.requestFullScreen()}),nextRAF:0,fakeRequestAnimationFrame:(function(func){var now=Date.now();if(Browser.nextRAF===0){Browser.nextRAF=now+1e3/60}else{while(now+2>=Browser.nextRAF){Browser.nextRAF+=1e3/60}}var delay=Math.max(Browser.nextRAF-now,0);setTimeout(func,delay)}),requestAnimationFrame:function requestAnimationFrame(func){if(typeof window==="undefined"){Browser.fakeRequestAnimationFrame(func)}else{if(!window.requestAnimationFrame){window.requestAnimationFrame=window["requestAnimationFrame"]||window["mozRequestAnimationFrame"]||window["webkitRequestAnimationFrame"]||window["msRequestAnimationFrame"]||window["oRequestAnimationFrame"]||Browser.fakeRequestAnimationFrame}window.requestAnimationFrame(func)}},safeCallback:(function(func){return(function(){if(!ABORT)return func.apply(null,arguments)})}),safeRequestAnimationFrame:(function(func){return Browser.requestAnimationFrame((function(){if(!ABORT)func()}))}),safeSetTimeout:(function(func,timeout){Module["noExitRuntime"]=true;return setTimeout((function(){if(!ABORT)func()}),timeout)}),safeSetInterval:(function(func,timeout){Module["noExitRuntime"]=true;return setInterval((function(){if(!ABORT)func()}),timeout)}),getMimetype:(function(name){return{"jpg":"image/jpeg","jpeg":"image/jpeg","png":"image/png","bmp":"image/bmp","ogg":"audio/ogg","wav":"audio/wav","mp3":"audio/mpeg"}[name.substr(name.lastIndexOf(".")+1)]}),getUserMedia:(function(func){if(!window.getUserMedia){window.getUserMedia=navigator["getUserMedia"]||navigator["mozGetUserMedia"]}window.getUserMedia(func)}),getMovementX:(function(event){return event["movementX"]||event["mozMovementX"]||event["webkitMovementX"]||0}),getMovementY:(function(event){return event["movementY"]||event["mozMovementY"]||event["webkitMovementY"]||0}),getMouseWheelDelta:(function(event){var delta=0;switch(event.type){case"DOMMouseScroll":delta=event.detail;break;case"mousewheel":delta=-event.wheelDelta;break;case"wheel":delta=event.deltaY;break;default:throw"unrecognized mouse wheel event: "+event.type}return Math.max(-1,Math.min(1,delta))}),mouseX:0,mouseY:0,mouseMovementX:0,mouseMovementY:0,touches:{},lastTouches:{},calculateMouseEvent:(function(event){if(Browser.pointerLock){if(event.type!="mousemove"&&"mozMovementX"in event){Browser.mouseMovementX=Browser.mouseMovementY=0}else{Browser.mouseMovementX=Browser.getMovementX(event);Browser.mouseMovementY=Browser.getMovementY(event)}if(typeof SDL!="undefined"){Browser.mouseX=SDL.mouseX+Browser.mouseMovementX;Browser.mouseY=SDL.mouseY+Browser.mouseMovementY}else{Browser.mouseX+=Browser.mouseMovementX;Browser.mouseY+=Browser.mouseMovementY}}else{var rect=Module["canvas"].getBoundingClientRect();var cw=Module["canvas"].width;var ch=Module["canvas"].height;var scrollX=typeof window.scrollX!=="undefined"?window.scrollX:window.pageXOffset;var scrollY=typeof window.scrollY!=="undefined"?window.scrollY:window.pageYOffset;if(event.type==="touchstart"||event.type==="touchend"||event.type==="touchmove"){var touch=event.touch;if(touch===undefined){return}var adjustedX=touch.pageX-(scrollX+rect.left);var adjustedY=touch.pageY-(scrollY+rect.top);adjustedX=adjustedX*(cw/rect.width);adjustedY=adjustedY*(ch/rect.height);var coords={x:adjustedX,y:adjustedY};if(event.type==="touchstart"){Browser.lastTouches[touch.identifier]=coords;Browser.touches[touch.identifier]=coords}else if(event.type==="touchend"||event.type==="touchmove"){Browser.lastTouches[touch.identifier]=Browser.touches[touch.identifier];Browser.touches[touch.identifier]={x:adjustedX,y:adjustedY}}return}var x=event.pageX-(scrollX+rect.left);var y=event.pageY-(scrollY+rect.top);x=x*(cw/rect.width);y=y*(ch/rect.height);Browser.mouseMovementX=x-Browser.mouseX;Browser.mouseMovementY=y-Browser.mouseY;Browser.mouseX=x;Browser.mouseY=y}}),xhrLoad:(function(url,onload,onerror){var xhr=new XMLHttpRequest;xhr.open("GET",url,true);xhr.responseType="arraybuffer";xhr.onload=function xhr_onload(){if(xhr.status==200||xhr.status==0&&xhr.response){onload(xhr.response)}else{onerror()}};xhr.onerror=onerror;xhr.send(null)}),asyncLoad:(function(url,onload,onerror,noRunDep){Browser.xhrLoad(url,(function(arrayBuffer){assert(arrayBuffer,'Loading data file "'+url+'" failed (no arrayBuffer).');onload(new Uint8Array(arrayBuffer));if(!noRunDep)removeRunDependency("al "+url)}),(function(event){if(onerror){onerror()}else{throw'Loading data file "'+url+'" failed.'}}));if(!noRunDep)addRunDependency("al "+url)}),resizeListeners:[],updateResizeListeners:(function(){var canvas=Module["canvas"];Browser.resizeListeners.forEach((function(listener){listener(canvas.width,canvas.height)}))}),setCanvasSize:(function(width,height,noUpdates){var canvas=Module["canvas"];Browser.updateCanvasDimensions(canvas,width,height);if(!noUpdates)Browser.updateResizeListeners()}),windowedWidth:0,windowedHeight:0,setFullScreenCanvasSize:(function(){if(typeof SDL!="undefined"){var flags=HEAPU32[SDL.screen+Runtime.QUANTUM_SIZE*0>>2];flags=flags|8388608;HEAP32[SDL.screen+Runtime.QUANTUM_SIZE*0>>2]=flags}Browser.updateResizeListeners()}),setWindowedCanvasSize:(function(){if(typeof SDL!="undefined"){var flags=HEAPU32[SDL.screen+Runtime.QUANTUM_SIZE*0>>2];flags=flags&~8388608;HEAP32[SDL.screen+Runtime.QUANTUM_SIZE*0>>2]=flags}Browser.updateResizeListeners()}),updateCanvasDimensions:(function(canvas,wNative,hNative){if(wNative&&hNative){canvas.widthNative=wNative;canvas.heightNative=hNative}else{wNative=canvas.widthNative;hNative=canvas.heightNative}var w=wNative;var h=hNative;if(Module["forcedAspectRatio"]&&Module["forcedAspectRatio"]>0){if(w/h<Module["forcedAspectRatio"]){w=Math.round(h*Module["forcedAspectRatio"])}else{h=Math.round(w/Module["forcedAspectRatio"])}}if((document["webkitFullScreenElement"]||document["webkitFullscreenElement"]||document["mozFullScreenElement"]||document["mozFullscreenElement"]||document["fullScreenElement"]||document["fullscreenElement"]||document["msFullScreenElement"]||document["msFullscreenElement"]||document["webkitCurrentFullScreenElement"])===canvas.parentNode&&typeof screen!="undefined"){var factor=Math.min(screen.width/w,screen.height/h);w=Math.round(w*factor);h=Math.round(h*factor)}if(Browser.resizeCanvas){if(canvas.width!=w)canvas.width=w;if(canvas.height!=h)canvas.height=h;if(typeof canvas.style!="undefined"){canvas.style.removeProperty("width");canvas.style.removeProperty("height")}}else{if(canvas.width!=wNative)canvas.width=wNative;if(canvas.height!=hNative)canvas.height=hNative;if(typeof canvas.style!="undefined"){if(w!=wNative||h!=hNative){canvas.style.setProperty("width",w+"px","important");canvas.style.setProperty("height",h+"px","important")}else{canvas.style.removeProperty("width");canvas.style.removeProperty("height")}}}})};function _time(ptr){var ret=Math.floor(Date.now()/1e3);if(ptr){HEAP32[ptr>>2]=ret}return ret}___errno_state=Runtime.staticAlloc(4);HEAP32[___errno_state>>2]=0;Module["requestFullScreen"]=function Module_requestFullScreen(lockPointer,resizeCanvas){Browser.requestFullScreen(lockPointer,resizeCanvas)};Module["requestAnimationFrame"]=function Module_requestAnimationFrame(func){Browser.requestAnimationFrame(func)};Module["setCanvasSize"]=function Module_setCanvasSize(width,height,noUpdates){Browser.setCanvasSize(width,height,noUpdates)};Module["pauseMainLoop"]=function Module_pauseMainLoop(){Browser.mainLoop.pause()};Module["resumeMainLoop"]=function Module_resumeMainLoop(){Browser.mainLoop.resume()};Module["getUserMedia"]=function Module_getUserMedia(){Browser.getUserMedia()};FS.staticInit();__ATINIT__.unshift({func:(function(){if(!Module["noFSInit"]&&!FS.init.initialized)FS.init()})});__ATMAIN__.push({func:(function(){FS.ignorePermissions=false})});__ATEXIT__.push({func:(function(){FS.quit()})});Module["FS_createFolder"]=FS.createFolder;Module["FS_createPath"]=FS.createPath;Module["FS_createDataFile"]=FS.createDataFile;Module["FS_createPreloadedFile"]=FS.createPreloadedFile;Module["FS_createLazyFile"]=FS.createLazyFile;Module["FS_createLink"]=FS.createLink;Module["FS_createDevice"]=FS.createDevice;__ATINIT__.unshift({func:(function(){TTY.init()})});__ATEXIT__.push({func:(function(){TTY.shutdown()})});TTY.utf8=new Runtime.UTF8Processor;if(ENVIRONMENT_IS_NODE){var fs=__webpack_require__(/*! fs */ "fs");NODEFS.staticInit()}STACK_BASE=STACKTOP=Runtime.alignMemory(STATICTOP);staticSealed=true;STACK_MAX=STACK_BASE+5242880;DYNAMIC_BASE=DYNAMICTOP=Runtime.alignMemory(STACK_MAX);assert(DYNAMIC_BASE<TOTAL_MEMORY,"TOTAL_MEMORY not big enough for stack");var cttz_i8=allocate([8,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,6,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,7,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,6,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0],"i8",ALLOC_DYNAMIC);var Math_min=Math.min;function asmPrintInt(x,y){Module.print("int "+x+","+y)}function asmPrintFloat(x,y){Module.print("float "+x+","+y)}var asm=(function(global,env,buffer) {
// EMSCRIPTEN_START_ASM
"use asm";var a=new global.Int8Array(buffer);var b=new global.Int16Array(buffer);var c=new global.Int32Array(buffer);var d=new global.Uint8Array(buffer);var e=new global.Uint16Array(buffer);var f=new global.Uint32Array(buffer);var g=new global.Float32Array(buffer);var h=new global.Float64Array(buffer);var i=env.STACKTOP|0;var j=env.STACK_MAX|0;var k=env.tempDoublePtr|0;var l=env.ABORT|0;var m=env.cttz_i8|0;var n=env.ctlz_i8|0;var o=0;var p=0;var q=0;var r=0;var s=+env.NaN,t=+env.Infinity;var u=0,v=0,w=0,x=0,y=0.0,z=0,A=0,B=0,C=0.0;var D=0;var E=0;var F=0;var G=0;var H=0;var I=0;var J=0;var K=0;var L=0;var M=0;var N=global.Math.floor;var O=global.Math.abs;var P=global.Math.sqrt;var Q=global.Math.pow;var R=global.Math.cos;var S=global.Math.sin;var T=global.Math.tan;var U=global.Math.acos;var V=global.Math.asin;var W=global.Math.atan;var X=global.Math.atan2;var Y=global.Math.exp;var Z=global.Math.log;var _=global.Math.ceil;var $=global.Math.imul;var aa=env.abort;var ba=env.assert;var ca=env.asmPrintInt;var da=env.asmPrintFloat;var ea=env.min;var fa=env._fflush;var ga=env._abort;var ha=env.___setErrNo;var ia=env._llvm_stacksave;var ja=env._sbrk;var ka=env._time;var la=env._abs;var ma=env._emscripten_memcpy_big;var na=env._llvm_stackrestore;var oa=env._sysconf;var pa=env.___errno_location;var qa=0.0;
// EMSCRIPTEN_START_FUNCS
function ra(a){a=a|0;var b=0;b=i;i=i+a|0;i=i+7&-8;return b|0}function sa(){return i|0}function ta(a){a=a|0;i=a}function ua(a,b){a=a|0;b=b|0;if((o|0)==0){o=a;p=b}}function va(b){b=b|0;a[k>>0]=a[b>>0];a[k+1>>0]=a[b+1>>0];a[k+2>>0]=a[b+2>>0];a[k+3>>0]=a[b+3>>0]}function wa(b){b=b|0;a[k>>0]=a[b>>0];a[k+1>>0]=a[b+1>>0];a[k+2>>0]=a[b+2>>0];a[k+3>>0]=a[b+3>>0];a[k+4>>0]=a[b+4>>0];a[k+5>>0]=a[b+5>>0];a[k+6>>0]=a[b+6>>0];a[k+7>>0]=a[b+7>>0]}function xa(a){a=a|0;D=a}function ya(){return D|0}function za(a){a=a|0;var b=0,d=0;b=i;i=i+16|0;d=b;c[d>>2]=a;a=($(1664525,c[d>>2]|0)|0)+1013904223|0;i=b;return a|0}function Aa(a){a=a|0;var b=0,d=0;b=i;i=i+16|0;d=b;c[d>>2]=a;a=32-(We(c[d>>2]|0)|0)-1&65535;i=b;return a|0}function Ba(a){a=a|0;var b=0,d=0;b=i;i=i+16|0;d=b;c[d>>2]=a;if((c[d>>2]|0)<=0){a=0}else{a=(Aa(c[d>>2]|0)|0)<<16>>16}i=b;return a&65535|0}function Ca(d,e,f,g,h,j,k,l,m){d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;m=m|0;var n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0;q=i;i=i+80|0;H=q+8|0;D=q+44|0;B=q+24|0;z=q+28|0;o=q+12|0;A=q+40|0;u=q+48|0;G=q+56|0;F=q+64|0;n=q+32|0;p=q+68|0;w=q+4|0;C=q;E=q+36|0;v=q+16|0;x=q+20|0;y=q+52|0;s=q+72|0;t=q+74|0;r=q+60|0;c[H>>2]=d;c[D>>2]=e;c[B>>2]=f;c[z>>2]=g;c[o>>2]=h;c[A>>2]=j;c[u>>2]=k;c[G>>2]=l;c[F>>2]=m;c[v>>2]=c[(c[H>>2]|0)+24>>2];c[p>>2]=$(c[u>>2]|0,c[(c[H>>2]|0)+36>>2]|0)|0;c[w>>2]=$(c[u>>2]|0,b[(c[v>>2]|0)+(c[A>>2]<<1)>>1]|0)|0;if((c[G>>2]|0)!=1){if((c[w>>2]|0)<((c[p>>2]|0)/(c[G>>2]|0)|0|0)){m=c[w>>2]|0}else{m=(c[p>>2]|0)/(c[G>>2]|0)|0}c[w>>2]=m}if((c[F>>2]|0)!=0){c[w>>2]=0;c[A>>2]=0;c[o>>2]=0}c[C>>2]=c[B>>2];c[E>>2]=(c[D>>2]|0)+(($(c[u>>2]|0,b[(c[v>>2]|0)+(c[o>>2]<<1)>>1]|0)|0)<<1);c[n>>2]=0;while(1){if((c[n>>2]|0)>=($(c[u>>2]|0,b[(c[v>>2]|0)+(c[o>>2]<<1)>>1]|0)|0)){break}H=c[C>>2]|0;c[C>>2]=H+4;c[H>>2]=0;c[n>>2]=(c[n>>2]|0)+1}c[n>>2]=c[o>>2];while(1){if((c[n>>2]|0)>=(c[A>>2]|0)){break}c[x>>2]=$(c[u>>2]|0,b[(c[v>>2]|0)+(c[n>>2]<<1)>>1]|0)|0;c[y>>2]=$(c[u>>2]|0,b[(c[v>>2]|0)+((c[n>>2]|0)+1<<1)>>1]|0)|0;b[t>>1]=(b[(c[z>>2]|0)+(c[n>>2]<<1)>>1]|0)+(((a[14464+(c[n>>2]|0)>>0]&65535)<<6&65535)<<16>>16);c[r>>2]=16-(b[t>>1]>>10);if((c[r>>2]|0)>31){c[r>>2]=0;b[s>>1]=0}else{b[s>>1]=Da(b[t>>1]&1023)|0}if((c[r>>2]|0)<0){if((c[r>>2]|0)<-2){b[s>>1]=32767;c[r>>2]=-2}do{d=c[E>>2]|0;c[E>>2]=d+2;d=$(b[d>>1]|0,b[s>>1]|0)|0;d=d<<0-(c[r>>2]|0);H=c[C>>2]|0;c[C>>2]=H+4;c[H>>2]=d;H=(c[x>>2]|0)+1|0;c[x>>2]=H}while((H|0)<(c[y>>2]|0))}else{do{d=c[E>>2]|0;c[E>>2]=d+2;d=$(b[d>>1]|0,b[s>>1]|0)|0;d=d>>c[r>>2];H=c[C>>2]|0;c[C>>2]=H+4;c[H>>2]=d;H=(c[x>>2]|0)+1|0;c[x>>2]=H}while((H|0)<(c[y>>2]|0))}c[n>>2]=(c[n>>2]|0)+1}Xe((c[B>>2]|0)+(c[w>>2]<<2)|0,0,(c[p>>2]|0)-(c[w>>2]|0)<<2|0)|0;i=q;return}function Da(a){a=a|0;var c=0,d=0,f=0;c=i;i=i+16|0;f=c+2|0;d=c;b[f>>1]=a;b[d>>1]=e[f>>1]<<4;a=(16383+((($(b[d>>1]|0,(22804+((($(b[d>>1]|0,(14819+(((b[d>>1]|0)*10204>>15&65535)<<16>>16)&65535)<<16>>16)|0)>>15&65535)<<16>>16)&65535)<<16>>16)|0)>>15&65535)<<16>>16)&65535)<<16>>16;i=c;return a|0}function Ea(a,e,f,g,h,j,k,l,m,n,o,p,q){a=a|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;m=m|0;n=n|0;o=o|0;p=p|0;q=q|0;var r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0;N=i;i=i+128|0;H=N+56|0;F=N+84|0;x=N+40|0;A=N+44|0;w=N+4|0;r=N+16|0;W=N+20|0;V=N+24|0;M=N+28|0;Q=N+72|0;P=N+80|0;R=N+88|0;J=N+96|0;y=N+48|0;v=N+52|0;t=N+100|0;z=N+60|0;u=N+64|0;B=N+104|0;D=N+106|0;S=N+68|0;E=N+32|0;T=N+36|0;U=N+76|0;I=N;s=N+110|0;O=N+112|0;K=N+92|0;C=N+108|0;G=N+12|0;L=N+8|0;c[H>>2]=a;c[F>>2]=e;c[x>>2]=f;c[A>>2]=g;c[w>>2]=h;c[r>>2]=j;c[W>>2]=k;c[V>>2]=l;c[M>>2]=m;c[Q>>2]=n;c[P>>2]=o;c[R>>2]=p;c[J>>2]=q;c[v>>2]=c[W>>2];while(1){if((c[v>>2]|0)>=(c[V>>2]|0)){break}c[u>>2]=(b[(c[(c[H>>2]|0)+24>>2]|0)+((c[v>>2]|0)+1<<1)>>1]|0)-(b[(c[(c[H>>2]|0)+24>>2]|0)+(c[v>>2]<<1)>>1]|0);W=Fa(1+(c[(c[R>>2]|0)+(c[v>>2]<<2)>>2]|0)|0,(b[(c[(c[H>>2]|0)+24>>2]|0)+((c[v>>2]|0)+1<<1)>>1]|0)-(b[(c[(c[H>>2]|0)+24>>2]|0)+(c[v>>2]<<1)>>1]|0)|0)|0;c[S>>2]=W>>>(c[A>>2]|0);c[T>>2]=(Ga(0-(((c[S>>2]&65535)<<7&65535)<<16>>16)&65535)|0)>>1;b[B>>1]=(((32767<(c[T>>2]|0)?32767:c[T>>2]|0)>>16&65535)<<16>>16<<14<<1)+(((32767<(c[T>>2]|0)?32767:c[T>>2]|0)&65535&65535)<<14>>15);c[U>>2]=c[u>>2]<<c[A>>2];c[E>>2]=(Aa(c[U>>2]|0)|0)<<16>>16>>1;c[U>>2]=c[U>>2]<<(7-(c[E>>2]|0)<<1);b[D>>1]=lc(c[U>>2]|0)|0;c[y>>2]=0;do{c[G>>2]=0;W=$(c[y>>2]|0,c[(c[H>>2]|0)+8>>2]|0)|0;b[s>>1]=b[(c[Q>>2]|0)+(W+(c[v>>2]|0)<<1)>>1]|0;W=$(c[y>>2]|0,c[(c[H>>2]|0)+8>>2]|0)|0;b[O>>1]=b[(c[P>>2]|0)+(W+(c[v>>2]|0)<<1)>>1]|0;if((c[w>>2]|0)==1){if((b[s>>1]|0)>(b[(c[Q>>2]|0)+((c[(c[H>>2]|0)+8>>2]|0)+(c[v>>2]|0)<<1)>>1]|0)){q=b[s>>1]|0}else{q=b[(c[Q>>2]|0)+((c[(c[H>>2]|0)+8>>2]|0)+(c[v>>2]|0)<<1)>>1]|0}b[s>>1]=q<<16>>16;if((b[O>>1]|0)>(b[(c[P>>2]|0)+((c[(c[H>>2]|0)+8>>2]|0)+(c[v>>2]|0)<<1)>>1]|0)){q=b[O>>1]|0}else{q=b[(c[P>>2]|0)+((c[(c[H>>2]|0)+8>>2]|0)+(c[v>>2]|0)<<1)>>1]|0}b[O>>1]=q<<16>>16}W=$(c[y>>2]|0,c[(c[H>>2]|0)+8>>2]|0)|0;c[K>>2]=(b[(c[M>>2]|0)+(W+(c[v>>2]|0)<<1)>>1]|0)-(((b[s>>1]|0)<(b[O>>1]|0)?b[s>>1]|0:b[O>>1]|0)<<16>>16);c[K>>2]=0>(c[K>>2]|0)?0:c[K>>2]|0;if((c[K>>2]|0)<16384){c[L>>2]=(Ga(0-((c[K>>2]&65535)<<16>>16)&65535)|0)>>1;b[C>>1]=(16383<(c[L>>2]|0)?16383:c[L>>2]|0)<<1}else{b[C>>1]=0}if((c[A>>2]|0)==3){if(23169<(b[C>>1]|0)){q=23169}else{q=b[C>>1]|0}b[C>>1]=((q&65535)<<16>>16)*23170>>14}b[C>>1]=((b[B>>1]|0)<(b[C>>1]|0)?b[B>>1]|0:b[C>>1]|0)<<16>>16>>1;W=($(b[D>>1]|0,b[C>>1]|0)|0)>>15;b[C>>1]=W>>c[E>>2];W=(c[F>>2]|0)+(($(c[y>>2]|0,c[r>>2]|0)|0)<<1)|0;c[I>>2]=W+(b[(c[(c[H>>2]|0)+24>>2]|0)+(c[v>>2]<<1)>>1]<<c[A>>2]<<1);c[z>>2]=0;while(1){if((c[z>>2]|0)>=(1<<c[A>>2]|0)){break}W=$(c[v>>2]|0,c[w>>2]|0)|0;if((d[(c[x>>2]|0)+(W+(c[y>>2]|0))>>0]&1<<c[z>>2]|0)==0){c[t>>2]=0;while(1){if((c[t>>2]|0)>=(c[u>>2]|0)){break}c[J>>2]=za(c[J>>2]|0)|0;W=b[C>>1]|0;b[(c[I>>2]|0)+((c[t>>2]<<c[A>>2])+(c[z>>2]|0)<<1)>>1]=(c[J>>2]&32768|0)!=0?W:0-W|0;c[t>>2]=(c[t>>2]|0)+1}c[G>>2]=1}c[z>>2]=(c[z>>2]|0)+1}if((c[G>>2]|0)!=0){Oc(c[I>>2]|0,c[u>>2]<<c[A>>2],32767)}W=(c[y>>2]|0)+1|0;c[y>>2]=W}while((W|0)<(c[w>>2]|0));c[v>>2]=(c[v>>2]|0)+1}i=N;return}function Fa(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;f=i;i=i+16|0;e=f+4|0;d=f;c[e>>2]=a;c[d>>2]=b;i=f;return((c[e>>2]|0)>>>0)/((c[d>>2]|0)>>>0)|0|0}function Ga(a){a=a|0;var d=0,e=0,f=0,g=0,h=0;d=i;i=i+16|0;e=d+4|0;g=d+10|0;f=d;h=d+8|0;b[g>>1]=a;c[f>>2]=b[g>>1]>>10;if((c[f>>2]|0)>14){c[e>>2]=2130706432;h=c[e>>2]|0;i=d;return h|0}if((c[f>>2]|0)<-15){c[e>>2]=0;h=c[e>>2]|0;i=d;return h|0}b[h>>1]=Da((b[g>>1]|0)-(((c[f>>2]&65535)<<10&65535)<<16>>16)&65535)|0;g=b[h>>1]|0;a=0-(c[f>>2]|0)-2|0;if((0-(c[f>>2]|0)-2|0)>0){f=g>>a}else{f=g<<0-a}c[e>>2]=f;h=c[e>>2]|0;i=d;return h|0}function Ha(a,d,e){a=a|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0;k=i;i=i+32|0;l=k+8|0;h=k+16|0;f=k+20|0;j=k+24|0;g=k+4|0;m=k;n=k+12|0;c[l>>2]=a;c[h>>2]=d;c[f>>2]=e;c[h>>2]=c[h>>2]>>1;c[j>>2]=0;while(1){if((c[j>>2]|0)>=(c[f>>2]|0)){break}c[g>>2]=0;while(1){if((c[g>>2]|0)>=(c[h>>2]|0)){break}a=$(c[f>>2]<<1,c[g>>2]|0)|0;c[m>>2]=(b[(c[l>>2]|0)+(a+(c[j>>2]|0)<<1)>>1]|0)*23170;a=$(c[f>>2]|0,(c[g>>2]<<1)+1|0)|0;c[n>>2]=(b[(c[l>>2]|0)+(a+(c[j>>2]|0)<<1)>>1]|0)*23170;a=$(c[f>>2]<<1,c[g>>2]|0)|0;b[(c[l>>2]|0)+(a+(c[j>>2]|0)<<1)>>1]=(c[m>>2]|0)+(c[n>>2]|0)+16384>>15;a=$(c[f>>2]|0,(c[g>>2]<<1)+1|0)|0;b[(c[l>>2]|0)+(a+(c[j>>2]|0)<<1)>>1]=(c[m>>2]|0)-(c[n>>2]|0)+16384>>15;c[g>>2]=(c[g>>2]|0)+1}c[j>>2]=(c[j>>2]|0)+1}i=k;return}function Ia(e,f,g,h,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y){e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;m=m|0;n=n|0;o=o|0;p=p|0;q=q|0;r=r|0;s=s|0;t=t|0;u=u|0;v=v|0;w=w|0;x=x|0;y=y|0;var z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ja=0,ka=0,la=0,ma=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0;D=i;i=i+240|0;xa=D+96|0;ea=D+92|0;ha=D+84|0;Y=D+200|0;wa=D+224|0;ba=D+216|0;K=D+20|0;ya=D+24|0;la=D+28|0;za=D+32|0;U=D+36|0;E=D+40|0;G=D+44|0;da=D+48|0;ta=D+52|0;ra=D+56|0;va=D+60|0;z=D+64|0;sa=D+68|0;B=D+72|0;F=D+196|0;ka=D+204|0;P=D+212|0;Z=D+220|0;oa=D+228|0;X=D+232|0;V=D+100|0;O=D+104|0;T=D+108|0;fa=D+112|0;I=D+116|0;R=D+120|0;ca=D+124|0;qa=D+128|0;C=D+168|0;ua=D+172|0;ja=D+176|0;S=D+180|0;ma=D+184|0;Q=D+188|0;aa=D+16|0;_=D+8|0;W=D;J=D+12|0;L=D+4|0;pa=D+192|0;N=D+76|0;M=D+80|0;H=D+208|0;ga=D+88|0;c[xa>>2]=e;c[ea>>2]=f;c[ha>>2]=g;c[Y>>2]=h;c[wa>>2]=j;c[ba>>2]=k;c[K>>2]=l;c[ya>>2]=m;c[la>>2]=n;c[za>>2]=o;c[U>>2]=p;c[E>>2]=q;c[G>>2]=r;c[da>>2]=s;c[ta>>2]=t;c[ra>>2]=u;c[va>>2]=v;c[z>>2]=w;c[sa>>2]=x;c[B>>2]=y;c[P>>2]=c[(c[ea>>2]|0)+24>>2];c[fa>>2]=1;c[I>>2]=(c[ba>>2]|0)!=0?2:1;c[ca>>2]=((c[xa>>2]|0)!=0^1)&1;c[O>>2]=1<<c[z>>2];c[V>>2]=(c[za>>2]|0)!=0?c[O>>2]|0:1;c[R>>2]=$(c[O>>2]|0,b[(c[P>>2]|0)+(c[ha>>2]<<1)>>1]|0)|0;f=$(c[O>>2]|0,b[(c[P>>2]|0)+((c[(c[ea>>2]|0)+8>>2]|0)-1<<1)>>1]|0)|0;f=$(c[I>>2]|0,f-(c[R>>2]|0)|0)|0;c[C>>2]=ia()|0;e=i;i=i+((2*f|0)+15&-16)|0;c[Z>>2]=e;e=(c[Z>>2]|0)+(($(c[O>>2]|0,b[(c[P>>2]|0)+((c[(c[ea>>2]|0)+8>>2]|0)-1<<1)>>1]|0)|0)<<1)|0;c[oa>>2]=e+(0-(c[R>>2]|0)<<1);c[X>>2]=(c[wa>>2]|0)+(($(c[O>>2]|0,b[(c[P>>2]|0)+((c[(c[ea>>2]|0)+8>>2]|0)-1<<1)>>1]|0)|0)<<1);c[T>>2]=0;c[qa+32>>2]=c[ya>>2];c[qa+24>>2]=c[va>>2];c[qa>>2]=c[xa>>2];c[qa+12>>2]=c[G>>2];c[qa+4>>2]=c[ea>>2];c[qa+36>>2]=c[c[B>>2]>>2];c[qa+16>>2]=c[U>>2];c[F>>2]=c[ha>>2];while(1){if((c[F>>2]|0)>=(c[Y>>2]|0)){break}c[Q>>2]=-1;c[W>>2]=0;c[qa+8>>2]=c[F>>2];c[pa>>2]=(c[F>>2]|0)==((c[Y>>2]|0)-1|0)&1;c[aa>>2]=(c[wa>>2]|0)+(($(c[O>>2]|0,b[(c[P>>2]|0)+(c[F>>2]<<1)>>1]|0)|0)<<1);if((c[ba>>2]|0)!=0){c[_>>2]=(c[ba>>2]|0)+(($(c[O>>2]|0,b[(c[P>>2]|0)+(c[F>>2]<<1)>>1]|0)|0)<<1)}else{c[_>>2]=0}za=$(c[O>>2]|0,b[(c[P>>2]|0)+((c[F>>2]|0)+1<<1)>>1]|0)|0;c[S>>2]=za-($(c[O>>2]|0,b[(c[P>>2]|0)+(c[F>>2]<<1)>>1]|0)|0);c[ua>>2]=Gb(c[va>>2]|0)|0;if((c[F>>2]|0)!=(c[ha>>2]|0)){c[ra>>2]=(c[ra>>2]|0)-(c[ua>>2]|0)}c[ka>>2]=(c[ta>>2]|0)-(c[ua>>2]|0)-1;c[qa+28>>2]=c[ka>>2];if((c[F>>2]|0)<=((c[sa>>2]|0)-1|0)){if(3<((c[sa>>2]|0)-(c[F>>2]|0)|0)){g=3}else{g=(c[sa>>2]|0)-(c[F>>2]|0)|0}c[ma>>2]=Ja(c[ra>>2]|0,g)|0;if(((c[ka>>2]|0)+1|0)<((c[(c[la>>2]|0)+(c[F>>2]<<2)>>2]|0)+(c[ma>>2]|0)|0)){g=(c[ka>>2]|0)+1|0}else{g=(c[(c[la>>2]|0)+(c[F>>2]<<2)>>2]|0)+(c[ma>>2]|0)|0}do{if(16383>=(g|0)){if(((c[ka>>2]|0)+1|0)<((c[(c[la>>2]|0)+(c[F>>2]<<2)>>2]|0)+(c[ma>>2]|0)|0)){g=(c[ka>>2]|0)+1|0;break}else{g=(c[(c[la>>2]|0)+(c[F>>2]<<2)>>2]|0)+(c[ma>>2]|0)|0;break}}else{g=16383}}while(0);do{if(0<=(g|0)){if(((c[ka>>2]|0)+1|0)<((c[(c[la>>2]|0)+(c[F>>2]<<2)>>2]|0)+(c[ma>>2]|0)|0)){g=(c[ka>>2]|0)+1|0}else{g=(c[(c[la>>2]|0)+(c[F>>2]<<2)>>2]|0)+(c[ma>>2]|0)|0}if(16383>=(g|0)){if(((c[ka>>2]|0)+1|0)<((c[(c[la>>2]|0)+(c[F>>2]<<2)>>2]|0)+(c[ma>>2]|0)|0)){g=(c[ka>>2]|0)+1|0;break}else{g=(c[(c[la>>2]|0)+(c[F>>2]<<2)>>2]|0)+(c[ma>>2]|0)|0;break}}else{g=16383}}else{g=0}}while(0);c[ja>>2]=g}else{c[ja>>2]=0}do{if((c[ca>>2]|0)!=0?(za=$(c[O>>2]|0,b[(c[P>>2]|0)+(c[F>>2]<<1)>>1]|0)|0,(za-(c[S>>2]|0)|0)>=($(c[O>>2]|0,b[(c[P>>2]|0)+(c[ha>>2]<<1)>>1]|0)|0)):0){if((c[fa>>2]|0)==0?(c[T>>2]|0)!=0:0){break}c[T>>2]=c[F>>2]}}while(0);c[W>>2]=c[(c[da>>2]|0)+(c[F>>2]<<2)>>2];c[qa+20>>2]=c[W>>2];if((c[F>>2]|0)>=(c[(c[ea>>2]|0)+12>>2]|0)){c[aa>>2]=c[Z>>2];if((c[ba>>2]|0)!=0){c[_>>2]=c[Z>>2]}c[X>>2]=0}if((c[F>>2]|0)==((c[Y>>2]|0)-1|0)){c[X>>2]=0}do{if((c[T>>2]|0)!=0){if(((c[U>>2]|0)==3?(c[V>>2]|0)<=1:0)?(c[W>>2]|0)>=0:0){A=51;break}za=$(c[O>>2]|0,b[(c[P>>2]|0)+(c[T>>2]<<1)>>1]|0)|0;if(0>(za-(c[R>>2]|0)-(c[S>>2]|0)|0)){g=0}else{g=$(c[O>>2]|0,b[(c[P>>2]|0)+(c[T>>2]<<1)>>1]|0)|0;g=g-(c[R>>2]|0)-(c[S>>2]|0)|0}c[Q>>2]=g;c[N>>2]=c[T>>2];do{ya=c[O>>2]|0;za=(c[N>>2]|0)+ -1|0;c[N>>2]=za;za=$(ya,b[(c[P>>2]|0)+(za<<1)>>1]|0)|0}while((za|0)>((c[Q>>2]|0)+(c[R>>2]|0)|0));c[M>>2]=(c[T>>2]|0)-1;do{ya=c[O>>2]|0;za=(c[M>>2]|0)+1|0;c[M>>2]=za;za=$(ya,b[(c[P>>2]|0)+(za<<1)>>1]|0)|0}while((za|0)<((c[Q>>2]|0)+(c[R>>2]|0)+(c[S>>2]|0)|0));c[L>>2]=0;c[J>>2]=0;c[H>>2]=c[N>>2];do{za=($(c[H>>2]|0,c[I>>2]|0)|0)+0|0;c[J>>2]=c[J>>2]|d[(c[K>>2]|0)+za>>0];za=$(c[H>>2]|0,c[I>>2]|0)|0;c[L>>2]=c[L>>2]|d[(c[K>>2]|0)+(za+(c[I>>2]|0)-1)>>0];za=(c[H>>2]|0)+1|0;c[H>>2]=za}while((za|0)<(c[M>>2]|0))}else{A=51}}while(0);if((A|0)==51){A=0;za=(1<<c[V>>2])-1|0;c[L>>2]=za;c[J>>2]=za}a:do{if(((c[E>>2]|0)!=0?(c[F>>2]|0)==(c[G>>2]|0):0)?(c[E>>2]=0,(c[ca>>2]|0)!=0):0){c[ga>>2]=0;while(1){za=$(c[O>>2]|0,b[(c[P>>2]|0)+(c[F>>2]<<1)>>1]|0)|0;if((c[ga>>2]|0)>=(za-(c[R>>2]|0)|0)){break a}b[(c[Z>>2]|0)+(c[ga>>2]<<1)>>1]=(b[(c[Z>>2]|0)+(c[ga>>2]<<1)>>1]|0)+(b[(c[oa>>2]|0)+(c[ga>>2]<<1)>>1]|0)>>1;c[ga>>2]=(c[ga>>2]|0)+1}}}while(0);if((c[E>>2]|0)!=0){if((c[Q>>2]|0)!=-1){g=(c[Z>>2]|0)+(c[Q>>2]<<1)|0}else{g=0}if((c[pa>>2]|0)!=0){y=0}else{y=(c[Z>>2]|0)+(($(c[O>>2]|0,b[(c[P>>2]|0)+(c[F>>2]<<1)>>1]|0)|0)<<1)|0;y=y+(0-(c[R>>2]|0)<<1)|0}c[J>>2]=Ka(qa,c[aa>>2]|0,c[S>>2]|0,(c[ja>>2]|0)/2|0,c[V>>2]|0,g,c[z>>2]|0,y,32767,c[X>>2]|0,c[J>>2]|0)|0;if((c[Q>>2]|0)!=-1){y=(c[oa>>2]|0)+(c[Q>>2]<<1)|0}else{y=0}if((c[pa>>2]|0)!=0){g=0}else{g=(c[oa>>2]|0)+(($(c[O>>2]|0,b[(c[P>>2]|0)+(c[F>>2]<<1)>>1]|0)|0)<<1)|0;g=g+(0-(c[R>>2]|0)<<1)|0}c[L>>2]=Ka(qa,c[_>>2]|0,c[S>>2]|0,(c[ja>>2]|0)/2|0,c[V>>2]|0,y,c[z>>2]|0,g,32767,c[X>>2]|0,c[L>>2]|0)|0}else{g=c[aa>>2]|0;if((c[_>>2]|0)!=0){if((c[Q>>2]|0)!=-1){w=(c[Z>>2]|0)+(c[Q>>2]<<1)|0}else{w=0}if((c[pa>>2]|0)!=0){y=0}else{y=(c[Z>>2]|0)+(($(c[O>>2]|0,b[(c[P>>2]|0)+(c[F>>2]<<1)>>1]|0)|0)<<1)|0;y=y+(0-(c[R>>2]|0)<<1)|0}c[J>>2]=La(qa,g,c[_>>2]|0,c[S>>2]|0,c[ja>>2]|0,c[V>>2]|0,w,c[z>>2]|0,y,c[X>>2]|0,c[J>>2]|c[L>>2])|0}else{if((c[Q>>2]|0)!=-1){w=(c[Z>>2]|0)+(c[Q>>2]<<1)|0}else{w=0}if((c[pa>>2]|0)!=0){y=0}else{y=(c[Z>>2]|0)+(($(c[O>>2]|0,b[(c[P>>2]|0)+(c[F>>2]<<1)>>1]|0)|0)<<1)|0;y=y+(0-(c[R>>2]|0)<<1)|0}c[J>>2]=Ka(qa,g,c[S>>2]|0,c[ja>>2]|0,c[V>>2]|0,w,c[z>>2]|0,y,32767,c[X>>2]|0,c[J>>2]|c[L>>2])|0}c[L>>2]=c[J>>2]}za=($(c[F>>2]|0,c[I>>2]|0)|0)+0|0;a[(c[K>>2]|0)+za>>0]=c[J>>2];za=$(c[F>>2]|0,c[I>>2]|0)|0;a[(c[K>>2]|0)+(za+(c[I>>2]|0)-1)>>0]=c[L>>2];c[ra>>2]=(c[ra>>2]|0)+((c[(c[la>>2]|0)+(c[F>>2]<<2)>>2]|0)+(c[ua>>2]|0));c[fa>>2]=(c[ja>>2]|0)>(c[S>>2]<<3|0)&1;c[F>>2]=(c[F>>2]|0)+1}c[c[B>>2]>>2]=c[qa+36>>2];na(c[C>>2]|0);i=D;return}function Ja(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;f=i;i=i+16|0;e=f+4|0;d=f;c[e>>2]=a;c[d>>2]=b;i=f;return(c[e>>2]|0)/(c[d>>2]|0)|0|0}function Ka(a,e,f,g,h,j,k,l,m,n,o){a=a|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;m=m|0;n=n|0;o=o|0;var p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0;H=i;i=i+112|0;q=H+92|0;u=H+4|0;t=H;E=H+40|0;s=H+76|0;v=H+16|0;F=H+20|0;G=H+24|0;r=H+64|0;p=H+98|0;N=H+80|0;I=H+88|0;L=H+44|0;z=H+48|0;B=H+52|0;C=H+56|0;y=H+8|0;w=H+60|0;D=H+28|0;A=H+12|0;J=H+32|0;x=H+68|0;K=H+36|0;M=H+84|0;P=H+72|0;O=H+96|0;c[u>>2]=a;c[t>>2]=e;c[E>>2]=f;c[s>>2]=g;c[v>>2]=h;c[F>>2]=j;c[G>>2]=k;c[r>>2]=l;b[p>>1]=m;c[N>>2]=n;c[I>>2]=o;c[L>>2]=c[E>>2];c[z>>2]=c[E>>2];c[C>>2]=c[v>>2];c[y>>2]=0;c[w>>2]=0;c[A>>2]=0;c[J>>2]=((c[c[u>>2]>>2]|0)!=0^1)&1;c[K>>2]=c[c[u>>2]>>2];c[M>>2]=c[(c[u>>2]|0)+20>>2];c[D>>2]=(c[C>>2]|0)==1&1;c[z>>2]=Fa(c[z>>2]|0,c[v>>2]|0)|0;if((c[E>>2]|0)==1){c[q>>2]=Ma(c[u>>2]|0,c[t>>2]|0,0,c[s>>2]|0,c[r>>2]|0)|0;a=c[q>>2]|0;i=H;return a|0}if((c[M>>2]|0)>0){c[w>>2]=c[M>>2]}a:do{if((c[N>>2]|0)!=0?(c[F>>2]|0)!=0:0){do{if((c[w>>2]|0)==0){if((c[z>>2]&1|0)==0?(c[M>>2]|0)<0:0){break}if((c[C>>2]|0)<=1){break a}}}while(0);Ze(c[N>>2]|0,c[F>>2]|0,(c[E>>2]<<1)+0|0)|0;c[F>>2]=c[N>>2]}}while(0);c[x>>2]=0;while(1){if((c[x>>2]|0)>=(c[w>>2]|0)){break}if((c[K>>2]|0)!=0){Ha(c[t>>2]|0,c[E>>2]>>c[x>>2],1<<c[x>>2])}if((c[F>>2]|0)!=0){Ha(c[F>>2]|0,c[E>>2]>>c[x>>2],1<<c[x>>2])}c[I>>2]=d[24+(c[I>>2]&15)>>0]|d[24+(c[I>>2]>>4)>>0]<<2;c[x>>2]=(c[x>>2]|0)+1}c[v>>2]=c[v>>2]>>c[w>>2];c[z>>2]=c[z>>2]<<c[w>>2];while(1){if((c[z>>2]&1|0)!=0){break}if((c[M>>2]|0)>=0){break}if((c[K>>2]|0)!=0){Ha(c[t>>2]|0,c[z>>2]|0,c[v>>2]|0)}if((c[F>>2]|0)!=0){Ha(c[F>>2]|0,c[z>>2]|0,c[v>>2]|0)}c[I>>2]=c[I>>2]|c[I>>2]<<c[v>>2];c[v>>2]=c[v>>2]<<1;c[z>>2]=c[z>>2]>>1;c[y>>2]=(c[y>>2]|0)+1;c[M>>2]=(c[M>>2]|0)+1}c[C>>2]=c[v>>2];c[B>>2]=c[z>>2];if((c[C>>2]|0)>1){if((c[K>>2]|0)!=0){Va(c[t>>2]|0,c[z>>2]>>c[w>>2],c[C>>2]<<c[w>>2],c[D>>2]|0)}if((c[F>>2]|0)!=0){Va(c[F>>2]|0,c[z>>2]>>c[w>>2],c[C>>2]<<c[w>>2],c[D>>2]|0)}}c[A>>2]=Wa(c[u>>2]|0,c[t>>2]|0,c[E>>2]|0,c[s>>2]|0,c[v>>2]|0,c[F>>2]|0,c[G>>2]|0,b[p>>1]|0,c[I>>2]|0)|0;if((c[J>>2]|0)!=0){if((c[C>>2]|0)>1){Xa(c[t>>2]|0,c[z>>2]>>c[w>>2],c[C>>2]<<c[w>>2],c[D>>2]|0)}c[z>>2]=c[B>>2];c[v>>2]=c[C>>2];c[x>>2]=0;while(1){if((c[x>>2]|0)>=(c[y>>2]|0)){break}c[v>>2]=c[v>>2]>>1;c[z>>2]=c[z>>2]<<1;c[A>>2]=c[A>>2]|(c[A>>2]|0)>>>(c[v>>2]|0);Ha(c[t>>2]|0,c[z>>2]|0,c[v>>2]|0);c[x>>2]=(c[x>>2]|0)+1}c[x>>2]=0;while(1){if((c[x>>2]|0)>=(c[w>>2]|0)){break}c[A>>2]=d[40+(c[A>>2]|0)>>0]|0;Ha(c[t>>2]|0,c[L>>2]>>c[x>>2],1<<c[x>>2]);c[x>>2]=(c[x>>2]|0)+1}c[v>>2]=c[v>>2]<<c[w>>2];b:do{if((c[r>>2]|0)!=0){b[O>>1]=mc(c[L>>2]<<22)|0;c[P>>2]=0;while(1){if((c[P>>2]|0)>=(c[L>>2]|0)){break b}a=($(b[O>>1]|0,b[(c[t>>2]|0)+(c[P>>2]<<1)>>1]|0)|0)>>15&65535;b[(c[r>>2]|0)+(c[P>>2]<<1)>>1]=a;c[P>>2]=(c[P>>2]|0)+1}}}while(0);c[A>>2]=c[A>>2]&(1<<c[v>>2])-1}c[q>>2]=c[A>>2];a=c[q>>2]|0;i=H;return a|0}function La(a,d,e,f,g,h,j,k,l,m,n){a=a|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;m=m|0;n=n|0;var o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0;G=i;i=i+160|0;A=G+84|0;u=G+128|0;t=G+64|0;s=G+76|0;x=G+72|0;L=G+36|0;C=G+40|0;D=G+44|0;E=G+48|0;q=G+52|0;F=G+56|0;J=G+108|0;W=G+116|0;X=G+124|0;v=G+132|0;w=G+148|0;o=G+150|0;y=G+144|0;z=G+88|0;B=G+92|0;H=G+96|0;M=G+100|0;I=G+32|0;K=G+28|0;V=G;S=G+24|0;N=G+104|0;U=G+60|0;R=G+112|0;P=G+68|0;Q=G+120|0;T=G+136|0;O=G+152|0;r=G+80|0;p=G+140|0;c[u>>2]=a;c[t>>2]=d;c[s>>2]=e;c[x>>2]=f;c[L>>2]=g;c[C>>2]=h;c[D>>2]=j;c[E>>2]=k;c[q>>2]=l;c[F>>2]=m;c[J>>2]=n;c[W>>2]=0;c[X>>2]=0;c[v>>2]=0;b[w>>1]=0;b[o>>1]=0;c[y>>2]=0;c[z>>2]=((c[c[u>>2]>>2]|0)!=0^1)&1;c[N>>2]=c[c[u>>2]>>2];c[U>>2]=c[(c[u>>2]|0)+24>>2];if((c[x>>2]|0)==1){c[A>>2]=Ma(c[u>>2]|0,c[t>>2]|0,c[s>>2]|0,c[L>>2]|0,c[q>>2]|0)|0;a=c[A>>2]|0;i=G;return a|0}c[S>>2]=c[J>>2];Na(c[u>>2]|0,V,c[t>>2]|0,c[s>>2]|0,c[x>>2]|0,L,c[C>>2]|0,c[C>>2]|0,c[E>>2]|0,1,J);c[v>>2]=c[V>>2];c[W>>2]=c[V+4>>2];c[X>>2]=c[V+8>>2];c[M>>2]=c[V+12>>2];c[I>>2]=c[V+16>>2];c[K>>2]=c[V+20>>2];b[w>>1]=c[W>>2];b[o>>1]=c[X>>2];do{if((c[x>>2]|0)==2){c[P>>2]=0;c[B>>2]=c[L>>2];c[H>>2]=0;c[H>>2]=(c[I>>2]|0)!=0&(c[I>>2]|0)!=16384?8:0;c[B>>2]=(c[B>>2]|0)-(c[H>>2]|0);c[R>>2]=(c[I>>2]|0)>8192&1;a=(c[u>>2]|0)+28|0;c[a>>2]=(c[a>>2]|0)-((c[K>>2]|0)+(c[H>>2]|0));c[Q>>2]=(c[R>>2]|0)!=0?c[s>>2]|0:c[t>>2]|0;c[T>>2]=(c[R>>2]|0)!=0?c[t>>2]|0:c[s>>2]|0;do{if((c[H>>2]|0)!=0){if((c[N>>2]|0)!=0){a=$(b[c[Q>>2]>>1]|0,b[(c[T>>2]|0)+2>>1]|0)|0;c[P>>2]=(a-($(b[(c[Q>>2]|0)+2>>1]|0,b[c[T>>2]>>1]|0)|0)|0)<0&1;Yb(c[U>>2]|0,c[P>>2]|0,1);break}else{c[P>>2]=Rb(c[U>>2]|0,1)|0;break}}}while(0);c[P>>2]=1-(c[P>>2]<<1);c[y>>2]=Ka(c[u>>2]|0,c[Q>>2]|0,c[x>>2]|0,c[B>>2]|0,c[C>>2]|0,c[D>>2]|0,c[E>>2]|0,c[q>>2]|0,32767,c[F>>2]|0,c[S>>2]|0)|0;a=($(0-(c[P>>2]|0)|0,b[(c[Q>>2]|0)+2>>1]|0)|0)&65535;b[c[T>>2]>>1]=a;a=($(c[P>>2]|0,b[c[Q>>2]>>1]|0)|0)&65535;b[(c[T>>2]|0)+2>>1]=a;if((c[z>>2]|0)!=0){a=($(b[w>>1]|0,b[c[t>>2]>>1]|0)|0)>>15&65535;b[c[t>>2]>>1]=a;a=($(b[w>>1]|0,b[(c[t>>2]|0)+2>>1]|0)|0)>>15&65535;b[(c[t>>2]|0)+2>>1]=a;a=($(b[o>>1]|0,b[c[s>>2]>>1]|0)|0)>>15&65535;b[c[s>>2]>>1]=a;a=($(b[o>>1]|0,b[(c[s>>2]|0)+2>>1]|0)|0)>>15&65535;b[(c[s>>2]|0)+2>>1]=a;b[O>>1]=b[c[t>>2]>>1]|0;b[c[t>>2]>>1]=(b[O>>1]|0)-(b[c[s>>2]>>1]|0);b[c[s>>2]>>1]=(b[O>>1]|0)+(b[c[s>>2]>>1]|0);b[O>>1]=b[(c[t>>2]|0)+2>>1]|0;b[(c[t>>2]|0)+2>>1]=(b[O>>1]|0)-(b[(c[s>>2]|0)+2>>1]|0);b[(c[s>>2]|0)+2>>1]=(b[O>>1]|0)+(b[(c[s>>2]|0)+2>>1]|0)}}else{N=c[L>>2]|0;if((c[L>>2]|0)>=(((c[L>>2]|0)-(c[M>>2]|0)|0)/2|0|0)){N=(N-(c[M>>2]|0)|0)/2|0}if(0<=(N|0)){N=c[L>>2]|0;if((c[L>>2]|0)>=(((c[L>>2]|0)-(c[M>>2]|0)|0)/2|0|0)){N=(N-(c[M>>2]|0)|0)/2|0}}else{N=0}c[B>>2]=N;c[H>>2]=(c[L>>2]|0)-(c[B>>2]|0);a=(c[u>>2]|0)+28|0;c[a>>2]=(c[a>>2]|0)-(c[K>>2]|0);c[r>>2]=c[(c[u>>2]|0)+28>>2];K=c[u>>2]|0;if((c[B>>2]|0)>=(c[H>>2]|0)){c[y>>2]=Ka(K,c[t>>2]|0,c[x>>2]|0,c[B>>2]|0,c[C>>2]|0,c[D>>2]|0,c[E>>2]|0,c[q>>2]|0,32767,c[F>>2]|0,c[J>>2]|0)|0;c[r>>2]=(c[B>>2]|0)-((c[r>>2]|0)-(c[(c[u>>2]|0)+28>>2]|0));if((c[r>>2]|0)>24?(c[I>>2]|0)!=0:0){c[H>>2]=(c[H>>2]|0)+((c[r>>2]|0)-24)}a=Ka(c[u>>2]|0,c[s>>2]|0,c[x>>2]|0,c[H>>2]|0,c[C>>2]|0,0,c[E>>2]|0,0,b[o>>1]|0,0,c[J>>2]>>c[C>>2])|0;c[y>>2]=c[y>>2]|a;break}else{c[y>>2]=Ka(K,c[s>>2]|0,c[x>>2]|0,c[H>>2]|0,c[C>>2]|0,0,c[E>>2]|0,0,b[o>>1]|0,0,c[J>>2]>>c[C>>2])|0;c[r>>2]=(c[H>>2]|0)-((c[r>>2]|0)-(c[(c[u>>2]|0)+28>>2]|0));if((c[r>>2]|0)>24?(c[I>>2]|0)!=16384:0){c[B>>2]=(c[B>>2]|0)+((c[r>>2]|0)-24)}a=Ka(c[u>>2]|0,c[t>>2]|0,c[x>>2]|0,c[B>>2]|0,c[C>>2]|0,c[D>>2]|0,c[E>>2]|0,c[q>>2]|0,32767,c[F>>2]|0,c[J>>2]|0)|0;c[y>>2]=c[y>>2]|a;break}}}while(0);a:do{if((c[z>>2]|0)!=0){if((c[x>>2]|0)!=2){Oa(c[t>>2]|0,c[s>>2]|0,b[w>>1]|0,c[x>>2]|0)}if((c[v>>2]|0)!=0){c[p>>2]=0;while(1){if((c[p>>2]|0)>=(c[x>>2]|0)){break a}b[(c[s>>2]|0)+(c[p>>2]<<1)>>1]=0-(b[(c[s>>2]|0)+(c[p>>2]<<1)>>1]|0);c[p>>2]=(c[p>>2]|0)+1}}}}while(0);c[A>>2]=c[y>>2];a=c[A>>2]|0;i=G;return a|0}function Ma(a,d,e,f,g){a=a|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0;q=i;i=i+48|0;r=q+4|0;j=q+16|0;l=q+36|0;s=q;k=q+32|0;h=q+40|0;n=q+44|0;o=q+24|0;m=q+20|0;u=q+8|0;t=q+12|0;p=q+28|0;c[r>>2]=a;c[j>>2]=d;c[l>>2]=e;c[s>>2]=f;c[k>>2]=g;c[h>>2]=((c[c[r>>2]>>2]|0)!=0^1)&1;c[m>>2]=c[j>>2];c[u>>2]=c[c[r>>2]>>2];c[t>>2]=c[(c[r>>2]|0)+24>>2];c[o>>2]=(c[l>>2]|0)!=0&1;c[n>>2]=0;do{c[p>>2]=0;if((c[(c[r>>2]|0)+28>>2]|0)>=8){if((c[u>>2]|0)!=0){c[p>>2]=(b[c[m>>2]>>1]|0)<0&1;Yb(c[t>>2]|0,c[p>>2]|0,1)}else{c[p>>2]=Rb(c[t>>2]|0,1)|0}a=(c[r>>2]|0)+28|0;c[a>>2]=(c[a>>2]|0)-8;c[s>>2]=(c[s>>2]|0)-8}if((c[h>>2]|0)!=0){b[c[m>>2]>>1]=(c[p>>2]|0)!=0?-16384:16384}c[m>>2]=c[l>>2];a=(c[n>>2]|0)+1|0;c[n>>2]=a}while((a|0)<(1+(c[o>>2]|0)|0));if((c[k>>2]|0)==0){i=q;return 1}b[c[k>>2]>>1]=b[c[j>>2]>>1]>>4;i=q;return 1}function Na(a,d,e,f,g,h,j,k,l,m,n){a=a|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;m=m|0;n=n|0;var o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,aa=0;u=i;i=i+160|0;V=u+72|0;v=u+56|0;G=u+4|0;F=u+52|0;y=u+140|0;r=u+68|0;C=u+20|0;U=u+24|0;aa=u+28|0;D=u+32|0;o=u+36|0;H=u+40|0;s=u+44|0;x=u+48|0;z=u+112|0;A=u+120|0;q=u+128|0;X=u+136|0;Y=u+144|0;B=u+148|0;w=u+76|0;t=u+80|0;I=u+84|0;E=u+88|0;Z=u+92|0;p=u+96|0;J=u+100|0;N=u+104|0;M=u+12|0;O=u;L=u+8|0;S=u+108|0;R=u+116|0;Q=u+60|0;P=u+124|0;T=u+16|0;_=u+64|0;W=u+132|0;c[V>>2]=a;c[v>>2]=d;c[G>>2]=e;c[F>>2]=f;c[y>>2]=g;c[r>>2]=h;c[C>>2]=j;c[U>>2]=k;c[aa>>2]=l;c[D>>2]=m;c[o>>2]=n;c[s>>2]=0;c[w>>2]=0;c[t>>2]=c[c[V>>2]>>2];c[I>>2]=c[(c[V>>2]|0)+4>>2];c[E>>2]=c[(c[V>>2]|0)+8>>2];c[Z>>2]=c[(c[V>>2]|0)+12>>2];c[p>>2]=c[(c[V>>2]|0)+24>>2];c[J>>2]=c[(c[V>>2]|0)+32>>2];c[X>>2]=(b[(c[(c[I>>2]|0)+48>>2]|0)+(c[E>>2]<<1)>>1]|0)+(c[aa>>2]<<3);if((c[D>>2]|0)!=0){n=(c[y>>2]|0)==2}else{n=0}c[Y>>2]=(c[X>>2]>>1)-(n?16:4);c[H>>2]=Qa(c[y>>2]|0,c[c[r>>2]>>2]|0,c[Y>>2]|0,c[X>>2]|0,c[D>>2]|0)|0;if((c[D>>2]|0)!=0?(c[E>>2]|0)>=(c[Z>>2]|0):0){c[H>>2]=1}if((c[t>>2]|0)!=0){c[s>>2]=Qc(c[G>>2]|0,c[F>>2]|0,c[D>>2]|0,c[y>>2]|0)|0}c[B>>2]=Gb(c[p>>2]|0)|0;do{if((c[H>>2]|0)!=1){if((c[t>>2]|0)!=0){c[s>>2]=($(c[s>>2]|0,c[H>>2]|0)|0)+8192>>14}do{if((c[D>>2]|0)!=0?(c[y>>2]|0)>2:0){c[N>>2]=3;c[M>>2]=c[s>>2];c[O>>2]=(c[H>>2]|0)/2|0;P=$(c[N>>2]|0,(c[O>>2]|0)+1|0)|0;c[L>>2]=P+(c[O>>2]|0);P=c[p>>2]|0;if((c[t>>2]|0)!=0){if((c[M>>2]|0)<=(c[O>>2]|0)){Q=$(c[N>>2]|0,c[M>>2]|0)|0}else{Q=(c[M>>2]|0)-1-(c[O>>2]|0)+($((c[O>>2]|0)+1|0,c[N>>2]|0)|0)|0}if((c[M>>2]|0)<=(c[O>>2]|0)){M=$(c[N>>2]|0,(c[M>>2]|0)+1|0)|0}else{M=(c[M>>2]|0)-(c[O>>2]|0)+($((c[O>>2]|0)+1|0,c[N>>2]|0)|0)|0}Tb(P,Q,M,c[L>>2]|0);break}c[S>>2]=Kb(P,c[L>>2]|0)|0;if((c[S>>2]|0)<($((c[O>>2]|0)+1|0,c[N>>2]|0)|0)){c[M>>2]=(c[S>>2]|0)/(c[N>>2]|0)|0}else{c[M>>2]=(c[O>>2]|0)+1+((c[S>>2]|0)-($((c[O>>2]|0)+1|0,c[N>>2]|0)|0))}if((c[M>>2]|0)<=(c[O>>2]|0)){P=$(c[N>>2]|0,c[M>>2]|0)|0}else{P=(c[M>>2]|0)-1-(c[O>>2]|0)+($((c[O>>2]|0)+1|0,c[N>>2]|0)|0)|0}if((c[M>>2]|0)<=(c[O>>2]|0)){N=$(c[N>>2]|0,(c[M>>2]|0)+1|0)|0}else{N=(c[M>>2]|0)-(c[O>>2]|0)+($((c[O>>2]|0)+1|0,c[N>>2]|0)|0)|0}Nb(c[p>>2]|0,P,N,c[L>>2]|0);c[s>>2]=c[M>>2]}else{K=31}}while(0);do{if((K|0)==31){if((c[U>>2]|0)<=1?(c[D>>2]|0)==0:0){c[R>>2]=1;c[Q>>2]=$((c[H>>2]>>1)+1|0,(c[H>>2]>>1)+1|0)|0;if((c[t>>2]|0)==0){c[T>>2]=0;c[_>>2]=Kb(c[p>>2]|0,c[Q>>2]|0)|0;if((c[_>>2]|0)<(($(c[H>>2]>>1,(c[H>>2]>>1)+1|0)|0)>>1|0)){c[s>>2]=((hc((c[_>>2]<<3)+1|0)|0)-1|0)>>>1;c[R>>2]=(c[s>>2]|0)+1;c[T>>2]=($(c[s>>2]|0,(c[s>>2]|0)+1|0)|0)>>1}else{aa=(c[H>>2]|0)+1<<1;c[s>>2]=(aa-(hc(((c[Q>>2]|0)-(c[_>>2]|0)-1<<3)+1|0)|0)|0)>>>1;c[R>>2]=(c[H>>2]|0)+1-(c[s>>2]|0);c[T>>2]=(c[Q>>2]|0)-(($((c[H>>2]|0)+1-(c[s>>2]|0)|0,(c[H>>2]|0)+2-(c[s>>2]|0)|0)|0)>>1)}Nb(c[p>>2]|0,c[T>>2]|0,(c[T>>2]|0)+(c[R>>2]|0)|0,c[Q>>2]|0);break}if((c[s>>2]|0)<=(c[H>>2]>>1|0)){K=(c[s>>2]|0)+1|0}else{K=(c[H>>2]|0)+1-(c[s>>2]|0)|0}c[R>>2]=K;if((c[s>>2]|0)<=(c[H>>2]>>1|0)){K=($(c[s>>2]|0,(c[s>>2]|0)+1|0)|0)>>1}else{K=(c[Q>>2]|0)-(($((c[H>>2]|0)+1-(c[s>>2]|0)|0,(c[H>>2]|0)+2-(c[s>>2]|0)|0)|0)>>1)|0}c[P>>2]=K;Tb(c[p>>2]|0,c[P>>2]|0,(c[P>>2]|0)+(c[R>>2]|0)|0,c[Q>>2]|0);break}K=c[p>>2]|0;if((c[t>>2]|0)!=0){Xb(K,c[s>>2]|0,(c[H>>2]|0)+1|0);break}else{c[s>>2]=Qb(K,(c[H>>2]|0)+1|0)|0;break}}}while(0);c[s>>2]=Fa(c[s>>2]<<14,c[H>>2]|0)|0;if((c[t>>2]|0)!=0?(c[D>>2]|0)!=0:0){if((c[s>>2]|0)==0){Ra(c[I>>2]|0,c[G>>2]|0,c[F>>2]|0,c[J>>2]|0,c[E>>2]|0,c[y>>2]|0);break}else{Sa(c[G>>2]|0,c[F>>2]|0,c[y>>2]|0);break}}}else{if((c[D>>2]|0)!=0){if((c[t>>2]|0)!=0){c[w>>2]=(c[s>>2]|0)>8192&1;a:do{if((c[w>>2]|0)!=0){c[W>>2]=0;while(1){if((c[W>>2]|0)>=(c[y>>2]|0)){break a}b[(c[F>>2]|0)+(c[W>>2]<<1)>>1]=0-(b[(c[F>>2]|0)+(c[W>>2]<<1)>>1]|0);c[W>>2]=(c[W>>2]|0)+1}}}while(0);Ra(c[I>>2]|0,c[G>>2]|0,c[F>>2]|0,c[J>>2]|0,c[E>>2]|0,c[y>>2]|0)}do{if((c[c[r>>2]>>2]|0)>16?(c[(c[V>>2]|0)+28>>2]|0)>16:0){D=c[p>>2]|0;if((c[t>>2]|0)!=0){Wb(D,c[w>>2]|0,2);break}else{c[w>>2]=Ob(D,2)|0;break}}else{K=65}}while(0);if((K|0)==65){c[w>>2]=0}c[s>>2]=0}}}while(0);aa=Gb(c[p>>2]|0)|0;c[q>>2]=aa-(c[B>>2]|0);aa=c[r>>2]|0;c[aa>>2]=(c[aa>>2]|0)-(c[q>>2]|0);if((c[s>>2]|0)==0){c[z>>2]=32767;c[A>>2]=0;aa=c[o>>2]|0;c[aa>>2]=c[aa>>2]&(1<<c[C>>2])-1;c[x>>2]=-16384;aa=c[w>>2]|0;a=c[v>>2]|0;c[a>>2]=aa;a=c[z>>2]|0;aa=c[v>>2]|0;aa=aa+4|0;c[aa>>2]=a;aa=c[A>>2]|0;a=c[v>>2]|0;a=a+8|0;c[a>>2]=aa;a=c[x>>2]|0;aa=c[v>>2]|0;aa=aa+12|0;c[aa>>2]=a;aa=c[s>>2]|0;a=c[v>>2]|0;a=a+16|0;c[a>>2]=aa;a=c[q>>2]|0;aa=c[v>>2]|0;aa=aa+20|0;c[aa>>2]=a;i=u;return}if((c[s>>2]|0)==16384){c[z>>2]=0;c[A>>2]=32767;aa=c[o>>2]|0;c[aa>>2]=c[aa>>2]&(1<<c[C>>2])-1<<c[C>>2];c[x>>2]=16384;aa=c[w>>2]|0;a=c[v>>2]|0;c[a>>2]=aa;a=c[z>>2]|0;aa=c[v>>2]|0;aa=aa+4|0;c[aa>>2]=a;aa=c[A>>2]|0;a=c[v>>2]|0;a=a+8|0;c[a>>2]=aa;a=c[x>>2]|0;aa=c[v>>2]|0;aa=aa+12|0;c[aa>>2]=a;aa=c[s>>2]|0;a=c[v>>2]|0;a=a+16|0;c[a>>2]=aa;a=c[q>>2]|0;aa=c[v>>2]|0;aa=aa+20|0;c[aa>>2]=a;i=u;return}else{c[z>>2]=(Ta(c[s>>2]&65535)|0)<<16>>16;c[A>>2]=(Ta(16384-(c[s>>2]|0)&65535)|0)<<16>>16;aa=((c[y>>2]|0)-1<<7&65535)<<16>>16;c[x>>2]=16384+($(aa,((Ua(c[A>>2]|0,c[z>>2]|0)|0)&65535)<<16>>16)|0)>>15;aa=c[w>>2]|0;a=c[v>>2]|0;c[a>>2]=aa;a=c[z>>2]|0;aa=c[v>>2]|0;aa=aa+4|0;c[aa>>2]=a;aa=c[A>>2]|0;a=c[v>>2]|0;a=a+8|0;c[a>>2]=aa;a=c[x>>2]|0;aa=c[v>>2]|0;aa=aa+12|0;c[aa>>2]=a;aa=c[s>>2]|0;a=c[v>>2]|0;a=a+16|0;c[a>>2]=aa;a=c[q>>2]|0;aa=c[v>>2]|0;aa=aa+20|0;c[aa>>2]=a;i=u;return}}function Oa(a,d,e,f){a=a|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0;s=i;i=i+64|0;l=s+48|0;n=s;k=s+56|0;j=s+16|0;o=s+32|0;w=s+40|0;x=s+44|0;v=s+24|0;u=s+20|0;y=s+58|0;q=s+4|0;h=s+28|0;t=s+12|0;p=s+8|0;r=s+36|0;g=s+54|0;m=s+52|0;c[l>>2]=a;c[n>>2]=d;b[k>>1]=e;c[j>>2]=f;c[w>>2]=0;c[x>>2]=0;Pa(c[n>>2]|0,c[l>>2]|0,c[n>>2]|0,c[j>>2]|0,w,x);a=($(b[k>>1]|0,(c[w>>2]>>16&65535)<<16>>16)|0)<<1;c[w>>2]=a+(($(b[k>>1]|0,c[w>>2]&65535&65535)|0)>>15);b[y>>1]=b[k>>1]>>1;a=$(b[y>>1]|0,b[y>>1]|0)|0;c[v>>2]=a+(c[x>>2]|0)-(c[w>>2]<<1);a=$(b[y>>1]|0,b[y>>1]|0)|0;c[u>>2]=a+(c[x>>2]|0)+(c[w>>2]<<1);if((c[u>>2]|0)>=161061?(c[v>>2]|0)>=161061:0){c[q>>2]=(Aa(c[v>>2]|0)|0)<<16>>16>>1;c[h>>2]=(Aa(c[u>>2]|0)|0)<<16>>16>>1;v=c[v>>2]|0;f=(c[q>>2]|0)-7<<1;if(((c[q>>2]|0)-7<<1|0)>0){f=v>>f}else{f=v<<0-f}c[t>>2]=f;c[p>>2]=(lc(c[t>>2]|0)|0)<<16>>16;f=c[u>>2]|0;u=(c[h>>2]|0)-7<<1;if(((c[h>>2]|0)-7<<1|0)>0){u=f>>u}else{u=f<<0-u}c[t>>2]=u;c[r>>2]=(lc(c[t>>2]|0)|0)<<16>>16;if((c[q>>2]|0)<7){c[q>>2]=7}if((c[h>>2]|0)<7){c[h>>2]=7}c[o>>2]=0;while(1){if((c[o>>2]|0)>=(c[j>>2]|0)){break}b[m>>1]=16384+($(b[k>>1]|0,b[(c[l>>2]|0)+(c[o>>2]<<1)>>1]|0)|0)>>15;b[g>>1]=b[(c[n>>2]|0)+(c[o>>2]<<1)>>1]|0;y=$((c[p>>2]&65535)<<16>>16,((b[m>>1]|0)-(b[g>>1]|0)&65535)<<16>>16)|0;b[(c[l>>2]|0)+(c[o>>2]<<1)>>1]=y+(1<<(c[q>>2]|0)+1>>1)>>(c[q>>2]|0)+1;y=$((c[r>>2]&65535)<<16>>16,((b[m>>1]|0)+(b[g>>1]|0)&65535)<<16>>16)|0;b[(c[n>>2]|0)+(c[o>>2]<<1)>>1]=y+(1<<(c[h>>2]|0)+1>>1)>>(c[h>>2]|0)+1;c[o>>2]=(c[o>>2]|0)+1}i=s;return}Ze(c[n>>2]|0,c[l>>2]|0,(c[j>>2]<<1)+0|0)|0;i=s;return}function Pa(a,d,e,f,g,h){a=a|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0;m=i;i=i+48|0;j=m+28|0;r=m+16|0;s=m+4|0;p=m+8|0;q=m+32|0;l=m;o=m+12|0;n=m+24|0;k=m+20|0;c[j>>2]=a;c[r>>2]=d;c[s>>2]=e;c[p>>2]=f;c[q>>2]=g;c[l>>2]=h;c[n>>2]=0;c[k>>2]=0;c[o>>2]=0;while(1){h=c[n>>2]|0;if((c[o>>2]|0)>=(c[p>>2]|0)){break}c[n>>2]=h+($(b[(c[j>>2]|0)+(c[o>>2]<<1)>>1]|0,b[(c[r>>2]|0)+(c[o>>2]<<1)>>1]|0)|0);c[k>>2]=(c[k>>2]|0)+($(b[(c[j>>2]|0)+(c[o>>2]<<1)>>1]|0,b[(c[s>>2]|0)+(c[o>>2]<<1)>>1]|0)|0);c[o>>2]=(c[o>>2]|0)+1}c[c[q>>2]>>2]=h;c[c[l>>2]>>2]=c[k>>2];i=m;return}function Qa(a,d,e,f,g){a=a|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;h=i;i=i+32|0;p=h+4|0;m=h+16|0;o=h+8|0;n=h+20|0;q=h+28|0;k=h;j=h+12|0;l=h+24|0;c[p>>2]=a;c[m>>2]=d;c[o>>2]=e;c[n>>2]=f;c[q>>2]=g;c[l>>2]=(c[p>>2]<<1)-1;if((c[q>>2]|0)!=0?(c[p>>2]|0)==2:0){c[l>>2]=(c[l>>2]|0)+ -1}q=(c[m>>2]|0)+($(c[l>>2]|0,c[o>>2]|0)|0)|0;c[j>>2]=Ja(q,c[l>>2]|0)|0;if(((c[m>>2]|0)-(c[n>>2]|0)-32|0)<(c[j>>2]|0)){l=(c[m>>2]|0)-(c[n>>2]|0)-32|0}else{l=c[j>>2]|0}c[j>>2]=l;c[j>>2]=64<(c[j>>2]|0)?64:c[j>>2]|0;if((c[j>>2]|0)<4){c[k>>2]=1;q=c[k>>2]|0;i=h;return q|0}else{c[k>>2]=b[8+((c[j>>2]&7)<<1)>>1]>>14-(c[j>>2]>>3);c[k>>2]=(c[k>>2]|0)+1>>1<<1;q=c[k>>2]|0;i=h;return q|0}return 0}function Ra(a,d,e,f,g,h){a=a|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0;u=i;i=i+64|0;y=u+20|0;l=u+8|0;n=u+16|0;x=u+32|0;z=u+28|0;p=u;w=u+12|0;q=u+24|0;j=u+38|0;k=u+46|0;s=u+44|0;r=u+42|0;t=u+40|0;v=u+4|0;o=u+36|0;m=u+48|0;c[y>>2]=a;c[l>>2]=d;c[n>>2]=e;c[x>>2]=f;c[z>>2]=g;c[p>>2]=h;c[w>>2]=c[z>>2];h=c[w>>2]|0;if((c[(c[x>>2]|0)+(c[w>>2]<<2)>>2]|0)>(c[(c[x>>2]|0)+((c[w>>2]|0)+(c[(c[y>>2]|0)+8>>2]|0)<<2)>>2]|0)){h=c[(c[x>>2]|0)+(h<<2)>>2]|0}else{h=c[(c[x>>2]|0)+(h+(c[(c[y>>2]|0)+8>>2]|0)<<2)>>2]|0}c[v>>2]=((Ba(h)|0)<<16>>16)-13;g=c[(c[x>>2]|0)+(c[w>>2]<<2)>>2]|0;h=c[v>>2]|0;if((c[v>>2]|0)>0){h=g>>h}else{h=g<<0-h}b[s>>1]=h;x=c[(c[x>>2]|0)+((c[w>>2]|0)+(c[(c[y>>2]|0)+8>>2]|0)<<2)>>2]|0;w=c[v>>2]|0;if((c[v>>2]|0)>0){v=x>>w}else{v=x<<0-w}b[r>>1]=v;z=1+($(b[s>>1]|0,b[s>>1]|0)|0)|0;b[t>>1]=1+(mc(z+($(b[r>>1]|0,b[r>>1]|0)|0)|0)|0);b[j>>1]=(b[s>>1]<<14|0)/(b[t>>1]|0)|0;b[k>>1]=(b[r>>1]<<14|0)/(b[t>>1]|0)|0;c[q>>2]=0;while(1){if((c[q>>2]|0)>=(c[p>>2]|0)){break}b[m>>1]=b[(c[l>>2]|0)+(c[q>>2]<<1)>>1]|0;b[o>>1]=b[(c[n>>2]|0)+(c[q>>2]<<1)>>1]|0;z=$(b[j>>1]|0,b[m>>1]|0)|0;z=z+($(b[k>>1]|0,b[o>>1]|0)|0)>>14&65535;b[(c[l>>2]|0)+(c[q>>2]<<1)>>1]=z;c[q>>2]=(c[q>>2]|0)+1}i=u;return}function Sa(a,d,e){a=a|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0;f=i;i=i+32|0;j=f+20|0;l=f+16|0;h=f+12|0;g=f+8|0;m=f+4|0;k=f;c[j>>2]=a;c[l>>2]=d;c[h>>2]=e;c[g>>2]=0;while(1){if((c[g>>2]|0)>=(c[h>>2]|0)){break}c[k>>2]=(b[(c[j>>2]|0)+(c[g>>2]<<1)>>1]|0)*23170;c[m>>2]=(b[(c[l>>2]|0)+(c[g>>2]<<1)>>1]|0)*23170;b[(c[j>>2]|0)+(c[g>>2]<<1)>>1]=(c[k>>2]|0)+(c[m>>2]|0)>>15;b[(c[l>>2]|0)+(c[g>>2]<<1)>>1]=(c[m>>2]|0)-(c[k>>2]|0)>>15;c[g>>2]=(c[g>>2]|0)+1}i=f;return}function Ta(a){a=a|0;var d=0,e=0,f=0,g=0;e=i;i=i+16|0;g=e+6|0;f=e;d=e+4|0;b[g>>1]=a;c[f>>2]=4096+($(b[g>>1]|0,b[g>>1]|0)|0)>>13;b[d>>1]=c[f>>2];b[d>>1]=32767-(b[d>>1]|0)+(16384+($(b[d>>1]|0,((16384+($(b[d>>1]|0,(8277+(16384+($(-626,b[d>>1]|0)|0)>>15)&65535)<<16>>16)|0)>>15)+ -7651&65535)<<16>>16)|0)>>15);i=e;return 1+(b[d>>1]|0)&65535|0}function Ua(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0;d=i;i=i+16|0;f=d+12|0;e=d+8|0;g=d+4|0;h=d;c[f>>2]=a;c[e>>2]=b;c[g>>2]=32-(We(c[e>>2]|0)|0);c[h>>2]=32-(We(c[f>>2]|0)|0);c[e>>2]=c[e>>2]<<15-(c[g>>2]|0);c[f>>2]=c[f>>2]<<15-(c[h>>2]|0);a=((c[h>>2]|0)-(c[g>>2]|0)<<11)+(16384+($((c[f>>2]&65535)<<16>>16,((16384+($((c[f>>2]&65535)<<16>>16,-2597)|0)>>15)+7932&65535)<<16>>16)|0)>>15)|0;a=a-(16384+($((c[e>>2]&65535)<<16>>16,((16384+($((c[e>>2]&65535)<<16>>16,-2597)|0)>>15)+7932&65535)<<16>>16)|0)>>15)|0;i=d;return a|0}function Va(a,d,e,f){a=a|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;k=i;i=i+48|0;n=k+28|0;m=k+16|0;o=k+4|0;q=k+8|0;g=k+32|0;l=k;h=k+12|0;j=k+24|0;p=k+20|0;c[n>>2]=a;c[m>>2]=d;c[o>>2]=e;c[q>>2]=f;c[h>>2]=$(c[m>>2]|0,c[o>>2]|0)|0;a=c[h>>2]|0;c[j>>2]=ia()|0;f=i;i=i+((2*a|0)+15&-16)|0;if((c[q>>2]|0)!=0){c[p>>2]=56+(c[o>>2]<<2)+ -8;c[g>>2]=0;while(1){if((c[g>>2]|0)>=(c[o>>2]|0)){break}c[l>>2]=0;while(1){if((c[l>>2]|0)>=(c[m>>2]|0)){break}a=$(c[l>>2]|0,c[o>>2]|0)|0;q=$(c[(c[p>>2]|0)+(c[g>>2]<<2)>>2]|0,c[m>>2]|0)|0;b[f+(q+(c[l>>2]|0)<<1)>>1]=b[(c[n>>2]|0)+(a+(c[g>>2]|0)<<1)>>1]|0;c[l>>2]=(c[l>>2]|0)+1}c[g>>2]=(c[g>>2]|0)+1}a=c[n>>2]|0;d=c[h>>2]|0;d=d<<1;q=0;q=d+q|0;Ze(a|0,f|0,q|0)|0;q=c[j>>2]|0;na(q|0);i=k;return}else{c[g>>2]=0;while(1){if((c[g>>2]|0)>=(c[o>>2]|0)){break}c[l>>2]=0;while(1){if((c[l>>2]|0)>=(c[m>>2]|0)){break}a=$(c[l>>2]|0,c[o>>2]|0)|0;q=$(c[g>>2]|0,c[m>>2]|0)|0;b[f+(q+(c[l>>2]|0)<<1)>>1]=b[(c[n>>2]|0)+(a+(c[g>>2]|0)<<1)>>1]|0;c[l>>2]=(c[l>>2]|0)+1}c[g>>2]=(c[g>>2]|0)+1}a=c[n>>2]|0;d=c[h>>2]|0;d=d<<1;q=0;q=d+q|0;Ze(a|0,f|0,q|0)|0;q=c[j>>2]|0;na(q|0);i=k;return}}function Wa(a,e,f,g,h,j,k,l,m){a=a|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;m=m|0;var n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0;n=i;i=i+176|0;t=n+152|0;s=n+56|0;r=n+44|0;G=n+132|0;q=n+140|0;u=n+16|0;F=n+20|0;p=n+158|0;z=n+28|0;Y=n+32|0;N=n+36|0;V=n+40|0;P=n+96|0;Q=n+128|0;E=n+136|0;v=n+160|0;C=n+162|0;o=n+64|0;U=n+68|0;D=n+72|0;I=n+76|0;W=n+80|0;X=n+84|0;L=n+12|0;K=n+4|0;w=n;A=n+8|0;J=n+88|0;B=n+92|0;H=n+48|0;O=n+104|0;y=n+52|0;x=n+60|0;M=n+148|0;S=n+144|0;R=n+24|0;T=n+156|0;c[t>>2]=a;c[s>>2]=e;c[r>>2]=f;c[G>>2]=g;c[q>>2]=h;c[u>>2]=j;c[F>>2]=k;b[p>>1]=l;c[z>>2]=m;c[P>>2]=0;c[Q>>2]=0;c[E>>2]=c[q>>2];b[v>>1]=0;b[C>>1]=0;c[o>>2]=0;c[U>>2]=((c[c[t>>2]>>2]|0)!=0^1)&1;c[D>>2]=0;c[I>>2]=c[c[t>>2]>>2];c[W>>2]=c[(c[t>>2]|0)+4>>2];c[X>>2]=c[(c[t>>2]|0)+8>>2];c[L>>2]=c[(c[t>>2]|0)+16>>2];c[K>>2]=c[(c[t>>2]|0)+24>>2];a=$((c[F>>2]|0)+1|0,c[(c[W>>2]|0)+8>>2]|0)|0;c[Y>>2]=(c[(c[W>>2]|0)+92>>2]|0)+(b[(c[(c[W>>2]|0)+88>>2]|0)+(a+(c[X>>2]|0)<<1)>>1]|0);if(((c[F>>2]|0)!=-1?(c[G>>2]|0)>((d[(c[Y>>2]|0)+(d[c[Y>>2]>>0]|0)>>0]|0)+12|0):0)?(c[r>>2]|0)>2:0){c[y>>2]=0;c[r>>2]=c[r>>2]>>1;c[D>>2]=(c[s>>2]|0)+(c[r>>2]<<1);c[F>>2]=(c[F>>2]|0)-1;if((c[q>>2]|0)==1){c[z>>2]=c[z>>2]&1|c[z>>2]<<1}c[q>>2]=(c[q>>2]|0)+1>>1;Na(c[t>>2]|0,O,c[s>>2]|0,c[D>>2]|0,c[r>>2]|0,G,c[q>>2]|0,c[E>>2]|0,c[F>>2]|0,0,z);c[P>>2]=c[O+4>>2];c[Q>>2]=c[O+8>>2];c[J>>2]=c[O+12>>2];c[B>>2]=c[O+16>>2];c[H>>2]=c[O+20>>2];b[v>>1]=c[P>>2];b[C>>1]=c[Q>>2];do{if((c[E>>2]|0)>1?(c[B>>2]&16383|0)!=0:0){I=c[J>>2]|0;if((c[B>>2]|0)>8192){c[J>>2]=(c[J>>2]|0)-(I>>4-(c[F>>2]|0));break}if(0<(I+(c[r>>2]<<3>>5-(c[F>>2]|0))|0)){I=0}else{I=(c[J>>2]|0)+(c[r>>2]<<3>>5-(c[F>>2]|0))|0}c[J>>2]=I}}while(0);I=c[G>>2]|0;if((c[G>>2]|0)>=(((c[G>>2]|0)-(c[J>>2]|0)|0)/2|0|0)){I=(I-(c[J>>2]|0)|0)/2|0}if(0<=(I|0)){I=c[G>>2]|0;if((c[G>>2]|0)>=(((c[G>>2]|0)-(c[J>>2]|0)|0)/2|0|0)){I=(I-(c[J>>2]|0)|0)/2|0}}else{I=0}c[w>>2]=I;c[A>>2]=(c[G>>2]|0)-(c[w>>2]|0);Y=(c[t>>2]|0)+28|0;c[Y>>2]=(c[Y>>2]|0)-(c[H>>2]|0);if((c[u>>2]|0)!=0){c[y>>2]=(c[u>>2]|0)+(c[r>>2]<<1)}c[x>>2]=c[(c[t>>2]|0)+28>>2];G=c[t>>2]|0;if((c[w>>2]|0)>=(c[A>>2]|0)){Y=16384+($(b[p>>1]|0,b[v>>1]|0)|0)>>15&65535;c[o>>2]=Wa(G,c[s>>2]|0,c[r>>2]|0,c[w>>2]|0,c[q>>2]|0,c[u>>2]|0,c[F>>2]|0,Y,c[z>>2]|0)|0;c[x>>2]=(c[w>>2]|0)-((c[x>>2]|0)-(c[(c[t>>2]|0)+28>>2]|0));if((c[x>>2]|0)>24?(c[B>>2]|0)!=0:0){c[A>>2]=(c[A>>2]|0)+((c[x>>2]|0)-24)}Y=16384+($(b[p>>1]|0,b[C>>1]|0)|0)>>15&65535;Y=Wa(c[t>>2]|0,c[D>>2]|0,c[r>>2]|0,c[A>>2]|0,c[q>>2]|0,c[y>>2]|0,c[F>>2]|0,Y,c[z>>2]>>c[q>>2])|0;c[o>>2]=c[o>>2]|Y<<(c[E>>2]>>1);Y=c[o>>2]|0;i=n;return Y|0}else{Y=16384+($(b[p>>1]|0,b[C>>1]|0)|0)>>15&65535;Y=Wa(G,c[D>>2]|0,c[r>>2]|0,c[A>>2]|0,c[q>>2]|0,c[y>>2]|0,c[F>>2]|0,Y,c[z>>2]>>c[q>>2])|0;c[o>>2]=Y<<(c[E>>2]>>1);c[x>>2]=(c[A>>2]|0)-((c[x>>2]|0)-(c[(c[t>>2]|0)+28>>2]|0));if((c[x>>2]|0)>24?(c[B>>2]|0)!=16384:0){c[w>>2]=(c[w>>2]|0)+((c[x>>2]|0)-24)}Y=16384+($(b[p>>1]|0,b[v>>1]|0)|0)>>15&65535;Y=Wa(c[t>>2]|0,c[s>>2]|0,c[r>>2]|0,c[w>>2]|0,c[q>>2]|0,c[u>>2]|0,c[F>>2]|0,Y,c[z>>2]|0)|0;c[o>>2]=c[o>>2]|Y;Y=c[o>>2]|0;i=n;return Y|0}}c[N>>2]=Ya(c[W>>2]|0,c[X>>2]|0,c[F>>2]|0,c[G>>2]|0)|0;c[V>>2]=Za(c[W>>2]|0,c[X>>2]|0,c[F>>2]|0,c[N>>2]|0)|0;Y=(c[t>>2]|0)+28|0;c[Y>>2]=(c[Y>>2]|0)-(c[V>>2]|0);while(1){if((c[(c[t>>2]|0)+28>>2]|0)>=0){break}if((c[N>>2]|0)<=0){break}Y=(c[t>>2]|0)+28|0;c[Y>>2]=(c[Y>>2]|0)+(c[V>>2]|0);c[N>>2]=(c[N>>2]|0)+ -1;c[V>>2]=Za(c[W>>2]|0,c[X>>2]|0,c[F>>2]|0,c[N>>2]|0)|0;Y=(c[t>>2]|0)+28|0;c[Y>>2]=(c[Y>>2]|0)-(c[V>>2]|0)}if((c[N>>2]|0)!=0){c[M>>2]=_a(c[N>>2]|0)|0;s=c[s>>2]|0;r=c[r>>2]|0;t=c[M>>2]|0;u=c[L>>2]|0;q=c[q>>2]|0;v=c[K>>2]|0;if((c[I>>2]|0)!=0){c[o>>2]=Ic(s,r,t,u,q,v)|0;Y=c[o>>2]|0;i=n;return Y|0}else{c[o>>2]=Mc(s,r,t,u,q,v,b[p>>1]|0)|0;Y=c[o>>2]|0;i=n;return Y|0}}if((c[U>>2]|0)==0){Y=c[o>>2]|0;i=n;return Y|0}c[R>>2]=(1<<c[q>>2])-1;c[z>>2]=c[z>>2]&c[R>>2];if((c[z>>2]|0)==0){Xe(c[s>>2]|0,0,c[r>>2]<<1|0)|0;Y=c[o>>2]|0;i=n;return Y|0}Y=(c[u>>2]|0)==0;c[S>>2]=0;if(Y){while(1){if((c[S>>2]|0)>=(c[r>>2]|0)){break}Y=za(c[(c[t>>2]|0)+36>>2]|0)|0;c[(c[t>>2]|0)+36>>2]=Y;b[(c[s>>2]|0)+(c[S>>2]<<1)>>1]=c[(c[t>>2]|0)+36>>2]>>20;c[S>>2]=(c[S>>2]|0)+1}c[o>>2]=c[R>>2]}else{while(1){if((c[S>>2]|0)>=(c[r>>2]|0)){break}Y=za(c[(c[t>>2]|0)+36>>2]|0)|0;c[(c[t>>2]|0)+36>>2]=Y;b[T>>1]=4;Y=b[T>>1]|0;b[T>>1]=(c[(c[t>>2]|0)+36>>2]&32768|0)!=0?Y:0-Y|0;b[(c[s>>2]|0)+(c[S>>2]<<1)>>1]=(b[(c[u>>2]|0)+(c[S>>2]<<1)>>1]|0)+(b[T>>1]|0);c[S>>2]=(c[S>>2]|0)+1}c[o>>2]=c[z>>2]}Oc(c[s>>2]|0,c[r>>2]|0,b[p>>1]|0);Y=c[o>>2]|0;i=n;return Y|0}function Xa(a,d,e,f){a=a|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;k=i;i=i+48|0;o=k+28|0;n=k+16|0;g=k+4|0;q=k+8|0;l=k+32|0;m=k;h=k+12|0;j=k+24|0;p=k+20|0;c[o>>2]=a;c[n>>2]=d;c[g>>2]=e;c[q>>2]=f;c[h>>2]=$(c[n>>2]|0,c[g>>2]|0)|0;a=c[h>>2]|0;c[j>>2]=ia()|0;f=i;i=i+((2*a|0)+15&-16)|0;if((c[q>>2]|0)!=0){c[p>>2]=56+(c[g>>2]<<2)+ -8;c[l>>2]=0;while(1){if((c[l>>2]|0)>=(c[g>>2]|0)){break}c[m>>2]=0;while(1){e=c[l>>2]|0;if((c[m>>2]|0)>=(c[n>>2]|0)){break}a=$(c[(c[p>>2]|0)+(e<<2)>>2]|0,c[n>>2]|0)|0;q=$(c[m>>2]|0,c[g>>2]|0)|0;b[f+(q+(c[l>>2]|0)<<1)>>1]=b[(c[o>>2]|0)+(a+(c[m>>2]|0)<<1)>>1]|0;c[m>>2]=(c[m>>2]|0)+1}c[l>>2]=e+1}a=c[o>>2]|0;d=c[h>>2]|0;d=d<<1;q=0;q=d+q|0;Ze(a|0,f|0,q|0)|0;q=c[j>>2]|0;na(q|0);i=k;return}else{c[l>>2]=0;while(1){if((c[l>>2]|0)>=(c[g>>2]|0)){break}c[m>>2]=0;while(1){p=c[l>>2]|0;if((c[m>>2]|0)>=(c[n>>2]|0)){break}a=$(p,c[n>>2]|0)|0;q=$(c[m>>2]|0,c[g>>2]|0)|0;b[f+(q+(c[l>>2]|0)<<1)>>1]=b[(c[o>>2]|0)+(a+(c[m>>2]|0)<<1)>>1]|0;c[m>>2]=(c[m>>2]|0)+1}c[l>>2]=p+1}a=c[o>>2]|0;d=c[h>>2]|0;d=d<<1;q=0;q=d+q|0;Ze(a|0,f|0,q|0)|0;q=c[j>>2]|0;na(q|0);i=k;return}}function Ya(a,e,f,g){a=a|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0;j=i;i=i+48|0;h=j;r=j+16|0;q=j+28|0;s=j+4|0;l=j+32|0;p=j+36|0;n=j+12|0;k=j+24|0;m=j+20|0;o=j+8|0;c[r>>2]=a;c[q>>2]=e;c[s>>2]=f;c[l>>2]=g;c[s>>2]=(c[s>>2]|0)+1;a=$(c[s>>2]|0,c[(c[r>>2]|0)+8>>2]|0)|0;c[m>>2]=(c[(c[r>>2]|0)+92>>2]|0)+(b[(c[(c[r>>2]|0)+88>>2]|0)+(a+(c[q>>2]|0)<<1)>>1]|0);c[n>>2]=0;c[k>>2]=d[c[m>>2]>>0]|0;c[l>>2]=(c[l>>2]|0)+ -1;c[p>>2]=0;while(1){if((c[p>>2]|0)>=6){break}c[o>>2]=(c[n>>2]|0)+(c[k>>2]|0)+1>>1;g=c[o>>2]|0;if((d[(c[m>>2]|0)+(c[o>>2]|0)>>0]|0)>=(c[l>>2]|0)){c[k>>2]=g}else{c[n>>2]=g}c[p>>2]=(c[p>>2]|0)+1}if((c[n>>2]|0)==0){o=-1}else{o=d[(c[m>>2]|0)+(c[n>>2]|0)>>0]|0}if(((c[l>>2]|0)-o|0)<=((d[(c[m>>2]|0)+(c[k>>2]|0)>>0]|0)-(c[l>>2]|0)|0)){c[h>>2]=c[n>>2];s=c[h>>2]|0;i=j;return s|0}else{c[h>>2]=c[k>>2];s=c[h>>2]|0;i=j;return s|0}return 0}function Za(a,e,f,g){a=a|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0;h=i;i=i+32|0;m=h+16|0;l=h+12|0;n=h+8|0;k=h+4|0;j=h;c[m>>2]=a;c[l>>2]=e;c[n>>2]=f;c[k>>2]=g;c[n>>2]=(c[n>>2]|0)+1;a=$(c[n>>2]|0,c[(c[m>>2]|0)+8>>2]|0)|0;c[j>>2]=(c[(c[m>>2]|0)+92>>2]|0)+(b[(c[(c[m>>2]|0)+88>>2]|0)+(a+(c[l>>2]|0)<<1)>>1]|0);if((c[k>>2]|0)==0){n=0;i=h;return n|0}n=(d[(c[j>>2]|0)+(c[k>>2]|0)>>0]|0)+1|0;i=h;return n|0}function _a(a){a=a|0;var b=0,d=0;b=i;i=i+16|0;d=b;c[d>>2]=a;a=c[d>>2]|0;if((c[d>>2]|0)<8){i=b;return a|0}a=8+(a&7)<<(c[d>>2]>>3)-1;i=b;return a|0}function $a(a){a=a|0;var b=0,d=0,e=0;d=i;i=i+16|0;e=d+4|0;b=d;c[e>>2]=a;a=c[e>>2]|0;if((a|0)==48e3){c[b>>2]=1}else if((a|0)==24e3){c[b>>2]=2}else if((a|0)==16e3){c[b>>2]=3}else if((a|0)==12e3){c[b>>2]=4}else if((a|0)==8e3){c[b>>2]=6}else{c[b>>2]=0}i=d;return c[b>>2]|0}function ab(a,d,e,f,g,h,j,k,l,m,n){a=a|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;m=m|0;n=n|0;var o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0;F=i;i=i+80|0;p=F+32|0;q=F+36|0;D=F+20|0;t=F+12|0;r=F+44|0;K=F+72|0;x=F+66|0;L=F+52|0;M=F+8|0;A=F+4|0;y=F+28|0;s=F+56|0;C=F+60|0;E=F+74|0;o=F+70|0;u=F+62|0;v=F+68|0;w=F+64|0;z=F+24|0;H=F+16|0;G=F;I=F+48|0;J=F+40|0;B=F+76|0;c[p>>2]=a;c[q>>2]=d;c[D>>2]=e;c[t>>2]=f;c[r>>2]=g;b[K>>1]=h;b[x>>1]=j;c[L>>2]=k;c[M>>2]=l;c[A>>2]=m;c[y>>2]=n;if((b[K>>1]|0)==0?(b[x>>1]|0)==0:0){if((c[q>>2]|0)==(c[p>>2]|0)){i=F;return}$e(c[p>>2]|0,c[q>>2]|0,(c[r>>2]<<2)+0|0)|0;i=F;return}b[C>>1]=16384+($(b[K>>1]|0,b[176+((c[L>>2]|0)*6|0)>>1]|0)|0)>>15;b[E>>1]=16384+($(b[K>>1]|0,b[178+((c[L>>2]|0)*6|0)>>1]|0)|0)>>15;b[o>>1]=16384+($(b[K>>1]|0,b[180+((c[L>>2]|0)*6|0)>>1]|0)|0)>>15;b[u>>1]=16384+($(b[x>>1]|0,b[176+((c[M>>2]|0)*6|0)>>1]|0)|0)>>15;b[v>>1]=16384+($(b[x>>1]|0,b[178+((c[M>>2]|0)*6|0)>>1]|0)|0)>>15;b[w>>1]=16384+($(b[x>>1]|0,b[180+((c[M>>2]|0)*6|0)>>1]|0)|0)>>15;c[H>>2]=c[(c[q>>2]|0)+(0-(c[t>>2]|0)+1<<2)>>2];c[G>>2]=c[(c[q>>2]|0)+(0-(c[t>>2]|0)<<2)>>2];c[I>>2]=c[(c[q>>2]|0)+(0-(c[t>>2]|0)-1<<2)>>2];c[J>>2]=c[(c[q>>2]|0)+(0-(c[t>>2]|0)-2<<2)>>2];if(((b[K>>1]|0)==(b[x>>1]|0)?(c[D>>2]|0)==(c[t>>2]|0):0)?(c[L>>2]|0)==(c[M>>2]|0):0){c[y>>2]=0}c[s>>2]=0;while(1){if((c[s>>2]|0)>=(c[y>>2]|0)){break}c[z>>2]=c[(c[q>>2]|0)+((c[s>>2]|0)-(c[t>>2]|0)+2<<2)>>2];b[B>>1]=($(b[(c[A>>2]|0)+(c[s>>2]<<1)>>1]|0,b[(c[A>>2]|0)+(c[s>>2]<<1)>>1]|0)|0)>>15;d=(($((32767-(b[B>>1]|0)&65535)<<16>>16,b[C>>1]|0)|0)>>15&65535)<<16>>16;d=($(d,(c[(c[q>>2]|0)+((c[s>>2]|0)-(c[D>>2]|0)<<2)>>2]>>16&65535)<<16>>16)|0)<<1;e=(($((32767-(b[B>>1]|0)&65535)<<16>>16,b[C>>1]|0)|0)>>15&65535)<<16>>16;e=(c[(c[q>>2]|0)+(c[s>>2]<<2)>>2]|0)+(d+(($(e,c[(c[q>>2]|0)+((c[s>>2]|0)-(c[D>>2]|0)<<2)>>2]&65535&65535)|0)>>15))|0;d=(($((32767-(b[B>>1]|0)&65535)<<16>>16,b[E>>1]|0)|0)>>15&65535)<<16>>16;d=($(d,((c[(c[q>>2]|0)+((c[s>>2]|0)-(c[D>>2]|0)+1<<2)>>2]|0)+(c[(c[q>>2]|0)+((c[s>>2]|0)-(c[D>>2]|0)-1<<2)>>2]|0)>>16&65535)<<16>>16)|0)<<1;a=(($((32767-(b[B>>1]|0)&65535)<<16>>16,b[E>>1]|0)|0)>>15&65535)<<16>>16;a=e+(d+(($(a,(c[(c[q>>2]|0)+((c[s>>2]|0)-(c[D>>2]|0)+1<<2)>>2]|0)+(c[(c[q>>2]|0)+((c[s>>2]|0)-(c[D>>2]|0)-1<<2)>>2]|0)&65535&65535)|0)>>15))|0;d=(($((32767-(b[B>>1]|0)&65535)<<16>>16,b[o>>1]|0)|0)>>15&65535)<<16>>16;d=($(d,((c[(c[q>>2]|0)+((c[s>>2]|0)-(c[D>>2]|0)+2<<2)>>2]|0)+(c[(c[q>>2]|0)+((c[s>>2]|0)-(c[D>>2]|0)-2<<2)>>2]|0)>>16&65535)<<16>>16)|0)<<1;e=(($((32767-(b[B>>1]|0)&65535)<<16>>16,b[o>>1]|0)|0)>>15&65535)<<16>>16;e=a+(d+(($(e,(c[(c[q>>2]|0)+((c[s>>2]|0)-(c[D>>2]|0)+2<<2)>>2]|0)+(c[(c[q>>2]|0)+((c[s>>2]|0)-(c[D>>2]|0)-2<<2)>>2]|0)&65535&65535)|0)>>15))|0;d=(($(b[B>>1]|0,b[u>>1]|0)|0)>>15&65535)<<16>>16;d=($(d,(c[G>>2]>>16&65535)<<16>>16)|0)<<1;a=(($(b[B>>1]|0,b[u>>1]|0)|0)>>15&65535)<<16>>16;a=e+(d+(($(a,c[G>>2]&65535&65535)|0)>>15))|0;d=(($(b[B>>1]|0,b[v>>1]|0)|0)>>15&65535)<<16>>16;d=($(d,((c[H>>2]|0)+(c[I>>2]|0)>>16&65535)<<16>>16)|0)<<1;e=(($(b[B>>1]|0,b[v>>1]|0)|0)>>15&65535)<<16>>16;e=a+(d+(($(e,(c[H>>2]|0)+(c[I>>2]|0)&65535&65535)|0)>>15))|0;d=(($(b[B>>1]|0,b[w>>1]|0)|0)>>15&65535)<<16>>16;d=($(d,((c[z>>2]|0)+(c[J>>2]|0)>>16&65535)<<16>>16)|0)<<1;a=(($(b[B>>1]|0,b[w>>1]|0)|0)>>15&65535)<<16>>16;a=e+(d+(($(a,(c[z>>2]|0)+(c[J>>2]|0)&65535&65535)|0)>>15))|0;c[(c[p>>2]|0)+(c[s>>2]<<2)>>2]=a;c[J>>2]=c[I>>2];c[I>>2]=c[G>>2];c[G>>2]=c[H>>2];c[H>>2]=c[z>>2];c[s>>2]=(c[s>>2]|0)+1}if((b[x>>1]|0)!=0){bb((c[p>>2]|0)+(c[s>>2]<<2)|0,(c[q>>2]|0)+(c[s>>2]<<2)|0,c[t>>2]|0,(c[r>>2]|0)-(c[s>>2]|0)|0,b[u>>1]|0,b[v>>1]|0,b[w>>1]|0);i=F;return}if((c[q>>2]|0)==(c[p>>2]|0)){i=F;return}$e((c[p>>2]|0)+(c[y>>2]<<2)|0,(c[q>>2]|0)+(c[y>>2]<<2)|0,((c[r>>2]|0)-(c[y>>2]|0)<<2)+0|0)|0;i=F;return}function bb(a,d,e,f,g,h,j){a=a|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0;t=i;i=i+48|0;x=t+36|0;n=t+16|0;o=t+4|0;m=t+8|0;q=t+40|0;s=t+42|0;v=t+44|0;p=t+24|0;k=t+20|0;r=t+28|0;u=t+12|0;w=t;l=t+32|0;c[x>>2]=a;c[n>>2]=d;c[o>>2]=e;c[m>>2]=f;b[q>>1]=g;b[s>>1]=h;b[v>>1]=j;c[w>>2]=c[(c[n>>2]|0)+(0-(c[o>>2]|0)-2<<2)>>2];c[u>>2]=c[(c[n>>2]|0)+(0-(c[o>>2]|0)-1<<2)>>2];c[r>>2]=c[(c[n>>2]|0)+(0-(c[o>>2]|0)<<2)>>2];c[k>>2]=c[(c[n>>2]|0)+(0-(c[o>>2]|0)+1<<2)>>2];c[l>>2]=0;while(1){if((c[l>>2]|0)>=(c[m>>2]|0)){break}c[p>>2]=c[(c[n>>2]|0)+((c[l>>2]|0)-(c[o>>2]|0)+2<<2)>>2];a=($(b[q>>1]|0,(c[r>>2]>>16&65535)<<16>>16)|0)<<1;a=(c[(c[n>>2]|0)+(c[l>>2]<<2)>>2]|0)+(a+(($(b[q>>1]|0,c[r>>2]&65535&65535)|0)>>15))|0;d=($(b[s>>1]|0,((c[k>>2]|0)+(c[u>>2]|0)>>16&65535)<<16>>16)|0)<<1;d=a+(d+(($(b[s>>1]|0,(c[k>>2]|0)+(c[u>>2]|0)&65535&65535)|0)>>15))|0;a=($(b[v>>1]|0,((c[p>>2]|0)+(c[w>>2]|0)>>16&65535)<<16>>16)|0)<<1;a=d+(a+(($(b[v>>1]|0,(c[p>>2]|0)+(c[w>>2]|0)&65535&65535)|0)>>15))|0;c[(c[x>>2]|0)+(c[l>>2]<<2)>>2]=a;c[w>>2]=c[u>>2];c[u>>2]=c[r>>2];c[r>>2]=c[k>>2];c[k>>2]=c[p>>2];c[l>>2]=(c[l>>2]|0)+1}i=t;return}function cb(a,e,f,g){a=a|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0;m=i;i=i+32|0;k=m+20|0;o=m+16|0;l=m+12|0;n=m+8|0;j=m+4|0;h=m;c[k>>2]=a;c[o>>2]=e;c[l>>2]=f;c[n>>2]=g;c[j>>2]=0;while(1){if((c[j>>2]|0)>=(c[(c[k>>2]|0)+8>>2]|0)){break}c[h>>2]=(b[(c[(c[k>>2]|0)+24>>2]|0)+((c[j>>2]|0)+1<<1)>>1]|0)-(b[(c[(c[k>>2]|0)+24>>2]|0)+(c[j>>2]<<1)>>1]|0)<<c[l>>2];a=$(c[(c[k>>2]|0)+8>>2]|0,(c[l>>2]<<1)+(c[n>>2]|0)-1|0)|0;a=$((d[(c[(c[k>>2]|0)+96>>2]|0)+(a+(c[j>>2]|0))>>0]|0)+64|0,c[n>>2]|0)|0;a=($(a,c[h>>2]|0)|0)>>2;c[(c[o>>2]|0)+(c[j>>2]<<2)>>2]=a;c[j>>2]=(c[j>>2]|0)+1}i=m;return}function db(a){a=a|0;var b=0,d=0,e=0;b=i;i=i+16|0;d=b+4|0;e=b;c[d>>2]=a;c[e>>2]=qc(48e3,960,0)|0;a=eb(c[e>>2]|0,c[d>>2]|0)|0;i=b;return a|0}function eb(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0;e=i;i=i+16|0;f=e+8|0;g=e+4|0;d=e;c[f>>2]=a;c[g>>2]=b;a=84+(($(c[g>>2]|0,2048+(c[(c[f>>2]|0)+4>>2]|0)|0)|0)-1<<2)|0;c[d>>2]=a+((c[g>>2]|0)*24<<1)+(c[(c[f>>2]|0)+8>>2]<<3<<1);i=e;return c[d>>2]|0}function fb(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0;e=i;i=i+32|0;f=e+16|0;j=e+12|0;h=e+8|0;k=e+4|0;g=e;c[j>>2]=a;c[h>>2]=b;c[k>>2]=d;b=c[j>>2]|0;a=qc(48e3,960,0)|0;c[g>>2]=gb(b,a,c[k>>2]|0)|0;if((c[g>>2]|0)!=0){c[f>>2]=c[g>>2];k=c[f>>2]|0;i=e;return k|0}k=$a(c[h>>2]|0)|0;c[(c[j>>2]|0)+16>>2]=k;if((c[(c[j>>2]|0)+16>>2]|0)==0){c[f>>2]=-1;k=c[f>>2]|0;i=e;return k|0}else{c[f>>2]=0;k=c[f>>2]|0;i=e;return k|0}return 0}function gb(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0;e=i;i=i+32|0;f=e+16|0;g=e+12|0;h=e+8|0;j=e+4|0;c[g>>2]=a;c[h>>2]=b;c[j>>2]=d;if((c[j>>2]|0)<0|(c[j>>2]|0)>2){c[f>>2]=-1;a=c[f>>2]|0;i=e;return a|0}if((c[g>>2]|0)==0){c[f>>2]=-7;a=c[f>>2]|0;i=e;return a|0}else{a=c[g>>2]|0;Xe(a|0,0,eb(c[h>>2]|0,c[j>>2]|0)|0)|0;c[c[g>>2]>>2]=c[h>>2];c[(c[g>>2]|0)+4>>2]=c[(c[h>>2]|0)+4>>2];a=c[j>>2]|0;c[(c[g>>2]|0)+8>>2]=a;c[(c[g>>2]|0)+12>>2]=a;c[(c[g>>2]|0)+16>>2]=1;c[(c[g>>2]|0)+20>>2]=0;c[(c[g>>2]|0)+24>>2]=c[(c[c[g>>2]>>2]|0)+12>>2];c[(c[g>>2]|0)+28>>2]=1;a=vb()|0;c[(c[g>>2]|0)+32>>2]=a;c[(c[g>>2]|0)+48>>2]=0;ob(c[g>>2]|0,4028,e)|0;c[f>>2]=0;a=c[f>>2]|0;i=e;return a|0}return 0}function hb(a,d,e,f,g,h,j){a=a|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ja=0,ka=0,la=0,ma=0,oa=0,pa=0,qa=0,ra=0;C=i;i=i+288|0;p=C+164|0;t=C+148|0;pa=C+8|0;k=C+4|0;l=C+240|0;F=C+264|0;A=C+156|0;E=C+24|0;u=C+28|0;B=C+32|0;v=C+36|0;P=C+40|0;_=C+44|0;qa=C+48|0;aa=C+96|0;m=C+104|0;ra=C+112|0;n=C+116|0;x=C+120|0;y=C+124|0;G=C+128|0;X=C+132|0;N=C+136|0;la=C+140|0;q=C+244|0;J=C+252|0;H=C+260|0;o=C+268|0;w=C+272|0;V=C+276|0;Q=C+168|0;Z=C+172|0;K=C+176|0;L=C+280|0;R=C+184|0;Y=C+188|0;ba=C+192|0;T=C+196|0;ca=C+200|0;da=C+204|0;M=C+208|0;S=C+212|0;W=C+216|0;U=C+220|0;O=C+224|0;z=C+228|0;D=C+232|0;I=C+16|0;ka=C;oa=C+12|0;ma=C+236|0;r=C+144|0;ja=C+248|0;ha=C+152|0;fa=C+256|0;ea=C+20|0;ga=C+160|0;s=C+180|0;c[t>>2]=a;c[pa>>2]=d;c[k>>2]=e;c[l>>2]=f;c[F>>2]=g;c[A>>2]=h;c[E>>2]=j;c[q>>2]=c[(c[t>>2]|0)+8>>2];c[R>>2]=0;c[Y>>2]=0;c[W>>2]=0;c[O>>2]=c[(c[t>>2]|0)+12>>2];c[z>>2]=c[c[t>>2]>>2];c[D>>2]=c[(c[z>>2]|0)+8>>2];c[I>>2]=c[(c[z>>2]|0)+4>>2];c[ka>>2]=c[(c[z>>2]|0)+24>>2];c[o>>2]=c[(c[t>>2]|0)+20>>2];c[w>>2]=c[(c[t>>2]|0)+24>>2];c[F>>2]=$(c[F>>2]|0,c[(c[t>>2]|0)+16>>2]|0)|0;c[ra>>2]=(c[t>>2]|0)+80+(($(2048+(c[I>>2]|0)|0,c[q>>2]|0)|0)<<2);c[n>>2]=(c[ra>>2]|0)+((c[q>>2]|0)*24<<1);c[x>>2]=(c[n>>2]|0)+(c[D>>2]<<1<<1);c[y>>2]=(c[x>>2]|0)+(c[D>>2]<<1<<1);c[G>>2]=(c[y>>2]|0)+(c[D>>2]<<1<<1);c[J>>2]=0;while(1){if((c[J>>2]|0)>(c[(c[z>>2]|0)+28>>2]|0)){break}if((c[(c[z>>2]|0)+36>>2]<<c[J>>2]|0)==(c[F>>2]|0)){break}c[J>>2]=(c[J>>2]|0)+1}if((c[J>>2]|0)>(c[(c[z>>2]|0)+28>>2]|0)){c[p>>2]=-1;ra=c[p>>2]|0;i=C;return ra|0}c[H>>2]=1<<c[J>>2];if(!((c[k>>2]|0)<0|(c[k>>2]|0)>1275)?(c[l>>2]|0)!=0:0){c[v>>2]=$(c[H>>2]|0,c[(c[z>>2]|0)+36>>2]|0)|0;c[u>>2]=0;do{ra=(c[t>>2]|0)+80+(($(c[u>>2]|0,2048+(c[I>>2]|0)|0)|0)<<2)|0;c[aa+(c[u>>2]<<2)>>2]=ra;c[m+(c[u>>2]<<2)>>2]=(c[aa+(c[u>>2]<<2)>>2]|0)+8192+(0-(c[v>>2]|0)<<2);ra=(c[u>>2]|0)+1|0;c[u>>2]=ra}while((ra|0)<(c[q>>2]|0));c[V>>2]=c[w>>2];if((c[V>>2]|0)>(c[(c[z>>2]|0)+12>>2]|0)){c[V>>2]=c[(c[z>>2]|0)+12>>2]}if((c[pa>>2]|0)!=0?(c[k>>2]|0)>1:0){if((c[A>>2]|0)==0){Hb(qa,c[pa>>2]|0,c[k>>2]|0);c[A>>2]=qa}a:do{if((c[O>>2]|0)==1){c[B>>2]=0;while(1){if((c[B>>2]|0)>=(c[D>>2]|0)){break a}if((b[(c[n>>2]|0)+(c[B>>2]<<1)>>1]|0)>(b[(c[n>>2]|0)+((c[D>>2]|0)+(c[B>>2]|0)<<1)>>1]|0)){pa=b[(c[n>>2]|0)+(c[B>>2]<<1)>>1]|0}else{pa=b[(c[n>>2]|0)+((c[D>>2]|0)+(c[B>>2]|0)<<1)>>1]|0}b[(c[n>>2]|0)+(c[B>>2]<<1)>>1]=pa<<16>>16;c[B>>2]=(c[B>>2]|0)+1}}}while(0);c[ba>>2]=c[k>>2]<<3;c[ca>>2]=kb(c[A>>2]|0)|0;do{if((c[ca>>2]|0)<(c[ba>>2]|0)){if((c[ca>>2]|0)==1){c[U>>2]=Ob(c[A>>2]|0,15)|0;break}else{c[U>>2]=0;break}}else{c[U>>2]=1}}while(0);if((c[U>>2]|0)!=0){c[ca>>2]=c[k>>2]<<3;qa=c[ca>>2]|0;qa=qa-(kb(c[A>>2]|0)|0)|0;ra=(c[A>>2]|0)+20|0;c[ra>>2]=(c[ra>>2]|0)+qa}b[L>>1]=0;c[K>>2]=0;c[M>>2]=0;if((c[o>>2]|0)==0?((c[ca>>2]|0)+16|0)<=(c[ba>>2]|0):0){if((Ob(c[A>>2]|0,1)|0)!=0){c[ma>>2]=Qb(c[A>>2]|0,6)|0;ra=16<<c[ma>>2];c[K>>2]=ra+(Rb(c[A>>2]|0,4+(c[ma>>2]|0)|0)|0)-1;c[oa>>2]=Rb(c[A>>2]|0,3)|0;ra=(kb(c[A>>2]|0)|0)+2|0;if((ra|0)<=(c[ba>>2]|0)){c[M>>2]=Pb(c[A>>2]|0,232,2)|0}b[L>>1]=((c[oa>>2]|0)+1|0)*3072}c[ca>>2]=kb(c[A>>2]|0)|0}if((c[J>>2]|0)>0?((c[ca>>2]|0)+3|0)<=(c[ba>>2]|0):0){c[N>>2]=Ob(c[A>>2]|0,3)|0;c[ca>>2]=kb(c[A>>2]|0)|0}else{c[N>>2]=0}if((c[N>>2]|0)!=0){c[X>>2]=c[H>>2]}else{c[X>>2]=0}if(((c[ca>>2]|0)+3|0)<=(c[ba>>2]|0)){ma=Ob(c[A>>2]|0,3)|0}else{ma=0}c[la>>2]=ma;Cc(c[z>>2]|0,c[o>>2]|0,c[w>>2]|0,c[n>>2]|0,c[la>>2]|0,c[A>>2]|0,c[O>>2]|0,c[J>>2]|0);ra=c[D>>2]|0;c[r>>2]=ia()|0;la=i;i=i+((4*ra|0)+15&-16)|0;lb(c[o>>2]|0,c[w>>2]|0,c[N>>2]|0,la,c[J>>2]|0,c[A>>2]|0);c[ca>>2]=kb(c[A>>2]|0)|0;c[P>>2]=2;if(((c[ca>>2]|0)+4|0)<=(c[ba>>2]|0)){c[P>>2]=Pb(c[A>>2]|0,240,5)|0}oa=i;i=i+((4*(c[D>>2]|0)|0)+15&-16)|0;cb(c[z>>2]|0,oa,c[J>>2]|0,c[O>>2]|0);ma=i;i=i+((4*(c[D>>2]|0)|0)+15&-16)|0;c[da>>2]=6;c[ba>>2]=c[ba>>2]<<3;c[ca>>2]=Gb(c[A>>2]|0)|0;c[B>>2]=c[o>>2];while(1){if((c[B>>2]|0)>=(c[w>>2]|0)){break}pa=$(c[O>>2]|0,(b[(c[ka>>2]|0)+((c[B>>2]|0)+1<<1)>>1]|0)-(b[(c[ka>>2]|0)+(c[B>>2]<<1)>>1]|0)|0)|0;c[ja>>2]=pa<<c[J>>2];pa=c[ja>>2]|0;if((c[ja>>2]<<3|0)<((48>(c[ja>>2]|0)?48:c[ja>>2]|0)|0)){pa=pa<<3}else{pa=48>(pa|0)?48:c[ja>>2]|0}c[ha>>2]=pa;c[fa>>2]=c[da>>2];c[ea>>2]=0;while(1){if(((c[ca>>2]|0)+(c[fa>>2]<<3)|0)>=(c[ba>>2]|0)){break}if((c[ea>>2]|0)>=(c[oa+(c[B>>2]<<2)>>2]|0)){break}c[ga>>2]=Ob(c[A>>2]|0,c[fa>>2]|0)|0;c[ca>>2]=Gb(c[A>>2]|0)|0;if((c[ga>>2]|0)==0){break}c[ea>>2]=(c[ea>>2]|0)+(c[ha>>2]|0);c[ba>>2]=(c[ba>>2]|0)-(c[ha>>2]|0);c[fa>>2]=1}c[ma+(c[B>>2]<<2)>>2]=c[ea>>2];if((c[ea>>2]|0)>0){if(2>((c[da>>2]|0)-1|0)){pa=2}else{pa=(c[da>>2]|0)-1|0}c[da>>2]=pa}c[B>>2]=(c[B>>2]|0)+1}da=i;i=i+((4*(c[D>>2]|0)|0)+15&-16)|0;if(((c[ca>>2]|0)+48|0)<=(c[ba>>2]|0)){ba=Pb(c[A>>2]|0,248,7)|0}else{ba=5}c[Z>>2]=ba;ra=c[k>>2]<<3<<3;c[_>>2]=ra-(Gb(c[A>>2]|0)|0)-1;do{if((c[N>>2]|0)!=0){if((c[J>>2]|0)<2){ba=0;break}ba=(c[_>>2]|0)>=((c[J>>2]|0)+2<<3|0)}else{ba=0}}while(0);c[S>>2]=ba?8:0;c[_>>2]=(c[_>>2]|0)-(c[S>>2]|0);ba=i;i=i+((4*(c[D>>2]|0)|0)+15&-16)|0;ca=i;i=i+((4*(c[D>>2]|0)|0)+15&-16)|0;c[Q>>2]=Fc(c[z>>2]|0,c[o>>2]|0,c[w>>2]|0,ma,oa,c[Z>>2]|0,R,Y,c[_>>2]|0,T,ba,da,ca,c[O>>2]|0,c[J>>2]|0,c[A>>2]|0,0,0,0)|0;Dc(c[z>>2]|0,c[o>>2]|0,c[w>>2]|0,c[n>>2]|0,da,c[A>>2]|0,c[O>>2]|0);c[u>>2]=0;do{$e(c[aa+(c[u>>2]<<2)>>2]|0,(c[aa+(c[u>>2]<<2)>>2]|0)+(c[v>>2]<<2)|0,(2048-(c[v>>2]|0)+((c[I>>2]|0)/2|0)<<2)+0|0)|0;ra=(c[u>>2]|0)+1|0;c[u>>2]=ra}while((ra|0)<(c[q>>2]|0));ra=$(c[O>>2]|0,c[D>>2]|0)|0;_=i;i=i+((1*ra|0)+15&-16)|0;ra=$(c[O>>2]|0,c[v>>2]|0)|0;Z=i;i=i+((2*ra|0)+15&-16)|0;if((c[O>>2]|0)==2){aa=Z+(c[v>>2]<<1)|0}else{aa=0}Ia(0,c[z>>2]|0,c[o>>2]|0,c[w>>2]|0,Z,aa,_,0,ba,c[X>>2]|0,c[P>>2]|0,c[Y>>2]|0,c[R>>2]|0,la,(c[k>>2]<<6)-(c[S>>2]|0)|0,c[T>>2]|0,c[A>>2]|0,c[J>>2]|0,c[Q>>2]|0,(c[t>>2]|0)+36|0);if((c[S>>2]|0)>0){c[W>>2]=Rb(c[A>>2]|0,1)|0}e=c[z>>2]|0;d=c[o>>2]|0;a=c[w>>2]|0;qa=c[n>>2]|0;ra=c[k>>2]<<3;ra=ra-(kb(c[A>>2]|0)|0)|0;Ec(e,d,a,qa,da,ca,ra,c[A>>2]|0,c[O>>2]|0);if((c[W>>2]|0)!=0){Ea(c[z>>2]|0,Z,_,c[J>>2]|0,c[O>>2]|0,c[v>>2]|0,c[o>>2]|0,c[w>>2]|0,c[n>>2]|0,c[x>>2]|0,c[y>>2]|0,ba,c[(c[t>>2]|0)+36>>2]|0)}b:do{if((c[U>>2]|0)!=0){c[B>>2]=0;while(1){if((c[B>>2]|0)>=($(c[O>>2]|0,c[D>>2]|0)|0)){break b}b[(c[n>>2]|0)+(c[B>>2]<<1)>>1]=-28672;c[B>>2]=(c[B>>2]|0)+1}}}while(0);mb(c[z>>2]|0,Z,m,c[n>>2]|0,c[o>>2]|0,c[V>>2]|0,c[O>>2]|0,c[q>>2]|0,c[N>>2]|0,c[J>>2]|0,c[(c[t>>2]|0)+16>>2]|0,c[U>>2]|0);c[u>>2]=0;do{if((c[(c[t>>2]|0)+52>>2]|0)>15){P=c[(c[t>>2]|0)+52>>2]|0}else{P=15}c[(c[t>>2]|0)+52>>2]=P;if((c[(c[t>>2]|0)+56>>2]|0)>15){P=c[(c[t>>2]|0)+56>>2]|0}else{P=15}c[(c[t>>2]|0)+56>>2]=P;ab(c[m+(c[u>>2]<<2)>>2]|0,c[m+(c[u>>2]<<2)>>2]|0,c[(c[t>>2]|0)+56>>2]|0,c[(c[t>>2]|0)+52>>2]|0,c[(c[z>>2]|0)+36>>2]|0,b[(c[t>>2]|0)+62>>1]|0,b[(c[t>>2]|0)+60>>1]|0,c[(c[t>>2]|0)+68>>2]|0,c[(c[t>>2]|0)+64>>2]|0,c[(c[z>>2]|0)+52>>2]|0,c[I>>2]|0);if((c[J>>2]|0)!=0){ab((c[m+(c[u>>2]<<2)>>2]|0)+(c[(c[z>>2]|0)+36>>2]<<2)|0,(c[m+(c[u>>2]<<2)>>2]|0)+(c[(c[z>>2]|0)+36>>2]<<2)|0,c[(c[t>>2]|0)+52>>2]|0,c[K>>2]|0,(c[v>>2]|0)-(c[(c[z>>2]|0)+36>>2]|0)|0,b[(c[t>>2]|0)+60>>1]|0,b[L>>1]|0,c[(c[t>>2]|0)+64>>2]|0,c[M>>2]|0,c[(c[z>>2]|0)+52>>2]|0,c[I>>2]|0)}ra=(c[u>>2]|0)+1|0;c[u>>2]=ra}while((ra|0)<(c[q>>2]|0));c[(c[t>>2]|0)+56>>2]=c[(c[t>>2]|0)+52>>2];b[(c[t>>2]|0)+62>>1]=b[(c[t>>2]|0)+60>>1]|0;c[(c[t>>2]|0)+68>>2]=c[(c[t>>2]|0)+64>>2];c[(c[t>>2]|0)+52>>2]=c[K>>2];b[(c[t>>2]|0)+60>>1]=b[L>>1]|0;c[(c[t>>2]|0)+64>>2]=c[M>>2];if((c[J>>2]|0)!=0){c[(c[t>>2]|0)+56>>2]=c[(c[t>>2]|0)+52>>2];b[(c[t>>2]|0)+62>>1]=b[(c[t>>2]|0)+60>>1]|0;c[(c[t>>2]|0)+68>>2]=c[(c[t>>2]|0)+64>>2]}if((c[O>>2]|0)==1){Ze((c[n>>2]|0)+(c[D>>2]<<1)|0,c[n>>2]|0,(c[D>>2]<<1)+0|0)|0}c:do{if((c[N>>2]|0)!=0){c[B>>2]=0;while(1){if((c[B>>2]|0)>=(c[D>>2]<<1|0)){break c}G=c[B>>2]|0;if((b[(c[x>>2]|0)+(c[B>>2]<<1)>>1]|0)<(b[(c[n>>2]|0)+(c[B>>2]<<1)>>1]|0)){G=b[(c[x>>2]|0)+(G<<1)>>1]|0}else{G=b[(c[n>>2]|0)+(G<<1)>>1]|0}b[(c[x>>2]|0)+(c[B>>2]<<1)>>1]=G<<16>>16;c[B>>2]=(c[B>>2]|0)+1}}else{Ze(c[y>>2]|0,c[x>>2]|0,(c[D>>2]<<1<<1)+0|0)|0;Ze(c[x>>2]|0,c[n>>2]|0,(c[D>>2]<<1<<1)+0|0)|0;c[B>>2]=0;while(1){if((c[B>>2]|0)>=(c[D>>2]<<1|0)){break c}I=c[B>>2]|0;if(((b[(c[G>>2]|0)+(c[B>>2]<<1)>>1]|0)+(c[H>>2]|0)|0)<(b[(c[n>>2]|0)+(c[B>>2]<<1)>>1]|0)){I=(b[(c[G>>2]|0)+(I<<1)>>1]|0)+(c[H>>2]|0)|0}else{I=b[(c[n>>2]|0)+(I<<1)>>1]|0}b[(c[G>>2]|0)+(c[B>>2]<<1)>>1]=I;c[B>>2]=(c[B>>2]|0)+1}}}while(0);c[u>>2]=0;do{c[B>>2]=0;while(1){if((c[B>>2]|0)>=(c[o>>2]|0)){break}ra=$(c[u>>2]|0,c[D>>2]|0)|0;b[(c[n>>2]|0)+(ra+(c[B>>2]|0)<<1)>>1]=0;ra=$(c[u>>2]|0,c[D>>2]|0)|0;b[(c[y>>2]|0)+(ra+(c[B>>2]|0)<<1)>>1]=-28672;ra=$(c[u>>2]|0,c[D>>2]|0)|0;b[(c[x>>2]|0)+(ra+(c[B>>2]|0)<<1)>>1]=-28672;c[B>>2]=(c[B>>2]|0)+1}c[B>>2]=c[w>>2];while(1){G=c[u>>2]|0;if((c[B>>2]|0)>=(c[D>>2]|0)){break}ra=$(G,c[D>>2]|0)|0;b[(c[n>>2]|0)+(ra+(c[B>>2]|0)<<1)>>1]=0;ra=$(c[u>>2]|0,c[D>>2]|0)|0;b[(c[y>>2]|0)+(ra+(c[B>>2]|0)<<1)>>1]=-28672;ra=$(c[u>>2]|0,c[D>>2]|0)|0;b[(c[x>>2]|0)+(ra+(c[B>>2]|0)<<1)>>1]=-28672;c[B>>2]=(c[B>>2]|0)+1}ra=G+1|0;c[u>>2]=ra}while((ra|0)<2);c[(c[t>>2]|0)+36>>2]=c[(c[A>>2]|0)+28>>2];jb(m,c[l>>2]|0,c[v>>2]|0,c[q>>2]|0,c[(c[t>>2]|0)+16>>2]|0,(c[z>>2]|0)+16|0,(c[t>>2]|0)+72|0,c[E>>2]|0);c[(c[t>>2]|0)+48>>2]=0;ra=kb(c[A>>2]|0)|0;if((ra|0)>(c[k>>2]<<3|0)){c[p>>2]=-3;c[s>>2]=1}else{if((nb(c[A>>2]|0)|0)!=0){c[(c[t>>2]|0)+40>>2]=1}c[p>>2]=(c[F>>2]|0)/(c[(c[t>>2]|0)+16>>2]|0)|0;c[s>>2]=1}na(c[r>>2]|0);ra=c[p>>2]|0;i=C;return ra|0}ib(c[t>>2]|0,c[v>>2]|0,c[J>>2]|0);jb(m,c[l>>2]|0,c[v>>2]|0,c[q>>2]|0,c[(c[t>>2]|0)+16>>2]|0,(c[z>>2]|0)+16|0,(c[t>>2]|0)+72|0,c[E>>2]|0);c[p>>2]=(c[F>>2]|0)/(c[(c[t>>2]|0)+16>>2]|0)|0;ra=c[p>>2]|0;i=C;return ra|0}c[p>>2]=-1;ra=c[p>>2]|0;i=C;return ra|0}function ib(a,d,e){a=a|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ja=0;o=i;i=i+2464|0;k=o+20|0;l=o+80|0;r=o+4|0;n=o+248|0;f=o+256|0;j=o+76|0;g=o+272|0;E=o+24|0;B=o+32|0;x=o+36|0;ha=o+40|0;ja=o+44|0;v=o+48|0;p=o+52|0;z=o+56|0;h=o+60|0;H=o+64|0;m=o+236|0;ga=o+244|0;M=o+252|0;D=o+260|0;w=o+264|0;y=o+184|0;F=o+188|0;C=o+192|0;A=o+2384|0;u=o+200|0;s=o+204|0;t=o+208|0;da=o+212|0;X=o+2442|0;P=o+220|0;fa=o+224|0;S=o+336|0;R=o+2444|0;Q=o+280|0;G=o+68|0;J=o+232|0;T=o+72|0;K=o+240|0;aa=o+8|0;O=o;ca=o+84|0;ba=o+288|0;V=o+16|0;W=o+228|0;Y=o+12|0;_=o+216|0;Z=o+2446|0;U=o+2448|0;N=o+2392|0;q=o+196|0;L=o+284|0;I=o+282|0;ea=o+2440|0;c[k>>2]=a;c[l>>2]=d;c[r>>2]=e;c[j>>2]=c[(c[k>>2]|0)+8>>2];c[p>>2]=c[c[k>>2]>>2];c[z>>2]=c[(c[p>>2]|0)+8>>2];c[h>>2]=c[(c[p>>2]|0)+4>>2];c[M>>2]=c[(c[p>>2]|0)+24>>2];c[n>>2]=0;do{a=(c[k>>2]|0)+80+(($(c[n>>2]|0,2048+(c[h>>2]|0)|0)|0)<<2)|0;c[g+(c[n>>2]<<2)>>2]=a;c[E+(c[n>>2]<<2)>>2]=(c[g+(c[n>>2]<<2)>>2]|0)+8192+(0-(c[l>>2]|0)<<2);a=(c[n>>2]|0)+1|0;c[n>>2]=a}while((a|0)<(c[j>>2]|0));c[B>>2]=(c[k>>2]|0)+80+(($(2048+(c[h>>2]|0)|0,c[j>>2]|0)|0)<<2);c[x>>2]=(c[B>>2]|0)+((c[j>>2]|0)*24<<1);c[ha>>2]=(c[x>>2]|0)+(c[z>>2]<<1<<1);c[ja>>2]=(c[ha>>2]|0)+(c[z>>2]<<1<<1);c[v>>2]=(c[ja>>2]|0)+(c[z>>2]<<1<<1);c[m>>2]=c[(c[k>>2]|0)+48>>2];c[H>>2]=c[(c[k>>2]|0)+20>>2];if((c[m>>2]|0)>=5){e=1}else{e=(c[H>>2]|0)!=0}c[ga>>2]=e&1;if((c[ga>>2]|0)!=0){c[y>>2]=c[(c[k>>2]|0)+24>>2];if((c[y>>2]|0)<(c[(c[p>>2]|0)+12>>2]|0)){q=c[y>>2]|0}else{q=c[(c[p>>2]|0)+12>>2]|0}do{if((c[H>>2]|0)<=(q|0)){if((c[y>>2]|0)<(c[(c[p>>2]|0)+12>>2]|0)){q=c[y>>2]|0;break}else{q=c[(c[p>>2]|0)+12>>2]|0;break}}else{q=c[H>>2]|0}}while(0);c[F>>2]=q;a=$(c[j>>2]|0,c[l>>2]|0)|0;c[C>>2]=ia()|0;q=i;i=i+((2*a|0)+15&-16)|0;if((c[m>>2]|0)>=5){c[w>>2]=c[v>>2]}else{b[A>>1]=(c[m>>2]|0)==0?1536:512;c[n>>2]=0;do{c[f>>2]=c[H>>2];while(1){if((c[f>>2]|0)>=(c[y>>2]|0)){break}a=$(c[n>>2]|0,c[z>>2]|0)|0;a=(c[x>>2]|0)+(a+(c[f>>2]|0)<<1)|0;b[a>>1]=(b[a>>1]|0)-(b[A>>1]|0);c[f>>2]=(c[f>>2]|0)+1}a=(c[n>>2]|0)+1|0;c[n>>2]=a}while((a|0)<(c[j>>2]|0));c[w>>2]=c[x>>2]}c[D>>2]=c[(c[k>>2]|0)+36>>2];c[n>>2]=0;while(1){if((c[n>>2]|0)>=(c[j>>2]|0)){break}c[f>>2]=c[H>>2];while(1){if((c[f>>2]|0)>=(c[F>>2]|0)){break}a=$(c[l>>2]|0,c[n>>2]|0)|0;c[s>>2]=a+(b[(c[M>>2]|0)+(c[f>>2]<<1)>>1]<<c[r>>2]);c[t>>2]=(b[(c[M>>2]|0)+((c[f>>2]|0)+1<<1)>>1]|0)-(b[(c[M>>2]|0)+(c[f>>2]<<1)>>1]|0)<<c[r>>2];c[u>>2]=0;while(1){if((c[u>>2]|0)>=(c[t>>2]|0)){break}c[D>>2]=za(c[D>>2]|0)|0;b[q+((c[s>>2]|0)+(c[u>>2]|0)<<1)>>1]=c[D>>2]>>20;c[u>>2]=(c[u>>2]|0)+1}Oc(q+(c[s>>2]<<1)|0,c[t>>2]|0,32767);c[f>>2]=(c[f>>2]|0)+1}c[n>>2]=(c[n>>2]|0)+1}c[(c[k>>2]|0)+36>>2]=c[D>>2];c[n>>2]=0;do{$e(c[g+(c[n>>2]<<2)>>2]|0,(c[g+(c[n>>2]<<2)>>2]|0)+(c[l>>2]<<2)|0,(2048-(c[l>>2]|0)+(c[h>>2]>>1)<<2)+0|0)|0;a=(c[n>>2]|0)+1|0;c[n>>2]=a}while((a|0)<(c[j>>2]|0));mb(c[p>>2]|0,q,E,c[w>>2]|0,c[H>>2]|0,c[F>>2]|0,c[j>>2]|0,c[j>>2]|0,0,c[r>>2]|0,c[(c[k>>2]|0)+16>>2]|0,0);na(c[C>>2]|0);d=c[m>>2]|0;d=d+1|0;a=c[k>>2]|0;a=a+48|0;c[a>>2]=d;i=o;return}b[X>>1]=32767;if((c[m>>2]|0)==0){a=rb(g,c[j>>2]|0,c[(c[k>>2]|0)+32>>2]|0)|0;c[P>>2]=a;c[(c[k>>2]|0)+44>>2]=a}else{c[P>>2]=c[(c[k>>2]|0)+44>>2];b[X>>1]=26214}a=c[h>>2]|0;c[fa>>2]=ia()|0;r=i;i=i+((4*a|0)+15&-16)|0;c[da>>2]=c[(c[p>>2]|0)+52>>2];c[n>>2]=0;do{c[G>>2]=0;c[J>>2]=c[g+(c[n>>2]<<2)>>2];c[f>>2]=0;while(1){if((c[f>>2]|0)>=1024){break}b[S+(c[f>>2]<<1)>>1]=(c[(c[J>>2]|0)+(1024+(c[f>>2]|0)<<2)>>2]|0)+2048>>12;c[f>>2]=(c[f>>2]|0)+1}if((c[m>>2]|0)==0){Ab(S,ca,c[da>>2]|0,c[h>>2]|0,24,1024,c[(c[k>>2]|0)+32>>2]|0)|0;c[ca>>2]=(c[ca>>2]|0)+(c[ca>>2]>>13);c[f>>2]=1;while(1){if((c[f>>2]|0)>24){break}a=(($(c[f>>2]<<1,c[f>>2]|0)|0)&65535)<<16>>16;a=($(a,(c[ca+(c[f>>2]<<2)>>2]>>16&65535)<<16>>16)|0)<<1;d=(($(c[f>>2]<<1,c[f>>2]|0)|0)&65535)<<16>>16;d=a+(($(d,c[ca+(c[f>>2]<<2)>>2]&65535&65535)|0)>>15)|0;a=ca+(c[f>>2]<<2)|0;c[a>>2]=(c[a>>2]|0)-d;c[f>>2]=(c[f>>2]|0)+1}wb((c[B>>2]|0)+((c[n>>2]|0)*24<<1)|0,ca,24)}if((c[P>>2]<<1|0)<1024){p=c[P>>2]<<1}else{p=1024}c[aa>>2]=p;c[f>>2]=0;while(1){if((c[f>>2]|0)>=24){break}b[ba+(c[f>>2]<<1)>>1]=(c[(c[J>>2]|0)+(2048-(c[aa>>2]|0)-1-(c[f>>2]|0)<<2)>>2]|0)+2048>>12;c[f>>2]=(c[f>>2]|0)+1}xb(S+2048+(0-(c[aa>>2]|0)<<1)|0,(c[B>>2]|0)+((c[n>>2]|0)*24<<1)|0,S+2048+(0-(c[aa>>2]|0)<<1)|0,c[aa>>2]|0,24,ba);c[V>>2]=1;c[W>>2]=1;if(0>(((sb(tb(S+(1024-(c[aa>>2]|0)<<1)|0,c[aa>>2]|0)|0)|0)<<16>>16<<1)-20|0)){p=0}else{p=((sb(tb(S+(1024-(c[aa>>2]|0)<<1)|0,c[aa>>2]|0)|0)|0)<<16>>16<<1)-20|0}c[_>>2]=p;c[Y>>2]=c[aa>>2]>>1;c[f>>2]=0;while(1){if((c[f>>2]|0)>=(c[Y>>2]|0)){break}b[Z>>1]=b[S+(1024-(c[Y>>2]|0)+(c[f>>2]|0)<<1)>>1]|0;a=$(b[Z>>1]|0,b[Z>>1]|0)|0;c[V>>2]=(c[V>>2]|0)+(a>>c[_>>2]);b[Z>>1]=b[S+(1024-(c[Y>>2]<<1)+(c[f>>2]|0)<<1)>>1]|0;a=$(b[Z>>1]|0,b[Z>>1]|0)|0;c[W>>2]=(c[W>>2]|0)+(a>>c[_>>2]);c[f>>2]=(c[f>>2]|0)+1}c[V>>2]=(c[V>>2]|0)<(c[W>>2]|0)?c[V>>2]|0:c[W>>2]|0;b[R>>1]=mc(ic(c[V>>2]>>1,c[W>>2]|0)|0)|0;$e(c[J>>2]|0,(c[J>>2]|0)+(c[l>>2]<<2)|0,(2048-(c[l>>2]|0)<<2)+0|0)|0;c[T>>2]=1024-(c[P>>2]|0);c[K>>2]=(c[l>>2]|0)+(c[h>>2]|0);b[Q>>1]=($(b[X>>1]|0,b[R>>1]|0)|0)>>15;c[O>>2]=0;c[f>>2]=0;while(1){if((c[f>>2]|0)>=(c[K>>2]|0)){break}if((c[O>>2]|0)>=(c[P>>2]|0)){c[O>>2]=(c[O>>2]|0)-(c[P>>2]|0);b[Q>>1]=($(b[Q>>1]|0,b[R>>1]|0)|0)>>15}a=($(b[Q>>1]|0,b[S+((c[T>>2]|0)+(c[O>>2]|0)<<1)>>1]|0)|0)>>15<<12;c[(c[J>>2]|0)+(2048-(c[l>>2]|0)+(c[f>>2]|0)<<2)>>2]=a;b[U>>1]=(c[(c[J>>2]|0)+(1024-(c[l>>2]|0)+(c[T>>2]|0)+(c[O>>2]|0)<<2)>>2]|0)+2048>>12;a=($(b[U>>1]|0,b[U>>1]|0)|0)>>8;c[G>>2]=(c[G>>2]|0)+a;c[f>>2]=(c[f>>2]|0)+1;c[O>>2]=(c[O>>2]|0)+1}c[f>>2]=0;while(1){if((c[f>>2]|0)>=24){break}b[N+(c[f>>2]<<1)>>1]=(c[(c[J>>2]|0)+(2048-(c[l>>2]|0)-1-(c[f>>2]|0)<<2)>>2]|0)+2048>>12;c[f>>2]=(c[f>>2]|0)+1}zb((c[J>>2]|0)+8192+(0-(c[l>>2]|0)<<2)|0,(c[B>>2]|0)+((c[n>>2]|0)*24<<1)|0,(c[J>>2]|0)+8192+(0-(c[l>>2]|0)<<2)|0,c[K>>2]|0,24,N);c[q>>2]=0;c[f>>2]=0;while(1){if((c[f>>2]|0)>=(c[K>>2]|0)){break}b[L>>1]=(c[(c[J>>2]|0)+(2048-(c[l>>2]|0)+(c[f>>2]|0)<<2)>>2]|0)+2048>>12;a=($(b[L>>1]|0,b[L>>1]|0)|0)>>8;c[q>>2]=(c[q>>2]|0)+a;c[f>>2]=(c[f>>2]|0)+1}a:do{if((c[G>>2]|0)>(c[q>>2]>>2|0)){if((c[G>>2]|0)<(c[q>>2]|0)){b[I>>1]=mc(ic((c[G>>2]>>1)+1|0,(c[q>>2]|0)+1|0)|0)|0;c[f>>2]=0;while(1){if((c[f>>2]|0)>=(c[h>>2]|0)){break}b[ea>>1]=32767-(($(b[(c[da>>2]|0)+(c[f>>2]<<1)>>1]|0,(32767-(b[I>>1]|0)&65535)<<16>>16)|0)>>15);a=($(b[ea>>1]|0,(c[(c[J>>2]|0)+(2048-(c[l>>2]|0)+(c[f>>2]|0)<<2)>>2]>>16&65535)<<16>>16)|0)<<1;a=a+(($(b[ea>>1]|0,c[(c[J>>2]|0)+(2048-(c[l>>2]|0)+(c[f>>2]|0)<<2)>>2]&65535&65535)|0)>>15)|0;c[(c[J>>2]|0)+(2048-(c[l>>2]|0)+(c[f>>2]|0)<<2)>>2]=a;c[f>>2]=(c[f>>2]|0)+1}c[f>>2]=c[h>>2];while(1){if((c[f>>2]|0)>=(c[K>>2]|0)){break a}a=($(b[I>>1]|0,(c[(c[J>>2]|0)+(2048-(c[l>>2]|0)+(c[f>>2]|0)<<2)>>2]>>16&65535)<<16>>16)|0)<<1;a=a+(($(b[I>>1]|0,c[(c[J>>2]|0)+(2048-(c[l>>2]|0)+(c[f>>2]|0)<<2)>>2]&65535&65535)|0)>>15)|0;c[(c[J>>2]|0)+(2048-(c[l>>2]|0)+(c[f>>2]|0)<<2)>>2]=a;c[f>>2]=(c[f>>2]|0)+1}}}else{c[f>>2]=0;while(1){if((c[f>>2]|0)>=(c[K>>2]|0)){break a}c[(c[J>>2]|0)+(2048-(c[l>>2]|0)+(c[f>>2]|0)<<2)>>2]=0;c[f>>2]=(c[f>>2]|0)+1}}}while(0);ab(r,(c[J>>2]|0)+8192|0,c[(c[k>>2]|0)+52>>2]|0,c[(c[k>>2]|0)+52>>2]|0,c[h>>2]|0,0-(b[(c[k>>2]|0)+60>>1]|0)&65535,0-(b[(c[k>>2]|0)+60>>1]|0)&65535,c[(c[k>>2]|0)+64>>2]|0,c[(c[k>>2]|0)+64>>2]|0,0,0);c[f>>2]=0;while(1){if((c[f>>2]|0)>=((c[h>>2]|0)/2|0|0)){break}d=($(b[(c[da>>2]|0)+(c[f>>2]<<1)>>1]|0,(c[r+((c[h>>2]|0)-1-(c[f>>2]|0)<<2)>>2]>>16&65535)<<16>>16)|0)<<1;d=d+(($(b[(c[da>>2]|0)+(c[f>>2]<<1)>>1]|0,c[r+((c[h>>2]|0)-1-(c[f>>2]|0)<<2)>>2]&65535&65535)|0)>>15)|0;a=($(b[(c[da>>2]|0)+((c[h>>2]|0)-(c[f>>2]|0)-1<<1)>>1]|0,(c[r+(c[f>>2]<<2)>>2]>>16&65535)<<16>>16)|0)<<1;a=d+(a+(($(b[(c[da>>2]|0)+((c[h>>2]|0)-(c[f>>2]|0)-1<<1)>>1]|0,c[r+(c[f>>2]<<2)>>2]&65535&65535)|0)>>15))|0;c[(c[J>>2]|0)+(2048+(c[f>>2]|0)<<2)>>2]=a;c[f>>2]=(c[f>>2]|0)+1}a=(c[n>>2]|0)+1|0;c[n>>2]=a}while((a|0)<(c[j>>2]|0));na(c[fa>>2]|0);d=c[m>>2]|0;d=d+1|0;a=c[k>>2]|0;a=a+48|0;c[a>>2]=d;i=o;return}function jb(a,d,e,f,g,h,j,k){a=a|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0;t=i;i=i+80|0;D=t+36|0;E=t+24|0;x=t+44|0;v=t+60|0;q=t+12|0;F=t+16|0;l=t+48|0;r=t+56|0;y=t+64|0;o=t+68|0;w=t+72|0;A=t+76|0;s=t;n=t+4|0;m=t+40|0;p=t+20|0;u=t+52|0;C=t+28|0;z=t+32|0;B=t+8|0;c[D>>2]=a;c[E>>2]=d;c[x>>2]=e;c[v>>2]=f;c[q>>2]=g;c[F>>2]=h;c[l>>2]=j;c[r>>2]=k;c[w>>2]=0;a=c[x>>2]|0;c[s>>2]=ia()|0;k=i;i=i+((4*a|0)+15&-16)|0;b[A>>1]=b[c[F>>2]>>1]|0;c[o>>2]=(c[x>>2]|0)/(c[q>>2]|0)|0;c[y>>2]=0;do{c[u>>2]=c[(c[l>>2]|0)+(c[y>>2]<<2)>>2];c[m>>2]=c[(c[D>>2]|0)+(c[y>>2]<<2)>>2];c[p>>2]=(c[E>>2]|0)+(c[y>>2]<<1);a:do{if((c[q>>2]|0)<=1){F=(c[r>>2]|0)!=0;c[n>>2]=0;if(F){while(1){if((c[n>>2]|0)>=(c[x>>2]|0)){break a}c[z>>2]=(c[(c[m>>2]|0)+(c[n>>2]<<2)>>2]|0)+(c[u>>2]|0)+0;a=($(b[A>>1]|0,(c[z>>2]>>16&65535)<<16>>16)|0)<<1;c[u>>2]=a+(($(b[A>>1]|0,c[z>>2]&65535&65535)|0)>>15);a=$(c[n>>2]|0,c[v>>2]|0)|0;a=b[(c[p>>2]|0)+(a<<1)>>1]|0;a=pb(a+((qb(c[z>>2]|0)|0)<<16>>16)|0)|0;F=$(c[n>>2]|0,c[v>>2]|0)|0;b[(c[p>>2]|0)+(F<<1)>>1]=a;c[n>>2]=(c[n>>2]|0)+1}}else{while(1){if((c[n>>2]|0)>=(c[x>>2]|0)){break a}c[B>>2]=(c[(c[m>>2]|0)+(c[n>>2]<<2)>>2]|0)+(c[u>>2]|0)+0;a=($(b[A>>1]|0,(c[B>>2]>>16&65535)<<16>>16)|0)<<1;c[u>>2]=a+(($(b[A>>1]|0,c[B>>2]&65535&65535)|0)>>15);a=qb(c[B>>2]|0)|0;F=$(c[n>>2]|0,c[v>>2]|0)|0;b[(c[p>>2]|0)+(F<<1)>>1]=a;c[n>>2]=(c[n>>2]|0)+1}}}else{c[n>>2]=0;while(1){if((c[n>>2]|0)>=(c[x>>2]|0)){break}c[C>>2]=(c[(c[m>>2]|0)+(c[n>>2]<<2)>>2]|0)+(c[u>>2]|0)+0;F=($(b[A>>1]|0,(c[C>>2]>>16&65535)<<16>>16)|0)<<1;c[u>>2]=F+(($(b[A>>1]|0,c[C>>2]&65535&65535)|0)>>15);c[k+(c[n>>2]<<2)>>2]=c[C>>2];c[n>>2]=(c[n>>2]|0)+1}c[w>>2]=1}}while(0);c[(c[l>>2]|0)+(c[y>>2]<<2)>>2]=c[u>>2];b:do{if((c[w>>2]|0)!=0){F=(c[r>>2]|0)!=0;c[n>>2]=0;if(F){while(1){if((c[n>>2]|0)>=(c[o>>2]|0)){break b}a=$(c[n>>2]|0,c[v>>2]|0)|0;a=b[(c[p>>2]|0)+(a<<1)>>1]|0;a=pb(a+((qb(c[k+(($(c[n>>2]|0,c[q>>2]|0)|0)<<2)>>2]|0)|0)<<16>>16)|0)|0;F=$(c[n>>2]|0,c[v>>2]|0)|0;b[(c[p>>2]|0)+(F<<1)>>1]=a;c[n>>2]=(c[n>>2]|0)+1}}else{while(1){if((c[n>>2]|0)>=(c[o>>2]|0)){break b}a=qb(c[k+(($(c[n>>2]|0,c[q>>2]|0)|0)<<2)>>2]|0)|0;F=$(c[n>>2]|0,c[v>>2]|0)|0;b[(c[p>>2]|0)+(F<<1)>>1]=a;c[n>>2]=(c[n>>2]|0)+1}}}}while(0);F=(c[y>>2]|0)+1|0;c[y>>2]=F}while((F|0)<(c[v>>2]|0));na(c[s>>2]|0);i=t;return}function kb(a){a=a|0;var b=0,d=0;b=i;i=i+16|0;d=b;c[d>>2]=a;a=c[(c[d>>2]|0)+20>>2]|0;a=a-(32-(We(c[(c[d>>2]|0)+28>>2]|0)|0))|0;i=b;return a|0}function lb(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0;t=i;i=i+64|0;m=t+24|0;l=t+20|0;r=t+44|0;x=t+36|0;j=t+32|0;n=t+40|0;q=t+48|0;u=t+52|0;o=t+8|0;p=t+4|0;s=t+28|0;k=t+12|0;w=t;v=t+16|0;c[m>>2]=b;c[l>>2]=d;c[r>>2]=e;c[x>>2]=f;c[j>>2]=g;c[n>>2]=h;c[w>>2]=c[(c[n>>2]|0)+4>>2]<<3;c[v>>2]=kb(c[n>>2]|0)|0;c[k>>2]=(c[r>>2]|0)!=0?2:4;if((c[j>>2]|0)>0){h=((c[v>>2]|0)+(c[k>>2]|0)+1|0)>>>0<=(c[w>>2]|0)>>>0}else{h=0}c[p>>2]=h&1;c[w>>2]=(c[w>>2]|0)-(c[p>>2]|0);c[u>>2]=0;c[s>>2]=0;c[q>>2]=c[m>>2];while(1){if((c[q>>2]|0)>=(c[l>>2]|0)){break}if(((c[v>>2]|0)+(c[k>>2]|0)|0)>>>0<=(c[w>>2]|0)>>>0){b=Ob(c[n>>2]|0,c[k>>2]|0)|0;c[u>>2]=c[u>>2]^b;c[v>>2]=kb(c[n>>2]|0)|0;c[s>>2]=c[s>>2]|c[u>>2]}c[(c[x>>2]|0)+(c[q>>2]<<2)>>2]=c[u>>2];c[k>>2]=(c[r>>2]|0)!=0?4:5;c[q>>2]=(c[q>>2]|0)+1}c[o>>2]=0;if((c[p>>2]|0)!=0?(a[200+(c[j>>2]<<3)+((c[r>>2]<<2)+0+(c[s>>2]|0))>>0]|0)!=(a[200+(c[j>>2]<<3)+((c[r>>2]<<2)+2+(c[s>>2]|0))>>0]|0):0){c[o>>2]=Ob(c[n>>2]|0,1)|0}c[q>>2]=c[m>>2];while(1){if((c[q>>2]|0)>=(c[l>>2]|0)){break}c[(c[x>>2]|0)+(c[q>>2]<<2)>>2]=a[200+(c[j>>2]<<3)+((c[r>>2]<<2)+(c[o>>2]<<1)+(c[(c[x>>2]|0)+(c[q>>2]<<2)>>2]|0))>>0]|0;c[q>>2]=(c[q>>2]|0)+1}i=t;return}function mb(a,b,d,e,f,g,h,j,k,l,m,n){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;m=m|0;n=n|0;var o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0;A=i;i=i+112|0;u=A+92|0;y=A+84|0;s=A+40|0;z=A+44|0;o=A;B=A+16|0;L=A+20|0;K=A+24|0;N=A+28|0;M=A+72|0;D=A+80|0;E=A+88|0;J=A+96|0;I=A+48|0;C=A+52|0;q=A+56|0;r=A+60|0;F=A+8|0;t=A+64|0;w=A+12|0;H=A+32|0;v=A+68|0;G=A+36|0;x=A+76|0;p=A+4|0;c[u>>2]=a;c[y>>2]=b;c[s>>2]=d;c[z>>2]=e;c[o>>2]=f;c[B>>2]=g;c[L>>2]=h;c[K>>2]=j;c[N>>2]=k;c[M>>2]=l;c[D>>2]=m;c[E>>2]=n;c[v>>2]=c[(c[u>>2]|0)+4>>2];c[H>>2]=c[(c[u>>2]|0)+8>>2];c[F>>2]=c[(c[u>>2]|0)+36>>2]<<c[M>>2];a=c[F>>2]|0;c[G>>2]=ia()|0;n=i;i=i+((4*a|0)+15&-16)|0;c[C>>2]=1<<c[M>>2];if((c[N>>2]|0)!=0){c[r>>2]=c[C>>2];c[t>>2]=c[(c[u>>2]|0)+36>>2];c[w>>2]=c[(c[u>>2]|0)+28>>2]}else{c[r>>2]=1;c[t>>2]=c[(c[u>>2]|0)+36>>2]<<c[M>>2];c[w>>2]=(c[(c[u>>2]|0)+28>>2]|0)-(c[M>>2]|0)}if((c[K>>2]|0)==2?(c[L>>2]|0)==1:0){Ca(c[u>>2]|0,c[y>>2]|0,n,c[z>>2]|0,c[o>>2]|0,c[B>>2]|0,c[C>>2]|0,c[D>>2]|0,c[E>>2]|0);c[x>>2]=(c[(c[s>>2]|0)+4>>2]|0)+(((c[v>>2]|0)/2|0)<<2);Ze(c[x>>2]|0,n|0,(c[F>>2]<<2)+0|0)|0;c[q>>2]=0;while(1){if((c[q>>2]|0)>=(c[r>>2]|0)){break}N=(c[c[s>>2]>>2]|0)+(($(c[t>>2]|0,c[q>>2]|0)|0)<<2)|0;pc((c[u>>2]|0)+56|0,(c[x>>2]|0)+(c[q>>2]<<2)|0,N,c[(c[u>>2]|0)+52>>2]|0,c[v>>2]|0,c[w>>2]|0,c[r>>2]|0);c[q>>2]=(c[q>>2]|0)+1}c[q>>2]=0;while(1){if((c[q>>2]|0)>=(c[r>>2]|0)){break}N=(c[(c[s>>2]|0)+4>>2]|0)+(($(c[t>>2]|0,c[q>>2]|0)|0)<<2)|0;pc((c[u>>2]|0)+56|0,n+(c[q>>2]<<2)|0,N,c[(c[u>>2]|0)+52>>2]|0,c[v>>2]|0,c[w>>2]|0,c[r>>2]|0);c[q>>2]=(c[q>>2]|0)+1}N=c[G>>2]|0;na(N|0);i=A;return}if((c[K>>2]|0)==1?(c[L>>2]|0)==2:0){c[p>>2]=(c[c[s>>2]>>2]|0)+(((c[v>>2]|0)/2|0)<<2);Ca(c[u>>2]|0,c[y>>2]|0,n,c[z>>2]|0,c[o>>2]|0,c[B>>2]|0,c[C>>2]|0,c[D>>2]|0,c[E>>2]|0);Ca(c[u>>2]|0,(c[y>>2]|0)+(c[F>>2]<<1)|0,c[p>>2]|0,(c[z>>2]|0)+(c[H>>2]<<1)|0,c[o>>2]|0,c[B>>2]|0,c[C>>2]|0,c[D>>2]|0,c[E>>2]|0);c[I>>2]=0;while(1){if((c[I>>2]|0)>=(c[F>>2]|0)){break}c[n+(c[I>>2]<<2)>>2]=(c[n+(c[I>>2]<<2)>>2]|0)+(c[(c[p>>2]|0)+(c[I>>2]<<2)>>2]|0)>>1;c[I>>2]=(c[I>>2]|0)+1}c[q>>2]=0;while(1){if((c[q>>2]|0)>=(c[r>>2]|0)){break}N=(c[c[s>>2]>>2]|0)+(($(c[t>>2]|0,c[q>>2]|0)|0)<<2)|0;pc((c[u>>2]|0)+56|0,n+(c[q>>2]<<2)|0,N,c[(c[u>>2]|0)+52>>2]|0,c[v>>2]|0,c[w>>2]|0,c[r>>2]|0);c[q>>2]=(c[q>>2]|0)+1}N=c[G>>2]|0;na(N|0);i=A;return}c[J>>2]=0;do{a=(c[y>>2]|0)+(($(c[J>>2]|0,c[F>>2]|0)|0)<<1)|0;N=(c[z>>2]|0)+(($(c[J>>2]|0,c[H>>2]|0)|0)<<1)|0;Ca(c[u>>2]|0,a,n,N,c[o>>2]|0,c[B>>2]|0,c[C>>2]|0,c[D>>2]|0,c[E>>2]|0);c[q>>2]=0;while(1){if((c[q>>2]|0)>=(c[r>>2]|0)){break}N=(c[(c[s>>2]|0)+(c[J>>2]<<2)>>2]|0)+(($(c[t>>2]|0,c[q>>2]|0)|0)<<2)|0;pc((c[u>>2]|0)+56|0,n+(c[q>>2]<<2)|0,N,c[(c[u>>2]|0)+52>>2]|0,c[v>>2]|0,c[w>>2]|0,c[r>>2]|0);c[q>>2]=(c[q>>2]|0)+1}N=(c[J>>2]|0)+1|0;c[J>>2]=N}while((N|0)<(c[K>>2]|0));N=c[G>>2]|0;na(N|0);i=A;return}function nb(a){a=a|0;var b=0,d=0;d=i;i=i+16|0;b=d;c[b>>2]=a;i=d;return c[(c[b>>2]|0)+44>>2]|0}function ob(a,d,e){a=a|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0;g=i;i=i+96|0;f=g+32|0;j=g+24|0;y=g+44|0;l=g+64|0;k=g+12|0;m=g+40|0;n=g+48|0;o=g+56|0;p=g+80|0;q=g+84|0;t=g+8|0;s=g+4|0;r=g;h=g+36|0;u=g+16|0;v=g+20|0;w=g+52|0;x=g+28|0;c[j>>2]=a;c[y>>2]=d;c[l>>2]=e;a:do{switch(c[y>>2]|0){case 10010:{a=c[l>>2]|0;y=c[a>>2]|0;c[l>>2]=a+4;c[k>>2]=y;if((c[k>>2]|0)>=0?(c[k>>2]|0)<(c[(c[c[j>>2]>>2]|0)+8>>2]|0):0){c[(c[j>>2]|0)+20>>2]=c[k>>2];h=24}else{h=25}break};case 10012:{a=c[l>>2]|0;y=c[a>>2]|0;c[l>>2]=a+4;c[m>>2]=y;if((c[m>>2]|0)>=1?(c[m>>2]|0)<=(c[(c[c[j>>2]>>2]|0)+8>>2]|0):0){c[(c[j>>2]|0)+24>>2]=c[m>>2];h=24}else{h=25}break};case 10008:{a=c[l>>2]|0;y=c[a>>2]|0;c[l>>2]=a+4;c[n>>2]=y;if((c[n>>2]|0)<1|(c[n>>2]|0)>2){h=25}else{c[(c[j>>2]|0)+12>>2]=c[n>>2];h=24}break};case 10007:{a=c[l>>2]|0;y=c[a>>2]|0;c[l>>2]=a+4;c[o>>2]=y;if((c[o>>2]|0)==0){h=25}else{c[c[o>>2]>>2]=c[(c[j>>2]|0)+40>>2];c[(c[j>>2]|0)+40>>2]=0;h=24}break};case 4027:{a=c[l>>2]|0;y=c[a>>2]|0;c[l>>2]=a+4;c[p>>2]=y;if((c[p>>2]|0)==0){h=25}else{c[c[p>>2]>>2]=(c[(c[j>>2]|0)+4>>2]|0)/(c[(c[j>>2]|0)+16>>2]|0)|0;h=24}break};case 4028:{c[t>>2]=(c[j>>2]|0)+80+(($(2048+(c[(c[j>>2]|0)+4>>2]|0)|0,c[(c[j>>2]|0)+8>>2]|0)|0)<<2);c[s>>2]=(c[t>>2]|0)+((c[(c[j>>2]|0)+8>>2]|0)*24<<1);c[r>>2]=(c[s>>2]|0)+(c[(c[c[j>>2]>>2]|0)+8>>2]<<1<<1);c[h>>2]=(c[r>>2]|0)+(c[(c[c[j>>2]>>2]|0)+8>>2]<<1<<1);Xe((c[j>>2]|0)+36|0,0,(eb(c[c[j>>2]>>2]|0,c[(c[j>>2]|0)+8>>2]|0)|0)-((c[j>>2]|0)+36-(c[j>>2]|0))|0)|0;c[q>>2]=0;while(1){if((c[q>>2]|0)>=(c[(c[c[j>>2]>>2]|0)+8>>2]<<1|0)){h=24;break a}b[(c[h>>2]|0)+(c[q>>2]<<1)>>1]=-28672;b[(c[r>>2]|0)+(c[q>>2]<<1)>>1]=-28672;c[q>>2]=(c[q>>2]|0)+1}};case 4033:{a=c[l>>2]|0;y=c[a>>2]|0;c[l>>2]=a+4;c[u>>2]=y;if((c[u>>2]|0)==0){h=25}else{c[c[u>>2]>>2]=c[(c[j>>2]|0)+52>>2];h=24}break};case 10015:{a=c[l>>2]|0;y=c[a>>2]|0;c[l>>2]=a+4;c[v>>2]=y;if((c[v>>2]|0)==0){h=25}else{c[c[v>>2]>>2]=c[c[j>>2]>>2];h=24}break};case 10016:{y=c[l>>2]|0;h=c[y>>2]|0;c[l>>2]=y+4;c[w>>2]=h;c[(c[j>>2]|0)+28>>2]=c[w>>2];h=24;break};case 4031:{a=c[l>>2]|0;y=c[a>>2]|0;c[l>>2]=a+4;c[x>>2]=y;if((c[x>>2]|0)==0){h=25}else{c[c[x>>2]>>2]=c[(c[j>>2]|0)+36>>2];h=24}break};default:{c[f>>2]=-5;y=c[f>>2]|0;i=g;return y|0}}}while(0);if((h|0)==24){c[f>>2]=0;y=c[f>>2]|0;i=g;return y|0}else if((h|0)==25){c[f>>2]=-1;y=c[f>>2]|0;i=g;return y|0}return 0}function pb(a){a=a|0;var b=0,d=0;b=i;i=i+16|0;d=b;c[d>>2]=a;if((c[d>>2]|0)<=32767){if((c[d>>2]|0)<-32768){a=-32768}else{a=(c[d>>2]&65535)<<16>>16}}else{a=32767}i=b;return a&65535|0}function qb(a){a=a|0;var b=0,d=0;d=i;i=i+16|0;b=d;c[b>>2]=a;c[b>>2]=(c[b>>2]|0)+2048>>12;c[b>>2]=(c[b>>2]|0)>-32768?c[b>>2]|0:-32768;c[b>>2]=(c[b>>2]|0)<32767?c[b>>2]|0:32767;i=d;return c[b>>2]&65535|0}function rb(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0;f=i;i=i+2064|0;k=f+12|0;j=f+8|0;g=f+4|0;e=f;h=f+16|0;c[k>>2]=a;c[j>>2]=b;c[g>>2]=d;rc(c[k>>2]|0,h,2048,c[j>>2]|0,c[g>>2]|0);yc(h+720|0,h,1328,620,e,c[g>>2]|0);c[e>>2]=720-(c[e>>2]|0);i=f;return c[e>>2]|0}function sb(a){a=a|0;var b=0,d=0;b=i;i=i+16|0;d=b;c[d>>2]=a;if((c[d>>2]|0)<=0){a=0}else{a=(ub(c[d>>2]|0)|0)<<16>>16}i=b;return a&65535|0}function tb(a,d){a=a|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0;f=i;i=i+16|0;h=f+8|0;k=f+4|0;e=f;j=f+14|0;g=f+12|0;c[h>>2]=a;c[k>>2]=d;b[j>>1]=0;b[g>>1]=0;c[e>>2]=0;while(1){d=b[j>>1]|0;if((c[e>>2]|0)>=(c[k>>2]|0)){break}if((d|0)>(b[(c[h>>2]|0)+(c[e>>2]<<1)>>1]|0)){d=b[j>>1]|0}else{d=b[(c[h>>2]|0)+(c[e>>2]<<1)>>1]|0}b[j>>1]=d<<16>>16;if((b[g>>1]|0)<(b[(c[h>>2]|0)+(c[e>>2]<<1)>>1]|0)){d=b[g>>1]|0}else{d=b[(c[h>>2]|0)+(c[e>>2]<<1)>>1]|0}b[g>>1]=d<<16>>16;c[e>>2]=(c[e>>2]|0)+1}if((d|0)>(0-(b[g>>1]|0)|0)){a=b[j>>1]|0;i=f;return a|0}else{a=0-(b[g>>1]|0)|0;i=f;return a|0}return 0}function ub(a){a=a|0;var b=0,d=0;b=i;i=i+16|0;d=b;c[d>>2]=a;a=32-(We(c[d>>2]|0)|0)-1&65535;i=b;return a|0}function vb(){return 0}function wb(a,d,e){a=a|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;m=i;i=i+144|0;r=m+128|0;l=m+16|0;h=m;g=m+120|0;f=m+124|0;j=m+132|0;k=m+12|0;n=m+24|0;q=m+20|0;o=m+8|0;p=m+4|0;c[r>>2]=a;c[l>>2]=d;c[h>>2]=e;c[k>>2]=c[c[l>>2]>>2];c[g>>2]=0;while(1){if((c[g>>2]|0)>=(c[h>>2]|0)){break}c[n+(c[g>>2]<<2)>>2]=0;c[g>>2]=(c[g>>2]|0)+1}a:do{if((c[c[l>>2]>>2]|0)!=0){c[g>>2]=0;while(1){if((c[g>>2]|0)>=(c[h>>2]|0)){break a}c[q>>2]=0;c[f>>2]=0;while(1){if((c[f>>2]|0)>=(c[g>>2]|0)){break}a=($((c[n+(c[f>>2]<<2)>>2]>>16&65535)<<16>>16,(c[(c[l>>2]|0)+((c[g>>2]|0)-(c[f>>2]|0)<<2)>>2]>>16&65535)<<16>>16)|0)<<1;a=a+(($((c[n+(c[f>>2]<<2)>>2]>>16&65535)<<16>>16,c[(c[l>>2]|0)+((c[g>>2]|0)-(c[f>>2]|0)<<2)>>2]&65535&65535)|0)>>15)|0;a=a+(($((c[(c[l>>2]|0)+((c[g>>2]|0)-(c[f>>2]|0)<<2)>>2]>>16&65535)<<16>>16,c[n+(c[f>>2]<<2)>>2]&65535&65535)|0)>>15)|0;c[q>>2]=(c[q>>2]|0)+a;c[f>>2]=(c[f>>2]|0)+1}c[q>>2]=(c[q>>2]|0)+(c[(c[l>>2]|0)+((c[g>>2]|0)+1<<2)>>2]>>3);c[j>>2]=0-(ic(c[q>>2]<<3,c[k>>2]|0)|0);c[n+(c[g>>2]<<2)>>2]=c[j>>2]>>3;c[f>>2]=0;while(1){if((c[f>>2]|0)>=((c[g>>2]|0)+1>>1|0)){break}c[o>>2]=c[n+(c[f>>2]<<2)>>2];c[p>>2]=c[n+((c[g>>2]|0)-1-(c[f>>2]|0)<<2)>>2];a=($((c[j>>2]>>16&65535)<<16>>16,(c[p>>2]>>16&65535)<<16>>16)|0)<<1;a=a+(($((c[j>>2]>>16&65535)<<16>>16,c[p>>2]&65535&65535)|0)>>15)|0;a=(c[o>>2]|0)+(a+(($((c[p>>2]>>16&65535)<<16>>16,c[j>>2]&65535&65535)|0)>>15))|0;c[n+(c[f>>2]<<2)>>2]=a;a=($((c[j>>2]>>16&65535)<<16>>16,(c[o>>2]>>16&65535)<<16>>16)|0)<<1;a=a+(($((c[j>>2]>>16&65535)<<16>>16,c[o>>2]&65535&65535)|0)>>15)|0;a=(c[p>>2]|0)+(a+(($((c[o>>2]>>16&65535)<<16>>16,c[j>>2]&65535&65535)|0)>>15))|0;c[n+((c[g>>2]|0)-1-(c[f>>2]|0)<<2)>>2]=a;c[f>>2]=(c[f>>2]|0)+1}a=($((c[j>>2]>>16&65535)<<16>>16,(c[j>>2]>>16&65535)<<16>>16)|0)<<1;a=a+(($((c[j>>2]>>16&65535)<<16>>16,c[j>>2]&65535&65535)|0)>>15)|0;a=(a+(($((c[j>>2]>>16&65535)<<16>>16,c[j>>2]&65535&65535)|0)>>15)>>16&65535)<<16>>16;a=($(a,(c[k>>2]>>16&65535)<<16>>16)|0)<<1;d=($((c[j>>2]>>16&65535)<<16>>16,(c[j>>2]>>16&65535)<<16>>16)|0)<<1;d=d+(($((c[j>>2]>>16&65535)<<16>>16,c[j>>2]&65535&65535)|0)>>15)|0;d=(d+(($((c[j>>2]>>16&65535)<<16>>16,c[j>>2]&65535&65535)|0)>>15)>>16&65535)<<16>>16;d=a+(($(d,c[k>>2]&65535&65535)|0)>>15)|0;a=($((c[j>>2]>>16&65535)<<16>>16,(c[j>>2]>>16&65535)<<16>>16)|0)<<1;a=a+(($((c[j>>2]>>16&65535)<<16>>16,c[j>>2]&65535&65535)|0)>>15)|0;c[k>>2]=(c[k>>2]|0)-(d+(($((c[k>>2]>>16&65535)<<16>>16,a+(($((c[j>>2]>>16&65535)<<16>>16,c[j>>2]&65535&65535)|0)>>15)&65535&65535)|0)>>15));if((c[k>>2]|0)<(c[c[l>>2]>>2]>>10|0)){break a}c[g>>2]=(c[g>>2]|0)+1}}}while(0);c[g>>2]=0;while(1){if((c[g>>2]|0)>=(c[h>>2]|0)){break}b[(c[r>>2]|0)+(c[g>>2]<<1)>>1]=(c[n+(c[g>>2]<<2)>>2]|0)+32768>>16;c[g>>2]=(c[g>>2]|0)+1}i=m;return}function xb(a,d,e,f,g,h){a=a|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0;p=i;i=i+64|0;j=p+48|0;u=p+28|0;o=p;n=p+40|0;q=p+44|0;t=p+52|0;m=p+24|0;l=p+36|0;r=p+32|0;s=p+8|0;k=p+4|0;c[j>>2]=a;c[u>>2]=d;c[o>>2]=e;c[n>>2]=f;c[q>>2]=g;c[t>>2]=h;e=c[q>>2]|0;c[r>>2]=ia()|0;f=i;i=i+((2*e|0)+15&-16)|0;e=i;i=i+((2*((c[n>>2]|0)+(c[q>>2]|0)|0)|0)+15&-16)|0;c[m>>2]=0;while(1){if((c[m>>2]|0)>=(c[q>>2]|0)){break}b[f+(c[m>>2]<<1)>>1]=b[(c[u>>2]|0)+((c[q>>2]|0)-(c[m>>2]|0)-1<<1)>>1]|0;c[m>>2]=(c[m>>2]|0)+1}c[m>>2]=0;while(1){if((c[m>>2]|0)>=(c[q>>2]|0)){break}b[e+(c[m>>2]<<1)>>1]=b[(c[t>>2]|0)+((c[q>>2]|0)-(c[m>>2]|0)-1<<1)>>1]|0;c[m>>2]=(c[m>>2]|0)+1}c[m>>2]=0;while(1){if((c[m>>2]|0)>=(c[n>>2]|0)){break}b[e+((c[m>>2]|0)+(c[q>>2]|0)<<1)>>1]=b[(c[j>>2]|0)+(c[m>>2]<<1)>>1]|0;c[m>>2]=(c[m>>2]|0)+1}c[m>>2]=0;while(1){if((c[m>>2]|0)>=(c[q>>2]|0)){break}b[(c[t>>2]|0)+(c[m>>2]<<1)>>1]=b[(c[j>>2]|0)+((c[n>>2]|0)-(c[m>>2]|0)-1<<1)>>1]|0;c[m>>2]=(c[m>>2]|0)+1}c[m>>2]=0;while(1){if((c[m>>2]|0)>=((c[n>>2]|0)-3|0)){break}c[s+0>>2]=0;c[s+4>>2]=0;c[s+8>>2]=0;c[s+12>>2]=0;yb(f,e+(c[m>>2]<<1)|0,s,c[q>>2]|0);if(((b[(c[j>>2]|0)+(c[m>>2]<<1)>>1]|0)+((c[s>>2]|0)+2048>>12)|0)<=32767){if(((b[(c[j>>2]|0)+(c[m>>2]<<1)>>1]|0)+((c[s>>2]|0)+2048>>12)|0)<-32768){t=-32768}else{t=(b[(c[j>>2]|0)+(c[m>>2]<<1)>>1]|0)+((c[s>>2]|0)+2048>>12)|0}}else{t=32767}b[(c[o>>2]|0)+(c[m>>2]<<1)>>1]=t;if(((b[(c[j>>2]|0)+((c[m>>2]|0)+1<<1)>>1]|0)+((c[s+4>>2]|0)+2048>>12)|0)<=32767){if(((b[(c[j>>2]|0)+((c[m>>2]|0)+1<<1)>>1]|0)+((c[s+4>>2]|0)+2048>>12)|0)<-32768){t=-32768}else{t=(b[(c[j>>2]|0)+((c[m>>2]|0)+1<<1)>>1]|0)+((c[s+4>>2]|0)+2048>>12)|0}}else{t=32767}b[(c[o>>2]|0)+((c[m>>2]|0)+1<<1)>>1]=t;if(((b[(c[j>>2]|0)+((c[m>>2]|0)+2<<1)>>1]|0)+((c[s+8>>2]|0)+2048>>12)|0)<=32767){if(((b[(c[j>>2]|0)+((c[m>>2]|0)+2<<1)>>1]|0)+((c[s+8>>2]|0)+2048>>12)|0)<-32768){t=-32768}else{t=(b[(c[j>>2]|0)+((c[m>>2]|0)+2<<1)>>1]|0)+((c[s+8>>2]|0)+2048>>12)|0}}else{t=32767}b[(c[o>>2]|0)+((c[m>>2]|0)+2<<1)>>1]=t;if(((b[(c[j>>2]|0)+((c[m>>2]|0)+3<<1)>>1]|0)+((c[s+12>>2]|0)+2048>>12)|0)<=32767){if(((b[(c[j>>2]|0)+((c[m>>2]|0)+3<<1)>>1]|0)+((c[s+12>>2]|0)+2048>>12)|0)<-32768){t=-32768}else{t=(b[(c[j>>2]|0)+((c[m>>2]|0)+3<<1)>>1]|0)+((c[s+12>>2]|0)+2048>>12)|0}}else{t=32767}b[(c[o>>2]|0)+((c[m>>2]|0)+3<<1)>>1]=t;c[m>>2]=(c[m>>2]|0)+4}while(1){if((c[m>>2]|0)>=(c[n>>2]|0)){break}c[k>>2]=0;c[l>>2]=0;while(1){if((c[l>>2]|0)>=(c[q>>2]|0)){break}c[k>>2]=(c[k>>2]|0)+($(b[f+(c[l>>2]<<1)>>1]|0,b[e+((c[m>>2]|0)+(c[l>>2]|0)<<1)>>1]|0)|0);c[l>>2]=(c[l>>2]|0)+1}if(((b[(c[j>>2]|0)+(c[m>>2]<<1)>>1]|0)+((c[k>>2]|0)+2048>>12)|0)<=32767){if(((b[(c[j>>2]|0)+(c[m>>2]<<1)>>1]|0)+((c[k>>2]|0)+2048>>12)|0)<-32768){s=-32768}else{s=(b[(c[j>>2]|0)+(c[m>>2]<<1)>>1]|0)+((c[k>>2]|0)+2048>>12)|0}}else{s=32767}b[(c[o>>2]|0)+(c[m>>2]<<1)>>1]=s;c[m>>2]=(c[m>>2]|0)+1}na(c[r>>2]|0);i=p;return}function yb(a,d,e,f){a=a|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0;p=i;i=i+48|0;h=p+8|0;k=p+12|0;m=p+16|0;r=p+4|0;q=p;g=p+26|0;l=p+24|0;n=p+22|0;o=p+20|0;u=p+28|0;t=p+30|0;s=p+32|0;j=p+34|0;c[h>>2]=a;c[k>>2]=d;c[m>>2]=e;c[r>>2]=f;b[o>>1]=0;a=c[k>>2]|0;c[k>>2]=a+2;b[g>>1]=b[a>>1]|0;a=c[k>>2]|0;c[k>>2]=a+2;b[l>>1]=b[a>>1]|0;a=c[k>>2]|0;c[k>>2]=a+2;b[n>>1]=b[a>>1]|0;c[q>>2]=0;while(1){if((c[q>>2]|0)>=((c[r>>2]|0)-3|0)){break}a=c[h>>2]|0;c[h>>2]=a+2;b[u>>1]=b[a>>1]|0;a=c[k>>2]|0;c[k>>2]=a+2;b[o>>1]=b[a>>1]|0;a=(c[c[m>>2]>>2]|0)+($(b[u>>1]|0,b[g>>1]|0)|0)|0;c[c[m>>2]>>2]=a;a=(c[(c[m>>2]|0)+4>>2]|0)+($(b[u>>1]|0,b[l>>1]|0)|0)|0;c[(c[m>>2]|0)+4>>2]=a;a=(c[(c[m>>2]|0)+8>>2]|0)+($(b[u>>1]|0,b[n>>1]|0)|0)|0;c[(c[m>>2]|0)+8>>2]=a;a=(c[(c[m>>2]|0)+12>>2]|0)+($(b[u>>1]|0,b[o>>1]|0)|0)|0;c[(c[m>>2]|0)+12>>2]=a;a=c[h>>2]|0;c[h>>2]=a+2;b[u>>1]=b[a>>1]|0;a=c[k>>2]|0;c[k>>2]=a+2;b[g>>1]=b[a>>1]|0;a=(c[c[m>>2]>>2]|0)+($(b[u>>1]|0,b[l>>1]|0)|0)|0;c[c[m>>2]>>2]=a;a=(c[(c[m>>2]|0)+4>>2]|0)+($(b[u>>1]|0,b[n>>1]|0)|0)|0;c[(c[m>>2]|0)+4>>2]=a;a=(c[(c[m>>2]|0)+8>>2]|0)+($(b[u>>1]|0,b[o>>1]|0)|0)|0;c[(c[m>>2]|0)+8>>2]=a;a=(c[(c[m>>2]|0)+12>>2]|0)+($(b[u>>1]|0,b[g>>1]|0)|0)|0;c[(c[m>>2]|0)+12>>2]=a;a=c[h>>2]|0;c[h>>2]=a+2;b[u>>1]=b[a>>1]|0;a=c[k>>2]|0;c[k>>2]=a+2;b[l>>1]=b[a>>1]|0;a=(c[c[m>>2]>>2]|0)+($(b[u>>1]|0,b[n>>1]|0)|0)|0;c[c[m>>2]>>2]=a;a=(c[(c[m>>2]|0)+4>>2]|0)+($(b[u>>1]|0,b[o>>1]|0)|0)|0;c[(c[m>>2]|0)+4>>2]=a;a=(c[(c[m>>2]|0)+8>>2]|0)+($(b[u>>1]|0,b[g>>1]|0)|0)|0;c[(c[m>>2]|0)+8>>2]=a;a=(c[(c[m>>2]|0)+12>>2]|0)+($(b[u>>1]|0,b[l>>1]|0)|0)|0;c[(c[m>>2]|0)+12>>2]=a;a=c[h>>2]|0;c[h>>2]=a+2;b[u>>1]=b[a>>1]|0;a=c[k>>2]|0;c[k>>2]=a+2;b[n>>1]=b[a>>1]|0;a=(c[c[m>>2]>>2]|0)+($(b[u>>1]|0,b[o>>1]|0)|0)|0;c[c[m>>2]>>2]=a;a=(c[(c[m>>2]|0)+4>>2]|0)+($(b[u>>1]|0,b[g>>1]|0)|0)|0;c[(c[m>>2]|0)+4>>2]=a;a=(c[(c[m>>2]|0)+8>>2]|0)+($(b[u>>1]|0,b[l>>1]|0)|0)|0;c[(c[m>>2]|0)+8>>2]=a;a=(c[(c[m>>2]|0)+12>>2]|0)+($(b[u>>1]|0,b[n>>1]|0)|0)|0;c[(c[m>>2]|0)+12>>2]=a;c[q>>2]=(c[q>>2]|0)+4}a=c[q>>2]|0;c[q>>2]=a+1;if((a|0)<(c[r>>2]|0)){a=c[h>>2]|0;c[h>>2]=a+2;b[t>>1]=b[a>>1]|0;a=c[k>>2]|0;c[k>>2]=a+2;b[o>>1]=b[a>>1]|0;a=(c[c[m>>2]>>2]|0)+($(b[t>>1]|0,b[g>>1]|0)|0)|0;c[c[m>>2]>>2]=a;a=(c[(c[m>>2]|0)+4>>2]|0)+($(b[t>>1]|0,b[l>>1]|0)|0)|0;c[(c[m>>2]|0)+4>>2]=a;a=(c[(c[m>>2]|0)+8>>2]|0)+($(b[t>>1]|0,b[n>>1]|0)|0)|0;c[(c[m>>2]|0)+8>>2]=a;a=(c[(c[m>>2]|0)+12>>2]|0)+($(b[t>>1]|0,b[o>>1]|0)|0)|0;c[(c[m>>2]|0)+12>>2]=a}a=c[q>>2]|0;c[q>>2]=a+1;if((a|0)<(c[r>>2]|0)){a=c[h>>2]|0;c[h>>2]=a+2;b[s>>1]=b[a>>1]|0;a=c[k>>2]|0;c[k>>2]=a+2;b[g>>1]=b[a>>1]|0;a=(c[c[m>>2]>>2]|0)+($(b[s>>1]|0,b[l>>1]|0)|0)|0;c[c[m>>2]>>2]=a;a=(c[(c[m>>2]|0)+4>>2]|0)+($(b[s>>1]|0,b[n>>1]|0)|0)|0;c[(c[m>>2]|0)+4>>2]=a;a=(c[(c[m>>2]|0)+8>>2]|0)+($(b[s>>1]|0,b[o>>1]|0)|0)|0;c[(c[m>>2]|0)+8>>2]=a;a=(c[(c[m>>2]|0)+12>>2]|0)+($(b[s>>1]|0,b[g>>1]|0)|0)|0;c[(c[m>>2]|0)+12>>2]=a}if((c[q>>2]|0)>=(c[r>>2]|0)){i=p;return}a=c[h>>2]|0;c[h>>2]=a+2;b[j>>1]=b[a>>1]|0;a=c[k>>2]|0;c[k>>2]=a+2;b[l>>1]=b[a>>1]|0;a=(c[c[m>>2]>>2]|0)+($(b[j>>1]|0,b[n>>1]|0)|0)|0;c[c[m>>2]>>2]=a;a=(c[(c[m>>2]|0)+4>>2]|0)+($(b[j>>1]|0,b[o>>1]|0)|0)|0;c[(c[m>>2]|0)+4>>2]=a;a=(c[(c[m>>2]|0)+8>>2]|0)+($(b[j>>1]|0,b[g>>1]|0)|0)|0;c[(c[m>>2]|0)+8>>2]=a;a=(c[(c[m>>2]|0)+12>>2]|0)+($(b[j>>1]|0,b[l>>1]|0)|0)|0;c[(c[m>>2]|0)+12>>2]=a;i=p;return}function zb(a,d,e,f,g,h){a=a|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0;p=i;i=i+64|0;o=p+48|0;t=p+28|0;r=p;q=p+40|0;m=p+44|0;u=p+52|0;l=p+24|0;n=p+36|0;s=p+32|0;k=p+8|0;j=p+4|0;c[o>>2]=a;c[t>>2]=d;c[r>>2]=e;c[q>>2]=f;c[m>>2]=g;c[u>>2]=h;h=c[m>>2]|0;c[s>>2]=ia()|0;g=i;i=i+((2*h|0)+15&-16)|0;h=i;i=i+((2*((c[q>>2]|0)+(c[m>>2]|0)|0)|0)+15&-16)|0;c[l>>2]=0;while(1){if((c[l>>2]|0)>=(c[m>>2]|0)){break}b[g+(c[l>>2]<<1)>>1]=b[(c[t>>2]|0)+((c[m>>2]|0)-(c[l>>2]|0)-1<<1)>>1]|0;c[l>>2]=(c[l>>2]|0)+1}c[l>>2]=0;while(1){if((c[l>>2]|0)>=(c[m>>2]|0)){break}b[h+(c[l>>2]<<1)>>1]=0-(b[(c[u>>2]|0)+((c[m>>2]|0)-(c[l>>2]|0)-1<<1)>>1]|0);c[l>>2]=(c[l>>2]|0)+1}while(1){if((c[l>>2]|0)>=((c[q>>2]|0)+(c[m>>2]|0)|0)){break}b[h+(c[l>>2]<<1)>>1]=0;c[l>>2]=(c[l>>2]|0)+1}c[l>>2]=0;while(1){if((c[l>>2]|0)>=((c[q>>2]|0)-3|0)){break}c[k>>2]=c[(c[o>>2]|0)+(c[l>>2]<<2)>>2];c[k+4>>2]=c[(c[o>>2]|0)+((c[l>>2]|0)+1<<2)>>2];c[k+8>>2]=c[(c[o>>2]|0)+((c[l>>2]|0)+2<<2)>>2];c[k+12>>2]=c[(c[o>>2]|0)+((c[l>>2]|0)+3<<2)>>2];yb(g,h+(c[l>>2]<<1)|0,k,c[m>>2]|0);b[h+((c[l>>2]|0)+(c[m>>2]|0)<<1)>>1]=0-(((c[k>>2]|0)+2048>>12&65535)<<16>>16);c[(c[r>>2]|0)+(c[l>>2]<<2)>>2]=c[k>>2];c[k+4>>2]=(c[k+4>>2]|0)+($(b[h+((c[l>>2]|0)+(c[m>>2]|0)<<1)>>1]|0,b[c[t>>2]>>1]|0)|0);b[h+((c[l>>2]|0)+(c[m>>2]|0)+1<<1)>>1]=0-(((c[k+4>>2]|0)+2048>>12&65535)<<16>>16);c[(c[r>>2]|0)+((c[l>>2]|0)+1<<2)>>2]=c[k+4>>2];c[k+8>>2]=(c[k+8>>2]|0)+($(b[h+((c[l>>2]|0)+(c[m>>2]|0)+1<<1)>>1]|0,b[c[t>>2]>>1]|0)|0);c[k+8>>2]=(c[k+8>>2]|0)+($(b[h+((c[l>>2]|0)+(c[m>>2]|0)<<1)>>1]|0,b[(c[t>>2]|0)+2>>1]|0)|0);b[h+((c[l>>2]|0)+(c[m>>2]|0)+2<<1)>>1]=0-(((c[k+8>>2]|0)+2048>>12&65535)<<16>>16);c[(c[r>>2]|0)+((c[l>>2]|0)+2<<2)>>2]=c[k+8>>2];c[k+12>>2]=(c[k+12>>2]|0)+($(b[h+((c[l>>2]|0)+(c[m>>2]|0)+2<<1)>>1]|0,b[c[t>>2]>>1]|0)|0);c[k+12>>2]=(c[k+12>>2]|0)+($(b[h+((c[l>>2]|0)+(c[m>>2]|0)+1<<1)>>1]|0,b[(c[t>>2]|0)+2>>1]|0)|0);c[k+12>>2]=(c[k+12>>2]|0)+($(b[h+((c[l>>2]|0)+(c[m>>2]|0)<<1)>>1]|0,b[(c[t>>2]|0)+4>>1]|0)|0);b[h+((c[l>>2]|0)+(c[m>>2]|0)+3<<1)>>1]=0-(((c[k+12>>2]|0)+2048>>12&65535)<<16>>16);c[(c[r>>2]|0)+((c[l>>2]|0)+3<<2)>>2]=c[k+12>>2];c[l>>2]=(c[l>>2]|0)+4}while(1){if((c[l>>2]|0)>=(c[q>>2]|0)){break}c[j>>2]=c[(c[o>>2]|0)+(c[l>>2]<<2)>>2];c[n>>2]=0;while(1){if((c[n>>2]|0)>=(c[m>>2]|0)){break}a=$(b[g+(c[n>>2]<<1)>>1]|0,b[h+((c[l>>2]|0)+(c[n>>2]|0)<<1)>>1]|0)|0;c[j>>2]=(c[j>>2]|0)-a;c[n>>2]=(c[n>>2]|0)+1}b[h+((c[l>>2]|0)+(c[m>>2]|0)<<1)>>1]=(c[j>>2]|0)+2048>>12;c[(c[r>>2]|0)+(c[l>>2]<<2)>>2]=c[j>>2];c[l>>2]=(c[l>>2]|0)+1}c[l>>2]=0;while(1){if((c[l>>2]|0)>=(c[m>>2]|0)){break}b[(c[u>>2]|0)+(c[l>>2]<<1)>>1]=c[(c[r>>2]|0)+((c[q>>2]|0)-(c[l>>2]|0)-1<<2)>>2];c[l>>2]=(c[l>>2]|0)+1}na(c[s>>2]|0);i=p;return}function Ab(a,d,e,f,g,h,j){a=a|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0;n=i;i=i+80|0;z=n+32|0;q=n+24|0;B=n+44|0;A=n+60|0;p=n+12|0;t=n+40|0;x=n+56|0;o=n+64|0;u=n+68|0;v=n+8|0;s=n+4|0;w=n;m=n+36|0;y=n+16|0;r=n+20|0;k=n+52|0;l=n+28|0;c[z>>2]=a;c[q>>2]=d;c[B>>2]=e;c[A>>2]=f;c[p>>2]=g;c[t>>2]=h;c[n+48>>2]=j;c[v>>2]=(c[t>>2]|0)-(c[p>>2]|0);a=c[t>>2]|0;c[m>>2]=ia()|0;j=i;i=i+((2*a|0)+15&-16)|0;if((c[A>>2]|0)==0){c[w>>2]=c[z>>2]}else{c[o>>2]=0;while(1){if((c[o>>2]|0)>=(c[t>>2]|0)){break}b[j+(c[o>>2]<<1)>>1]=b[(c[z>>2]|0)+(c[o>>2]<<1)>>1]|0;c[o>>2]=(c[o>>2]|0)+1}c[o>>2]=0;while(1){if((c[o>>2]|0)>=(c[A>>2]|0)){break}a=($(b[(c[z>>2]|0)+(c[o>>2]<<1)>>1]|0,b[(c[B>>2]|0)+(c[o>>2]<<1)>>1]|0)|0)>>15&65535;b[j+(c[o>>2]<<1)>>1]=a;a=($(b[(c[z>>2]|0)+((c[t>>2]|0)-(c[o>>2]|0)-1<<1)>>1]|0,b[(c[B>>2]|0)+(c[o>>2]<<1)>>1]|0)|0)>>15&65535;b[j+((c[t>>2]|0)-(c[o>>2]|0)-1<<1)>>1]=a;c[o>>2]=(c[o>>2]|0)+1}c[w>>2]=j}c[s>>2]=0;c[y>>2]=1+(c[t>>2]<<7);if((c[t>>2]&1|0)!=0){a=($(b[c[w>>2]>>1]|0,b[c[w>>2]>>1]|0)|0)>>9;c[y>>2]=(c[y>>2]|0)+a}c[o>>2]=c[t>>2]&1;while(1){if((c[o>>2]|0)>=(c[t>>2]|0)){break}a=($(b[(c[w>>2]|0)+(c[o>>2]<<1)>>1]|0,b[(c[w>>2]|0)+(c[o>>2]<<1)>>1]|0)|0)>>9;c[y>>2]=(c[y>>2]|0)+a;a=($(b[(c[w>>2]|0)+((c[o>>2]|0)+1<<1)>>1]|0,b[(c[w>>2]|0)+((c[o>>2]|0)+1<<1)>>1]|0)|0)>>9;c[y>>2]=(c[y>>2]|0)+a;c[o>>2]=(c[o>>2]|0)+2}c[s>>2]=((Bb(c[y>>2]|0)|0)<<16>>16)-30+10;c[s>>2]=(c[s>>2]|0)/2|0;if((c[s>>2]|0)>0){c[o>>2]=0;while(1){if((c[o>>2]|0)>=(c[t>>2]|0)){break}b[j+(c[o>>2]<<1)>>1]=(b[(c[w>>2]|0)+(c[o>>2]<<1)>>1]|0)+(1<<c[s>>2]>>1)>>c[s>>2];c[o>>2]=(c[o>>2]|0)+1}c[w>>2]=j}else{c[s>>2]=0}vc(c[w>>2]|0,c[w>>2]|0,c[q>>2]|0,c[v>>2]|0,(c[p>>2]|0)+1|0)|0;c[u>>2]=0;while(1){if((c[u>>2]|0)>(c[p>>2]|0)){break}c[o>>2]=(c[u>>2]|0)+(c[v>>2]|0);c[x>>2]=0;while(1){y=c[x>>2]|0;if((c[o>>2]|0)>=(c[t>>2]|0)){break}c[x>>2]=y+($(b[(c[w>>2]|0)+(c[o>>2]<<1)>>1]|0,b[(c[w>>2]|0)+((c[o>>2]|0)-(c[u>>2]|0)<<1)>>1]|0)|0);c[o>>2]=(c[o>>2]|0)+1}a=(c[q>>2]|0)+(c[u>>2]<<2)|0;c[a>>2]=(c[a>>2]|0)+y;c[u>>2]=(c[u>>2]|0)+1}c[s>>2]=c[s>>2]<<1;if((c[s>>2]|0)<=0){a=c[q>>2]|0;c[a>>2]=(c[a>>2]|0)+(1<<0-(c[s>>2]|0))}t=c[c[q>>2]>>2]|0;if((c[c[q>>2]>>2]|0)<268435456){c[r>>2]=29-(32-(We(t|0)|0));c[o>>2]=0;while(1){if((c[o>>2]|0)>(c[p>>2]|0)){break}c[(c[q>>2]|0)+(c[o>>2]<<2)>>2]=c[(c[q>>2]|0)+(c[o>>2]<<2)>>2]<<c[r>>2];c[o>>2]=(c[o>>2]|0)+1}c[s>>2]=(c[s>>2]|0)-(c[r>>2]|0);a=c[s>>2]|0;c[l>>2]=1;d=c[m>>2]|0;na(d|0);i=n;return a|0}if((t|0)<536870912){a=c[s>>2]|0;c[l>>2]=1;d=c[m>>2]|0;na(d|0);i=n;return a|0}c[k>>2]=1;if((c[c[q>>2]>>2]|0)>=1073741824){c[k>>2]=(c[k>>2]|0)+1}c[o>>2]=0;while(1){if((c[o>>2]|0)>(c[p>>2]|0)){break}c[(c[q>>2]|0)+(c[o>>2]<<2)>>2]=c[(c[q>>2]|0)+(c[o>>2]<<2)>>2]>>c[k>>2];c[o>>2]=(c[o>>2]|0)+1}c[s>>2]=(c[s>>2]|0)+(c[k>>2]|0);a=c[s>>2]|0;c[l>>2]=1;d=c[m>>2]|0;na(d|0);i=n;return a|0}function Bb(a){a=a|0;var b=0,d=0;b=i;i=i+16|0;d=b;c[d>>2]=a;a=32-(We(c[d>>2]|0)|0)-1&65535;i=b;return a|0}function Cb(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0;f=i;i=i+16|0;j=f+12|0;h=f+8|0;g=f+4|0;k=f;c[j>>2]=a;c[h>>2]=b;c[g>>2]=d;c[k>>2]=e;e=c[k>>2]|0;a=Db(c[h>>2]|0,c[j>>2]|0)|0;d=c[(c[264+(((c[h>>2]|0)<(c[g>>2]|0)?c[h>>2]|0:c[g>>2]|0)<<2)>>2]|0)+(((c[h>>2]|0)>(c[g>>2]|0)?c[h>>2]|0:c[g>>2]|0)<<2)>>2]|0;if((c[h>>2]|0)>((c[g>>2]|0)+1|0)){b=c[h>>2]|0}else{b=(c[g>>2]|0)+1|0}if((c[h>>2]|0)<((c[g>>2]|0)+1|0)){k=c[h>>2]|0;k=264+(k<<2)|0;k=c[k>>2]|0;k=k+(b<<2)|0;k=c[k>>2]|0;k=d+k|0;Xb(e,a,k);i=f;return}else{k=(c[g>>2]|0)+1|0;k=264+(k<<2)|0;k=c[k>>2]|0;k=k+(b<<2)|0;k=c[k>>2]|0;k=d+k|0;Xb(e,a,k);i=f;return}}function Db(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0;h=i;i=i+32|0;f=h+16|0;d=h+12|0;e=h+8|0;j=h+4|0;g=h;c[f>>2]=a;c[d>>2]=b;c[j>>2]=(c[f>>2]|0)-1;c[e>>2]=(c[(c[d>>2]|0)+(c[j>>2]<<2)>>2]|0)<0&1;c[g>>2]=O(c[(c[d>>2]|0)+(c[j>>2]<<2)>>2]|0)|0;do{c[j>>2]=(c[j>>2]|0)+ -1;if(((c[f>>2]|0)-(c[j>>2]|0)|0)>(c[g>>2]|0)){b=(c[f>>2]|0)-(c[j>>2]|0)|0}else{b=c[g>>2]|0}if(((c[f>>2]|0)-(c[j>>2]|0)|0)<(c[g>>2]|0)){a=(c[f>>2]|0)-(c[j>>2]|0)|0}else{a=c[g>>2]|0}c[e>>2]=(c[e>>2]|0)+(c[(c[264+(a<<2)>>2]|0)+(b<<2)>>2]|0);a=O(c[(c[d>>2]|0)+(c[j>>2]<<2)>>2]|0)|0;c[g>>2]=(c[g>>2]|0)+a;if((c[(c[d>>2]|0)+(c[j>>2]<<2)>>2]|0)<0){if(((c[f>>2]|0)-(c[j>>2]|0)|0)>((c[g>>2]|0)+1|0)){b=(c[f>>2]|0)-(c[j>>2]|0)|0}else{b=(c[g>>2]|0)+1|0}if(((c[f>>2]|0)-(c[j>>2]|0)|0)<((c[g>>2]|0)+1|0)){a=(c[f>>2]|0)-(c[j>>2]|0)|0}else{a=(c[g>>2]|0)+1|0}c[e>>2]=(c[e>>2]|0)+(c[(c[264+(a<<2)>>2]|0)+(b<<2)>>2]|0)}}while((c[j>>2]|0)>0);i=h;return c[e>>2]|0}function Eb(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0;j=i;i=i+16|0;h=j+12|0;f=j+8|0;g=j+4|0;k=j;c[h>>2]=a;c[f>>2]=b;c[g>>2]=d;c[k>>2]=e;e=c[f>>2]|0;b=c[g>>2]|0;if((c[f>>2]|0)>((c[g>>2]|0)+1|0)){d=c[f>>2]|0}else{d=(c[g>>2]|0)+1|0}if((c[f>>2]|0)<((c[g>>2]|0)+1|0)){a=c[f>>2]|0}else{a=(c[g>>2]|0)+1|0}a=Qb(c[k>>2]|0,(c[(c[264+(((c[f>>2]|0)<(c[g>>2]|0)?c[f>>2]|0:c[g>>2]|0)<<2)>>2]|0)+(((c[f>>2]|0)>(c[g>>2]|0)?c[f>>2]|0:c[g>>2]|0)<<2)>>2]|0)+(c[(c[264+(a<<2)>>2]|0)+(d<<2)>>2]|0)|0)|0;a=Fb(e,b,a,c[h>>2]|0)|0;i=j;return a|0}function Fb(a,d,e,f){a=a|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0;o=i;i=i+48|0;r=o;n=o+16|0;g=o+4|0;l=o+8|0;h=o+32|0;j=o+36|0;p=o+12|0;k=o+40|0;m=o+20|0;s=o+28|0;q=o+24|0;c[r>>2]=a;c[n>>2]=d;c[g>>2]=e;c[l>>2]=f;c[m>>2]=0;while(1){f=c[n>>2]|0;if((c[r>>2]|0)<=2){break}e=c[r>>2]|0;do{if((f|0)>=(c[r>>2]|0)){c[q>>2]=c[264+(e<<2)>>2];c[h>>2]=c[(c[q>>2]|0)+((c[n>>2]|0)+1<<2)>>2];c[j>>2]=0-((c[g>>2]|0)>>>0>=(c[h>>2]|0)>>>0&1);c[g>>2]=(c[g>>2]|0)-(c[h>>2]&c[j>>2]);c[p>>2]=c[n>>2];c[s>>2]=c[(c[q>>2]|0)+(c[r>>2]<<2)>>2];a:do{if((c[s>>2]|0)>>>0>(c[g>>2]|0)>>>0){c[n>>2]=c[r>>2];do{a=c[r>>2]|0;d=(c[n>>2]|0)+ -1|0;c[n>>2]=d;c[h>>2]=c[(c[264+(d<<2)>>2]|0)+(a<<2)>>2]}while((c[h>>2]|0)>>>0>(c[g>>2]|0)>>>0)}else{c[h>>2]=c[(c[q>>2]|0)+(c[n>>2]<<2)>>2];while(1){if(!((c[h>>2]|0)>>>0>(c[g>>2]|0)>>>0)){break a}c[n>>2]=(c[n>>2]|0)+ -1;c[h>>2]=c[(c[q>>2]|0)+(c[n>>2]<<2)>>2]}}}while(0);c[g>>2]=(c[g>>2]|0)-(c[h>>2]|0);b[k>>1]=(c[p>>2]|0)-(c[n>>2]|0)+(c[j>>2]|0)^c[j>>2];d=b[k>>1]|0;a=c[l>>2]|0;c[l>>2]=a+4;c[a>>2]=d;c[m>>2]=(c[m>>2]|0)+($(b[k>>1]|0,b[k>>1]|0)|0)}else{c[h>>2]=c[(c[264+(c[n>>2]<<2)>>2]|0)+(e<<2)>>2];c[s>>2]=c[(c[264+((c[n>>2]|0)+1<<2)>>2]|0)+(c[r>>2]<<2)>>2];if((c[h>>2]|0)>>>0<=(c[g>>2]|0)>>>0?(c[g>>2]|0)>>>0<(c[s>>2]|0)>>>0:0){c[g>>2]=(c[g>>2]|0)-(c[h>>2]|0);a=c[l>>2]|0;c[l>>2]=a+4;c[a>>2]=0;break}c[j>>2]=0-((c[g>>2]|0)>>>0>=(c[s>>2]|0)>>>0&1);c[g>>2]=(c[g>>2]|0)-(c[s>>2]&c[j>>2]);c[p>>2]=c[n>>2];do{a=c[r>>2]|0;d=(c[n>>2]|0)+ -1|0;c[n>>2]=d;c[h>>2]=c[(c[264+(d<<2)>>2]|0)+(a<<2)>>2]}while((c[h>>2]|0)>>>0>(c[g>>2]|0)>>>0);c[g>>2]=(c[g>>2]|0)-(c[h>>2]|0);b[k>>1]=(c[p>>2]|0)-(c[n>>2]|0)+(c[j>>2]|0)^c[j>>2];d=b[k>>1]|0;a=c[l>>2]|0;c[l>>2]=a+4;c[a>>2]=d;c[m>>2]=(c[m>>2]|0)+($(b[k>>1]|0,b[k>>1]|0)|0)}}while(0);c[r>>2]=(c[r>>2]|0)+ -1}c[h>>2]=(f<<1)+1;c[j>>2]=0-((c[g>>2]|0)>>>0>=(c[h>>2]|0)>>>0&1);c[g>>2]=(c[g>>2]|0)-(c[h>>2]&c[j>>2]);c[p>>2]=c[n>>2];c[n>>2]=((c[g>>2]|0)+1|0)>>>1;if((c[n>>2]|0)==0){d=c[p>>2]|0;a=c[n>>2]|0;a=d-a|0;d=c[j>>2]|0;d=a+d|0;a=c[j>>2]|0;a=d^a;a=a&65535;b[k>>1]=a;a=b[k>>1]|0;a=a<<16>>16;d=c[l>>2]|0;e=d+4|0;c[l>>2]=e;c[d>>2]=a;d=c[m>>2]|0;a=b[k>>1]|0;a=a<<16>>16;e=b[k>>1]|0;e=e<<16>>16;e=$(a,e)|0;e=d+e|0;c[m>>2]=e;e=c[g>>2]|0;e=0-e|0;c[j>>2]=e;e=c[n>>2]|0;d=c[j>>2]|0;d=e+d|0;e=c[j>>2]|0;e=d^e;e=e&65535;b[k>>1]=e;e=b[k>>1]|0;e=e<<16>>16;d=c[l>>2]|0;c[d>>2]=e;d=c[m>>2]|0;e=b[k>>1]|0;e=e<<16>>16;a=b[k>>1]|0;a=a<<16>>16;a=$(e,a)|0;a=d+a|0;c[m>>2]=a;a=c[m>>2]|0;i=o;return a|0}c[g>>2]=(c[g>>2]|0)-((c[n>>2]<<1)-1);d=c[p>>2]|0;a=c[n>>2]|0;a=d-a|0;d=c[j>>2]|0;d=a+d|0;a=c[j>>2]|0;a=d^a;a=a&65535;b[k>>1]=a;a=b[k>>1]|0;a=a<<16>>16;d=c[l>>2]|0;e=d+4|0;c[l>>2]=e;c[d>>2]=a;d=c[m>>2]|0;a=b[k>>1]|0;a=a<<16>>16;e=b[k>>1]|0;e=e<<16>>16;e=$(a,e)|0;e=d+e|0;c[m>>2]=e;e=c[g>>2]|0;e=0-e|0;c[j>>2]=e;e=c[n>>2]|0;d=c[j>>2]|0;d=e+d|0;e=c[j>>2]|0;e=d^e;e=e&65535;b[k>>1]=e;e=b[k>>1]|0;e=e<<16>>16;d=c[l>>2]|0;c[d>>2]=e;d=c[m>>2]|0;e=b[k>>1]|0;e=e<<16>>16;a=b[k>>1]|0;a=a<<16>>16;a=$(e,a)|0;a=d+a|0;c[m>>2]=a;a=c[m>>2]|0;i=o;return a|0}function Gb(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0;e=i;i=i+32|0;h=e+16|0;d=e+12|0;g=e+8|0;b=e+4|0;f=e;c[h>>2]=a;c[d>>2]=c[(c[h>>2]|0)+20>>2]<<3;c[b>>2]=32-(We(c[(c[h>>2]|0)+28>>2]|0)|0);c[g>>2]=(c[(c[h>>2]|0)+28>>2]|0)>>>((c[b>>2]|0)-16|0);c[f>>2]=((c[g>>2]|0)>>>12)-8;c[f>>2]=(c[f>>2]|0)+((c[g>>2]|0)>>>0>(c[5416+(c[f>>2]<<2)>>2]|0)>>>0&1);c[b>>2]=(c[b>>2]<<3)+(c[f>>2]|0);i=e;return(c[d>>2]|0)-(c[b>>2]|0)|0}function Hb(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0;e=i;i=i+16|0;f=e+8|0;h=e+4|0;g=e;c[f>>2]=a;c[h>>2]=b;c[g>>2]=d;c[c[f>>2]>>2]=c[h>>2];c[(c[f>>2]|0)+4>>2]=c[g>>2];c[(c[f>>2]|0)+8>>2]=0;c[(c[f>>2]|0)+12>>2]=0;c[(c[f>>2]|0)+16>>2]=0;c[(c[f>>2]|0)+20>>2]=9;c[(c[f>>2]|0)+24>>2]=0;c[(c[f>>2]|0)+28>>2]=128;a=Ib(c[f>>2]|0)|0;c[(c[f>>2]|0)+40>>2]=a;c[(c[f>>2]|0)+32>>2]=(c[(c[f>>2]|0)+28>>2]|0)-1-(c[(c[f>>2]|0)+40>>2]>>1);c[(c[f>>2]|0)+44>>2]=0;Jb(c[f>>2]|0);i=e;return}function Ib(a){a=a|0;var b=0,e=0,f=0;b=i;i=i+16|0;e=b;c[e>>2]=a;if(!((c[(c[e>>2]|0)+24>>2]|0)>>>0<(c[(c[e>>2]|0)+4>>2]|0)>>>0)){e=0;i=b;return e|0}f=(c[e>>2]|0)+24|0;a=c[f>>2]|0;c[f>>2]=a+1;e=d[(c[c[e>>2]>>2]|0)+a>>0]|0;i=b;return e|0}function Jb(a){a=a|0;var b=0,d=0,e=0;b=i;i=i+16|0;d=b+4|0;e=b;c[d>>2]=a;while(1){if(!((c[(c[d>>2]|0)+28>>2]|0)>>>0<=8388608)){break}a=(c[d>>2]|0)+20|0;c[a>>2]=(c[a>>2]|0)+8;a=(c[d>>2]|0)+28|0;c[a>>2]=c[a>>2]<<8;c[e>>2]=c[(c[d>>2]|0)+40>>2];a=Ib(c[d>>2]|0)|0;c[(c[d>>2]|0)+40>>2]=a;c[e>>2]=(c[e>>2]<<8|c[(c[d>>2]|0)+40>>2])>>1;c[(c[d>>2]|0)+32>>2]=(c[(c[d>>2]|0)+32>>2]<<8)+(255&~c[e>>2])&2147483647}i=b;return}function Kb(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0;f=i;i=i+16|0;g=f+8|0;e=f+4|0;d=f;c[g>>2]=a;c[e>>2]=b;a=Lb(c[(c[g>>2]|0)+28>>2]|0,c[e>>2]|0)|0;c[(c[g>>2]|0)+36>>2]=a;c[d>>2]=((c[(c[g>>2]|0)+32>>2]|0)>>>0)/((c[(c[g>>2]|0)+36>>2]|0)>>>0)|0;i=f;return(c[e>>2]|0)-((c[d>>2]|0)+1+((c[e>>2]|0)-((c[d>>2]|0)+1)&0-((c[e>>2]|0)>>>0<((c[d>>2]|0)+1|0)>>>0&1)))|0}function Lb(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;f=i;i=i+16|0;e=f+4|0;d=f;c[e>>2]=a;c[d>>2]=b;i=f;return((c[e>>2]|0)>>>0)/((c[d>>2]|0)>>>0)|0|0}function Mb(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0;f=i;i=i+16|0;g=f+8|0;e=f+4|0;d=f;c[g>>2]=a;c[e>>2]=b;c[(c[g>>2]|0)+36>>2]=(c[(c[g>>2]|0)+28>>2]|0)>>>(c[e>>2]|0);c[d>>2]=((c[(c[g>>2]|0)+32>>2]|0)>>>0)/((c[(c[g>>2]|0)+36>>2]|0)>>>0)|0;i=f;return(1<<c[e>>2])-((c[d>>2]|0)+1+((1<<c[e>>2])-((c[d>>2]|0)+1)&0-(1<<c[e>>2]>>>0<((c[d>>2]|0)+1|0)>>>0&1)))|0}function Nb(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0;f=i;i=i+32|0;g=f+16|0;h=f+12|0;j=f+8|0;l=f+4|0;k=f;c[g>>2]=a;c[h>>2]=b;c[j>>2]=d;c[l>>2]=e;c[k>>2]=$(c[(c[g>>2]|0)+36>>2]|0,(c[l>>2]|0)-(c[j>>2]|0)|0)|0;e=(c[g>>2]|0)+32|0;c[e>>2]=(c[e>>2]|0)-(c[k>>2]|0);e=c[g>>2]|0;if((c[h>>2]|0)>>>0>0){a=$(c[e+36>>2]|0,(c[j>>2]|0)-(c[h>>2]|0)|0)|0;l=c[g>>2]|0;l=l+28|0;c[l>>2]=a;l=c[g>>2]|0;Jb(l);i=f;return}else{a=(c[e+28>>2]|0)-(c[k>>2]|0)|0;l=c[g>>2]|0;l=l+28|0;c[l>>2]=a;l=c[g>>2]|0;Jb(l);i=f;return}}function Ob(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0;g=i;i=i+32|0;e=g+20|0;k=g+16|0;h=g+12|0;j=g+8|0;d=g+4|0;f=g;c[e>>2]=a;c[k>>2]=b;c[h>>2]=c[(c[e>>2]|0)+28>>2];c[j>>2]=c[(c[e>>2]|0)+32>>2];c[d>>2]=(c[h>>2]|0)>>>(c[k>>2]|0);c[f>>2]=(c[j>>2]|0)>>>0<(c[d>>2]|0)>>>0&1;if((c[f>>2]|0)==0){c[(c[e>>2]|0)+32>>2]=(c[j>>2]|0)-(c[d>>2]|0)}if((c[f>>2]|0)!=0){a=c[d>>2]|0;k=c[e>>2]|0;k=k+28|0;c[k>>2]=a;k=c[e>>2]|0;Jb(k);k=c[f>>2]|0;i=g;return k|0}else{a=(c[h>>2]|0)-(c[d>>2]|0)|0;k=c[e>>2]|0;k=k+28|0;c[k>>2]=a;k=c[e>>2]|0;Jb(k);k=c[f>>2]|0;i=g;return k|0}return 0}function Pb(a,b,e){a=a|0;b=b|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0;f=i;i=i+32|0;h=f+4|0;n=f+16|0;o=f+8|0;m=f+20|0;k=f+28|0;g=f;j=f+12|0;l=f+24|0;c[h>>2]=a;c[n>>2]=b;c[o>>2]=e;c[g>>2]=c[(c[h>>2]|0)+28>>2];c[k>>2]=c[(c[h>>2]|0)+32>>2];c[m>>2]=(c[g>>2]|0)>>>(c[o>>2]|0);c[l>>2]=-1;do{c[j>>2]=c[g>>2];a=c[m>>2]|0;o=(c[l>>2]|0)+1|0;c[l>>2]=o;c[g>>2]=$(a,d[(c[n>>2]|0)+o>>0]|0)|0}while((c[k>>2]|0)>>>0<(c[g>>2]|0)>>>0);c[(c[h>>2]|0)+32>>2]=(c[k>>2]|0)-(c[g>>2]|0);c[(c[h>>2]|0)+28>>2]=(c[j>>2]|0)-(c[g>>2]|0);Jb(c[h>>2]|0);i=f;return c[l>>2]|0}function Qb(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0;d=i;i=i+32|0;e=d+8|0;h=d+16|0;g=d+20|0;l=d+24|0;f=d+4|0;k=d;j=d+12|0;c[h>>2]=a;c[g>>2]=b;c[g>>2]=(c[g>>2]|0)+ -1;c[k>>2]=32-(We(c[g>>2]|0)|0);if((c[k>>2]|0)<=8){c[g>>2]=(c[g>>2]|0)+1;c[f>>2]=Kb(c[h>>2]|0,c[g>>2]|0)|0;Nb(c[h>>2]|0,c[f>>2]|0,(c[f>>2]|0)+1|0,c[g>>2]|0);c[e>>2]=c[f>>2];a=c[e>>2]|0;i=d;return a|0}c[k>>2]=(c[k>>2]|0)-8;c[l>>2]=((c[g>>2]|0)>>>(c[k>>2]|0))+1;c[f>>2]=Kb(c[h>>2]|0,c[l>>2]|0)|0;Nb(c[h>>2]|0,c[f>>2]|0,(c[f>>2]|0)+1|0,c[l>>2]|0);a=c[f>>2]<<c[k>>2];c[j>>2]=a|(Rb(c[h>>2]|0,c[k>>2]|0)|0);if((c[j>>2]|0)>>>0<=(c[g>>2]|0)>>>0){c[e>>2]=c[j>>2];a=c[e>>2]|0;i=d;return a|0}else{c[(c[h>>2]|0)+44>>2]=1;c[e>>2]=c[g>>2];a=c[e>>2]|0;i=d;return a|0}return 0}function Rb(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0;j=i;i=i+32|0;h=j+16|0;e=j+12|0;d=j+8|0;g=j+4|0;f=j;c[h>>2]=a;c[e>>2]=b;c[d>>2]=c[(c[h>>2]|0)+12>>2];c[g>>2]=c[(c[h>>2]|0)+16>>2];if((c[g>>2]|0)>>>0<(c[e>>2]|0)>>>0){do{a=Sb(c[h>>2]|0)|0;c[d>>2]=c[d>>2]|a<<c[g>>2];c[g>>2]=(c[g>>2]|0)+8}while((c[g>>2]|0)<=24)}c[f>>2]=c[d>>2]&(1<<c[e>>2])-1;c[d>>2]=(c[d>>2]|0)>>>(c[e>>2]|0);c[g>>2]=(c[g>>2]|0)-(c[e>>2]|0);c[(c[h>>2]|0)+12>>2]=c[d>>2];c[(c[h>>2]|0)+16>>2]=c[g>>2];a=(c[h>>2]|0)+20|0;c[a>>2]=(c[a>>2]|0)+(c[e>>2]|0);i=j;return c[f>>2]|0}function Sb(a){a=a|0;var b=0,e=0,f=0,g=0;b=i;i=i+16|0;e=b;c[e>>2]=a;if(!((c[(c[e>>2]|0)+8>>2]|0)>>>0<(c[(c[e>>2]|0)+4>>2]|0)>>>0)){e=0;i=b;return e|0}f=c[(c[e>>2]|0)+4>>2]|0;g=(c[e>>2]|0)+8|0;a=(c[g>>2]|0)+1|0;c[g>>2]=a;e=d[(c[c[e>>2]>>2]|0)+(f-a)>>0]|0;i=b;return e|0}function Tb(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0;f=i;i=i+32|0;g=f+16|0;h=f+12|0;j=f+8|0;l=f+4|0;k=f;c[g>>2]=a;c[h>>2]=b;c[j>>2]=d;c[l>>2]=e;c[k>>2]=Ub(c[(c[g>>2]|0)+28>>2]|0,c[l>>2]|0)|0;if((c[h>>2]|0)>>>0>0){b=(c[(c[g>>2]|0)+28>>2]|0)-($(c[k>>2]|0,(c[l>>2]|0)-(c[h>>2]|0)|0)|0)|0;a=(c[g>>2]|0)+32|0;c[a>>2]=(c[a>>2]|0)+b;a=$(c[k>>2]|0,(c[j>>2]|0)-(c[h>>2]|0)|0)|0;c[(c[g>>2]|0)+28>>2]=a;a=c[g>>2]|0;Vb(a);i=f;return}else{b=$(c[k>>2]|0,(c[l>>2]|0)-(c[j>>2]|0)|0)|0;a=(c[g>>2]|0)+28|0;c[a>>2]=(c[a>>2]|0)-b;a=c[g>>2]|0;Vb(a);i=f;return}}function Ub(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;f=i;i=i+16|0;e=f+4|0;d=f;c[e>>2]=a;c[d>>2]=b;i=f;return((c[e>>2]|0)>>>0)/((c[d>>2]|0)>>>0)|0|0}function Vb(a){a=a|0;var b=0,d=0;b=i;i=i+16|0;d=b;c[d>>2]=a;while(1){if(!((c[(c[d>>2]|0)+28>>2]|0)>>>0<=8388608)){break}_b(c[d>>2]|0,(c[(c[d>>2]|0)+32>>2]|0)>>>23);c[(c[d>>2]|0)+32>>2]=c[(c[d>>2]|0)+32>>2]<<8&2147483647;a=(c[d>>2]|0)+28|0;c[a>>2]=c[a>>2]<<8;a=(c[d>>2]|0)+20|0;c[a>>2]=(c[a>>2]|0)+8}i=b;return}function Wb(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0;e=i;i=i+32|0;f=e+20|0;j=e+16|0;l=e+12|0;g=e+8|0;h=e+4|0;k=e;c[f>>2]=a;c[j>>2]=b;c[l>>2]=d;c[g>>2]=c[(c[f>>2]|0)+28>>2];c[k>>2]=c[(c[f>>2]|0)+32>>2];c[h>>2]=(c[g>>2]|0)>>>(c[l>>2]|0);c[g>>2]=(c[g>>2]|0)-(c[h>>2]|0);if((c[j>>2]|0)!=0){c[(c[f>>2]|0)+32>>2]=(c[k>>2]|0)+(c[g>>2]|0)}c[(c[f>>2]|0)+28>>2]=(c[j>>2]|0)!=0?c[h>>2]|0:c[g>>2]|0;Vb(c[f>>2]|0);i=e;return}function Xb(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0;e=i;i=i+32|0;h=e+20|0;g=e+16|0;l=e+12|0;j=e+8|0;k=e+4|0;f=e;c[h>>2]=a;c[g>>2]=b;c[l>>2]=d;c[l>>2]=(c[l>>2]|0)+ -1;c[f>>2]=32-(We(c[l>>2]|0)|0);if((c[f>>2]|0)>8){c[f>>2]=(c[f>>2]|0)-8;c[j>>2]=((c[l>>2]|0)>>>(c[f>>2]|0))+1;c[k>>2]=(c[g>>2]|0)>>>(c[f>>2]|0);Tb(c[h>>2]|0,c[k>>2]|0,(c[k>>2]|0)+1|0,c[j>>2]|0);Yb(c[h>>2]|0,c[g>>2]&(1<<c[f>>2])-1,c[f>>2]|0);i=e;return}else{Tb(c[h>>2]|0,c[g>>2]|0,(c[g>>2]|0)+1|0,(c[l>>2]|0)+1|0);i=e;return}}function Yb(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0;k=i;i=i+32|0;j=k+16|0;f=k+12|0;h=k+8|0;e=k+4|0;g=k;c[j>>2]=a;c[f>>2]=b;c[h>>2]=d;c[e>>2]=c[(c[j>>2]|0)+12>>2];c[g>>2]=c[(c[j>>2]|0)+16>>2];if(((c[g>>2]|0)+(c[h>>2]|0)|0)>>>0>32){do{b=Zb(c[j>>2]|0,c[e>>2]&255)|0;a=(c[j>>2]|0)+44|0;c[a>>2]=c[a>>2]|b;c[e>>2]=(c[e>>2]|0)>>>8;c[g>>2]=(c[g>>2]|0)-8}while((c[g>>2]|0)>=8)}c[e>>2]=c[e>>2]|c[f>>2]<<c[g>>2];c[g>>2]=(c[g>>2]|0)+(c[h>>2]|0);c[(c[j>>2]|0)+12>>2]=c[e>>2];c[(c[j>>2]|0)+16>>2]=c[g>>2];a=(c[j>>2]|0)+20|0;c[a>>2]=(c[a>>2]|0)+(c[h>>2]|0);i=k;return}function Zb(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0;e=i;i=i+16|0;f=e+8|0;g=e+4|0;h=e;c[g>>2]=b;c[h>>2]=d;if(((c[(c[g>>2]|0)+24>>2]|0)+(c[(c[g>>2]|0)+8>>2]|0)|0)>>>0>=(c[(c[g>>2]|0)+4>>2]|0)>>>0){c[f>>2]=-1;b=c[f>>2]|0;i=e;return b|0}else{d=c[h>>2]&255;h=c[(c[g>>2]|0)+4>>2]|0;j=(c[g>>2]|0)+8|0;b=(c[j>>2]|0)+1|0;c[j>>2]=b;a[(c[c[g>>2]>>2]|0)+(h-b)>>0]=d;c[f>>2]=0;b=c[f>>2]|0;i=e;return b|0}return 0}function _b(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0;d=i;i=i+16|0;e=d+12|0;h=d+8|0;f=d+4|0;g=d;c[e>>2]=a;c[h>>2]=b;if((c[h>>2]|0)==255){a=(c[e>>2]|0)+36|0;c[a>>2]=(c[a>>2]|0)+1;i=d;return}c[f>>2]=c[h>>2]>>8;if((c[(c[e>>2]|0)+40>>2]|0)>=0){b=$b(c[e>>2]|0,(c[(c[e>>2]|0)+40>>2]|0)+(c[f>>2]|0)|0)|0;a=(c[e>>2]|0)+44|0;c[a>>2]=c[a>>2]|b}if((c[(c[e>>2]|0)+36>>2]|0)>>>0>0){c[g>>2]=255+(c[f>>2]|0)&255;do{a=$b(c[e>>2]|0,c[g>>2]|0)|0;f=(c[e>>2]|0)+44|0;c[f>>2]=c[f>>2]|a;f=(c[e>>2]|0)+36|0;a=(c[f>>2]|0)+ -1|0;c[f>>2]=a}while(a>>>0>0)}c[(c[e>>2]|0)+40>>2]=c[h>>2]&255;i=d;return}function $b(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0;e=i;i=i+16|0;f=e+8|0;g=e+4|0;h=e;c[g>>2]=b;c[h>>2]=d;if(((c[(c[g>>2]|0)+24>>2]|0)+(c[(c[g>>2]|0)+8>>2]|0)|0)>>>0>=(c[(c[g>>2]|0)+4>>2]|0)>>>0){c[f>>2]=-1;b=c[f>>2]|0;i=e;return b|0}else{h=c[h>>2]&255;d=(c[g>>2]|0)+24|0;b=c[d>>2]|0;c[d>>2]=b+1;a[(c[c[g>>2]>>2]|0)+b>>0]=h;c[f>>2]=0;b=c[f>>2]|0;i=e;return b|0}return 0}function ac(a,d){a=a|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0;l=i;i=i+80|0;k=l+60|0;f=l+48|0;e=l+4|0;g=l+8|0;o=l+64|0;n=l;h=l+16|0;j=l+56|0;m=l+52|0;c[k>>2]=a;c[f>>2]=d;if((c[(c[k>>2]|0)+12>>2]|0)>0){d=c[(c[k>>2]|0)+12>>2]|0}else{d=0}c[m>>2]=d;c[h>>2]=1;c[n>>2]=0;do{c[o>>2]=b[(c[k>>2]|0)+16+(c[n>>2]<<1<<1)>>1]|0;c[g>>2]=b[(c[k>>2]|0)+16+((c[n>>2]<<1)+1<<1)>>1]|0;a=$(c[h+(c[n>>2]<<2)>>2]|0,c[o>>2]|0)|0;c[h+((c[n>>2]|0)+1<<2)>>2]=a;c[n>>2]=(c[n>>2]|0)+1}while((c[g>>2]|0)!=1);c[g>>2]=b[(c[k>>2]|0)+16+((c[n>>2]<<1)-1<<1)>>1]|0;c[j>>2]=(c[n>>2]|0)-1;while(1){if((c[j>>2]|0)<0){break}if((c[j>>2]|0)!=0){c[e>>2]=b[(c[k>>2]|0)+16+((c[j>>2]<<1)-1<<1)>>1]|0}else{c[e>>2]=1}n=b[(c[k>>2]|0)+16+(c[j>>2]<<1<<1)>>1]|0;if((n|0)==2){bc(c[f>>2]|0,c[g>>2]|0,c[h+(c[j>>2]<<2)>>2]|0)}else if((n|0)==3){dc(c[f>>2]|0,c[h+(c[j>>2]<<2)>>2]<<c[m>>2],c[k>>2]|0,c[g>>2]|0,c[h+(c[j>>2]<<2)>>2]|0,c[e>>2]|0)}else if((n|0)==5){ec(c[f>>2]|0,c[h+(c[j>>2]<<2)>>2]<<c[m>>2],c[k>>2]|0,c[g>>2]|0,c[h+(c[j>>2]<<2)>>2]|0,c[e>>2]|0)}else if((n|0)==4){cc(c[f>>2]|0,c[h+(c[j>>2]<<2)>>2]<<c[m>>2],c[k>>2]|0,c[g>>2]|0,c[h+(c[j>>2]<<2)>>2]|0,c[e>>2]|0)}c[g>>2]=c[e>>2];c[j>>2]=(c[j>>2]|0)+ -1}i=l;return}function bc(a,d,e){a=a|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0;f=i;i=i+32|0;j=f+4|0;h=f+8|0;k=f+24|0;g=f;m=f+28|0;l=f+16|0;c[j>>2]=a;c[f+12>>2]=d;c[h>>2]=e;b[m>>1]=23170;c[g>>2]=0;while(1){if((c[g>>2]|0)>=(c[h>>2]|0)){break}c[k>>2]=(c[j>>2]|0)+32;a=c[k>>2]|0;c[l+0>>2]=c[a+0>>2];c[l+4>>2]=c[a+4>>2];c[c[k>>2]>>2]=(c[c[j>>2]>>2]|0)-(c[l>>2]|0);c[(c[k>>2]|0)+4>>2]=(c[(c[j>>2]|0)+4>>2]|0)-(c[l+4>>2]|0);c[c[j>>2]>>2]=(c[c[j>>2]>>2]|0)+(c[l>>2]|0);c[(c[j>>2]|0)+4>>2]=(c[(c[j>>2]|0)+4>>2]|0)+(c[l+4>>2]|0);a=($(b[m>>1]|0,((c[(c[k>>2]|0)+8>>2]|0)+(c[(c[k>>2]|0)+12>>2]|0)>>16&65535)<<16>>16)|0)<<1;c[l>>2]=a+(($(b[m>>1]|0,(c[(c[k>>2]|0)+8>>2]|0)+(c[(c[k>>2]|0)+12>>2]|0)&65535&65535)|0)>>15);a=($(b[m>>1]|0,((c[(c[k>>2]|0)+12>>2]|0)-(c[(c[k>>2]|0)+8>>2]|0)>>16&65535)<<16>>16)|0)<<1;c[l+4>>2]=a+(($(b[m>>1]|0,(c[(c[k>>2]|0)+12>>2]|0)-(c[(c[k>>2]|0)+8>>2]|0)&65535&65535)|0)>>15);c[(c[k>>2]|0)+8>>2]=(c[(c[j>>2]|0)+8>>2]|0)-(c[l>>2]|0);c[(c[k>>2]|0)+12>>2]=(c[(c[j>>2]|0)+12>>2]|0)-(c[l+4>>2]|0);c[(c[j>>2]|0)+8>>2]=(c[(c[j>>2]|0)+8>>2]|0)+(c[l>>2]|0);c[(c[j>>2]|0)+12>>2]=(c[(c[j>>2]|0)+12>>2]|0)+(c[l+4>>2]|0);c[l>>2]=c[(c[k>>2]|0)+20>>2];c[l+4>>2]=0-(c[(c[k>>2]|0)+16>>2]|0);c[(c[k>>2]|0)+16>>2]=(c[(c[j>>2]|0)+16>>2]|0)-(c[l>>2]|0);c[(c[k>>2]|0)+20>>2]=(c[(c[j>>2]|0)+20>>2]|0)-(c[l+4>>2]|0);c[(c[j>>2]|0)+16>>2]=(c[(c[j>>2]|0)+16>>2]|0)+(c[l>>2]|0);c[(c[j>>2]|0)+20>>2]=(c[(c[j>>2]|0)+20>>2]|0)+(c[l+4>>2]|0);a=($(b[m>>1]|0,((c[(c[k>>2]|0)+28>>2]|0)-(c[(c[k>>2]|0)+24>>2]|0)>>16&65535)<<16>>16)|0)<<1;c[l>>2]=a+(($(b[m>>1]|0,(c[(c[k>>2]|0)+28>>2]|0)-(c[(c[k>>2]|0)+24>>2]|0)&65535&65535)|0)>>15);a=($(b[m>>1]|0,(0-(c[(c[k>>2]|0)+28>>2]|0)-(c[(c[k>>2]|0)+24>>2]|0)>>16&65535)<<16>>16)|0)<<1;c[l+4>>2]=a+(($(b[m>>1]|0,0-(c[(c[k>>2]|0)+28>>2]|0)-(c[(c[k>>2]|0)+24>>2]|0)&65535&65535)|0)>>15);c[(c[k>>2]|0)+24>>2]=(c[(c[j>>2]|0)+24>>2]|0)-(c[l>>2]|0);c[(c[k>>2]|0)+28>>2]=(c[(c[j>>2]|0)+28>>2]|0)-(c[l+4>>2]|0);c[(c[j>>2]|0)+24>>2]=(c[(c[j>>2]|0)+24>>2]|0)+(c[l>>2]|0);c[(c[j>>2]|0)+28>>2]=(c[(c[j>>2]|0)+28>>2]|0)+(c[l+4>>2]|0);c[j>>2]=(c[j>>2]|0)+64;c[g>>2]=(c[g>>2]|0)+1}i=f;return}function cc(a,d,e,f,g,h){a=a|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0;u=i;i=i+128|0;m=u+112|0;A=u+92|0;t=u+72|0;q=u+76|0;l=u+60|0;s=u+88|0;k=u+96|0;n=u+104|0;o=u+120|0;p=u+56|0;x=u+8|0;j=u+80|0;v=u;w=u+64|0;y=u+84|0;z=u+68|0;r=u+100|0;c[m>>2]=a;c[A>>2]=d;c[t>>2]=e;c[q>>2]=f;c[l>>2]=g;c[s>>2]=h;if((c[q>>2]|0)==1){c[k>>2]=0;while(1){if((c[k>>2]|0)>=(c[l>>2]|0)){break}c[n>>2]=(c[c[m>>2]>>2]|0)-(c[(c[m>>2]|0)+16>>2]|0);c[n+4>>2]=(c[(c[m>>2]|0)+4>>2]|0)-(c[(c[m>>2]|0)+20>>2]|0);c[c[m>>2]>>2]=(c[c[m>>2]>>2]|0)+(c[(c[m>>2]|0)+16>>2]|0);c[(c[m>>2]|0)+4>>2]=(c[(c[m>>2]|0)+4>>2]|0)+(c[(c[m>>2]|0)+20>>2]|0);c[o>>2]=(c[(c[m>>2]|0)+8>>2]|0)+(c[(c[m>>2]|0)+24>>2]|0);c[o+4>>2]=(c[(c[m>>2]|0)+12>>2]|0)+(c[(c[m>>2]|0)+28>>2]|0);c[(c[m>>2]|0)+16>>2]=(c[c[m>>2]>>2]|0)-(c[o>>2]|0);c[(c[m>>2]|0)+20>>2]=(c[(c[m>>2]|0)+4>>2]|0)-(c[o+4>>2]|0);c[c[m>>2]>>2]=(c[c[m>>2]>>2]|0)+(c[o>>2]|0);c[(c[m>>2]|0)+4>>2]=(c[(c[m>>2]|0)+4>>2]|0)+(c[o+4>>2]|0);c[o>>2]=(c[(c[m>>2]|0)+8>>2]|0)-(c[(c[m>>2]|0)+24>>2]|0);c[o+4>>2]=(c[(c[m>>2]|0)+12>>2]|0)-(c[(c[m>>2]|0)+28>>2]|0);c[(c[m>>2]|0)+8>>2]=(c[n>>2]|0)+(c[o+4>>2]|0);c[(c[m>>2]|0)+12>>2]=(c[n+4>>2]|0)-(c[o>>2]|0);c[(c[m>>2]|0)+24>>2]=(c[n>>2]|0)-(c[o+4>>2]|0);c[(c[m>>2]|0)+28>>2]=(c[n+4>>2]|0)+(c[o>>2]|0);c[m>>2]=(c[m>>2]|0)+32;c[k>>2]=(c[k>>2]|0)+1}i=u;return}c[y>>2]=c[q>>2]<<1;c[z>>2]=(c[q>>2]|0)*3;c[r>>2]=c[m>>2];c[k>>2]=0;while(1){if((c[k>>2]|0)>=(c[l>>2]|0)){break}c[m>>2]=(c[r>>2]|0)+(($(c[k>>2]|0,c[s>>2]|0)|0)<<3);a=c[(c[t>>2]|0)+52>>2]|0;c[j>>2]=a;c[v>>2]=a;c[w>>2]=a;c[p>>2]=0;while(1){if((c[p>>2]|0)>=(c[q>>2]|0)){break}a=($(b[c[j>>2]>>1]|0,(c[(c[m>>2]|0)+(c[q>>2]<<3)>>2]>>16&65535)<<16>>16)|0)<<1;a=a+(($(b[c[j>>2]>>1]|0,c[(c[m>>2]|0)+(c[q>>2]<<3)>>2]&65535&65535)|0)>>15)|0;d=($(b[(c[j>>2]|0)+2>>1]|0,(c[(c[m>>2]|0)+(c[q>>2]<<3)+4>>2]>>16&65535)<<16>>16)|0)<<1;c[x>>2]=a-(d+(($(b[(c[j>>2]|0)+2>>1]|0,c[(c[m>>2]|0)+(c[q>>2]<<3)+4>>2]&65535&65535)|0)>>15));d=($(b[(c[j>>2]|0)+2>>1]|0,(c[(c[m>>2]|0)+(c[q>>2]<<3)>>2]>>16&65535)<<16>>16)|0)<<1;d=d+(($(b[(c[j>>2]|0)+2>>1]|0,c[(c[m>>2]|0)+(c[q>>2]<<3)>>2]&65535&65535)|0)>>15)|0;a=($(b[c[j>>2]>>1]|0,(c[(c[m>>2]|0)+(c[q>>2]<<3)+4>>2]>>16&65535)<<16>>16)|0)<<1;c[x+4>>2]=d+(a+(($(b[c[j>>2]>>1]|0,c[(c[m>>2]|0)+(c[q>>2]<<3)+4>>2]&65535&65535)|0)>>15));a=($(b[c[v>>2]>>1]|0,(c[(c[m>>2]|0)+(c[y>>2]<<3)>>2]>>16&65535)<<16>>16)|0)<<1;a=a+(($(b[c[v>>2]>>1]|0,c[(c[m>>2]|0)+(c[y>>2]<<3)>>2]&65535&65535)|0)>>15)|0;d=($(b[(c[v>>2]|0)+2>>1]|0,(c[(c[m>>2]|0)+(c[y>>2]<<3)+4>>2]>>16&65535)<<16>>16)|0)<<1;c[x+8>>2]=a-(d+(($(b[(c[v>>2]|0)+2>>1]|0,c[(c[m>>2]|0)+(c[y>>2]<<3)+4>>2]&65535&65535)|0)>>15));d=($(b[(c[v>>2]|0)+2>>1]|0,(c[(c[m>>2]|0)+(c[y>>2]<<3)>>2]>>16&65535)<<16>>16)|0)<<1;d=d+(($(b[(c[v>>2]|0)+2>>1]|0,c[(c[m>>2]|0)+(c[y>>2]<<3)>>2]&65535&65535)|0)>>15)|0;a=($(b[c[v>>2]>>1]|0,(c[(c[m>>2]|0)+(c[y>>2]<<3)+4>>2]>>16&65535)<<16>>16)|0)<<1;c[x+12>>2]=d+(a+(($(b[c[v>>2]>>1]|0,c[(c[m>>2]|0)+(c[y>>2]<<3)+4>>2]&65535&65535)|0)>>15));a=($(b[c[w>>2]>>1]|0,(c[(c[m>>2]|0)+(c[z>>2]<<3)>>2]>>16&65535)<<16>>16)|0)<<1;a=a+(($(b[c[w>>2]>>1]|0,c[(c[m>>2]|0)+(c[z>>2]<<3)>>2]&65535&65535)|0)>>15)|0;d=($(b[(c[w>>2]|0)+2>>1]|0,(c[(c[m>>2]|0)+(c[z>>2]<<3)+4>>2]>>16&65535)<<16>>16)|0)<<1;c[x+16>>2]=a-(d+(($(b[(c[w>>2]|0)+2>>1]|0,c[(c[m>>2]|0)+(c[z>>2]<<3)+4>>2]&65535&65535)|0)>>15));d=($(b[(c[w>>2]|0)+2>>1]|0,(c[(c[m>>2]|0)+(c[z>>2]<<3)>>2]>>16&65535)<<16>>16)|0)<<1;d=d+(($(b[(c[w>>2]|0)+2>>1]|0,c[(c[m>>2]|0)+(c[z>>2]<<3)>>2]&65535&65535)|0)>>15)|0;a=($(b[c[w>>2]>>1]|0,(c[(c[m>>2]|0)+(c[z>>2]<<3)+4>>2]>>16&65535)<<16>>16)|0)<<1;c[x+20>>2]=d+(a+(($(b[c[w>>2]>>1]|0,c[(c[m>>2]|0)+(c[z>>2]<<3)+4>>2]&65535&65535)|0)>>15));c[x+40>>2]=(c[c[m>>2]>>2]|0)-(c[x+8>>2]|0);c[x+44>>2]=(c[(c[m>>2]|0)+4>>2]|0)-(c[x+12>>2]|0);c[c[m>>2]>>2]=(c[c[m>>2]>>2]|0)+(c[x+8>>2]|0);c[(c[m>>2]|0)+4>>2]=(c[(c[m>>2]|0)+4>>2]|0)+(c[x+12>>2]|0);c[x+24>>2]=(c[x>>2]|0)+(c[x+16>>2]|0);c[x+28>>2]=(c[x+4>>2]|0)+(c[x+20>>2]|0);c[x+32>>2]=(c[x>>2]|0)-(c[x+16>>2]|0);c[x+36>>2]=(c[x+4>>2]|0)-(c[x+20>>2]|0);c[(c[m>>2]|0)+(c[y>>2]<<3)>>2]=(c[c[m>>2]>>2]|0)-(c[x+24>>2]|0);c[(c[m>>2]|0)+(c[y>>2]<<3)+4>>2]=(c[(c[m>>2]|0)+4>>2]|0)-(c[x+28>>2]|0);c[j>>2]=(c[j>>2]|0)+(c[A>>2]<<2);c[v>>2]=(c[v>>2]|0)+(c[A>>2]<<1<<2);c[w>>2]=(c[w>>2]|0)+((c[A>>2]|0)*3<<2);c[c[m>>2]>>2]=(c[c[m>>2]>>2]|0)+(c[x+24>>2]|0);c[(c[m>>2]|0)+4>>2]=(c[(c[m>>2]|0)+4>>2]|0)+(c[x+28>>2]|0);c[(c[m>>2]|0)+(c[q>>2]<<3)>>2]=(c[x+40>>2]|0)+(c[x+36>>2]|0);c[(c[m>>2]|0)+(c[q>>2]<<3)+4>>2]=(c[x+44>>2]|0)-(c[x+32>>2]|0);c[(c[m>>2]|0)+(c[z>>2]<<3)>>2]=(c[x+40>>2]|0)-(c[x+36>>2]|0);c[(c[m>>2]|0)+(c[z>>2]<<3)+4>>2]=(c[x+44>>2]|0)+(c[x+32>>2]|0);c[m>>2]=(c[m>>2]|0)+8;c[p>>2]=(c[p>>2]|0)+1}c[k>>2]=(c[k>>2]|0)+1}i=u;return}function dc(a,d,e,f,g,h){a=a|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0;s=i;i=i+96|0;l=s+8|0;q=s+16|0;w=s+76|0;m=s;x=s+72|0;v=s+80|0;u=s+84|0;j=s+88|0;p=s+4|0;k=s+24|0;o=s+12|0;n=s+32|0;r=s+92|0;t=s+20|0;c[l>>2]=a;c[q>>2]=d;c[w>>2]=e;c[m>>2]=f;c[x>>2]=g;c[v>>2]=h;c[p>>2]=c[m>>2]<<1;c[t>>2]=c[l>>2];b[r>>1]=-16384;b[r+2>>1]=-28378;c[u>>2]=0;while(1){if((c[u>>2]|0)>=(c[x>>2]|0)){break}c[l>>2]=(c[t>>2]|0)+(($(c[u>>2]|0,c[v>>2]|0)|0)<<3);a=c[(c[w>>2]|0)+52>>2]|0;c[o>>2]=a;c[k>>2]=a;c[j>>2]=c[m>>2];do{a=($(b[c[k>>2]>>1]|0,(c[(c[l>>2]|0)+(c[m>>2]<<3)>>2]>>16&65535)<<16>>16)|0)<<1;a=a+(($(b[c[k>>2]>>1]|0,c[(c[l>>2]|0)+(c[m>>2]<<3)>>2]&65535&65535)|0)>>15)|0;d=($(b[(c[k>>2]|0)+2>>1]|0,(c[(c[l>>2]|0)+(c[m>>2]<<3)+4>>2]>>16&65535)<<16>>16)|0)<<1;c[n+8>>2]=a-(d+(($(b[(c[k>>2]|0)+2>>1]|0,c[(c[l>>2]|0)+(c[m>>2]<<3)+4>>2]&65535&65535)|0)>>15));d=($(b[(c[k>>2]|0)+2>>1]|0,(c[(c[l>>2]|0)+(c[m>>2]<<3)>>2]>>16&65535)<<16>>16)|0)<<1;d=d+(($(b[(c[k>>2]|0)+2>>1]|0,c[(c[l>>2]|0)+(c[m>>2]<<3)>>2]&65535&65535)|0)>>15)|0;a=($(b[c[k>>2]>>1]|0,(c[(c[l>>2]|0)+(c[m>>2]<<3)+4>>2]>>16&65535)<<16>>16)|0)<<1;c[n+12>>2]=d+(a+(($(b[c[k>>2]>>1]|0,c[(c[l>>2]|0)+(c[m>>2]<<3)+4>>2]&65535&65535)|0)>>15));a=($(b[c[o>>2]>>1]|0,(c[(c[l>>2]|0)+(c[p>>2]<<3)>>2]>>16&65535)<<16>>16)|0)<<1;a=a+(($(b[c[o>>2]>>1]|0,c[(c[l>>2]|0)+(c[p>>2]<<3)>>2]&65535&65535)|0)>>15)|0;d=($(b[(c[o>>2]|0)+2>>1]|0,(c[(c[l>>2]|0)+(c[p>>2]<<3)+4>>2]>>16&65535)<<16>>16)|0)<<1;c[n+16>>2]=a-(d+(($(b[(c[o>>2]|0)+2>>1]|0,c[(c[l>>2]|0)+(c[p>>2]<<3)+4>>2]&65535&65535)|0)>>15));d=($(b[(c[o>>2]|0)+2>>1]|0,(c[(c[l>>2]|0)+(c[p>>2]<<3)>>2]>>16&65535)<<16>>16)|0)<<1;d=d+(($(b[(c[o>>2]|0)+2>>1]|0,c[(c[l>>2]|0)+(c[p>>2]<<3)>>2]&65535&65535)|0)>>15)|0;a=($(b[c[o>>2]>>1]|0,(c[(c[l>>2]|0)+(c[p>>2]<<3)+4>>2]>>16&65535)<<16>>16)|0)<<1;c[n+20>>2]=d+(a+(($(b[c[o>>2]>>1]|0,c[(c[l>>2]|0)+(c[p>>2]<<3)+4>>2]&65535&65535)|0)>>15));c[n+24>>2]=(c[n+8>>2]|0)+(c[n+16>>2]|0);c[n+28>>2]=(c[n+12>>2]|0)+(c[n+20>>2]|0);c[n>>2]=(c[n+8>>2]|0)-(c[n+16>>2]|0);c[n+4>>2]=(c[n+12>>2]|0)-(c[n+20>>2]|0);c[k>>2]=(c[k>>2]|0)+(c[q>>2]<<2);c[o>>2]=(c[o>>2]|0)+(c[q>>2]<<1<<2);c[(c[l>>2]|0)+(c[m>>2]<<3)>>2]=(c[c[l>>2]>>2]|0)-(c[n+24>>2]>>1);c[(c[l>>2]|0)+(c[m>>2]<<3)+4>>2]=(c[(c[l>>2]|0)+4>>2]|0)-(c[n+28>>2]>>1);a=($(b[r+2>>1]|0,(c[n>>2]>>16&65535)<<16>>16)|0)<<1;c[n>>2]=a+(($(b[r+2>>1]|0,c[n>>2]&65535&65535)|0)>>15);a=($(b[r+2>>1]|0,(c[n+4>>2]>>16&65535)<<16>>16)|0)<<1;c[n+4>>2]=a+(($(b[r+2>>1]|0,c[n+4>>2]&65535&65535)|0)>>15);c[c[l>>2]>>2]=(c[c[l>>2]>>2]|0)+(c[n+24>>2]|0);c[(c[l>>2]|0)+4>>2]=(c[(c[l>>2]|0)+4>>2]|0)+(c[n+28>>2]|0);c[(c[l>>2]|0)+(c[p>>2]<<3)>>2]=(c[(c[l>>2]|0)+(c[m>>2]<<3)>>2]|0)+(c[n+4>>2]|0);c[(c[l>>2]|0)+(c[p>>2]<<3)+4>>2]=(c[(c[l>>2]|0)+(c[m>>2]<<3)+4>>2]|0)-(c[n>>2]|0);a=(c[l>>2]|0)+(c[m>>2]<<3)|0;c[a>>2]=(c[a>>2]|0)-(c[n+4>>2]|0);a=(c[l>>2]|0)+(c[m>>2]<<3)+4|0;c[a>>2]=(c[a>>2]|0)+(c[n>>2]|0);c[l>>2]=(c[l>>2]|0)+8;a=(c[j>>2]|0)+ -1|0;c[j>>2]=a}while((a|0)!=0);c[u>>2]=(c[u>>2]|0)+1}i=s;return}



function Pd(d,e,f,g,h,j,k){d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0;u=i;i=i+784|0;l=u+64|0;Q=u+48|0;x=u+44|0;s=u+108|0;P=u+100|0;G=u+16|0;q=u+20|0;C=u+24|0;D=u+28|0;v=u+32|0;t=u+36|0;A=u+96|0;w=u+104|0;N=u+112|0;r=u+120|0;F=u+128|0;B=u+68|0;n=u+72|0;o=u+76|0;I=u+80|0;y=u+84|0;E=u+12|0;O=u+8|0;M=u+136|0;L=u+4|0;p=u;J=u+40|0;H=u+92|0;m=u+52|0;z=u+88|0;c[Q>>2]=d;c[x>>2]=e;c[s>>2]=f;c[P>>2]=g;c[G>>2]=h;c[q>>2]=j;c[C>>2]=k;c[t>>2]=0;c[A>>2]=0;c[F+0>>2]=0;c[F+4>>2]=0;c[n>>2]=c[Q>>2];c[o>>2]=c[n>>2];a:do{if((c[P>>2]|0)!=0){c[v>>2]=0;while(1){if((c[v>>2]|0)>=(c[(c[x>>2]|0)+4>>2]|0)){break a}c[(c[o>>2]|0)+((c[v>>2]|0)*4260|0)+2388>>2]=0;c[v>>2]=(c[v>>2]|0)+1}}}while(0);if((c[(c[x>>2]|0)+4>>2]|0)>(c[(c[n>>2]|0)+8536>>2]|0)){Q=be((c[o>>2]|0)+4260|0)|0;c[A>>2]=(c[A>>2]|0)+Q}if((c[(c[x>>2]|0)+4>>2]|0)==1?(c[(c[n>>2]|0)+8536>>2]|0)==2:0){j=(c[(c[x>>2]|0)+12>>2]|0)==((c[(c[o>>2]|0)+2316>>2]|0)*1e3|0)}else{j=0}c[y>>2]=j&1;b:do{if((c[(c[o>>2]|0)+2388>>2]|0)==0){c[v>>2]=0;c:while(1){if((c[v>>2]|0)>=(c[(c[x>>2]|0)+4>>2]|0)){break b}do{if((c[(c[x>>2]|0)+16>>2]|0)==0){c[(c[o>>2]|0)+((c[v>>2]|0)*4260|0)+2392>>2]=1;c[(c[o>>2]|0)+((c[v>>2]|0)*4260|0)+2324>>2]=2}else{if((c[(c[x>>2]|0)+16>>2]|0)==10){c[(c[o>>2]|0)+((c[v>>2]|0)*4260|0)+2392>>2]=1;c[(c[o>>2]|0)+((c[v>>2]|0)*4260|0)+2324>>2]=2;break}if((c[(c[x>>2]|0)+16>>2]|0)==20){c[(c[o>>2]|0)+((c[v>>2]|0)*4260|0)+2392>>2]=1;c[(c[o>>2]|0)+((c[v>>2]|0)*4260|0)+2324>>2]=4;break}if((c[(c[x>>2]|0)+16>>2]|0)==40){c[(c[o>>2]|0)+((c[v>>2]|0)*4260|0)+2392>>2]=2;c[(c[o>>2]|0)+((c[v>>2]|0)*4260|0)+2324>>2]=4;break}if((c[(c[x>>2]|0)+16>>2]|0)!=60){K=23;break c}c[(c[o>>2]|0)+((c[v>>2]|0)*4260|0)+2392>>2]=3;c[(c[o>>2]|0)+((c[v>>2]|0)*4260|0)+2324>>2]=4}}while(0);c[O>>2]=(c[(c[x>>2]|0)+12>>2]>>10)+1;if((c[O>>2]|0)!=8&(c[O>>2]|0)!=12&(c[O>>2]|0)!=16){K=25;break}Q=Zd((c[o>>2]|0)+((c[v>>2]|0)*4260|0)|0,c[O>>2]|0,c[(c[x>>2]|0)+8>>2]|0)|0;c[A>>2]=(c[A>>2]|0)+Q;c[v>>2]=(c[v>>2]|0)+1}if((K|0)==23){c[l>>2]=-203;Q=c[l>>2]|0;i=u;return Q|0}else if((K|0)==25){c[l>>2]=-200;Q=c[l>>2]|0;i=u;return Q|0}}}while(0);do{if((c[c[x>>2]>>2]|0)==2?(c[(c[x>>2]|0)+4>>2]|0)==2:0){if((c[(c[n>>2]|0)+8532>>2]|0)!=1?(c[(c[n>>2]|0)+8536>>2]|0)!=1:0){break}Q=(c[n>>2]|0)+8520|0;b[Q+0>>1]=0;b[Q+2>>1]=0;Q=(c[n>>2]|0)+8528|0;b[Q+0>>1]=0;b[Q+2>>1]=0;Ze((c[o>>2]|0)+6692|0,(c[o>>2]|0)+2432|0,300)|0}}while(0);c[(c[n>>2]|0)+8532>>2]=c[c[x>>2]>>2];c[(c[n>>2]|0)+8536>>2]=c[(c[x>>2]|0)+4>>2];if((c[(c[x>>2]|0)+8>>2]|0)<=48e3?(c[(c[x>>2]|0)+8>>2]|0)>=8e3:0){d:do{if((c[s>>2]|0)!=1?(c[(c[o>>2]|0)+2388>>2]|0)==0:0){c[v>>2]=0;while(1){if((c[v>>2]|0)>=(c[(c[x>>2]|0)+4>>2]|0)){break}c[D>>2]=0;while(1){Q=(c[D>>2]|0)<(c[(c[o>>2]|0)+((c[v>>2]|0)*4260|0)+2392>>2]|0);O=Ob(c[G>>2]|0,1)|0;if(!Q){break}c[(c[o>>2]|0)+((c[v>>2]|0)*4260|0)+2404+(c[D>>2]<<2)>>2]=O;c[D>>2]=(c[D>>2]|0)+1}c[(c[o>>2]|0)+((c[v>>2]|0)*4260|0)+2416>>2]=O;c[v>>2]=(c[v>>2]|0)+1}c[v>>2]=0;while(1){if((c[v>>2]|0)>=(c[(c[x>>2]|0)+4>>2]|0)){break}Q=(c[o>>2]|0)+((c[v>>2]|0)*4260|0)+2420|0;c[Q+0>>2]=0;c[Q+4>>2]=0;c[Q+8>>2]=0;e:do{if((c[(c[o>>2]|0)+((c[v>>2]|0)*4260|0)+2416>>2]|0)!=0){if((c[(c[o>>2]|0)+((c[v>>2]|0)*4260|0)+2392>>2]|0)==1){c[(c[o>>2]|0)+((c[v>>2]|0)*4260|0)+2420>>2]=1;break}c[N>>2]=(Pb(c[G>>2]|0,c[18248+((c[(c[o>>2]|0)+((c[v>>2]|0)*4260|0)+2392>>2]|0)-2<<2)>>2]|0,8)|0)+1;c[D>>2]=0;while(1){if((c[D>>2]|0)>=(c[(c[o>>2]|0)+((c[v>>2]|0)*4260|0)+2392>>2]|0)){break e}c[(c[o>>2]|0)+((c[v>>2]|0)*4260|0)+2420+(c[D>>2]<<2)>>2]=c[N>>2]>>c[D>>2]&1;c[D>>2]=(c[D>>2]|0)+1}}}while(0);c[v>>2]=(c[v>>2]|0)+1}if((c[s>>2]|0)==0){c[D>>2]=0;while(1){if((c[D>>2]|0)>=(c[(c[o>>2]|0)+2392>>2]|0)){break d}c[v>>2]=0;while(1){N=c[D>>2]|0;if((c[v>>2]|0)>=(c[(c[x>>2]|0)+4>>2]|0)){break}if((c[(c[o>>2]|0)+((c[v>>2]|0)*4260|0)+2420+(N<<2)>>2]|0)!=0){do{if((c[(c[x>>2]|0)+4>>2]|0)==2){if((c[v>>2]|0)!=0){break}qe(c[G>>2]|0,F);if((c[(c[o>>2]|0)+6680+(c[D>>2]<<2)>>2]|0)!=0){break}re(c[G>>2]|0,t)}}while(0);do{if((c[D>>2]|0)>0){if((c[(c[o>>2]|0)+((c[v>>2]|0)*4260|0)+2420+((c[D>>2]|0)-1<<2)>>2]|0)==0){K=65;break}c[L>>2]=2}else{K=65}}while(0);if((K|0)==65){K=0;c[L>>2]=0}Vd((c[o>>2]|0)+((c[v>>2]|0)*4260|0)|0,c[G>>2]|0,c[D>>2]|0,1,c[L>>2]|0);Yd(c[G>>2]|0,M,a[(c[o>>2]|0)+((c[v>>2]|0)*4260|0)+2765>>0]|0,a[(c[o>>2]|0)+((c[v>>2]|0)*4260|0)+2766>>0]|0,c[(c[o>>2]|0)+((c[v>>2]|0)*4260|0)+2328>>2]|0)}c[v>>2]=(c[v>>2]|0)+1}c[D>>2]=N+1}}}}while(0);f:do{if((c[(c[x>>2]|0)+4>>2]|0)==2){do{if((c[s>>2]|0)!=0){if((c[s>>2]|0)==2?(c[(c[o>>2]|0)+2420+(c[(c[o>>2]|0)+2388>>2]<<2)>>2]|0)==1:0){break}c[v>>2]=0;while(1){if((c[v>>2]|0)>=2){break f}c[F+(c[v>>2]<<2)>>2]=b[(c[n>>2]|0)+8520+(c[v>>2]<<1)>>1]|0;c[v>>2]=(c[v>>2]|0)+1}}}while(0);qe(c[G>>2]|0,F);if(!((c[s>>2]|0)==0?(c[(c[o>>2]|0)+6664+(c[(c[o>>2]|0)+2388>>2]<<2)>>2]|0)==0:0)){K=75}do{if((K|0)==75){if((c[s>>2]|0)==2?(c[(c[o>>2]|0)+6680+(c[(c[o>>2]|0)+2388>>2]<<2)>>2]|0)==0:0){break}c[t>>2]=0;break f}}while(0);re(c[G>>2]|0,t)}}while(0);if(((c[(c[x>>2]|0)+4>>2]|0)==2?(c[t>>2]|0)==0:0)?(c[(c[n>>2]|0)+8540>>2]|0)==1:0){Xe((c[n>>2]|0)+5608|0,0,960)|0;L=(c[n>>2]|0)+5544|0;K=L+64|0;do{c[L>>2]=0;L=L+4|0}while((L|0)<(K|0));c[(c[n>>2]|0)+6568>>2]=100;a[(c[n>>2]|0)+6572>>0]=10;c[(c[n>>2]|0)+8424>>2]=0;c[(c[n>>2]|0)+6636>>2]=1}Q=$(c[(c[x>>2]|0)+12>>2]|0,c[(c[x>>2]|0)+4>>2]|0)|0;c[E>>2]=(Q|0)<($(c[(c[x>>2]|0)+8>>2]|0,c[c[x>>2]>>2]|0)|0)&1;if((c[E>>2]|0)!=0){K=1}else{K=$(c[(c[x>>2]|0)+4>>2]|0,(c[(c[o>>2]|0)+2328>>2]|0)+2|0)|0}c[p>>2]=ia()|0;L=i;i=i+((2*K|0)+15&-16)|0;if((c[E>>2]|0)!=0){c[r>>2]=c[q>>2];c[r+4>>2]=(c[q>>2]|0)+(c[(c[o>>2]|0)+2328>>2]<<1)+4}else{c[r>>2]=L;c[r+4>>2]=L+(c[(c[o>>2]|0)+2328>>2]<<1)+4}if((c[s>>2]|0)==0){c[I>>2]=((c[t>>2]|0)!=0^1)&1}else{if((c[(c[n>>2]|0)+8540>>2]|0)!=0){if((c[(c[x>>2]|0)+4>>2]|0)==2?(c[s>>2]|0)==2:0){K=(c[(c[o>>2]|0)+6680+(c[(c[o>>2]|0)+6648>>2]<<2)>>2]|0)==1}else{K=0}}else{K=1}c[I>>2]=K&1}c[v>>2]=0;while(1){if((c[v>>2]|0)>=(c[(c[x>>2]|0)+4>>2]|0)){break}if((c[v>>2]|0)!=0?(c[I>>2]|0)==0:0){Xe((c[r+(c[v>>2]<<2)>>2]|0)+4|0,0,c[w>>2]<<1|0)|0}else{c[J>>2]=(c[(c[o>>2]|0)+2388>>2]|0)-(c[v>>2]|0);g:do{if((c[J>>2]|0)<=0){c[H>>2]=0}else{if((c[s>>2]|0)==2){c[H>>2]=(c[(c[o>>2]|0)+((c[v>>2]|0)*4260|0)+2420+((c[J>>2]|0)-1<<2)>>2]|0)!=0?2:0;break}do{if((c[v>>2]|0)>0){if((c[(c[n>>2]|0)+8540>>2]|0)==0){break}c[H>>2]=1;break g}}while(0);c[H>>2]=2}}while(0);Q=Ud((c[o>>2]|0)+((c[v>>2]|0)*4260|0)|0,c[G>>2]|0,(c[r+(c[v>>2]<<2)>>2]|0)+4|0,w,c[s>>2]|0,c[H>>2]|0)|0;c[A>>2]=(c[A>>2]|0)+Q}Q=(c[o>>2]|0)+((c[v>>2]|0)*4260|0)+2388|0;c[Q>>2]=(c[Q>>2]|0)+1;c[v>>2]=(c[v>>2]|0)+1}if((c[c[x>>2]>>2]|0)==2?(c[(c[x>>2]|0)+4>>2]|0)==2:0){pe((c[n>>2]|0)+8520|0,c[r>>2]|0,c[r+4>>2]|0,F,c[(c[o>>2]|0)+2316>>2]|0,c[w>>2]|0)}else{Q=c[r>>2]|0;P=(c[n>>2]|0)+8524|0;b[Q+0>>1]=b[P+0>>1]|0;b[Q+2>>1]=b[P+2>>1]|0;Q=(c[n>>2]|0)+8524|0;P=(c[r>>2]|0)+(c[w>>2]<<1)|0;b[Q+0>>1]=b[P+0>>1]|0;b[Q+2>>1]=b[P+2>>1]|0}Q=$(c[w>>2]|0,c[(c[x>>2]|0)+8>>2]|0)|0;c[c[C>>2]>>2]=(Q|0)/(((c[(c[o>>2]|0)+2316>>2]&65535)<<16>>16)*1e3|0)|0;if((c[c[x>>2]>>2]|0)==2){F=c[c[C>>2]>>2]|0}else{F=1}G=i;i=i+((2*F|0)+15&-16)|0;if((c[c[x>>2]>>2]|0)==2){c[B>>2]=G}else{c[B>>2]=c[q>>2]}if((c[E>>2]|0)!=0){F=$(c[(c[x>>2]|0)+4>>2]|0,(c[(c[o>>2]|0)+2328>>2]|0)+2|0)|0}else{F=1}G=i;i=i+((2*F|0)+15&-16)|0;if((c[E>>2]|0)!=0){Q=($(c[(c[x>>2]|0)+4>>2]|0,(c[(c[o>>2]|0)+2328>>2]|0)+2|0)|0)<<1;Ze(G|0,c[q>>2]|0,Q+0|0)|0;c[r>>2]=G;c[r+4>>2]=G+(c[(c[o>>2]|0)+2328>>2]<<1)+4}c[v>>2]=0;while(1){E=c[x>>2]|0;if((c[c[x>>2]>>2]|0)<(c[(c[x>>2]|0)+4>>2]|0)){E=c[E>>2]|0}else{E=c[E+4>>2]|0}if((c[v>>2]|0)>=(E|0)){break}Q=ee((c[o>>2]|0)+((c[v>>2]|0)*4260|0)+2432|0,c[B>>2]|0,(c[r+(c[v>>2]<<2)>>2]|0)+2|0,c[w>>2]|0)|0;c[A>>2]=(c[A>>2]|0)+Q;h:do{if((c[c[x>>2]>>2]|0)==2){c[D>>2]=0;while(1){if((c[D>>2]|0)>=(c[c[C>>2]>>2]|0)){break h}b[(c[q>>2]|0)+((c[v>>2]|0)+(c[D>>2]<<1)<<1)>>1]=b[(c[B>>2]|0)+(c[D>>2]<<1)>>1]|0;c[D>>2]=(c[D>>2]|0)+1}}}while(0);c[v>>2]=(c[v>>2]|0)+1}i:do{if((c[c[x>>2]>>2]|0)==2){if((c[(c[x>>2]|0)+4>>2]|0)!=1){break}if((c[y>>2]|0)!=0){Q=ee((c[o>>2]|0)+6692|0,c[B>>2]|0,(c[r>>2]|0)+2|0,c[w>>2]|0)|0;c[A>>2]=(c[A>>2]|0)+Q;c[D>>2]=0;while(1){if((c[D>>2]|0)>=(c[c[C>>2]>>2]|0)){break i}b[(c[q>>2]|0)+(1+(c[D>>2]<<1)<<1)>>1]=b[(c[B>>2]|0)+(c[D>>2]<<1)>>1]|0;c[D>>2]=(c[D>>2]|0)+1}}else{c[D>>2]=0;while(1){if((c[D>>2]|0)>=(c[c[C>>2]>>2]|0)){break i}b[(c[q>>2]|0)+(1+(c[D>>2]<<1)<<1)>>1]=b[(c[q>>2]|0)+(0+(c[D>>2]<<1)<<1)>>1]|0;c[D>>2]=(c[D>>2]|0)+1}}}}while(0);if((c[(c[o>>2]|0)+4164>>2]|0)==2){c[m+0>>2]=c[14952>>2];c[m+4>>2]=c[14956>>2];c[m+8>>2]=c[14960>>2];Q=$(c[(c[o>>2]|0)+2308>>2]|0,c[m+((c[(c[o>>2]|0)+2316>>2]|0)-8>>2<<2)>>2]|0)|0;c[(c[x>>2]|0)+20>>2]=Q}else{c[(c[x>>2]|0)+20>>2]=0}j:do{if((c[s>>2]|0)==1){c[D>>2]=0;while(1){if((c[D>>2]|0)>=(c[(c[n>>2]|0)+8536>>2]|0)){break j}a[(c[n>>2]|0)+((c[D>>2]|0)*4260|0)+2312>>0]=10;c[D>>2]=(c[D>>2]|0)+1}}else{c[(c[n>>2]|0)+8540>>2]=c[t>>2]}}while(0);c[l>>2]=c[A>>2];c[z>>2]=1;na(c[p>>2]|0);Q=c[l>>2]|0;i=u;return Q|0}c[A>>2]=-200;c[l>>2]=c[A>>2];Q=c[l>>2]|0;i=u;return Q|0}function Qd(d,e,f,g){d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0;F=i;i=i+144|0;B=F+48|0;p=F+40|0;k=F;I=F+84|0;x=F+4|0;n=F+16|0;h=F+20|0;A=F+24|0;m=F+28|0;z=F+72|0;t=F+80|0;q=F+88|0;s=F+92|0;l=F+96|0;r=F+104|0;C=F+56|0;D=F+60|0;u=F+8|0;v=F+64|0;w=F+12|0;H=F+32|0;G=F+68|0;j=F+36|0;y=F+76|0;o=F+44|0;E=F+52|0;c[B>>2]=d;c[p>>2]=e;c[k>>2]=f;c[I>>2]=g;c[h>>2]=0;g=c[(c[B>>2]|0)+2336>>2]|0;c[E>>2]=ia()|0;f=i;i=i+((2*g|0)+15&-16)|0;g=i;i=i+((4*((c[(c[B>>2]|0)+2336>>2]|0)+(c[(c[B>>2]|0)+2328>>2]|0)|0)|0)+15&-16)|0;d=i;i=i+((4*(c[(c[B>>2]|0)+2332>>2]|0)|0)+15&-16)|0;e=i;i=i+((4*((c[(c[B>>2]|0)+2332>>2]|0)+16|0)|0)+15&-16)|0;c[G>>2]=b[18296+(a[(c[B>>2]|0)+2765>>0]>>1<<2)+(a[(c[B>>2]|0)+2766>>0]<<1)>>1]|0;if((a[(c[B>>2]|0)+2767>>0]|0)<4){c[z>>2]=1}else{c[z>>2]=0}c[H>>2]=a[(c[B>>2]|0)+2770>>0]|0;c[x>>2]=0;while(1){if((c[x>>2]|0)>=(c[(c[B>>2]|0)+2328>>2]|0)){break}c[H>>2]=907633515+($(c[H>>2]|0,196314165)|0);c[(c[B>>2]|0)+4+(c[x>>2]<<2)>>2]=b[(c[I>>2]|0)+(c[x>>2]<<1)>>1]<<14;K=(c[B>>2]|0)+4+(c[x>>2]<<2)|0;J=c[K>>2]|0;if((c[(c[B>>2]|0)+4+(c[x>>2]<<2)>>2]|0)<=0){if((J|0)<0){K=(c[B>>2]|0)+4+(c[x>>2]<<2)|0;c[K>>2]=(c[K>>2]|0)+1280}}else{c[K>>2]=J-1280}K=(c[B>>2]|0)+4+(c[x>>2]<<2)|0;c[K>>2]=(c[K>>2]|0)+(c[G>>2]<<4);if((c[H>>2]|0)<0){c[(c[B>>2]|0)+4+(c[x>>2]<<2)>>2]=0-(c[(c[B>>2]|0)+4+(c[x>>2]<<2)>>2]|0)}c[H>>2]=(c[H>>2]|0)+(b[(c[I>>2]|0)+(c[x>>2]<<1)>>1]|0);c[x>>2]=(c[x>>2]|0)+1}I=e+0|0;H=(c[B>>2]|0)+1284|0;G=I+64|0;do{c[I>>2]=c[H>>2];I=I+4|0;H=H+4|0}while((I|0)<(G|0));c[y>>2]=(c[B>>2]|0)+4;c[l>>2]=c[k>>2];c[m>>2]=c[(c[B>>2]|0)+2336>>2];c[n>>2]=0;while(1){if((c[n>>2]|0)>=(c[(c[B>>2]|0)+2324>>2]|0)){break}c[o>>2]=d;c[q>>2]=(c[p>>2]|0)+32+(c[n>>2]>>1<<5);Ze(r|0,c[q>>2]|0,c[(c[B>>2]|0)+2340>>2]<<1|0)|0;c[s>>2]=(c[p>>2]|0)+96+((c[n>>2]|0)*5<<1);c[t>>2]=a[(c[B>>2]|0)+2765>>0]|0;c[u>>2]=c[(c[p>>2]|0)+16+(c[n>>2]<<2)>>2]>>6;c[v>>2]=Rd(c[(c[p>>2]|0)+16+(c[n>>2]<<2)>>2]|0,47)|0;a:do{if((c[(c[p>>2]|0)+16+(c[n>>2]<<2)>>2]|0)!=(c[c[B>>2]>>2]|0)){c[w>>2]=Sd(c[c[B>>2]>>2]|0,c[(c[p>>2]|0)+16+(c[n>>2]<<2)>>2]|0,16)|0;c[x>>2]=0;while(1){if((c[x>>2]|0)>=16){break a}K=$(c[w>>2]>>16,(c[e+(c[x>>2]<<2)>>2]&65535)<<16>>16)|0;K=K+(($(c[w>>2]&65535,(c[e+(c[x>>2]<<2)>>2]&65535)<<16>>16)|0)>>16)|0;K=K+($(c[w>>2]|0,(c[e+(c[x>>2]<<2)>>2]>>15)+1>>1)|0)|0;c[e+(c[x>>2]<<2)>>2]=K;c[x>>2]=(c[x>>2]|0)+1}}else{c[w>>2]=65536}}while(0);c[c[B>>2]>>2]=c[(c[p>>2]|0)+16+(c[n>>2]<<2)>>2];if((((c[(c[B>>2]|0)+4160>>2]|0)!=0?(c[(c[B>>2]|0)+4164>>2]|0)==2:0)?(a[(c[B>>2]|0)+2765>>0]|0)!=2:0)?(c[n>>2]|0)<2:0){K=c[s>>2]|0;b[K+0>>1]=0;b[K+2>>1]=0;b[K+4>>1]=0;b[K+6>>1]=0;b[K+8>>1]=0;b[(c[s>>2]|0)+4>>1]=4096;c[t>>2]=2;c[(c[p>>2]|0)+(c[n>>2]<<2)>>2]=c[(c[B>>2]|0)+2308>>2]}b:do{if((c[t>>2]|0)==2){c[h>>2]=c[(c[p>>2]|0)+(c[n>>2]<<2)>>2];do{if((c[n>>2]|0)!=0){if((c[n>>2]|0)==2?(c[z>>2]|0)!=0:0){break}if((c[w>>2]|0)==65536){break b}c[x>>2]=0;while(1){if((c[x>>2]|0)>=((c[h>>2]|0)+2|0)){break b}K=$(c[w>>2]>>16,(c[g+((c[m>>2]|0)-(c[x>>2]|0)-1<<2)>>2]&65535)<<16>>16)|0;K=K+(($(c[w>>2]&65535,(c[g+((c[m>>2]|0)-(c[x>>2]|0)-1<<2)>>2]&65535)<<16>>16)|0)>>16)|0;K=K+($(c[w>>2]|0,(c[g+((c[m>>2]|0)-(c[x>>2]|0)-1<<2)>>2]>>15)+1>>1)|0)|0;c[g+((c[m>>2]|0)-(c[x>>2]|0)-1<<2)>>2]=K;c[x>>2]=(c[x>>2]|0)+1}}}while(0);c[A>>2]=(c[(c[B>>2]|0)+2336>>2]|0)-(c[h>>2]|0)-(c[(c[B>>2]|0)+2340>>2]|0)-2;if((c[n>>2]|0)==2){Ze((c[B>>2]|0)+1348+(c[(c[B>>2]|0)+2336>>2]<<1)|0,c[k>>2]|0,c[(c[B>>2]|0)+2332>>2]<<1<<1|0)|0}K=(c[A>>2]|0)+($(c[n>>2]|0,c[(c[B>>2]|0)+2332>>2]|0)|0)|0;ad(f+(c[A>>2]<<1)|0,(c[B>>2]|0)+1348+(K<<1)|0,c[q>>2]|0,(c[(c[B>>2]|0)+2336>>2]|0)-(c[A>>2]|0)|0,c[(c[B>>2]|0)+2340>>2]|0);if((c[n>>2]|0)==0){K=$(c[v>>2]>>16,(c[(c[p>>2]|0)+136>>2]&65535)<<16>>16)|0;c[v>>2]=K+(($(c[v>>2]&65535,(c[(c[p>>2]|0)+136>>2]&65535)<<16>>16)|0)>>16)<<2}c[x>>2]=0;while(1){if((c[x>>2]|0)>=((c[h>>2]|0)+2|0)){break b}K=$(c[v>>2]>>16,b[f+((c[(c[B>>2]|0)+2336>>2]|0)-(c[x>>2]|0)-1<<1)>>1]|0)|0;K=K+(($(c[v>>2]&65535,b[f+((c[(c[B>>2]|0)+2336>>2]|0)-(c[x>>2]|0)-1<<1)>>1]|0)|0)>>16)|0;c[g+((c[m>>2]|0)-(c[x>>2]|0)-1<<2)>>2]=K;c[x>>2]=(c[x>>2]|0)+1}}}while(0);c:do{if((c[t>>2]|0)==2){c[j>>2]=g+((c[m>>2]|0)-(c[h>>2]|0)+2<<2);c[x>>2]=0;while(1){if((c[x>>2]|0)>=(c[(c[B>>2]|0)+2332>>2]|0)){break c}c[C>>2]=2;K=$(c[c[j>>2]>>2]>>16,b[c[s>>2]>>1]|0)|0;c[C>>2]=(c[C>>2]|0)+(K+(($(c[c[j>>2]>>2]&65535,b[c[s>>2]>>1]|0)|0)>>16));K=$(c[(c[j>>2]|0)+ -4>>2]>>16,b[(c[s>>2]|0)+2>>1]|0)|0;c[C>>2]=(c[C>>2]|0)+(K+(($(c[(c[j>>2]|0)+ -4>>2]&65535,b[(c[s>>2]|0)+2>>1]|0)|0)>>16));K=$(c[(c[j>>2]|0)+ -8>>2]>>16,b[(c[s>>2]|0)+4>>1]|0)|0;c[C>>2]=(c[C>>2]|0)+(K+(($(c[(c[j>>2]|0)+ -8>>2]&65535,b[(c[s>>2]|0)+4>>1]|0)|0)>>16));K=$(c[(c[j>>2]|0)+ -12>>2]>>16,b[(c[s>>2]|0)+6>>1]|0)|0;c[C>>2]=(c[C>>2]|0)+(K+(($(c[(c[j>>2]|0)+ -12>>2]&65535,b[(c[s>>2]|0)+6>>1]|0)|0)>>16));K=$(c[(c[j>>2]|0)+ -16>>2]>>16,b[(c[s>>2]|0)+8>>1]|0)|0;c[C>>2]=(c[C>>2]|0)+(K+(($(c[(c[j>>2]|0)+ -16>>2]&65535,b[(c[s>>2]|0)+8>>1]|0)|0)>>16));c[j>>2]=(c[j>>2]|0)+4;c[(c[o>>2]|0)+(c[x>>2]<<2)>>2]=(c[(c[y>>2]|0)+(c[x>>2]<<2)>>2]|0)+(c[C>>2]<<1);c[g+(c[m>>2]<<2)>>2]=c[(c[o>>2]|0)+(c[x>>2]<<2)>>2]<<1;c[m>>2]=(c[m>>2]|0)+1;c[x>>2]=(c[x>>2]|0)+1}}else{c[o>>2]=c[y>>2]}}while(0);c[x>>2]=0;while(1){if((c[x>>2]|0)>=(c[(c[B>>2]|0)+2332>>2]|0)){break}c[D>>2]=c[(c[B>>2]|0)+2340>>2]>>1;K=$(c[e+(16+(c[x>>2]|0)-1<<2)>>2]>>16,b[r>>1]|0)|0;c[D>>2]=(c[D>>2]|0)+(K+(($(c[e+(16+(c[x>>2]|0)-1<<2)>>2]&65535,b[r>>1]|0)|0)>>16));K=$(c[e+(16+(c[x>>2]|0)-2<<2)>>2]>>16,b[r+2>>1]|0)|0;c[D>>2]=(c[D>>2]|0)+(K+(($(c[e+(16+(c[x>>2]|0)-2<<2)>>2]&65535,b[r+2>>1]|0)|0)>>16));K=$(c[e+(16+(c[x>>2]|0)-3<<2)>>2]>>16,b[r+4>>1]|0)|0;c[D>>2]=(c[D>>2]|0)+(K+(($(c[e+(16+(c[x>>2]|0)-3<<2)>>2]&65535,b[r+4>>1]|0)|0)>>16));K=$(c[e+(16+(c[x>>2]|0)-4<<2)>>2]>>16,b[r+6>>1]|0)|0;c[D>>2]=(c[D>>2]|0)+(K+(($(c[e+(16+(c[x>>2]|0)-4<<2)>>2]&65535,b[r+6>>1]|0)|0)>>16));K=$(c[e+(16+(c[x>>2]|0)-5<<2)>>2]>>16,b[r+8>>1]|0)|0;c[D>>2]=(c[D>>2]|0)+(K+(($(c[e+(16+(c[x>>2]|0)-5<<2)>>2]&65535,b[r+8>>1]|0)|0)>>16));K=$(c[e+(16+(c[x>>2]|0)-6<<2)>>2]>>16,b[r+10>>1]|0)|0;c[D>>2]=(c[D>>2]|0)+(K+(($(c[e+(16+(c[x>>2]|0)-6<<2)>>2]&65535,b[r+10>>1]|0)|0)>>16));K=$(c[e+(16+(c[x>>2]|0)-7<<2)>>2]>>16,b[r+12>>1]|0)|0;c[D>>2]=(c[D>>2]|0)+(K+(($(c[e+(16+(c[x>>2]|0)-7<<2)>>2]&65535,b[r+12>>1]|0)|0)>>16));K=$(c[e+(16+(c[x>>2]|0)-8<<2)>>2]>>16,b[r+14>>1]|0)|0;c[D>>2]=(c[D>>2]|0)+(K+(($(c[e+(16+(c[x>>2]|0)-8<<2)>>2]&65535,b[r+14>>1]|0)|0)>>16));K=$(c[e+(16+(c[x>>2]|0)-9<<2)>>2]>>16,b[r+16>>1]|0)|0;c[D>>2]=(c[D>>2]|0)+(K+(($(c[e+(16+(c[x>>2]|0)-9<<2)>>2]&65535,b[r+16>>1]|0)|0)>>16));K=$(c[e+(16+(c[x>>2]|0)-10<<2)>>2]>>16,b[r+18>>1]|0)|0;c[D>>2]=(c[D>>2]|0)+(K+(($(c[e+(16+(c[x>>2]|0)-10<<2)>>2]&65535,b[r+18>>1]|0)|0)>>16));if((c[(c[B>>2]|0)+2340>>2]|0)==16){K=$(c[e+(16+(c[x>>2]|0)-11<<2)>>2]>>16,b[r+20>>1]|0)|0;c[D>>2]=(c[D>>2]|0)+(K+(($(c[e+(16+(c[x>>2]|0)-11<<2)>>2]&65535,b[r+20>>1]|0)|0)>>16));K=$(c[e+(16+(c[x>>2]|0)-12<<2)>>2]>>16,b[r+22>>1]|0)|0;c[D>>2]=(c[D>>2]|0)+(K+(($(c[e+(16+(c[x>>2]|0)-12<<2)>>2]&65535,b[r+22>>1]|0)|0)>>16));K=$(c[e+(16+(c[x>>2]|0)-13<<2)>>2]>>16,b[r+24>>1]|0)|0;c[D>>2]=(c[D>>2]|0)+(K+(($(c[e+(16+(c[x>>2]|0)-13<<2)>>2]&65535,b[r+24>>1]|0)|0)>>16));K=$(c[e+(16+(c[x>>2]|0)-14<<2)>>2]>>16,b[r+26>>1]|0)|0;c[D>>2]=(c[D>>2]|0)+(K+(($(c[e+(16+(c[x>>2]|0)-14<<2)>>2]&65535,b[r+26>>1]|0)|0)>>16));K=$(c[e+(16+(c[x>>2]|0)-15<<2)>>2]>>16,b[r+28>>1]|0)|0;c[D>>2]=(c[D>>2]|0)+(K+(($(c[e+(16+(c[x>>2]|0)-15<<2)>>2]&65535,b[r+28>>1]|0)|0)>>16));K=$(c[e+(16+(c[x>>2]|0)-16<<2)>>2]>>16,b[r+30>>1]|0)|0;c[D>>2]=(c[D>>2]|0)+(K+(($(c[e+(16+(c[x>>2]|0)-16<<2)>>2]&65535,b[r+30>>1]|0)|0)>>16))}c[e+(16+(c[x>>2]|0)<<2)>>2]=(c[(c[o>>2]|0)+(c[x>>2]<<2)>>2]|0)+(c[D>>2]<<4);K=$(c[e+(16+(c[x>>2]|0)<<2)>>2]>>16,(c[u>>2]&65535)<<16>>16)|0;K=K+(($(c[e+(16+(c[x>>2]|0)<<2)>>2]&65535,(c[u>>2]&65535)<<16>>16)|0)>>16)|0;if(((K+($(c[e+(16+(c[x>>2]|0)<<2)>>2]|0,(c[u>>2]>>15)+1>>1)|0)>>7)+1>>1|0)<=32767){K=$(c[e+(16+(c[x>>2]|0)<<2)>>2]>>16,(c[u>>2]&65535)<<16>>16)|0;K=K+(($(c[e+(16+(c[x>>2]|0)<<2)>>2]&65535,(c[u>>2]&65535)<<16>>16)|0)>>16)|0;if(((K+($(c[e+(16+(c[x>>2]|0)<<2)>>2]|0,(c[u>>2]>>15)+1>>1)|0)>>7)+1>>1|0)<-32768){G=-32768}else{G=$(c[e+(16+(c[x>>2]|0)<<2)>>2]>>16,(c[u>>2]&65535)<<16>>16)|0;G=G+(($(c[e+(16+(c[x>>2]|0)<<2)>>2]&65535,(c[u>>2]&65535)<<16>>16)|0)>>16)|0;G=(G+($(c[e+(16+(c[x>>2]|0)<<2)>>2]|0,(c[u>>2]>>15)+1>>1)|0)>>7)+1>>1}}else{G=32767}b[(c[l>>2]|0)+(c[x>>2]<<1)>>1]=G;c[x>>2]=(c[x>>2]|0)+1}I=e+0|0;H=e+(c[(c[B>>2]|0)+2332>>2]<<2)+0|0;G=I+64|0;do{c[I>>2]=c[H>>2];I=I+4|0;H=H+4|0}while((I|0)<(G|0));c[y>>2]=(c[y>>2]|0)+(c[(c[B>>2]|0)+2332>>2]<<2);c[l>>2]=(c[l>>2]|0)+(c[(c[B>>2]|0)+2332>>2]<<1);c[n>>2]=(c[n>>2]|0)+1}I=(c[B>>2]|0)+1284|0;H=e+0|0;G=I+64|0;do{c[I>>2]=c[H>>2];I=I+4|0;H=H+4|0}while((I|0)<(G|0));na(c[E>>2]|0);i=F;return}function Rd(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0;d=i;i=i+48|0;e=d+28|0;n=d+16|0;h=d+4|0;j=d+8|0;f=d+32|0;k=d;m=d+12|0;l=d+24|0;g=d+20|0;c[n>>2]=a;c[h>>2]=b;b=c[n>>2]|0;c[j>>2]=(Td((c[n>>2]|0)>0?b:0-b|0)|0)-1;c[m>>2]=c[n>>2]<<c[j>>2];c[k>>2]=536870911/(c[m>>2]>>16|0)|0;c[g>>2]=c[k>>2]<<16;b=$(c[m>>2]>>16,(c[k>>2]&65535)<<16>>16)|0;c[l>>2]=536870912-(b+(($(c[m>>2]&65535,(c[k>>2]&65535)<<16>>16)|0)>>16))<<3;b=$(c[l>>2]>>16,(c[k>>2]&65535)<<16>>16)|0;b=(c[g>>2]|0)+(b+(($(c[l>>2]&65535,(c[k>>2]&65535)<<16>>16)|0)>>16))|0;c[g>>2]=b+($(c[l>>2]|0,(c[k>>2]>>15)+1>>1)|0);c[f>>2]=61-(c[j>>2]|0)-(c[h>>2]|0);b=c[f>>2]|0;if((c[f>>2]|0)>0){if((b|0)<32){c[e>>2]=c[g>>2]>>c[f>>2];n=c[e>>2]|0;i=d;return n|0}else{c[e>>2]=0;n=c[e>>2]|0;i=d;return n|0}}h=c[g>>2]|0;a=0-(c[f>>2]|0)|0;do{if((-2147483648>>0-b|0)>(2147483647>>0-(c[f>>2]|0)|0)){if((h|0)>(-2147483648>>a|0)){g=-2147483648>>0-(c[f>>2]|0);break}if((c[g>>2]|0)<(2147483647>>0-(c[f>>2]|0)|0)){g=2147483647>>0-(c[f>>2]|0);break}else{g=c[g>>2]|0;break}}else{if((h|0)>(2147483647>>a|0)){g=2147483647>>0-(c[f>>2]|0);break}if((c[g>>2]|0)<(-2147483648>>0-(c[f>>2]|0)|0)){g=-2147483648>>0-(c[f>>2]|0);break}else{g=c[g>>2]|0;break}}}while(0);c[e>>2]=g<<0-(c[f>>2]|0);n=c[e>>2]|0;i=d;return n|0}function Sd(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;g=i;i=i+48|0;e=g+36|0;q=g+16|0;p=g;j=g+28|0;l=g+32|0;k=g+40|0;f=g+12|0;m=g+24|0;n=g+20|0;o=g+8|0;h=g+4|0;c[q>>2]=a;c[p>>2]=b;c[j>>2]=d;a=c[q>>2]|0;c[l>>2]=(Td((c[q>>2]|0)>0?a:0-a|0)|0)-1;c[n>>2]=c[q>>2]<<c[l>>2];a=c[p>>2]|0;c[k>>2]=(Td((c[p>>2]|0)>0?a:0-a|0)|0)-1;c[o>>2]=c[p>>2]<<c[k>>2];c[m>>2]=536870911/(c[o>>2]>>16|0)|0;a=$(c[n>>2]>>16,(c[m>>2]&65535)<<16>>16)|0;c[h>>2]=a+(($(c[n>>2]&65535,(c[m>>2]&65535)<<16>>16)|0)>>16);a=c[n>>2]|0;d=c[o>>2]|0;b=c[h>>2]|0;b=hf(d|0,((d|0)<0)<<31>>31|0,b|0,((b|0)<0)<<31>>31|0)|0;b=Ve(b|0,D|0,32)|0;c[n>>2]=a-(b<<3);b=$(c[n>>2]>>16,(c[m>>2]&65535)<<16>>16)|0;c[h>>2]=(c[h>>2]|0)+(b+(($(c[n>>2]&65535,(c[m>>2]&65535)<<16>>16)|0)>>16));c[f>>2]=29+(c[l>>2]|0)-(c[k>>2]|0)-(c[j>>2]|0);b=c[f>>2]|0;if((c[f>>2]|0)>=0){if((b|0)<32){c[e>>2]=c[h>>2]>>c[f>>2];q=c[e>>2]|0;i=g;return q|0}else{c[e>>2]=0;q=c[e>>2]|0;i=g;return q|0}}a=c[h>>2]|0;d=0-(c[f>>2]|0)|0;do{if((-2147483648>>0-b|0)>(2147483647>>0-(c[f>>2]|0)|0)){if((a|0)>(-2147483648>>d|0)){h=-2147483648>>0-(c[f>>2]|0);break}if((c[h>>2]|0)<(2147483647>>0-(c[f>>2]|0)|0)){h=2147483647>>0-(c[f>>2]|0);break}else{h=c[h>>2]|0;break}}else{if((a|0)>(2147483647>>d|0)){h=2147483647>>0-(c[f>>2]|0);break}if((c[h>>2]|0)<(-2147483648>>0-(c[f>>2]|0)|0)){h=-2147483648>>0-(c[f>>2]|0);break}else{h=c[h>>2]|0;break}}}while(0);c[e>>2]=h<<0-(c[f>>2]|0);q=c[e>>2]|0;i=g;return q|0}function Td(a){a=a|0;var b=0,d=0;b=i;i=i+16|0;d=b;c[d>>2]=a;if((c[d>>2]|0)==0){d=32;i=b;return d|0}d=32-(32-(We(c[d>>2]|0)|0))|0;i=b;return d|0}function Ud(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0;q=i;i=i+192|0;s=q+172|0;t=q+152|0;m=q;p=q+164|0;u=q+168|0;v=q+176|0;o=q+148|0;l=q+160|0;r=q+156|0;n=q+8|0;j=q+4|0;c[s>>2]=b;c[t>>2]=d;c[m>>2]=e;c[p>>2]=f;c[u>>2]=g;c[v>>2]=h;c[r>>2]=0;c[o>>2]=c[(c[s>>2]|0)+2328>>2];c[n+136>>2]=0;do{if((c[u>>2]|0)==0){k=4}else{if((c[u>>2]|0)==2?(c[(c[s>>2]|0)+2420+(c[(c[s>>2]|0)+2388>>2]<<2)>>2]|0)==1:0){k=4;break}vd(c[s>>2]|0,n,c[m>>2]|0,1)}}while(0);if((k|0)==4){d=(c[o>>2]|0)+16-1&-16;c[j>>2]=ia()|0;b=i;i=i+((2*d|0)+15&-16)|0;Vd(c[s>>2]|0,c[t>>2]|0,c[(c[s>>2]|0)+2388>>2]|0,c[u>>2]|0,c[v>>2]|0);Yd(c[t>>2]|0,b,a[(c[s>>2]|0)+2765>>0]|0,a[(c[s>>2]|0)+2766>>0]|0,c[(c[s>>2]|0)+2328>>2]|0);Wd(c[s>>2]|0,n,c[v>>2]|0);Qd(c[s>>2]|0,n,c[m>>2]|0,b);vd(c[s>>2]|0,n,c[m>>2]|0,0);c[(c[s>>2]|0)+4160>>2]=0;c[(c[s>>2]|0)+4164>>2]=a[(c[s>>2]|0)+2765>>0]|0;c[(c[s>>2]|0)+2376>>2]=0;na(c[j>>2]|0)}c[l>>2]=(c[(c[s>>2]|0)+2336>>2]|0)-(c[(c[s>>2]|0)+2328>>2]|0);$e((c[s>>2]|0)+1348|0,(c[s>>2]|0)+1348+(c[(c[s>>2]|0)+2328>>2]<<1)|0,c[l>>2]<<1|0)|0;Ze((c[s>>2]|0)+1348+(c[l>>2]<<1)|0,c[m>>2]|0,c[(c[s>>2]|0)+2328>>2]<<1|0)|0;Wc(c[s>>2]|0,n,c[m>>2]|0,c[o>>2]|0);yd(c[s>>2]|0,c[m>>2]|0,c[o>>2]|0);c[(c[s>>2]|0)+2308>>2]=c[n+((c[(c[s>>2]|0)+2324>>2]|0)-1<<2)>>2];c[c[p>>2]>>2]=c[o>>2];i=q;return c[r>>2]|0}function Vd(d,e,f,g,h){d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0;l=i;i=i+96|0;r=l+36|0;o=l+4|0;u=l+28|0;v=l+16|0;p=l+32|0;k=l;m=l+12|0;s=l+24|0;n=l+20|0;j=l+8|0;q=l+40|0;t=l+72|0;c[r>>2]=d;c[o>>2]=e;c[u>>2]=f;c[v>>2]=g;c[p>>2]=h;if((c[v>>2]|0)==0?(c[(c[r>>2]|0)+2404+(c[u>>2]<<2)>>2]|0)==0:0){c[s>>2]=Pb(c[o>>2]|0,18280,8)|0}else{c[s>>2]=(Pb(c[o>>2]|0,18272,8)|0)+2}a[(c[r>>2]|0)+2765>>0]=c[s>>2]>>1;a[(c[r>>2]|0)+2766>>0]=c[s>>2]&1;h=c[o>>2]|0;if((c[p>>2]|0)==2){v=(Pb(h,18112,8)|0)&255;a[(c[r>>2]|0)+2736>>0]=v}else{u=(Pb(h,18088+(a[(c[r>>2]|0)+2765>>0]<<3)|0,8)|0)<<3&255;a[(c[r>>2]|0)+2736>>0]=u;u=((Pb(c[o>>2]|0,18344,8)|0)&255)<<24>>24;v=(c[r>>2]|0)+2736|0;a[v>>0]=(a[v>>0]|0)+u}c[k>>2]=1;while(1){h=c[o>>2]|0;if((c[k>>2]|0)>=(c[(c[r>>2]|0)+2324>>2]|0)){break}v=(Pb(h,18112,8)|0)&255;a[(c[r>>2]|0)+2736+(c[k>>2]|0)>>0]=v;c[k>>2]=(c[k>>2]|0)+1}v=$(a[(c[r>>2]|0)+2765>>0]>>1,b[c[(c[r>>2]|0)+2732>>2]>>1]|0)|0;v=(Pb(h,(c[(c[(c[r>>2]|0)+2732>>2]|0)+12>>2]|0)+v|0,8)|0)&255;a[(c[r>>2]|0)+2744>>0]=v;td(q,t,c[(c[r>>2]|0)+2732>>2]|0,a[(c[r>>2]|0)+2744>>0]|0);c[k>>2]=0;while(1){if((c[k>>2]|0)>=(b[(c[(c[r>>2]|0)+2732>>2]|0)+2>>1]|0)){break}c[s>>2]=Pb(c[o>>2]|0,(c[(c[(c[r>>2]|0)+2732>>2]|0)+24>>2]|0)+(b[q+(c[k>>2]<<1)>>1]|0)|0,8)|0;if((c[s>>2]|0)!=0){if((c[s>>2]|0)==8){v=Pb(c[o>>2]|0,18352,8)|0;c[s>>2]=(c[s>>2]|0)+v}}else{v=Pb(c[o>>2]|0,18352,8)|0;c[s>>2]=(c[s>>2]|0)-v}a[(c[r>>2]|0)+2744+((c[k>>2]|0)+1)>>0]=(c[s>>2]|0)-4;c[k>>2]=(c[k>>2]|0)+1}if((c[(c[r>>2]|0)+2324>>2]|0)==4){v=(Pb(c[o>>2]|0,18288,8)|0)&255;a[(c[r>>2]|0)+2767>>0]=v}else{a[(c[r>>2]|0)+2767>>0]=4}if((a[(c[r>>2]|0)+2765>>0]|0)!=2){v=c[r>>2]|0;v=v+2736|0;v=v+29|0;v=a[v>>0]|0;v=v<<24>>24;u=c[r>>2]|0;u=u+2396|0;c[u>>2]=v;u=c[o>>2]|0;u=Pb(u,18320,8)|0;u=u&255;v=c[r>>2]|0;v=v+2736|0;v=v+34|0;a[v>>0]=u;i=l;return}c[n>>2]=1;if(((c[p>>2]|0)==2?(c[(c[r>>2]|0)+2396>>2]|0)==2:0)?(c[j>>2]=((Pb(c[o>>2]|0,18392,8)|0)&65535)<<16>>16,(c[j>>2]|0)>0):0){c[j>>2]=(c[j>>2]|0)-9;b[(c[r>>2]|0)+2762>>1]=(b[(c[r>>2]|0)+2400>>1]|0)+(c[j>>2]|0);c[n>>2]=0}if((c[n>>2]|0)!=0){u=((Pb(c[o>>2]|0,18360,8)|0)&65535)<<16>>16;u=($(u,c[(c[r>>2]|0)+2316>>2]>>1)|0)&65535;b[(c[r>>2]|0)+2762>>1]=u;u=((Pb(c[o>>2]|0,c[(c[r>>2]|0)+2380>>2]|0,8)|0)&65535)<<16>>16;v=(c[r>>2]|0)+2762|0;b[v>>1]=(b[v>>1]|0)+u}b[(c[r>>2]|0)+2400>>1]=b[(c[r>>2]|0)+2762>>1]|0;v=(Pb(c[o>>2]|0,c[(c[r>>2]|0)+2384>>2]|0,8)|0)&255;a[(c[r>>2]|0)+2764>>0]=v;v=(Pb(c[o>>2]|0,15848,8)|0)&255;a[(c[r>>2]|0)+2768>>0]=v;c[m>>2]=0;while(1){if((c[m>>2]|0)>=(c[(c[r>>2]|0)+2324>>2]|0)){break}v=(Pb(c[o>>2]|0,c[15912+(a[(c[r>>2]|0)+2768>>0]<<2)>>2]|0,8)|0)&255;a[(c[r>>2]|0)+2740+(c[m>>2]|0)>>0]=v;c[m>>2]=(c[m>>2]|0)+1}if((c[p>>2]|0)==0){v=(Pb(c[o>>2]|0,18264,8)|0)&255;a[(c[r>>2]|0)+2769>>0]=v;v=c[r>>2]|0;v=v+2736|0;v=v+29|0;v=a[v>>0]|0;v=v<<24>>24;u=c[r>>2]|0;u=u+2396|0;c[u>>2]=v;u=c[o>>2]|0;u=Pb(u,18320,8)|0;u=u&255;v=c[r>>2]|0;v=v+2736|0;v=v+34|0;a[v>>0]=u;i=l;return}else{a[(c[r>>2]|0)+2769>>0]=0;v=c[r>>2]|0;v=v+2736|0;v=v+29|0;v=a[v>>0]|0;v=v<<24>>24;u=c[r>>2]|0;u=u+2396|0;c[u>>2]=v;u=c[o>>2]|0;u=Pb(u,18320,8)|0;u=u&255;v=c[r>>2]|0;v=v+2736|0;v=v+34|0;a[v>>0]=u;i=l;return}}function Wd(d,e,f){d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;j=i;i=i+96|0;h=j+4|0;m=j+16|0;q=j+12|0;o=j+8|0;l=j+24|0;p=j;g=j+32|0;n=j+64|0;k=j+20|0;c[h>>2]=d;c[m>>2]=e;c[q>>2]=f;$d((c[m>>2]|0)+16|0,(c[h>>2]|0)+2736|0,(c[h>>2]|0)+2312|0,(c[q>>2]|0)==2&1,c[(c[h>>2]|0)+2324>>2]|0);kd(g,(c[h>>2]|0)+2744|0,c[(c[h>>2]|0)+2732>>2]|0);fd((c[m>>2]|0)+64|0,g,c[(c[h>>2]|0)+2340>>2]|0);if((c[(c[h>>2]|0)+2376>>2]|0)==1){a[(c[h>>2]|0)+2767>>0]=4}if((a[(c[h>>2]|0)+2767>>0]|0)<4){c[o>>2]=0;while(1){if((c[o>>2]|0)>=(c[(c[h>>2]|0)+2340>>2]|0)){break}q=(b[(c[h>>2]|0)+2344+(c[o>>2]<<1)>>1]|0)+(($(a[(c[h>>2]|0)+2767>>0]|0,(b[g+(c[o>>2]<<1)>>1]|0)-(b[(c[h>>2]|0)+2344+(c[o>>2]<<1)>>1]|0)|0)|0)>>2)&65535;b[n+(c[o>>2]<<1)>>1]=q;c[o>>2]=(c[o>>2]|0)+1}fd((c[m>>2]|0)+32|0,n,c[(c[h>>2]|0)+2340>>2]|0)}else{Ze((c[m>>2]|0)+32|0,(c[m>>2]|0)+64|0,c[(c[h>>2]|0)+2340>>2]<<1|0)|0}Ze((c[h>>2]|0)+2344|0,g|0,c[(c[h>>2]|0)+2340>>2]<<1|0)|0;if((c[(c[h>>2]|0)+4160>>2]|0)!=0){Kd((c[m>>2]|0)+32|0,c[(c[h>>2]|0)+2340>>2]|0,63570);Kd((c[m>>2]|0)+64|0,c[(c[h>>2]|0)+2340>>2]|0,63570)}if((a[(c[h>>2]|0)+2765>>0]|0)!=2){Xe(c[m>>2]|0,0,c[(c[h>>2]|0)+2324>>2]<<2|0)|0;Xe((c[m>>2]|0)+96|0,0,(c[(c[h>>2]|0)+2324>>2]|0)*5<<1|0)|0;a[(c[h>>2]|0)+2768>>0]=0;c[(c[m>>2]|0)+136>>2]=0;i=j;return}Xd(b[(c[h>>2]|0)+2762>>1]|0,a[(c[h>>2]|0)+2764>>0]|0,c[m>>2]|0,c[(c[h>>2]|0)+2316>>2]|0,c[(c[h>>2]|0)+2324>>2]|0);c[k>>2]=c[16208+(a[(c[h>>2]|0)+2768>>0]<<2)>>2];c[l>>2]=0;while(1){if((c[l>>2]|0)>=(c[(c[h>>2]|0)+2324>>2]|0)){break}c[p>>2]=a[(c[h>>2]|0)+2740+(c[l>>2]|0)>>0]|0;c[o>>2]=0;while(1){if((c[o>>2]|0)>=5){break}b[(c[m>>2]|0)+96+(((c[l>>2]|0)*5|0)+(c[o>>2]|0)<<1)>>1]=a[(c[k>>2]|0)+(((c[p>>2]|0)*5|0)+(c[o>>2]|0))>>0]<<7;c[o>>2]=(c[o>>2]|0)+1}c[l>>2]=(c[l>>2]|0)+1}c[p>>2]=a[(c[h>>2]|0)+2769>>0]|0;c[(c[m>>2]|0)+136>>2]=b[18304+(c[p>>2]<<1)>>1]|0;i=j;return}function Xd(d,e,f,g,h){d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0;s=i;i=i+48|0;u=s+36|0;o=s+38|0;j=s+8|0;t=s+20|0;k=s+28|0;m=s+32|0;p=s+12|0;q=s+24|0;r=s+4|0;l=s;n=s+16|0;b[u>>1]=d;a[o>>0]=e;c[j>>2]=f;c[t>>2]=g;c[k>>2]=h;h=(c[k>>2]|0)==4;do{if((c[t>>2]|0)==8){if(h){c[n>>2]=15e3;c[l>>2]=11;break}else{c[n>>2]=14968;c[l>>2]=3;break}}else{if(h){c[n>>2]=15048;c[l>>2]=34;break}else{c[n>>2]=14976;c[l>>2]=12;break}}}while(0);c[q>>2]=(c[t>>2]&65535)<<16>>16<<1;c[r>>2]=((c[t>>2]&65535)<<16>>16)*18;c[m>>2]=(c[q>>2]|0)+(b[u>>1]|0);c[p>>2]=0;while(1){if((c[p>>2]|0)>=(c[k>>2]|0)){break}t=$(c[p>>2]|0,c[l>>2]|0)|0;c[(c[j>>2]|0)+(c[p>>2]<<2)>>2]=(c[m>>2]|0)+(a[(c[n>>2]|0)+(t+(a[o>>0]|0))>>0]|0);t=c[(c[j>>2]|0)+(c[p>>2]<<2)>>2]|0;do{if((c[q>>2]|0)>(c[r>>2]|0)){if((t|0)>(c[q>>2]|0)){t=c[q>>2]|0;break}if((c[(c[j>>2]|0)+(c[p>>2]<<2)>>2]|0)<(c[r>>2]|0)){t=c[r>>2]|0;break}else{t=c[(c[j>>2]|0)+(c[p>>2]<<2)>>2]|0;break}}else{if((t|0)>(c[r>>2]|0)){t=c[r>>2]|0;break}if((c[(c[j>>2]|0)+(c[p>>2]<<2)>>2]|0)<(c[q>>2]|0)){t=c[q>>2]|0;break}else{t=c[(c[j>>2]|0)+(c[p>>2]<<2)>>2]|0;break}}}while(0);c[(c[j>>2]|0)+(c[p>>2]<<2)>>2]=t;c[p>>2]=(c[p>>2]|0)+1}i=s;return}function Yd(a,d,e,f,g){a=a|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0;o=i;i=i+224|0;u=o+84|0;q=o+180|0;l=o+200|0;m=o+208|0;k=o+188|0;h=o+196|0;w=o+204|0;t=o+212|0;j=o+216|0;v=o+80|0;r=o+184|0;y=o+88|0;n=o;p=o+96|0;s=o+192|0;x=o+176|0;c[u>>2]=a;c[q>>2]=d;c[l>>2]=e;c[m>>2]=f;c[k>>2]=g;c[y>>2]=Pb(c[u>>2]|0,18680+((c[l>>2]>>1)*9|0)|0,8)|0;c[j>>2]=c[k>>2]>>4;if((c[j>>2]<<4|0)<(c[k>>2]|0)){c[j>>2]=(c[j>>2]|0)+1}c[x>>2]=18496+((c[y>>2]|0)*18|0);c[h>>2]=0;while(1){if((c[h>>2]|0)>=(c[j>>2]|0)){break}c[p+(c[h>>2]<<2)>>2]=0;a=Pb(c[u>>2]|0,c[x>>2]|0,8)|0;c[n+(c[h>>2]<<2)>>2]=a;while(1){g=c[h>>2]|0;if((c[n+(c[h>>2]<<2)>>2]|0)!=17){break}a=p+(g<<2)|0;c[a>>2]=(c[a>>2]|0)+1;a=Pb(c[u>>2]|0,((c[p+(c[h>>2]<<2)>>2]|0)==10&1)+18658|0,8)|0;c[n+(c[h>>2]<<2)>>2]=a}c[h>>2]=g+1}c[h>>2]=0;while(1){if((c[h>>2]|0)>=(c[j>>2]|0)){break}x=(c[q>>2]|0)+((c[h>>2]&65535)<<16>>16<<4<<1)|0;if((c[n+(c[h>>2]<<2)>>2]|0)>0){me(x,c[u>>2]|0,c[n+(c[h>>2]<<2)>>2]|0)}else{g=x+0|0;x=g+32|0;do{b[g>>1]=0;g=g+2|0}while((g|0)<(x|0))}c[h>>2]=(c[h>>2]|0)+1}c[h>>2]=0;while(1){if((c[h>>2]|0)>=(c[j>>2]|0)){break}if((c[p+(c[h>>2]<<2)>>2]|0)>0){c[r>>2]=c[p+(c[h>>2]<<2)>>2];c[s>>2]=(c[q>>2]|0)+((c[h>>2]&65535)<<16>>16<<4<<1);c[t>>2]=0;while(1){if((c[t>>2]|0)>=16){break}c[v>>2]=b[(c[s>>2]|0)+(c[t>>2]<<1)>>1]|0;c[w>>2]=0;while(1){x=c[v>>2]|0;if((c[w>>2]|0)>=(c[r>>2]|0)){break}c[v>>2]=x<<1;a=Pb(c[u>>2]|0,18256,8)|0;c[v>>2]=(c[v>>2]|0)+a;c[w>>2]=(c[w>>2]|0)+1}b[(c[s>>2]|0)+(c[t>>2]<<1)>>1]=x;c[t>>2]=(c[t>>2]|0)+1}a=n+(c[h>>2]<<2)|0;c[a>>2]=c[a>>2]|c[r>>2]<<5}c[h>>2]=(c[h>>2]|0)+1}Md(c[u>>2]|0,c[q>>2]|0,c[k>>2]|0,c[l>>2]|0,c[m>>2]|0,n);i=o;return}function Zd(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0;f=i;i=i+32|0;g=f+16|0;h=f+12|0;l=f+8|0;j=f+4|0;k=f;c[g>>2]=b;c[h>>2]=d;c[l>>2]=e;c[k>>2]=0;c[(c[g>>2]|0)+2332>>2]=((c[h>>2]&65535)<<16>>16)*5;c[j>>2]=$((c[(c[g>>2]|0)+2324>>2]&65535)<<16>>16,(c[(c[g>>2]|0)+2332>>2]&65535)<<16>>16)|0;if(!((c[(c[g>>2]|0)+2316>>2]|0)==(c[h>>2]|0)?(c[(c[g>>2]|0)+2320>>2]|0)==(c[l>>2]|0):0)){b=de((c[g>>2]|0)+2432|0,((c[h>>2]&65535)<<16>>16)*1e3|0,c[l>>2]|0,0)|0;c[k>>2]=(c[k>>2]|0)+b;c[(c[g>>2]|0)+2320>>2]=c[l>>2]}if((c[(c[g>>2]|0)+2316>>2]|0)==(c[h>>2]|0)?(c[j>>2]|0)==(c[(c[g>>2]|0)+2328>>2]|0):0){b=c[k>>2]|0;i=f;return b|0}l=(c[(c[g>>2]|0)+2324>>2]|0)==4;d=(c[g>>2]|0)+2384|0;do{if((c[h>>2]|0)==8){if(l){c[d>>2]=18456;break}else{c[d>>2]=18488;break}}else{if(l){c[d>>2]=18416;break}else{c[d>>2]=18472;break}}}while(0);if((c[(c[g>>2]|0)+2316>>2]|0)!=(c[h>>2]|0)){c[(c[g>>2]|0)+2336>>2]=((c[h>>2]&65535)<<16>>16)*20;d=(c[g>>2]|0)+2340|0;if((c[h>>2]|0)==8|(c[h>>2]|0)==12){c[d>>2]=10;c[(c[g>>2]|0)+2732>>2]=16960}else{c[d>>2]=16;c[(c[g>>2]|0)+2732>>2]=18048}do{if((c[h>>2]|0)!=16){if((c[h>>2]|0)==12){c[(c[g>>2]|0)+2380>>2]=18336;break}if((c[h>>2]|0)==8){c[(c[g>>2]|0)+2380>>2]=18320}}else{c[(c[g>>2]|0)+2380>>2]=18344}}while(0);c[(c[g>>2]|0)+2376>>2]=1;c[(c[g>>2]|0)+2308>>2]=100;a[(c[g>>2]|0)+2312>>0]=10;c[(c[g>>2]|0)+4164>>2]=0;Xe((c[g>>2]|0)+1348|0,0,960)|0;l=(c[g>>2]|0)+1284|0;d=l+64|0;do{c[l>>2]=0;l=l+4|0}while((l|0)<(d|0))}c[(c[g>>2]|0)+2316>>2]=c[h>>2];c[(c[g>>2]|0)+2328>>2]=c[j>>2];b=c[k>>2]|0;i=f;return b|0}function _d(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;f=i;i=i+16|0;e=f+4|0;d=f;c[e>>2]=a;c[d>>2]=b;i=f;return((c[e>>2]|0)<(c[d>>2]|0)?c[e>>2]|0:c[d>>2]|0)|0}function $d(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;q=i;i=i+32|0;p=q+4|0;l=q+16|0;k=q+8|0;n=q+20|0;o=q+28|0;m=q;r=q+12|0;h=q+24|0;c[p>>2]=b;c[l>>2]=d;c[k>>2]=e;c[n>>2]=f;c[o>>2]=g;c[m>>2]=0;while(1){if((c[m>>2]|0)>=(c[o>>2]|0)){break}if((c[m>>2]|0)==0?(c[n>>2]|0)==0:0){b=(ae(a[(c[l>>2]|0)+(c[m>>2]|0)>>0]|0,(a[c[k>>2]>>0]|0)-16|0)|0)&255;a[c[k>>2]>>0]=b}else{j=6}do{if((j|0)==6){j=0;c[r>>2]=(a[(c[l>>2]|0)+(c[m>>2]|0)>>0]|0)+ -4;c[h>>2]=8+(a[c[k>>2]>>0]|0);g=c[r>>2]|0;if((c[r>>2]|0)>(c[h>>2]|0)){b=c[k>>2]|0;a[b>>0]=(a[b>>0]|0)+((g<<1)-(c[h>>2]|0));break}else{b=c[k>>2]|0;a[b>>0]=(a[b>>0]|0)+g;break}}}while(0);if((a[c[k>>2]>>0]|0)<=63){if((a[c[k>>2]>>0]|0)<0){g=0}else{g=a[c[k>>2]>>0]|0}}else{g=63}a[c[k>>2]>>0]=g;b=ce(_d(((a[c[k>>2]>>0]<<16>>16)*29|0)+((a[c[k>>2]>>0]<<16>>16)*7281>>16)+2090|0,3967)|0)|0;c[(c[p>>2]|0)+(c[m>>2]<<2)>>2]=b;c[m>>2]=(c[m>>2]|0)+1}i=q;return}function ae(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;f=i;i=i+16|0;e=f+4|0;d=f;c[e>>2]=a;c[d>>2]=b;i=f;return((c[e>>2]|0)>(c[d>>2]|0)?c[e>>2]|0:c[d>>2]|0)|0}function be(a){a=a|0;var b=0,d=0;b=i;i=i+16|0;d=b;c[d>>2]=a;Xe(c[d>>2]|0,0,4260)|0;c[(c[d>>2]|0)+2376>>2]=1;c[c[d>>2]>>2]=65536;Vc(c[d>>2]|0);ud(c[d>>2]|0);i=b;return 0}function ce(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0;b=i;i=i+16|0;d=b+12|0;e=b+8|0;f=b+4|0;g=b;c[e>>2]=a;if((c[e>>2]|0)<0){c[d>>2]=0;h=c[d>>2]|0;i=b;return h|0}if((c[e>>2]|0)>=3967){c[d>>2]=2147483647;h=c[d>>2]|0;i=b;return h|0}c[f>>2]=1<<(c[e>>2]>>7);c[g>>2]=c[e>>2]&127;h=c[f>>2]|0;a=c[f>>2]|0;if((c[e>>2]|0)<2048){e=$(($((c[g>>2]&65535)<<16>>16,(128-(c[g>>2]|0)&65535)<<16>>16)|0)>>16,-174)|0;c[f>>2]=h+(($(a,(c[g>>2]|0)+(e+(($(($((c[g>>2]&65535)<<16>>16,(128-(c[g>>2]|0)&65535)<<16>>16)|0)&65535,-174)|0)>>16))|0)|0)>>7)}else{e=$(($((c[g>>2]&65535)<<16>>16,(128-(c[g>>2]|0)&65535)<<16>>16)|0)>>16,-174)|0;c[f>>2]=h+($(a>>7,(c[g>>2]|0)+(e+(($(($((c[g>>2]&65535)<<16>>16,(128-(c[g>>2]|0)&65535)<<16>>16)|0)&65535,-174)|0)>>16))|0)|0)}c[d>>2]=c[f>>2];h=c[d>>2]|0;i=b;return h|0}function de(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0;l=i;i=i+32|0;k=l+20|0;j=l+16|0;m=l+12|0;h=l+8|0;n=l+4|0;g=l;c[j>>2]=b;c[m>>2]=d;c[h>>2]=e;c[n>>2]=f;Xe(c[j>>2]|0,0,300)|0;e=(c[m>>2]|0)!=8e3&(c[m>>2]|0)!=12e3&(c[m>>2]|0)!=16e3;do{if((c[n>>2]|0)!=0){if(!(e&(c[m>>2]|0)!=24e3&(c[m>>2]|0)!=48e3)?!((c[h>>2]|0)!=8e3&(c[h>>2]|0)!=12e3&(c[h>>2]|0)!=16e3):0){c[(c[j>>2]|0)+292>>2]=a[15184+((((c[m>>2]>>12)-((c[m>>2]|0)>16e3&1)>>((c[m>>2]|0)>24e3&1))-1|0)*3|0)+(((c[h>>2]>>12)-((c[h>>2]|0)>16e3&1)>>((c[h>>2]|0)>24e3&1))-1)>>0]|0;break}c[k>>2]=-1;n=c[k>>2]|0;i=l;return n|0}else{if(!e?!((c[h>>2]|0)!=8e3&(c[h>>2]|0)!=12e3&(c[h>>2]|0)!=16e3&(c[h>>2]|0)!=24e3&(c[h>>2]|0)!=48e3):0){c[(c[j>>2]|0)+292>>2]=a[15200+((((c[m>>2]>>12)-((c[m>>2]|0)>16e3&1)>>((c[m>>2]|0)>24e3&1))-1|0)*5|0)+(((c[h>>2]>>12)-((c[h>>2]|0)>16e3&1)>>((c[h>>2]|0)>24e3&1))-1)>>0]|0;break}c[k>>2]=-1;n=c[k>>2]|0;i=l;return n|0}}while(0);c[(c[j>>2]|0)+284>>2]=(c[m>>2]|0)/1e3|0;c[(c[j>>2]|0)+288>>2]=(c[h>>2]|0)/1e3|0;c[(c[j>>2]|0)+268>>2]=(c[(c[j>>2]|0)+284>>2]|0)*10;c[g>>2]=0;f=c[h>>2]|0;e=c[m>>2]|0;do{if((c[h>>2]|0)>(c[m>>2]|0)){d=(c[j>>2]|0)+264|0;if((f|0)==(e<<1|0)){c[d>>2]=1;break}else{c[d>>2]=2;c[g>>2]=1;break}}else{d=(c[j>>2]|0)+264|0;if((f|0)>=(e|0)){c[d>>2]=0;break}c[d>>2]=3;if((c[h>>2]<<2|0)==((c[m>>2]|0)*3|0)){c[(c[j>>2]|0)+280>>2]=3;c[(c[j>>2]|0)+276>>2]=18;c[(c[j>>2]|0)+296>>2]=15232;break}if(((c[h>>2]|0)*3|0)==(c[m>>2]<<1|0)){c[(c[j>>2]|0)+280>>2]=2;c[(c[j>>2]|0)+276>>2]=18;c[(c[j>>2]|0)+296>>2]=15296;break}if((c[h>>2]<<1|0)==(c[m>>2]|0)){c[(c[j>>2]|0)+280>>2]=1;c[(c[j>>2]|0)+276>>2]=24;c[(c[j>>2]|0)+296>>2]=15336;break}if(((c[h>>2]|0)*3|0)==(c[m>>2]|0)){c[(c[j>>2]|0)+280>>2]=1;c[(c[j>>2]|0)+276>>2]=36;c[(c[j>>2]|0)+296>>2]=15368;break}if((c[h>>2]<<2|0)==(c[m>>2]|0)){c[(c[j>>2]|0)+280>>2]=1;c[(c[j>>2]|0)+276>>2]=36;c[(c[j>>2]|0)+296>>2]=15408;break}if(((c[h>>2]|0)*6|0)==(c[m>>2]|0)){c[(c[j>>2]|0)+280>>2]=1;c[(c[j>>2]|0)+276>>2]=36;c[(c[j>>2]|0)+296>>2]=15448;break}c[k>>2]=-1;n=c[k>>2]|0;i=l;return n|0}}while(0);c[(c[j>>2]|0)+272>>2]=((c[m>>2]<<14+(c[g>>2]|0)|0)/(c[h>>2]|0)|0)<<2;while(1){n=$(c[(c[j>>2]|0)+272>>2]>>16,(c[h>>2]&65535)<<16>>16)|0;n=n+(($(c[(c[j>>2]|0)+272>>2]&65535,(c[h>>2]&65535)<<16>>16)|0)>>16)|0;n=n+($(c[(c[j>>2]|0)+272>>2]|0,(c[h>>2]>>15)+1>>1)|0)|0;if((n|0)>=(c[m>>2]<<c[g>>2]|0)){break}n=(c[j>>2]|0)+272|0;c[n>>2]=(c[n>>2]|0)+1}c[k>>2]=0;n=c[k>>2]|0;i=l;return n|0}function ee(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0;k=i;i=i+32|0;g=k+16|0;l=k+12|0;j=k+8|0;h=k+4|0;f=k;c[g>>2]=a;c[l>>2]=b;c[j>>2]=d;c[h>>2]=e;c[f>>2]=(c[(c[g>>2]|0)+284>>2]|0)-(c[(c[g>>2]|0)+292>>2]|0);Ze((c[g>>2]|0)+168+(c[(c[g>>2]|0)+292>>2]<<1)|0,c[j>>2]|0,c[f>>2]<<1|0)|0;e=c[(c[g>>2]|0)+264>>2]|0;if((e|0)==2){ge(c[g>>2]|0,c[l>>2]|0,(c[g>>2]|0)+168|0,c[(c[g>>2]|0)+284>>2]|0);ge(c[g>>2]|0,(c[l>>2]|0)+(c[(c[g>>2]|0)+288>>2]<<1)|0,(c[j>>2]|0)+(c[f>>2]<<1)|0,(c[h>>2]|0)-(c[(c[g>>2]|0)+284>>2]|0)|0)}else if((e|0)==3){ie(c[g>>2]|0,c[l>>2]|0,(c[g>>2]|0)+168|0,c[(c[g>>2]|0)+284>>2]|0);ie(c[g>>2]|0,(c[l>>2]|0)+(c[(c[g>>2]|0)+288>>2]<<1)|0,(c[j>>2]|0)+(c[f>>2]<<1)|0,(c[h>>2]|0)-(c[(c[g>>2]|0)+284>>2]|0)|0)}else if((e|0)==1){le(c[g>>2]|0,c[l>>2]|0,(c[g>>2]|0)+168|0,c[(c[g>>2]|0)+284>>2]|0);le(c[g>>2]|0,(c[l>>2]|0)+(c[(c[g>>2]|0)+288>>2]<<1)|0,(c[j>>2]|0)+(c[f>>2]<<1)|0,(c[h>>2]|0)-(c[(c[g>>2]|0)+284>>2]|0)|0)}else{Ze(c[l>>2]|0,(c[g>>2]|0)+168|0,c[(c[g>>2]|0)+284>>2]<<1|0)|0;Ze((c[l>>2]|0)+(c[(c[g>>2]|0)+288>>2]<<1)|0,(c[j>>2]|0)+(c[f>>2]<<1)|0,(c[h>>2]|0)-(c[(c[g>>2]|0)+284>>2]|0)<<1|0)|0}Ze((c[g>>2]|0)+168|0,(c[j>>2]|0)+((c[h>>2]|0)-(c[(c[g>>2]|0)+292>>2]|0)<<1)|0,c[(c[g>>2]|0)+292>>2]<<1|0)|0;i=k;return 0}function fe(a,d,e,f,g){a=a|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;n=i;i=i+32|0;l=n+8|0;o=n+16|0;m=n+20|0;p=n+24|0;k=n+4|0;j=n;h=n+12|0;c[l>>2]=a;c[o>>2]=d;c[m>>2]=e;c[p>>2]=f;c[k>>2]=g;c[j>>2]=0;while(1){if((c[j>>2]|0)>=(c[k>>2]|0)){break}c[h>>2]=(c[c[l>>2]>>2]|0)+(b[(c[m>>2]|0)+(c[j>>2]<<1)>>1]<<8);c[(c[o>>2]|0)+(c[j>>2]<<2)>>2]=c[h>>2];c[h>>2]=c[h>>2]<<2;a=$(c[h>>2]>>16,b[c[p>>2]>>1]|0)|0;a=(c[(c[l>>2]|0)+4>>2]|0)+(a+(($(c[h>>2]&65535,b[c[p>>2]>>1]|0)|0)>>16))|0;c[c[l>>2]>>2]=a;a=$(c[h>>2]>>16,b[(c[p>>2]|0)+2>>1]|0)|0;a=a+(($(c[h>>2]&65535,b[(c[p>>2]|0)+2>>1]|0)|0)>>16)|0;c[(c[l>>2]|0)+4>>2]=a;c[j>>2]=(c[j>>2]|0)+1}i=n;return}function ge(a,d,e,f){a=a|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;k=i;i=i+48|0;q=k+28|0;g=k+16|0;l=k+4|0;p=k+8|0;n=k+32|0;h=k;m=k+12|0;o=k+24|0;j=k+20|0;c[q>>2]=a;c[g>>2]=d;c[l>>2]=e;c[p>>2]=f;c[n>>2]=c[q>>2];a=(c[(c[n>>2]|0)+268>>2]<<1)+8|0;c[j>>2]=ia()|0;f=i;i=i+((2*a|0)+15&-16)|0;a=(c[n>>2]|0)+24|0;b[f+0>>1]=b[a+0>>1]|0;b[f+2>>1]=b[a+2>>1]|0;b[f+4>>1]=b[a+4>>1]|0;b[f+6>>1]=b[a+6>>1]|0;b[f+8>>1]=b[a+8>>1]|0;b[f+10>>1]=b[a+10>>1]|0;b[f+12>>1]=b[a+12>>1]|0;b[f+14>>1]=b[a+14>>1]|0;c[o>>2]=c[(c[n>>2]|0)+272>>2];while(1){if((c[p>>2]|0)<(c[(c[n>>2]|0)+268>>2]|0)){e=c[p>>2]|0}else{e=c[(c[n>>2]|0)+268>>2]|0}c[h>>2]=e;ke(c[n>>2]|0,f+16|0,c[l>>2]|0,c[h>>2]|0);c[m>>2]=c[h>>2]<<17;c[g>>2]=he(c[g>>2]|0,f,c[m>>2]|0,c[o>>2]|0)|0;c[l>>2]=(c[l>>2]|0)+(c[h>>2]<<1);c[p>>2]=(c[p>>2]|0)-(c[h>>2]|0);if((c[p>>2]|0)<=0){break}q=f+(c[h>>2]<<1<<1)|0;b[f+0>>1]=b[q+0>>1]|0;b[f+2>>1]=b[q+2>>1]|0;b[f+4>>1]=b[q+4>>1]|0;b[f+6>>1]=b[q+6>>1]|0;b[f+8>>1]=b[q+8>>1]|0;b[f+10>>1]=b[q+10>>1]|0;b[f+12>>1]=b[q+12>>1]|0;b[f+14>>1]=b[q+14>>1]|0}q=(c[n>>2]|0)+24|0;a=f+(c[h>>2]<<1<<1)|0;b[q+0>>1]=b[a+0>>1]|0;b[q+2>>1]=b[a+2>>1]|0;b[q+4>>1]=b[a+4>>1]|0;b[q+6>>1]=b[a+6>>1]|0;b[q+8>>1]=b[a+8>>1]|0;b[q+10>>1]=b[a+10>>1]|0;b[q+12>>1]=b[a+12>>1]|0;b[q+14>>1]=b[a+14>>1]|0;na(c[j>>2]|0);i=k;return}function he(a,d,e,f){a=a|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;n=i;i=i+32|0;h=n+4|0;m=n+16|0;o=n+8|0;p=n+20|0;k=n+28|0;j=n;g=n+12|0;l=n+24|0;c[h>>2]=a;c[m>>2]=d;c[o>>2]=e;c[p>>2]=f;c[k>>2]=0;while(1){if((c[k>>2]|0)>=(c[o>>2]|0)){break}c[l>>2]=(((c[k>>2]&65535)>>16)*12|0)+((c[k>>2]&65535)*12>>16);c[g>>2]=(c[m>>2]|0)+(c[k>>2]>>16<<1);c[j>>2]=$(b[c[g>>2]>>1]|0,b[15488+(c[l>>2]<<3)>>1]|0)|0;c[j>>2]=(c[j>>2]|0)+($(b[(c[g>>2]|0)+2>>1]|0,b[15490+(c[l>>2]<<3)>>1]|0)|0);c[j>>2]=(c[j>>2]|0)+($(b[(c[g>>2]|0)+4>>1]|0,b[15492+(c[l>>2]<<3)>>1]|0)|0);c[j>>2]=(c[j>>2]|0)+($(b[(c[g>>2]|0)+6>>1]|0,b[15494+(c[l>>2]<<3)>>1]|0)|0);c[j>>2]=(c[j>>2]|0)+($(b[(c[g>>2]|0)+8>>1]|0,b[15494+(11-(c[l>>2]|0)<<3)>>1]|0)|0);c[j>>2]=(c[j>>2]|0)+($(b[(c[g>>2]|0)+10>>1]|0,b[15492+(11-(c[l>>2]|0)<<3)>>1]|0)|0);c[j>>2]=(c[j>>2]|0)+($(b[(c[g>>2]|0)+12>>1]|0,b[15490+(11-(c[l>>2]|0)<<3)>>1]|0)|0);c[j>>2]=(c[j>>2]|0)+($(b[(c[g>>2]|0)+14>>1]|0,b[15488+(11-(c[l>>2]|0)<<3)>>1]|0)|0);if(((c[j>>2]>>14)+1>>1|0)<=32767){if(((c[j>>2]>>14)+1>>1|0)<-32768){f=-32768}else{f=(c[j>>2]>>14)+1>>1}}else{f=32767}a=c[h>>2]|0;c[h>>2]=a+2;b[a>>1]=f;c[k>>2]=(c[k>>2]|0)+(c[p>>2]|0)}i=n;return c[h>>2]|0}function ie(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;j=i;i=i+48|0;q=j;m=j+16|0;k=j+28|0;p=j+4|0;n=j+32|0;g=j+36|0;l=j+12|0;o=j+24|0;f=j+20|0;h=j+8|0;c[q>>2]=a;c[m>>2]=b;c[k>>2]=d;c[p>>2]=e;c[n>>2]=c[q>>2];a=(c[(c[n>>2]|0)+268>>2]|0)+(c[(c[n>>2]|0)+276>>2]|0)|0;c[h>>2]=ia()|0;e=i;i=i+((4*a|0)+15&-16)|0;Ze(e|0,(c[n>>2]|0)+24|0,c[(c[n>>2]|0)+276>>2]<<2|0)|0;c[f>>2]=(c[(c[n>>2]|0)+296>>2]|0)+4;c[o>>2]=c[(c[n>>2]|0)+272>>2];while(1){if((c[p>>2]|0)<(c[(c[n>>2]|0)+268>>2]|0)){d=c[p>>2]|0}else{d=c[(c[n>>2]|0)+268>>2]|0}c[g>>2]=d;fe(c[n>>2]|0,e+(c[(c[n>>2]|0)+276>>2]<<2)|0,c[k>>2]|0,c[(c[n>>2]|0)+296>>2]|0,c[g>>2]|0);c[l>>2]=c[g>>2]<<16;c[m>>2]=je(c[m>>2]|0,e,c[f>>2]|0,c[(c[n>>2]|0)+276>>2]|0,c[(c[n>>2]|0)+280>>2]|0,c[l>>2]|0,c[o>>2]|0)|0;c[k>>2]=(c[k>>2]|0)+(c[g>>2]<<1);c[p>>2]=(c[p>>2]|0)-(c[g>>2]|0);if((c[p>>2]|0)<=1){break}Ze(e|0,e+(c[g>>2]<<2)|0,c[(c[n>>2]|0)+276>>2]<<2|0)|0}Ze((c[n>>2]|0)+24|0,e+(c[g>>2]<<2)|0,c[(c[n>>2]|0)+276>>2]<<2|0)|0;na(c[h>>2]|0);i=j;return}function je(a,d,e,f,g,h,j){a=a|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0;q=i;i=i+48|0;r=q+4|0;n=q+16|0;s=q+36|0;w=q;v=q+32|0;k=q+40|0;l=q+44|0;o=q+24|0;m=q+20|0;p=q+8|0;u=q+12|0;t=q+28|0;c[r>>2]=a;c[n>>2]=d;c[s>>2]=e;c[w>>2]=f;c[v>>2]=g;c[k>>2]=h;c[l>>2]=j;j=c[w>>2]|0;if((j|0)==18){c[o>>2]=0;while(1){if((c[o>>2]|0)>=(c[k>>2]|0)){break}c[p>>2]=(c[n>>2]|0)+(c[o>>2]>>16<<2);w=$((c[o>>2]&65535)>>16,(c[v>>2]&65535)<<16>>16)|0;c[u>>2]=w+(($(c[o>>2]&65535,(c[v>>2]&65535)<<16>>16)|0)>>16);c[t>>2]=(c[s>>2]|0)+((c[u>>2]|0)*9<<1);w=$(c[c[p>>2]>>2]>>16,b[c[t>>2]>>1]|0)|0;c[m>>2]=w+(($(c[c[p>>2]>>2]&65535,b[c[t>>2]>>1]|0)|0)>>16);w=$(c[(c[p>>2]|0)+4>>2]>>16,b[(c[t>>2]|0)+2>>1]|0)|0;c[m>>2]=(c[m>>2]|0)+(w+(($(c[(c[p>>2]|0)+4>>2]&65535,b[(c[t>>2]|0)+2>>1]|0)|0)>>16));w=$(c[(c[p>>2]|0)+8>>2]>>16,b[(c[t>>2]|0)+4>>1]|0)|0;c[m>>2]=(c[m>>2]|0)+(w+(($(c[(c[p>>2]|0)+8>>2]&65535,b[(c[t>>2]|0)+4>>1]|0)|0)>>16));w=$(c[(c[p>>2]|0)+12>>2]>>16,b[(c[t>>2]|0)+6>>1]|0)|0;c[m>>2]=(c[m>>2]|0)+(w+(($(c[(c[p>>2]|0)+12>>2]&65535,b[(c[t>>2]|0)+6>>1]|0)|0)>>16));w=$(c[(c[p>>2]|0)+16>>2]>>16,b[(c[t>>2]|0)+8>>1]|0)|0;c[m>>2]=(c[m>>2]|0)+(w+(($(c[(c[p>>2]|0)+16>>2]&65535,b[(c[t>>2]|0)+8>>1]|0)|0)>>16));w=$(c[(c[p>>2]|0)+20>>2]>>16,b[(c[t>>2]|0)+10>>1]|0)|0;c[m>>2]=(c[m>>2]|0)+(w+(($(c[(c[p>>2]|0)+20>>2]&65535,b[(c[t>>2]|0)+10>>1]|0)|0)>>16));w=$(c[(c[p>>2]|0)+24>>2]>>16,b[(c[t>>2]|0)+12>>1]|0)|0;c[m>>2]=(c[m>>2]|0)+(w+(($(c[(c[p>>2]|0)+24>>2]&65535,b[(c[t>>2]|0)+12>>1]|0)|0)>>16));w=$(c[(c[p>>2]|0)+28>>2]>>16,b[(c[t>>2]|0)+14>>1]|0)|0;c[m>>2]=(c[m>>2]|0)+(w+(($(c[(c[p>>2]|0)+28>>2]&65535,b[(c[t>>2]|0)+14>>1]|0)|0)>>16));w=$(c[(c[p>>2]|0)+32>>2]>>16,b[(c[t>>2]|0)+16>>1]|0)|0;c[m>>2]=(c[m>>2]|0)+(w+(($(c[(c[p>>2]|0)+32>>2]&65535,b[(c[t>>2]|0)+16>>1]|0)|0)>>16));c[t>>2]=(c[s>>2]|0)+(((c[v>>2]|0)-1-(c[u>>2]|0)|0)*9<<1);w=$(c[(c[p>>2]|0)+68>>2]>>16,b[c[t>>2]>>1]|0)|0;c[m>>2]=(c[m>>2]|0)+(w+(($(c[(c[p>>2]|0)+68>>2]&65535,b[c[t>>2]>>1]|0)|0)>>16));w=$(c[(c[p>>2]|0)+64>>2]>>16,b[(c[t>>2]|0)+2>>1]|0)|0;c[m>>2]=(c[m>>2]|0)+(w+(($(c[(c[p>>2]|0)+64>>2]&65535,b[(c[t>>2]|0)+2>>1]|0)|0)>>16));w=$(c[(c[p>>2]|0)+60>>2]>>16,b[(c[t>>2]|0)+4>>1]|0)|0;c[m>>2]=(c[m>>2]|0)+(w+(($(c[(c[p>>2]|0)+60>>2]&65535,b[(c[t>>2]|0)+4>>1]|0)|0)>>16));w=$(c[(c[p>>2]|0)+56>>2]>>16,b[(c[t>>2]|0)+6>>1]|0)|0;c[m>>2]=(c[m>>2]|0)+(w+(($(c[(c[p>>2]|0)+56>>2]&65535,b[(c[t>>2]|0)+6>>1]|0)|0)>>16));w=$(c[(c[p>>2]|0)+52>>2]>>16,b[(c[t>>2]|0)+8>>1]|0)|0;c[m>>2]=(c[m>>2]|0)+(w+(($(c[(c[p>>2]|0)+52>>2]&65535,b[(c[t>>2]|0)+8>>1]|0)|0)>>16));w=$(c[(c[p>>2]|0)+48>>2]>>16,b[(c[t>>2]|0)+10>>1]|0)|0;c[m>>2]=(c[m>>2]|0)+(w+(($(c[(c[p>>2]|0)+48>>2]&65535,b[(c[t>>2]|0)+10>>1]|0)|0)>>16));w=$(c[(c[p>>2]|0)+44>>2]>>16,b[(c[t>>2]|0)+12>>1]|0)|0;c[m>>2]=(c[m>>2]|0)+(w+(($(c[(c[p>>2]|0)+44>>2]&65535,b[(c[t>>2]|0)+12>>1]|0)|0)>>16));w=$(c[(c[p>>2]|0)+40>>2]>>16,b[(c[t>>2]|0)+14>>1]|0)|0;c[m>>2]=(c[m>>2]|0)+(w+(($(c[(c[p>>2]|0)+40>>2]&65535,b[(c[t>>2]|0)+14>>1]|0)|0)>>16));w=$(c[(c[p>>2]|0)+36>>2]>>16,b[(c[t>>2]|0)+16>>1]|0)|0;c[m>>2]=(c[m>>2]|0)+(w+(($(c[(c[p>>2]|0)+36>>2]&65535,b[(c[t>>2]|0)+16>>1]|0)|0)>>16));if(((c[m>>2]>>5)+1>>1|0)<=32767){if(((c[m>>2]>>5)+1>>1|0)<-32768){j=-32768}else{j=(c[m>>2]>>5)+1>>1}}else{j=32767}w=c[r>>2]|0;c[r>>2]=w+2;b[w>>1]=j;c[o>>2]=(c[o>>2]|0)+(c[l>>2]|0)}w=c[r>>2]|0;i=q;return w|0}else if((j|0)==24){c[o>>2]=0;while(1){if((c[o>>2]|0)>=(c[k>>2]|0)){break}c[p>>2]=(c[n>>2]|0)+(c[o>>2]>>16<<2);w=$((c[c[p>>2]>>2]|0)+(c[(c[p>>2]|0)+92>>2]|0)>>16,b[c[s>>2]>>1]|0)|0;c[m>>2]=w+(($((c[c[p>>2]>>2]|0)+(c[(c[p>>2]|0)+92>>2]|0)&65535,b[c[s>>2]>>1]|0)|0)>>16);w=$((c[(c[p>>2]|0)+4>>2]|0)+(c[(c[p>>2]|0)+88>>2]|0)>>16,b[(c[s>>2]|0)+2>>1]|0)|0;c[m>>2]=(c[m>>2]|0)+(w+(($((c[(c[p>>2]|0)+4>>2]|0)+(c[(c[p>>2]|0)+88>>2]|0)&65535,b[(c[s>>2]|0)+2>>1]|0)|0)>>16));w=$((c[(c[p>>2]|0)+8>>2]|0)+(c[(c[p>>2]|0)+84>>2]|0)>>16,b[(c[s>>2]|0)+4>>1]|0)|0;c[m>>2]=(c[m>>2]|0)+(w+(($((c[(c[p>>2]|0)+8>>2]|0)+(c[(c[p>>2]|0)+84>>2]|0)&65535,b[(c[s>>2]|0)+4>>1]|0)|0)>>16));w=$((c[(c[p>>2]|0)+12>>2]|0)+(c[(c[p>>2]|0)+80>>2]|0)>>16,b[(c[s>>2]|0)+6>>1]|0)|0;c[m>>2]=(c[m>>2]|0)+(w+(($((c[(c[p>>2]|0)+12>>2]|0)+(c[(c[p>>2]|0)+80>>2]|0)&65535,b[(c[s>>2]|0)+6>>1]|0)|0)>>16));w=$((c[(c[p>>2]|0)+16>>2]|0)+(c[(c[p>>2]|0)+76>>2]|0)>>16,b[(c[s>>2]|0)+8>>1]|0)|0;c[m>>2]=(c[m>>2]|0)+(w+(($((c[(c[p>>2]|0)+16>>2]|0)+(c[(c[p>>2]|0)+76>>2]|0)&65535,b[(c[s>>2]|0)+8>>1]|0)|0)>>16));w=$((c[(c[p>>2]|0)+20>>2]|0)+(c[(c[p>>2]|0)+72>>2]|0)>>16,b[(c[s>>2]|0)+10>>1]|0)|0;c[m>>2]=(c[m>>2]|0)+(w+(($((c[(c[p>>2]|0)+20>>2]|0)+(c[(c[p>>2]|0)+72>>2]|0)&65535,b[(c[s>>2]|0)+10>>1]|0)|0)>>16));w=$((c[(c[p>>2]|0)+24>>2]|0)+(c[(c[p>>2]|0)+68>>2]|0)>>16,b[(c[s>>2]|0)+12>>1]|0)|0;c[m>>2]=(c[m>>2]|0)+(w+(($((c[(c[p>>2]|0)+24>>2]|0)+(c[(c[p>>2]|0)+68>>2]|0)&65535,b[(c[s>>2]|0)+12>>1]|0)|0)>>16));w=$((c[(c[p>>2]|0)+28>>2]|0)+(c[(c[p>>2]|0)+64>>2]|0)>>16,b[(c[s>>2]|0)+14>>1]|0)|0;c[m>>2]=(c[m>>2]|0)+(w+(($((c[(c[p>>2]|0)+28>>2]|0)+(c[(c[p>>2]|0)+64>>2]|0)&65535,b[(c[s>>2]|0)+14>>1]|0)|0)>>16));w=$((c[(c[p>>2]|0)+32>>2]|0)+(c[(c[p>>2]|0)+60>>2]|0)>>16,b[(c[s>>2]|0)+16>>1]|0)|0;c[m>>2]=(c[m>>2]|0)+(w+(($((c[(c[p>>2]|0)+32>>2]|0)+(c[(c[p>>2]|0)+60>>2]|0)&65535,b[(c[s>>2]|0)+16>>1]|0)|0)>>16));w=$((c[(c[p>>2]|0)+36>>2]|0)+(c[(c[p>>2]|0)+56>>2]|0)>>16,b[(c[s>>2]|0)+18>>1]|0)|0;c[m>>2]=(c[m>>2]|0)+(w+(($((c[(c[p>>2]|0)+36>>2]|0)+(c[(c[p>>2]|0)+56>>2]|0)&65535,b[(c[s>>2]|0)+18>>1]|0)|0)>>16));w=$((c[(c[p>>2]|0)+40>>2]|0)+(c[(c[p>>2]|0)+52>>2]|0)>>16,b[(c[s>>2]|0)+20>>1]|0)|0;c[m>>2]=(c[m>>2]|0)+(w+(($((c[(c[p>>2]|0)+40>>2]|0)+(c[(c[p>>2]|0)+52>>2]|0)&65535,b[(c[s>>2]|0)+20>>1]|0)|0)>>16));w=$((c[(c[p>>2]|0)+44>>2]|0)+(c[(c[p>>2]|0)+48>>2]|0)>>16,b[(c[s>>2]|0)+22>>1]|0)|0;c[m>>2]=(c[m>>2]|0)+(w+(($((c[(c[p>>2]|0)+44>>2]|0)+(c[(c[p>>2]|0)+48>>2]|0)&65535,b[(c[s>>2]|0)+22>>1]|0)|0)>>16));if(((c[m>>2]>>5)+1>>1|0)<=32767){if(((c[m>>2]>>5)+1>>1|0)<-32768){t=-32768}else{t=(c[m>>2]>>5)+1>>1}}else{t=32767}w=c[r>>2]|0;c[r>>2]=w+2;b[w>>1]=t;c[o>>2]=(c[o>>2]|0)+(c[l>>2]|0)}w=c[r>>2]|0;i=q;return w|0}else if((j|0)==36){c[o>>2]=0;while(1){if((c[o>>2]|0)>=(c[k>>2]|0)){break}c[p>>2]=(c[n>>2]|0)+(c[o>>2]>>16<<2);w=$((c[c[p>>2]>>2]|0)+(c[(c[p>>2]|0)+140>>2]|0)>>16,b[c[s>>2]>>1]|0)|0;c[m>>2]=w+(($((c[c[p>>2]>>2]|0)+(c[(c[p>>2]|0)+140>>2]|0)&65535,b[c[s>>2]>>1]|0)|0)>>16);w=$((c[(c[p>>2]|0)+4>>2]|0)+(c[(c[p>>2]|0)+136>>2]|0)>>16,b[(c[s>>2]|0)+2>>1]|0)|0;c[m>>2]=(c[m>>2]|0)+(w+(($((c[(c[p>>2]|0)+4>>2]|0)+(c[(c[p>>2]|0)+136>>2]|0)&65535,b[(c[s>>2]|0)+2>>1]|0)|0)>>16));w=$((c[(c[p>>2]|0)+8>>2]|0)+(c[(c[p>>2]|0)+132>>2]|0)>>16,b[(c[s>>2]|0)+4>>1]|0)|0;c[m>>2]=(c[m>>2]|0)+(w+(($((c[(c[p>>2]|0)+8>>2]|0)+(c[(c[p>>2]|0)+132>>2]|0)&65535,b[(c[s>>2]|0)+4>>1]|0)|0)>>16));w=$((c[(c[p>>2]|0)+12>>2]|0)+(c[(c[p>>2]|0)+128>>2]|0)>>16,b[(c[s>>2]|0)+6>>1]|0)|0;c[m>>2]=(c[m>>2]|0)+(w+(($((c[(c[p>>2]|0)+12>>2]|0)+(c[(c[p>>2]|0)+128>>2]|0)&65535,b[(c[s>>2]|0)+6>>1]|0)|0)>>16));w=$((c[(c[p>>2]|0)+16>>2]|0)+(c[(c[p>>2]|0)+124>>2]|0)>>16,b[(c[s>>2]|0)+8>>1]|0)|0;c[m>>2]=(c[m>>2]|0)+(w+(($((c[(c[p>>2]|0)+16>>2]|0)+(c[(c[p>>2]|0)+124>>2]|0)&65535,b[(c[s>>2]|0)+8>>1]|0)|0)>>16));w=$((c[(c[p>>2]|0)+20>>2]|0)+(c[(c[p>>2]|0)+120>>2]|0)>>16,b[(c[s>>2]|0)+10>>1]|0)|0;c[m>>2]=(c[m>>2]|0)+(w+(($((c[(c[p>>2]|0)+20>>2]|0)+(c[(c[p>>2]|0)+120>>2]|0)&65535,b[(c[s>>2]|0)+10>>1]|0)|0)>>16));w=$((c[(c[p>>2]|0)+24>>2]|0)+(c[(c[p>>2]|0)+116>>2]|0)>>16,b[(c[s>>2]|0)+12>>1]|0)|0;c[m>>2]=(c[m>>2]|0)+(w+(($((c[(c[p>>2]|0)+24>>2]|0)+(c[(c[p>>2]|0)+116>>2]|0)&65535,b[(c[s>>2]|0)+12>>1]|0)|0)>>16));w=$((c[(c[p>>2]|0)+28>>2]|0)+(c[(c[p>>2]|0)+112>>2]|0)>>16,b[(c[s>>2]|0)+14>>1]|0)|0;c[m>>2]=(c[m>>2]|0)+(w+(($((c[(c[p>>2]|0)+28>>2]|0)+(c[(c[p>>2]|0)+112>>2]|0)&65535,b[(c[s>>2]|0)+14>>1]|0)|0)>>16));w=$((c[(c[p>>2]|0)+32>>2]|0)+(c[(c[p>>2]|0)+108>>2]|0)>>16,b[(c[s>>2]|0)+16>>1]|0)|0;c[m>>2]=(c[m>>2]|0)+(w+(($((c[(c[p>>2]|0)+32>>2]|0)+(c[(c[p>>2]|0)+108>>2]|0)&65535,b[(c[s>>2]|0)+16>>1]|0)|0)>>16));w=$((c[(c[p>>2]|0)+36>>2]|0)+(c[(c[p>>2]|0)+104>>2]|0)>>16,b[(c[s>>2]|0)+18>>1]|0)|0;c[m>>2]=(c[m>>2]|0)+(w+(($((c[(c[p>>2]|0)+36>>2]|0)+(c[(c[p>>2]|0)+104>>2]|0)&65535,b[(c[s>>2]|0)+18>>1]|0)|0)>>16));w=$((c[(c[p>>2]|0)+40>>2]|0)+(c[(c[p>>2]|0)+100>>2]|0)>>16,b[(c[s>>2]|0)+20>>1]|0)|0;c[m>>2]=(c[m>>2]|0)+(w+(($((c[(c[p>>2]|0)+40>>2]|0)+(c[(c[p>>2]|0)+100>>2]|0)&65535,b[(c[s>>2]|0)+20>>1]|0)|0)>>16));w=$((c[(c[p>>2]|0)+44>>2]|0)+(c[(c[p>>2]|0)+96>>2]|0)>>16,b[(c[s>>2]|0)+22>>1]|0)|0;c[m>>2]=(c[m>>2]|0)+(w+(($((c[(c[p>>2]|0)+44>>2]|0)+(c[(c[p>>2]|0)+96>>2]|0)&65535,b[(c[s>>2]|0)+22>>1]|0)|0)>>16));w=$((c[(c[p>>2]|0)+48>>2]|0)+(c[(c[p>>2]|0)+92>>2]|0)>>16,b[(c[s>>2]|0)+24>>1]|0)|0;c[m>>2]=(c[m>>2]|0)+(w+(($((c[(c[p>>2]|0)+48>>2]|0)+(c[(c[p>>2]|0)+92>>2]|0)&65535,b[(c[s>>2]|0)+24>>1]|0)|0)>>16));w=$((c[(c[p>>2]|0)+52>>2]|0)+(c[(c[p>>2]|0)+88>>2]|0)>>16,b[(c[s>>2]|0)+26>>1]|0)|0;c[m>>2]=(c[m>>2]|0)+(w+(($((c[(c[p>>2]|0)+52>>2]|0)+(c[(c[p>>2]|0)+88>>2]|0)&65535,b[(c[s>>2]|0)+26>>1]|0)|0)>>16));w=$((c[(c[p>>2]|0)+56>>2]|0)+(c[(c[p>>2]|0)+84>>2]|0)>>16,b[(c[s>>2]|0)+28>>1]|0)|0;c[m>>2]=(c[m>>2]|0)+(w+(($((c[(c[p>>2]|0)+56>>2]|0)+(c[(c[p>>2]|0)+84>>2]|0)&65535,b[(c[s>>2]|0)+28>>1]|0)|0)>>16));w=$((c[(c[p>>2]|0)+60>>2]|0)+(c[(c[p>>2]|0)+80>>2]|0)>>16,b[(c[s>>2]|0)+30>>1]|0)|0;c[m>>2]=(c[m>>2]|0)+(w+(($((c[(c[p>>2]|0)+60>>2]|0)+(c[(c[p>>2]|0)+80>>2]|0)&65535,b[(c[s>>2]|0)+30>>1]|0)|0)>>16));w=$((c[(c[p>>2]|0)+64>>2]|0)+(c[(c[p>>2]|0)+76>>2]|0)>>16,b[(c[s>>2]|0)+32>>1]|0)|0;c[m>>2]=(c[m>>2]|0)+(w+(($((c[(c[p>>2]|0)+64>>2]|0)+(c[(c[p>>2]|0)+76>>2]|0)&65535,b[(c[s>>2]|0)+32>>1]|0)|0)>>16));w=$((c[(c[p>>2]|0)+68>>2]|0)+(c[(c[p>>2]|0)+72>>2]|0)>>16,b[(c[s>>2]|0)+34>>1]|0)|0;c[m>>2]=(c[m>>2]|0)+(w+(($((c[(c[p>>2]|0)+68>>2]|0)+(c[(c[p>>2]|0)+72>>2]|0)&65535,b[(c[s>>2]|0)+34>>1]|0)|0)>>16));if(((c[m>>2]>>5)+1>>1|0)<=32767){if(((c[m>>2]>>5)+1>>1|0)<-32768){t=-32768}else{t=(c[m>>2]>>5)+1>>1}}else{t=32767}w=c[r>>2]|0;c[r>>2]=w+2;b[w>>1]=t;c[o>>2]=(c[o>>2]|0)+(c[l>>2]|0)}w=c[r>>2]|0;i=q;return w|0}else{w=c[r>>2]|0;i=q;return w|0}return 0}function ke(a,d,e,f){a=a|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;o=i;i=i+48|0;l=o;m=o+16|0;q=o+28|0;r=o+4|0;j=o+32|0;k=o+36|0;h=o+12|0;p=o+24|0;g=o+20|0;n=o+8|0;c[l>>2]=a;c[m>>2]=d;c[q>>2]=e;c[r>>2]=f;c[j>>2]=0;while(1){if((c[j>>2]|0)>=(c[r>>2]|0)){break}c[k>>2]=b[(c[q>>2]|0)+(c[j>>2]<<1)>>1]<<10;c[g>>2]=(c[k>>2]|0)-(c[c[l>>2]>>2]|0);a=$(c[g>>2]>>16,b[7608]|0)|0;c[n>>2]=a+(($(c[g>>2]&65535,b[7608]|0)|0)>>16);c[h>>2]=(c[c[l>>2]>>2]|0)+(c[n>>2]|0);c[c[l>>2]>>2]=(c[k>>2]|0)+(c[n>>2]|0);c[g>>2]=(c[h>>2]|0)-(c[(c[l>>2]|0)+4>>2]|0);a=$(c[g>>2]>>16,b[15218>>1]|0)|0;c[n>>2]=a+(($(c[g>>2]&65535,b[15218>>1]|0)|0)>>16);c[p>>2]=(c[(c[l>>2]|0)+4>>2]|0)+(c[n>>2]|0);c[(c[l>>2]|0)+4>>2]=(c[h>>2]|0)+(c[n>>2]|0);c[g>>2]=(c[p>>2]|0)-(c[(c[l>>2]|0)+8>>2]|0);a=$(c[g>>2]>>16,b[15220>>1]|0)|0;c[n>>2]=(c[g>>2]|0)+(a+(($(c[g>>2]&65535,b[15220>>1]|0)|0)>>16));c[h>>2]=(c[(c[l>>2]|0)+8>>2]|0)+(c[n>>2]|0);c[(c[l>>2]|0)+8>>2]=(c[p>>2]|0)+(c[n>>2]|0);if(((c[h>>2]>>9)+1>>1|0)<=32767){if(((c[h>>2]>>9)+1>>1|0)<-32768){f=-32768}else{f=(c[h>>2]>>9)+1>>1}}else{f=32767}b[(c[m>>2]|0)+(c[j>>2]<<1<<1)>>1]=f;c[g>>2]=(c[k>>2]|0)-(c[(c[l>>2]|0)+12>>2]|0);a=$(c[g>>2]>>16,b[7612]|0)|0;c[n>>2]=a+(($(c[g>>2]&65535,b[7612]|0)|0)>>16);c[h>>2]=(c[(c[l>>2]|0)+12>>2]|0)+(c[n>>2]|0);c[(c[l>>2]|0)+12>>2]=(c[k>>2]|0)+(c[n>>2]|0);c[g>>2]=(c[h>>2]|0)-(c[(c[l>>2]|0)+16>>2]|0);a=$(c[g>>2]>>16,b[15226>>1]|0)|0;c[n>>2]=a+(($(c[g>>2]&65535,b[15226>>1]|0)|0)>>16);c[p>>2]=(c[(c[l>>2]|0)+16>>2]|0)+(c[n>>2]|0);c[(c[l>>2]|0)+16>>2]=(c[h>>2]|0)+(c[n>>2]|0);c[g>>2]=(c[p>>2]|0)-(c[(c[l>>2]|0)+20>>2]|0);a=$(c[g>>2]>>16,b[15228>>1]|0)|0;c[n>>2]=(c[g>>2]|0)+(a+(($(c[g>>2]&65535,b[15228>>1]|0)|0)>>16));c[h>>2]=(c[(c[l>>2]|0)+20>>2]|0)+(c[n>>2]|0);c[(c[l>>2]|0)+20>>2]=(c[p>>2]|0)+(c[n>>2]|0);if(((c[h>>2]>>9)+1>>1|0)<=32767){if(((c[h>>2]>>9)+1>>1|0)<-32768){f=-32768}else{f=(c[h>>2]>>9)+1>>1}}else{f=32767}b[(c[m>>2]|0)+((c[j>>2]<<1)+1<<1)>>1]=f;c[j>>2]=(c[j>>2]|0)+1}i=o;return}function le(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0;f=i;i=i+32|0;l=f+16|0;j=f+12|0;h=f+8|0;g=f+4|0;k=f;c[l>>2]=a;c[j>>2]=b;c[h>>2]=d;c[g>>2]=e;c[k>>2]=c[l>>2];ke(c[k>>2]|0,c[j>>2]|0,c[h>>2]|0,c[g>>2]|0);i=f;return}function me(a,d,e){a=a|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0;f=i;i=i+48|0;j=f+8|0;h=f+4|0;m=f;l=f+40|0;k=f+32|0;g=f+16|0;c[j>>2]=a;c[h>>2]=d;c[m>>2]=e;ne(l,l+2|0,c[h>>2]|0,c[m>>2]|0,19160);ne(k,k+2|0,c[h>>2]|0,b[l>>1]|0,19008);ne(g,g+2|0,c[h>>2]|0,b[k>>1]|0,18856);ne(c[j>>2]|0,(c[j>>2]|0)+2|0,c[h>>2]|0,b[g>>1]|0,18704);ne((c[j>>2]|0)+4|0,(c[j>>2]|0)+6|0,c[h>>2]|0,b[g+2>>1]|0,18704);ne(g+4|0,g+6|0,c[h>>2]|0,b[k+2>>1]|0,18856);ne((c[j>>2]|0)+8|0,(c[j>>2]|0)+10|0,c[h>>2]|0,b[g+4>>1]|0,18704);ne((c[j>>2]|0)+12|0,(c[j>>2]|0)+14|0,c[h>>2]|0,b[g+6>>1]|0,18704);ne(k+4|0,k+6|0,c[h>>2]|0,b[l+2>>1]|0,19008);ne(g+8|0,g+10|0,c[h>>2]|0,b[k+4>>1]|0,18856);ne((c[j>>2]|0)+16|0,(c[j>>2]|0)+18|0,c[h>>2]|0,b[g+8>>1]|0,18704);ne((c[j>>2]|0)+20|0,(c[j>>2]|0)+22|0,c[h>>2]|0,b[g+10>>1]|0,18704);ne(g+12|0,g+14|0,c[h>>2]|0,b[k+6>>1]|0,18856);ne((c[j>>2]|0)+24|0,(c[j>>2]|0)+26|0,c[h>>2]|0,b[g+12>>1]|0,18704);ne((c[j>>2]|0)+28|0,(c[j>>2]|0)+30|0,c[h>>2]|0,b[g+14>>1]|0,18704);i=f;return}function ne(a,e,f,g,h){a=a|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0;n=i;i=i+32|0;l=n+16|0;k=n+12|0;o=n+8|0;m=n+4|0;j=n;c[l>>2]=a;c[k>>2]=e;c[o>>2]=f;c[m>>2]=g;c[j>>2]=h;if((c[m>>2]|0)>0){a=(Pb(c[o>>2]|0,(c[j>>2]|0)+(d[19312+(c[m>>2]|0)>>0]|0)|0,8)|0)&65535;b[c[l>>2]>>1]=a;b[c[k>>2]>>1]=(c[m>>2]|0)-(b[c[l>>2]>>1]|0);i=n;return}else{b[c[l>>2]>>1]=0;b[c[k>>2]>>1]=0;i=n;return}}function oe(a,d){a=a|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0;e=i;i=i+32|0;f=e+16|0;k=e+12|0;h=e+8|0;g=e+4|0;j=e;c[f>>2]=a;c[k>>2]=d;c[g>>2]=1;while(1){if((c[g>>2]|0)>=(c[k>>2]|0)){break}c[h>>2]=b[(c[f>>2]|0)+(c[g>>2]<<1)>>1]|0;c[j>>2]=(c[g>>2]|0)-1;while(1){if((c[j>>2]|0)<0){break}if((c[h>>2]|0)>=(b[(c[f>>2]|0)+(c[j>>2]<<1)>>1]|0)){break}b[(c[f>>2]|0)+((c[j>>2]|0)+1<<1)>>1]=b[(c[f>>2]|0)+(c[j>>2]<<1)>>1]|0;c[j>>2]=(c[j>>2]|0)+ -1}b[(c[f>>2]|0)+((c[j>>2]|0)+1<<1)>>1]=c[h>>2];c[g>>2]=(c[g>>2]|0)+1}i=e;return}function pe(a,d,e,f,g,h){a=a|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0;k=i;i=i+64|0;q=k+24|0;p=k+20|0;l=k+44|0;t=k+36|0;u=k+32|0;j=k+40|0;o=k+48|0;x=k+52|0;v=k+8|0;w=k+4|0;m=k+28|0;n=k+12|0;r=k;s=k+16|0;c[q>>2]=a;c[p>>2]=d;c[l>>2]=e;c[t>>2]=f;c[u>>2]=g;c[j>>2]=h;a=c[p>>2]|0;d=(c[q>>2]|0)+4|0;b[a+0>>1]=b[d+0>>1]|0;b[a+2>>1]=b[d+2>>1]|0;a=c[l>>2]|0;d=(c[q>>2]|0)+8|0;b[a+0>>1]=b[d+0>>1]|0;b[a+2>>1]=b[d+2>>1]|0;a=(c[q>>2]|0)+4|0;d=(c[p>>2]|0)+(c[j>>2]<<1)|0;b[a+0>>1]=b[d+0>>1]|0;b[a+2>>1]=b[d+2>>1]|0;a=(c[q>>2]|0)+8|0;d=(c[l>>2]|0)+(c[j>>2]<<1)|0;b[a+0>>1]=b[d+0>>1]|0;b[a+2>>1]=b[d+2>>1]|0;c[r>>2]=b[c[q>>2]>>1]|0;c[s>>2]=b[(c[q>>2]|0)+2>>1]|0;c[x>>2]=65536/(c[u>>2]<<3|0)|0;c[v>>2]=(($(((c[c[t>>2]>>2]|0)-(b[c[q>>2]>>1]|0)&65535)<<16>>16,(c[x>>2]&65535)<<16>>16)|0)>>15)+1>>1;c[w>>2]=(($(((c[(c[t>>2]|0)+4>>2]|0)-(b[(c[q>>2]|0)+2>>1]|0)&65535)<<16>>16,(c[x>>2]&65535)<<16>>16)|0)>>15)+1>>1;c[o>>2]=0;while(1){if((c[o>>2]|0)>=(c[u>>2]<<3|0)){break}c[r>>2]=(c[r>>2]|0)+(c[v>>2]|0);c[s>>2]=(c[s>>2]|0)+(c[w>>2]|0);c[m>>2]=(b[(c[p>>2]|0)+(c[o>>2]<<1)>>1]|0)+(b[(c[p>>2]|0)+((c[o>>2]|0)+2<<1)>>1]|0)+(b[(c[p>>2]|0)+((c[o>>2]|0)+1<<1)>>1]<<1)<<9;x=$(c[m>>2]>>16,(c[r>>2]&65535)<<16>>16)|0;c[m>>2]=(b[(c[l>>2]|0)+((c[o>>2]|0)+1<<1)>>1]<<8)+(x+(($(c[m>>2]&65535,(c[r>>2]&65535)<<16>>16)|0)>>16));x=$(b[(c[p>>2]|0)+((c[o>>2]|0)+1<<1)>>1]<<11>>16,(c[s>>2]&65535)<<16>>16)|0;c[m>>2]=(c[m>>2]|0)+(x+(($(b[(c[p>>2]|0)+((c[o>>2]|0)+1<<1)>>1]<<11&65535,(c[s>>2]&65535)<<16>>16)|0)>>16));if(((c[m>>2]>>7)+1>>1|0)<=32767){if(((c[m>>2]>>7)+1>>1|0)<-32768){h=-32768}else{h=(c[m>>2]>>7)+1>>1}}else{h=32767}b[(c[l>>2]|0)+((c[o>>2]|0)+1<<1)>>1]=h;c[o>>2]=(c[o>>2]|0)+1}c[r>>2]=c[c[t>>2]>>2];c[s>>2]=c[(c[t>>2]|0)+4>>2];c[o>>2]=c[u>>2]<<3;while(1){if((c[o>>2]|0)>=(c[j>>2]|0)){break}c[m>>2]=(b[(c[p>>2]|0)+(c[o>>2]<<1)>>1]|0)+(b[(c[p>>2]|0)+((c[o>>2]|0)+2<<1)>>1]|0)+(b[(c[p>>2]|0)+((c[o>>2]|0)+1<<1)>>1]<<1)<<9;x=$(c[m>>2]>>16,(c[r>>2]&65535)<<16>>16)|0;c[m>>2]=(b[(c[l>>2]|0)+((c[o>>2]|0)+1<<1)>>1]<<8)+(x+(($(c[m>>2]&65535,(c[r>>2]&65535)<<16>>16)|0)>>16));x=$(b[(c[p>>2]|0)+((c[o>>2]|0)+1<<1)>>1]<<11>>16,(c[s>>2]&65535)<<16>>16)|0;c[m>>2]=(c[m>>2]|0)+(x+(($(b[(c[p>>2]|0)+((c[o>>2]|0)+1<<1)>>1]<<11&65535,(c[s>>2]&65535)<<16>>16)|0)>>16));if(((c[m>>2]>>7)+1>>1|0)<=32767){if(((c[m>>2]>>7)+1>>1|0)<-32768){u=-32768}else{u=(c[m>>2]>>7)+1>>1}}else{u=32767}b[(c[l>>2]|0)+((c[o>>2]|0)+1<<1)>>1]=u;c[o>>2]=(c[o>>2]|0)+1}b[c[q>>2]>>1]=c[c[t>>2]>>2];b[(c[q>>2]|0)+2>>1]=c[(c[t>>2]|0)+4>>2];c[o>>2]=0;while(1){if((c[o>>2]|0)>=(c[j>>2]|0)){break}c[m>>2]=(b[(c[p>>2]|0)+((c[o>>2]|0)+1<<1)>>1]|0)+(b[(c[l>>2]|0)+((c[o>>2]|0)+1<<1)>>1]|0);c[n>>2]=(b[(c[p>>2]|0)+((c[o>>2]|0)+1<<1)>>1]|0)-(b[(c[l>>2]|0)+((c[o>>2]|0)+1<<1)>>1]|0);if((c[m>>2]|0)>32767){q=32767}else{q=(c[m>>2]|0)<-32768?-32768:c[m>>2]|0}b[(c[p>>2]|0)+((c[o>>2]|0)+1<<1)>>1]=q;if((c[n>>2]|0)>32767){q=32767}else{q=(c[n>>2]|0)<-32768?-32768:c[n>>2]|0}b[(c[l>>2]|0)+((c[o>>2]|0)+1<<1)>>1]=q;c[o>>2]=(c[o>>2]|0)+1}i=k;return}function qe(a,d){a=a|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0;f=i;i=i+48|0;l=f+40|0;e=f+36|0;g=f+32|0;h=f+8|0;j=f+4|0;k=f;c[l>>2]=a;c[e>>2]=d;c[g>>2]=Pb(c[l>>2]|0,18192,8)|0;c[h+8>>2]=(c[g>>2]|0)/5|0;c[h+20>>2]=(c[g>>2]|0)-((c[h+8>>2]|0)*5|0);c[g>>2]=0;while(1){if((c[g>>2]|0)>=2){break}a=Pb(c[l>>2]|0,18312,8)|0;c[h+((c[g>>2]|0)*12|0)>>2]=a;a=Pb(c[l>>2]|0,18328,8)|0;c[h+((c[g>>2]|0)*12|0)+4>>2]=a;c[g>>2]=(c[g>>2]|0)+1}c[g>>2]=0;while(1){if((c[g>>2]|0)>=2){break}a=h+((c[g>>2]|0)*12|0)|0;c[a>>2]=(c[a>>2]|0)+((c[h+((c[g>>2]|0)*12|0)+8>>2]|0)*3|0);c[j>>2]=b[18160+(c[h+((c[g>>2]|0)*12|0)>>2]<<1)>>1]|0;c[k>>2]=(((b[18160+((c[h+((c[g>>2]|0)*12|0)>>2]|0)+1<<1)>>1]|0)-(c[j>>2]|0)>>16)*6554|0)+(((b[18160+((c[h+((c[g>>2]|0)*12|0)>>2]|0)+1<<1)>>1]|0)-(c[j>>2]|0)&65535)*6554>>16);a=(c[j>>2]|0)+($((c[k>>2]&65535)<<16>>16,((c[h+((c[g>>2]|0)*12|0)+4>>2]<<1)+1&65535)<<16>>16)|0)|0;c[(c[e>>2]|0)+(c[g>>2]<<2)>>2]=a;c[g>>2]=(c[g>>2]|0)+1}a=c[e>>2]|0;c[a>>2]=(c[a>>2]|0)-(c[(c[e>>2]|0)+4>>2]|0);i=f;return}function re(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;d=i;i=i+16|0;f=d+4|0;e=d;c[f>>2]=a;c[e>>2]=b;a=Pb(c[f>>2]|0,18224,8)|0;c[c[e>>2]>>2]=a;i=d;return}function se(a,d,e,f){a=a|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;l=i;i=i+32|0;k=l+4|0;h=l+16|0;m=l+8|0;p=l+20|0;g=l+28|0;n=l;o=l+12|0;j=l+24|0;c[k>>2]=a;c[h>>2]=d;c[m>>2]=e;c[p>>2]=f;c[j>>2]=0;c[n>>2]=0;c[p>>2]=(c[p>>2]|0)+ -1;c[g>>2]=0;while(1){if((c[g>>2]|0)>=(c[p>>2]|0)){break}c[j>>2]=(c[j>>2]|0)+($(b[(c[m>>2]|0)+(c[g>>2]<<1)>>1]|0,b[(c[m>>2]|0)+(c[g>>2]<<1)>>1]|0)|0);c[j>>2]=(c[j>>2]|0)+($(b[(c[m>>2]|0)+((c[g>>2]|0)+1<<1)>>1]|0,b[(c[m>>2]|0)+((c[g>>2]|0)+1<<1)>>1]|0)|0);if((c[j>>2]|0)<0){q=4;break}c[g>>2]=(c[g>>2]|0)+2}if((q|0)==4){c[j>>2]=(c[j>>2]|0)>>>2;c[n>>2]=2;c[g>>2]=(c[g>>2]|0)+2}while(1){q=c[g>>2]|0;if((c[g>>2]|0)>=(c[p>>2]|0)){break}c[o>>2]=$(b[(c[m>>2]|0)+(q<<1)>>1]|0,b[(c[m>>2]|0)+(c[g>>2]<<1)>>1]|0)|0;c[o>>2]=(c[o>>2]|0)+($(b[(c[m>>2]|0)+((c[g>>2]|0)+1<<1)>>1]|0,b[(c[m>>2]|0)+((c[g>>2]|0)+1<<1)>>1]|0)|0);c[j>>2]=(c[j>>2]|0)+((c[o>>2]|0)>>>(c[n>>2]|0));if((c[j>>2]|0)<0){c[j>>2]=(c[j>>2]|0)>>>2;c[n>>2]=(c[n>>2]|0)+2}c[g>>2]=(c[g>>2]|0)+2}if((q|0)==(c[p>>2]|0)){c[o>>2]=$(b[(c[m>>2]|0)+(c[g>>2]<<1)>>1]|0,b[(c[m>>2]|0)+(c[g>>2]<<1)>>1]|0)|0;c[j>>2]=(c[j>>2]|0)+(c[o>>2]>>c[n>>2])}if((c[j>>2]&-1073741824|0)==0){a=c[n>>2]|0;d=c[h>>2]|0;c[d>>2]=a;d=c[j>>2]|0;a=c[k>>2]|0;c[a>>2]=d;i=l;return}c[j>>2]=(c[j>>2]|0)>>>2;c[n>>2]=(c[n>>2]|0)+2;a=c[n>>2]|0;d=c[h>>2]|0;c[d>>2]=a;d=c[j>>2]|0;a=c[k>>2]|0;c[a>>2]=d;i=l;return}function te(b,e){b=b|0;e=e|0;var f=0,g=0,h=0,j=0;g=i;i=i+16|0;j=g+8|0;h=g+4|0;f=g;c[j>>2]=b;c[h>>2]=e;b=d[c[j>>2]>>0]|0;if((a[c[j>>2]>>0]&128|0)!=0){c[f>>2]=b>>3&3;c[f>>2]=(c[h>>2]<<c[f>>2]|0)/400|0;e=c[f>>2]|0;i=g;return e|0}j=d[c[j>>2]>>0]|0;if((b&96|0)!=96){c[f>>2]=j>>3&3;h=c[h>>2]|0;if((c[f>>2]|0)==3){c[f>>2]=(h*60|0)/1e3|0;e=c[f>>2]|0;i=g;return e|0}else{c[f>>2]=(h<<c[f>>2]|0)/100|0;e=c[f>>2]|0;i=g;return e|0}}else{h=c[h>>2]|0;if((j&8|0)!=0){h=(h|0)/50|0}else{h=(h|0)/100|0}c[f>>2]=h;e=c[f>>2]|0;i=g;return e|0}return 0}function ue(e,f,g,h,j,k,l,m){e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;m=m|0;var n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0;D=i;i=i+80|0;p=D+36|0;r=D+24|0;B=D+44|0;E=D+60|0;n=D+12|0;s=D+16|0;v=D+48|0;x=D+56|0;q=D+64|0;t=D+68|0;y=D+72|0;u=D+8|0;C=D;G=D+76|0;F=D+77|0;J=D+20|0;z=D+52|0;A=D+28|0;w=D+32|0;H=D+40|0;I=D+4|0;c[r>>2]=e;c[B>>2]=f;c[E>>2]=g;c[n>>2]=h;c[s>>2]=j;c[v>>2]=k;c[x>>2]=l;c[q>>2]=m;c[A>>2]=0;c[w>>2]=c[r>>2];if((c[v>>2]|0)==0){c[p>>2]=-1;e=c[p>>2]|0;i=D;return e|0}c[J>>2]=te(c[r>>2]|0,48e3)|0;c[C>>2]=0;m=c[r>>2]|0;c[r>>2]=m+1;a[F>>0]=a[m>>0]|0;c[B>>2]=(c[B>>2]|0)+ -1;c[z>>2]=c[B>>2];m=a[F>>0]&3;a:do{if((m|0)==1){c[u>>2]=2;c[C>>2]=1;if((c[E>>2]|0)==0){if((c[B>>2]&1|0)==0){c[z>>2]=(c[B>>2]|0)/2|0;b[c[v>>2]>>1]=c[z>>2];break}c[p>>2]=-4;e=c[p>>2]|0;i=D;return e|0}}else if((m|0)==2){c[u>>2]=2;c[y>>2]=ve(c[r>>2]|0,c[B>>2]|0,c[v>>2]|0)|0;c[B>>2]=(c[B>>2]|0)-(c[y>>2]|0);if((b[c[v>>2]>>1]|0)>=0?(b[c[v>>2]>>1]|0)<=(c[B>>2]|0):0){c[r>>2]=(c[r>>2]|0)+(c[y>>2]|0);c[z>>2]=(c[B>>2]|0)-(b[c[v>>2]>>1]|0);break}c[p>>2]=-4;e=c[p>>2]|0;i=D;return e|0}else if((m|0)==0){c[u>>2]=1}else{if((c[B>>2]|0)<1){c[p>>2]=-4;e=c[p>>2]|0;i=D;return e|0}e=c[r>>2]|0;c[r>>2]=e+1;a[G>>0]=a[e>>0]|0;c[u>>2]=a[G>>0]&63;if((c[u>>2]|0)>0?($(c[J>>2]|0,c[u>>2]|0)|0)<=5760:0){c[B>>2]=(c[B>>2]|0)+ -1;b:do{if((a[G>>0]&64|0)!=0){while(1){if((c[B>>2]|0)<=0){break}e=c[r>>2]|0;c[r>>2]=e+1;c[H>>2]=d[e>>0]|0;c[B>>2]=(c[B>>2]|0)+ -1;c[I>>2]=(c[H>>2]|0)==255?254:c[H>>2]|0;c[B>>2]=(c[B>>2]|0)-(c[I>>2]|0);c[A>>2]=(c[A>>2]|0)+(c[I>>2]|0);if((c[H>>2]|0)!=255){break b}}c[p>>2]=-4;e=c[p>>2]|0;i=D;return e|0}}while(0);if((c[B>>2]|0)<0){c[p>>2]=-4;e=c[p>>2]|0;i=D;return e|0}c[C>>2]=((a[G>>0]&128|0)!=0^1)&1;if((c[C>>2]|0)!=0){if((c[E>>2]|0)!=0){break}c[z>>2]=(c[B>>2]|0)/(c[u>>2]|0)|0;e=$(c[z>>2]|0,c[u>>2]|0)|0;if((e|0)!=(c[B>>2]|0)){c[p>>2]=-4;e=c[p>>2]|0;i=D;return e|0}c[t>>2]=0;while(1){if((c[t>>2]|0)>=((c[u>>2]|0)-1|0)){break a}b[(c[v>>2]|0)+(c[t>>2]<<1)>>1]=c[z>>2];c[t>>2]=(c[t>>2]|0)+1}}c[z>>2]=c[B>>2];c[t>>2]=0;while(1){if((c[t>>2]|0)>=((c[u>>2]|0)-1|0)){break}c[y>>2]=ve(c[r>>2]|0,c[B>>2]|0,(c[v>>2]|0)+(c[t>>2]<<1)|0)|0;c[B>>2]=(c[B>>2]|0)-(c[y>>2]|0);if((b[(c[v>>2]|0)+(c[t>>2]<<1)>>1]|0)<0){o=29;break}if((b[(c[v>>2]|0)+(c[t>>2]<<1)>>1]|0)>(c[B>>2]|0)){o=29;break}c[r>>2]=(c[r>>2]|0)+(c[y>>2]|0);c[z>>2]=(c[z>>2]|0)-((c[y>>2]|0)+(b[(c[v>>2]|0)+(c[t>>2]<<1)>>1]|0));c[t>>2]=(c[t>>2]|0)+1}if((o|0)==29){c[p>>2]=-4;e=c[p>>2]|0;i=D;return e|0}if((c[z>>2]|0)>=0){break}c[p>>2]=-4;e=c[p>>2]|0;i=D;return e|0}c[p>>2]=-4;e=c[p>>2]|0;i=D;return e|0}}while(0);c:do{if((c[E>>2]|0)!=0){c[y>>2]=ve(c[r>>2]|0,c[B>>2]|0,(c[v>>2]|0)+(c[u>>2]<<1)+ -2|0)|0;c[B>>2]=(c[B>>2]|0)-(c[y>>2]|0);if((b[(c[v>>2]|0)+((c[u>>2]|0)-1<<1)>>1]|0)>=0?(b[(c[v>>2]|0)+((c[u>>2]|0)-1<<1)>>1]|0)<=(c[B>>2]|0):0){c[r>>2]=(c[r>>2]|0)+(c[y>>2]|0);if((c[C>>2]|0)==0){if(((c[y>>2]|0)+(b[(c[v>>2]|0)+((c[u>>2]|0)-1<<1)>>1]|0)|0)<=(c[z>>2]|0)){break}c[p>>2]=-4;e=c[p>>2]|0;i=D;return e|0}e=$(b[(c[v>>2]|0)+((c[u>>2]|0)-1<<1)>>1]|0,c[u>>2]|0)|0;if((e|0)>(c[B>>2]|0)){c[p>>2]=-4;e=c[p>>2]|0;i=D;return e|0}c[t>>2]=0;while(1){if((c[t>>2]|0)>=((c[u>>2]|0)-1|0)){break c}b[(c[v>>2]|0)+(c[t>>2]<<1)>>1]=b[(c[v>>2]|0)+((c[u>>2]|0)-1<<1)>>1]|0;c[t>>2]=(c[t>>2]|0)+1}}c[p>>2]=-4;e=c[p>>2]|0;i=D;return e|0}else{if((c[z>>2]|0)<=1275){b[(c[v>>2]|0)+((c[u>>2]|0)-1<<1)>>1]=c[z>>2];break}c[p>>2]=-4;e=c[p>>2]|0;i=D;return e|0}}while(0);if((c[x>>2]|0)!=0){c[c[x>>2]>>2]=(c[r>>2]|0)-(c[w>>2]|0)}c[t>>2]=0;while(1){if((c[t>>2]|0)>=(c[u>>2]|0)){break}if((c[s>>2]|0)!=0){c[(c[s>>2]|0)+(c[t>>2]<<2)>>2]=c[r>>2]}c[r>>2]=(c[r>>2]|0)+(b[(c[v>>2]|0)+(c[t>>2]<<1)>>1]|0);c[t>>2]=(c[t>>2]|0)+1}if((c[q>>2]|0)!=0){c[c[q>>2]>>2]=(c[A>>2]|0)+((c[r>>2]|0)-(c[w>>2]|0))}if((c[n>>2]|0)!=0){a[c[n>>2]>>0]=a[F>>0]|0}c[p>>2]=c[u>>2];e=c[p>>2]|0;i=D;return e|0}function ve(a,e,f){a=a|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0;g=i;i=i+16|0;h=g+12|0;k=g+8|0;l=g+4|0;j=g;c[k>>2]=a;c[l>>2]=e;c[j>>2]=f;if((c[l>>2]|0)<1){b[c[j>>2]>>1]=-1;c[h>>2]=-1;a=c[h>>2]|0;i=g;return a|0}if((d[c[k>>2]>>0]|0|0)<252){b[c[j>>2]>>1]=d[c[k>>2]>>0]|0;c[h>>2]=1;a=c[h>>2]|0;i=g;return a|0}if((c[l>>2]|0)<2){b[c[j>>2]>>1]=-1;c[h>>2]=-1;a=c[h>>2]|0;i=g;return a|0}else{b[c[j>>2]>>1]=((d[(c[k>>2]|0)+1>>0]|0)<<2)+(d[c[k>>2]>>0]|0);c[h>>2]=2;a=c[h>>2]|0;i=g;return a|0}return 0}function we(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0;b=i;i=i+32|0;d=b+16|0;f=b+12|0;e=b+8|0;g=b+4|0;h=b;c[f>>2]=a;if((c[f>>2]|0)<1|(c[f>>2]|0)>2){c[d>>2]=0;h=c[d>>2]|0;i=b;return h|0}c[h>>2]=Nd(e)|0;if((c[h>>2]|0)!=0){c[d>>2]=0;h=c[d>>2]|0;i=b;return h|0}else{c[e>>2]=xe(c[e>>2]|0)|0;c[g>>2]=db(c[f>>2]|0)|0;h=xe(76)|0;c[d>>2]=h+(c[e>>2]|0)+(c[g>>2]|0);h=c[d>>2]|0;i=b;return h|0}return 0}function xe(a){a=a|0;var b=0,d=0;d=i;i=i+16|0;b=d;c[b>>2]=a;i=d;return(c[b>>2]|0)+4-1&-4|0}function ye(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0;k=i;i=i+48|0;h=k;f=k+24|0;j=k+20|0;e=k+8|0;l=k+16|0;o=k+4|0;g=k+12|0;m=k+28|0;n=k+32|0;c[j>>2]=a;c[e>>2]=b;c[l>>2]=d;if(!((c[e>>2]|0)!=48e3&(c[e>>2]|0)!=24e3&(c[e>>2]|0)!=16e3&(c[e>>2]|0)!=12e3&(c[e>>2]|0)!=8e3)?!((c[l>>2]|0)!=1&(c[l>>2]|0)!=2):0){a=c[j>>2]|0;Xe(a|0,0,we(c[l>>2]|0)|0)|0;c[m>>2]=Nd(n)|0;if((c[m>>2]|0)!=0){c[f>>2]=-3;a=c[f>>2]|0;i=k;return a|0}c[n>>2]=xe(c[n>>2]|0)|0;a=xe(76)|0;c[(c[j>>2]|0)+4>>2]=a;c[c[j>>2]>>2]=(c[(c[j>>2]|0)+4>>2]|0)+(c[n>>2]|0);c[o>>2]=(c[j>>2]|0)+(c[(c[j>>2]|0)+4>>2]|0);c[g>>2]=(c[j>>2]|0)+(c[c[j>>2]>>2]|0);a=c[l>>2]|0;c[(c[j>>2]|0)+8>>2]=a;c[(c[j>>2]|0)+44>>2]=a;c[(c[j>>2]|0)+12>>2]=c[e>>2];c[(c[j>>2]|0)+24>>2]=c[(c[j>>2]|0)+12>>2];c[(c[j>>2]|0)+16>>2]=c[(c[j>>2]|0)+8>>2];c[m>>2]=Od(c[o>>2]|0)|0;if((c[m>>2]|0)!=0){c[f>>2]=-3;a=c[f>>2]|0;i=k;return a|0}c[m>>2]=fb(c[g>>2]|0,c[e>>2]|0,c[l>>2]|0)|0;if((c[m>>2]|0)!=0){c[f>>2]=-3;a=c[f>>2]|0;i=k;return a|0}else{a=c[g>>2]|0;c[h>>2]=0;ob(a,10016,h)|0;c[(c[j>>2]|0)+56>>2]=0;c[(c[j>>2]|0)+60>>2]=(c[e>>2]|0)/400|0;c[f>>2]=0;a=c[f>>2]|0;i=k;return a|0}}c[f>>2]=-1;a=c[f>>2]|0;i=k;return a|0}function ze(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0;f=i;i=i+32|0;e=f+20|0;k=f+16|0;l=f+12|0;g=f+8|0;j=f+4|0;h=f;c[k>>2]=a;c[l>>2]=b;c[g>>2]=d;if(!((c[k>>2]|0)!=48e3&(c[k>>2]|0)!=24e3&(c[k>>2]|0)!=16e3&(c[k>>2]|0)!=12e3&(c[k>>2]|0)!=8e3)?!((c[l>>2]|0)!=1&(c[l>>2]|0)!=2):0){c[h>>2]=Ae(we(c[l>>2]|0)|0)|0;if((c[h>>2]|0)==0){if((c[g>>2]|0)!=0){c[c[g>>2]>>2]=-7}c[e>>2]=0;a=c[e>>2]|0;i=f;return a|0}c[j>>2]=ye(c[h>>2]|0,c[k>>2]|0,c[l>>2]|0)|0;if((c[g>>2]|0)!=0){c[c[g>>2]>>2]=c[j>>2]}if((c[j>>2]|0)!=0){Be(c[h>>2]|0);c[h>>2]=0}c[e>>2]=c[h>>2];a=c[e>>2]|0;i=f;return a|0}if((c[g>>2]|0)!=0){c[c[g>>2]>>2]=-1}c[e>>2]=0;a=c[e>>2]|0;i=f;return a|0}function Ae(a){a=a|0;var b=0,d=0;b=i;i=i+16|0;d=b;c[d>>2]=a;a=Se(c[d>>2]|0)|0;i=b;return a|0}function Be(a){a=a|0;var b=0,d=0;b=i;i=i+16|0;d=b;c[d>>2]=a;Te(c[d>>2]|0);i=b;return}function Ce(a,d,e,f,g,h,j,k,l){a=a|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;var m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0;r=i;i=i+208|0;n=r+44|0;p=r+4|0;M=r;H=r+76|0;o=r+36|0;q=r+16|0;G=r+20|0;I=r+24|0;K=r+64|0;C=r+72|0;v=r+80|0;E=r+84|0;L=r+88|0;F=r+48|0;J=r+192|0;A=r+8|0;z=r+56|0;y=r+28|0;B=r+60|0;u=r+96|0;s=r+32|0;t=r+68|0;w=r+40|0;D=r+12|0;x=r+52|0;c[p>>2]=a;c[M>>2]=d;c[H>>2]=e;c[o>>2]=f;c[q>>2]=g;c[G>>2]=h;c[I>>2]=j;c[K>>2]=k;c[C>>2]=l;if((c[G>>2]|0)<0|(c[G>>2]|0)>1){c[n>>2]=-1;a=c[n>>2]|0;i=r;return a|0}if(!(((c[G>>2]|0)==0?(c[H>>2]|0)!=0:0)?(c[M>>2]|0)!=0:0)){m=6}if((m|0)==6?((c[q>>2]|0)%((c[(c[p>>2]|0)+12>>2]|0)/400|0|0)|0|0)!=0:0){c[n>>2]=-1;a=c[n>>2]|0;i=r;return a|0}if((c[H>>2]|0)!=0?(c[M>>2]|0)!=0:0){if((c[H>>2]|0)<0){c[n>>2]=-1;a=c[n>>2]|0;i=r;return a|0}c[y>>2]=Fe(c[M>>2]|0)|0;c[z>>2]=Ge(c[M>>2]|0)|0;c[A>>2]=te(c[M>>2]|0,c[(c[p>>2]|0)+12>>2]|0)|0;c[B>>2]=He(c[M>>2]|0)|0;c[L>>2]=ue(c[M>>2]|0,c[H>>2]|0,c[I>>2]|0,J,0,u,F,c[K>>2]|0)|0;if((c[L>>2]|0)<0){c[n>>2]=c[L>>2];a=c[n>>2]|0;i=r;return a|0}c[M>>2]=(c[M>>2]|0)+(c[F>>2]|0);if((c[G>>2]|0)==0){a=$(c[L>>2]|0,c[A>>2]|0)|0;if((a|0)>(c[q>>2]|0)){c[n>>2]=-2;a=c[n>>2]|0;i=r;return a|0}c[(c[p>>2]|0)+52>>2]=c[y>>2];c[(c[p>>2]|0)+48>>2]=c[z>>2];c[(c[p>>2]|0)+60>>2]=c[A>>2];c[(c[p>>2]|0)+44>>2]=c[B>>2];c[E>>2]=0;c[v>>2]=0;while(1){if((c[v>>2]|0)>=(c[L>>2]|0)){m=37;break}a=(c[o>>2]|0)+(($(c[E>>2]|0,c[(c[p>>2]|0)+8>>2]|0)|0)<<1)|0;c[x>>2]=De(c[p>>2]|0,c[M>>2]|0,b[u+(c[v>>2]<<1)>>1]|0,a,(c[q>>2]|0)-(c[E>>2]|0)|0,0)|0;if((c[x>>2]|0)<0){m=35;break}c[M>>2]=(c[M>>2]|0)+(b[u+(c[v>>2]<<1)>>1]|0);c[E>>2]=(c[E>>2]|0)+(c[x>>2]|0);c[v>>2]=(c[v>>2]|0)+1}if((m|0)==35){c[n>>2]=c[x>>2];a=c[n>>2]|0;i=r;return a|0}else if((m|0)==37){c[(c[p>>2]|0)+68>>2]=c[E>>2];Ee()|0;c[n>>2]=c[E>>2];a=c[n>>2]|0;i=r;return a|0}}if(((c[q>>2]|0)>=(c[A>>2]|0)?(c[y>>2]|0)!=1002:0)?(c[(c[p>>2]|0)+52>>2]|0)!=1002:0){c[w>>2]=c[(c[p>>2]|0)+68>>2];if(((c[q>>2]|0)-(c[A>>2]|0)|0)!=0?(c[D>>2]=Ce(c[p>>2]|0,0,0,c[o>>2]|0,(c[q>>2]|0)-(c[A>>2]|0)|0,0,0,0,c[C>>2]|0)|0,(c[D>>2]|0)<0):0){c[(c[p>>2]|0)+68>>2]=c[w>>2];c[n>>2]=c[D>>2];a=c[n>>2]|0;i=r;return a|0}c[(c[p>>2]|0)+52>>2]=c[y>>2];c[(c[p>>2]|0)+48>>2]=c[z>>2];c[(c[p>>2]|0)+60>>2]=c[A>>2];c[(c[p>>2]|0)+44>>2]=c[B>>2];a=(c[o>>2]|0)+(($(c[(c[p>>2]|0)+8>>2]|0,(c[q>>2]|0)-(c[A>>2]|0)|0)|0)<<1)|0;c[D>>2]=De(c[p>>2]|0,c[M>>2]|0,b[u>>1]|0,a,c[A>>2]|0,1)|0;if((c[D>>2]|0)<0){c[n>>2]=c[D>>2];a=c[n>>2]|0;i=r;return a|0}else{Ee()|0;c[(c[p>>2]|0)+68>>2]=c[q>>2];c[n>>2]=c[q>>2];a=c[n>>2]|0;i=r;return a|0}}c[n>>2]=Ce(c[p>>2]|0,0,0,c[o>>2]|0,c[q>>2]|0,0,0,0,c[C>>2]|0)|0;a=c[n>>2]|0;i=r;return a|0}c[s>>2]=0;while(1){u=(c[o>>2]|0)+(($(c[s>>2]|0,c[(c[p>>2]|0)+8>>2]|0)|0)<<1)|0;c[t>>2]=De(c[p>>2]|0,0,0,u,(c[q>>2]|0)-(c[s>>2]|0)|0,0)|0;u=c[t>>2]|0;if((c[t>>2]|0)<0){m=12;break}c[s>>2]=(c[s>>2]|0)+u;if((c[s>>2]|0)>=(c[q>>2]|0)){m=14;break}}if((m|0)==12){c[n>>2]=u;a=c[n>>2]|0;i=r;return a|0}else if((m|0)==14){Ee()|0;c[(c[p>>2]|0)+68>>2]=c[s>>2];c[n>>2]=c[s>>2];a=c[n>>2]|0;i=r;return a|0}return 0}function De(d,e,f,g,h,j){d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0;k=i;i=i+240|0;P=k;n=k+128|0;l=k+124|0;J=k+208|0;w=k+216|0;o=k+200|0;s=k+20|0;L=k+24|0;_=k+28|0;K=k+32|0;B=k+36|0;Z=k+40|0;r=k+44|0;v=k+48|0;ba=k+96|0;ca=k+8|0;U=k+104|0;ea=k+108|0;S=k+112|0;T=k+196|0;m=k+204|0;C=k+212|0;H=k+220|0;D=k+224|0;u=k+228|0;F=k+140|0;x=k+144|0;G=k+148|0;N=k+152|0;E=k+156|0;da=k+160|0;y=k+164|0;O=k+168|0;z=k+172|0;Q=k+176|0;fa=k+180|0;p=k+184|0;q=k+16|0;W=k+12|0;X=k+188|0;Y=k+100|0;aa=k+136|0;V=k+116|0;I=k+192|0;R=k+232|0;M=k+120|0;t=k+132|0;A=k+4|0;c[l>>2]=d;c[J>>2]=e;c[w>>2]=f;c[o>>2]=g;c[s>>2]=h;c[L>>2]=j;c[Z>>2]=0;c[r>>2]=0;c[S>>2]=0;c[H>>2]=0;c[u>>2]=0;c[F>>2]=0;c[x>>2]=0;c[z>>2]=0;c[_>>2]=(c[l>>2]|0)+(c[(c[l>>2]|0)+4>>2]|0);c[K>>2]=(c[l>>2]|0)+(c[c[l>>2]>>2]|0);c[y>>2]=(c[(c[l>>2]|0)+12>>2]|0)/50|0;c[da>>2]=c[y>>2]>>1;c[E>>2]=c[da>>2]>>1;c[N>>2]=c[E>>2]>>1;if((c[s>>2]|0)<(c[N>>2]|0)){c[n>>2]=-2;d=c[n>>2]|0;i=k;return d|0}if((c[s>>2]|0)<(((c[(c[l>>2]|0)+12>>2]|0)/25|0)*3|0)){j=c[s>>2]|0}else{j=((c[(c[l>>2]|0)+12>>2]|0)/25|0)*3|0}c[s>>2]=j;if((c[w>>2]|0)<=1){c[J>>2]=0;if((c[s>>2]|0)<(c[(c[l>>2]|0)+60>>2]|0)){j=c[s>>2]|0}else{j=c[(c[l>>2]|0)+60>>2]|0}c[s>>2]=j}do{if((c[J>>2]|0)==0){c[m>>2]=c[s>>2];c[C>>2]=c[(c[l>>2]|0)+56>>2];if((c[C>>2]|0)==0){c[B>>2]=0;while(1){if((c[B>>2]|0)>=($(c[m>>2]|0,c[(c[l>>2]|0)+8>>2]|0)|0)){break}b[(c[o>>2]|0)+(c[B>>2]<<1)>>1]=0;c[B>>2]=(c[B>>2]|0)+1}c[n>>2]=c[m>>2];d=c[n>>2]|0;i=k;return d|0}if((c[m>>2]|0)>(c[y>>2]|0)){while(1){c[fa>>2]=De(c[l>>2]|0,0,0,c[o>>2]|0,(c[m>>2]|0)<(c[y>>2]|0)?c[m>>2]|0:c[y>>2]|0,0)|0;p=c[fa>>2]|0;if((c[fa>>2]|0)<0){fa=20;break}d=$(p,c[(c[l>>2]|0)+8>>2]|0)|0;c[o>>2]=(c[o>>2]|0)+(d<<1);c[m>>2]=(c[m>>2]|0)-(c[fa>>2]|0);if((c[m>>2]|0)<=0){fa=22;break}}if((fa|0)==20){c[n>>2]=p;d=c[n>>2]|0;i=k;return d|0}else if((fa|0)==22){c[n>>2]=c[s>>2];d=c[n>>2]|0;i=k;return d|0}}if((c[m>>2]|0)<(c[y>>2]|0)){if((c[m>>2]|0)>(c[da>>2]|0)){c[m>>2]=c[da>>2];break}if(((c[C>>2]|0)!=1e3?(c[m>>2]|0)>(c[E>>2]|0):0)?(c[m>>2]|0)<(c[da>>2]|0):0){c[m>>2]=c[E>>2]}}}else{c[m>>2]=c[(c[l>>2]|0)+60>>2];c[C>>2]=c[(c[l>>2]|0)+52>>2];Hb(v,c[J>>2]|0,c[w>>2]|0)}}while(0);if((c[C>>2]|0)!=1002){fa=(c[s>>2]|0)>=(c[da>>2]|0)}else{fa=0}c[Q>>2]=fa&1;c[U>>2]=1;c[ea>>2]=1;do{if((c[J>>2]|0)!=0?(c[(c[l>>2]|0)+56>>2]|0)>0:0){if(!(((c[C>>2]|0)==1002?(c[(c[l>>2]|0)+56>>2]|0)!=1002:0)?(c[(c[l>>2]|0)+64>>2]|0)==0:0)){if((c[C>>2]|0)==1002){break}if((c[(c[l>>2]|0)+56>>2]|0)!=1002){break}}c[H>>2]=1;fa=$(c[E>>2]|0,c[(c[l>>2]|0)+8>>2]|0)|0;if((c[C>>2]|0)==1002){c[ea>>2]=fa;break}else{c[U>>2]=fa;break}}}while(0);d=c[ea>>2]|0;c[p>>2]=ia()|0;ea=i;i=i+((2*d|0)+15&-16)|0;if((c[H>>2]|0)!=0?(c[C>>2]|0)==1002:0){c[S>>2]=ea;De(c[l>>2]|0,0,0,c[S>>2]|0,(c[E>>2]|0)<(c[m>>2]|0)?c[E>>2]|0:c[m>>2]|0,0)|0}a:do{if((c[m>>2]|0)>(c[s>>2]|0)){c[n>>2]=-1;c[q>>2]=1}else{c[s>>2]=c[m>>2];if((c[C>>2]|0)!=1002?(c[Q>>2]|0)==0:0){da=$((c[da>>2]|0)>(c[s>>2]|0)?c[da>>2]|0:c[s>>2]|0,c[(c[l>>2]|0)+8>>2]|0)|0}else{da=1}c[ca>>2]=da;da=i;i=i+((2*(c[ca>>2]|0)|0)+15&-16)|0;b:do{if((c[C>>2]|0)!=1002){if((c[Q>>2]|0)!=0){c[Y>>2]=c[o>>2]}else{c[Y>>2]=da}if((c[(c[l>>2]|0)+56>>2]|0)==1002){Od(c[_>>2]|0)|0}if(10>(((c[m>>2]|0)*1e3|0)/(c[(c[l>>2]|0)+12>>2]|0)|0|0)){ca=10}else{ca=((c[m>>2]|0)*1e3|0)/(c[(c[l>>2]|0)+12>>2]|0)|0}c[(c[l>>2]|0)+32>>2]=ca;do{if((c[J>>2]|0)!=0){c[(c[l>>2]|0)+20>>2]=c[(c[l>>2]|0)+44>>2];ca=c[l>>2]|0;if((c[C>>2]|0)!=1e3){c[ca+28>>2]=16e3;break}ea=c[l>>2]|0;if((c[ca+48>>2]|0)==1101){c[ea+28>>2]=8e3;break}if((c[ea+48>>2]|0)==1102){c[(c[l>>2]|0)+28>>2]=12e3;break}else{c[(c[l>>2]|0)+28>>2]=16e3;break}}}while(0);if((c[J>>2]|0)==0){ca=1}else{ca=c[L>>2]<<1}c[W>>2]=ca;c[X>>2]=0;c:while(1){c[aa>>2]=(c[X>>2]|0)==0&1;c[Z>>2]=Pd(c[_>>2]|0,(c[l>>2]|0)+16|0,c[W>>2]|0,c[aa>>2]|0,v,c[Y>>2]|0,ba)|0;d:do{if((c[Z>>2]|0)!=0){if((c[W>>2]|0)==0){break c}c[ba>>2]=c[s>>2];c[B>>2]=0;while(1){if((c[B>>2]|0)>=($(c[s>>2]|0,c[(c[l>>2]|0)+8>>2]|0)|0)){break d}b[(c[Y>>2]|0)+(c[B>>2]<<1)>>1]=0;c[B>>2]=(c[B>>2]|0)+1}}}while(0);d=$(c[ba>>2]|0,c[(c[l>>2]|0)+8>>2]|0)|0;c[Y>>2]=(c[Y>>2]|0)+(d<<1);c[X>>2]=(c[X>>2]|0)+(c[ba>>2]|0);if((c[X>>2]|0)>=(c[s>>2]|0)){break b}}c[n>>2]=-3;c[q>>2]=1;break a}}while(0);c[D>>2]=0;if((((c[L>>2]|0)==0?(c[C>>2]|0)!=1002:0)?(c[J>>2]|0)!=0:0)?(d=(Ne(v)|0)+17|0,(d+(((c[(c[l>>2]|0)+52>>2]|0)==1001&1)*20|0)|0)<=(c[w>>2]<<3|0)):0){if((c[C>>2]|0)==1001){c[u>>2]=Ob(v,12)|0}else{c[u>>2]=1}if((c[u>>2]|0)!=0){c[x>>2]=Ob(v,1)|0;if((c[C>>2]|0)==1001){W=(Qb(v,256)|0)+2|0}else{W=c[w>>2]|0;W=W-((Ne(v)|0)+7>>3)|0}c[F>>2]=W;c[w>>2]=(c[w>>2]|0)-(c[F>>2]|0);d=c[w>>2]<<3;if((d|0)<(Ne(v)|0)){c[w>>2]=0;c[F>>2]=0;c[u>>2]=0}d=v+4|0;c[d>>2]=(c[d>>2]|0)-(c[F>>2]|0)}}if((c[C>>2]|0)!=1002){c[D>>2]=17}c[V>>2]=21;switch(c[(c[l>>2]|0)+48>>2]|0){case 1101:{c[V>>2]=13;break};case 1103:case 1102:{c[V>>2]=17;break};case 1104:{c[V>>2]=19;break};case 1105:{c[V>>2]=21;break};default:{}}d=c[K>>2]|0;c[P>>2]=c[V>>2];ob(d,10012,P)|0;d=c[K>>2]|0;c[P>>2]=c[(c[l>>2]|0)+44>>2];ob(d,10008,P)|0;if((c[u>>2]|0)!=0){c[H>>2]=0;c[U>>2]=1}V=i;i=i+((2*(c[U>>2]|0)|0)+15&-16)|0;if((c[H>>2]|0)!=0?(c[C>>2]|0)!=1002:0){c[S>>2]=V;De(c[l>>2]|0,0,0,c[S>>2]|0,(c[E>>2]|0)<(c[m>>2]|0)?c[E>>2]|0:c[m>>2]|0,0)|0}if((c[u>>2]|0)!=0){U=$(c[E>>2]|0,c[(c[l>>2]|0)+8>>2]|0)|0}else{U=1}c[T>>2]=U;U=i;i=i+((2*(c[T>>2]|0)|0)+15&-16)|0;if((c[u>>2]|0)!=0?(c[x>>2]|0)!=0:0){d=c[K>>2]|0;c[P>>2]=0;ob(d,10010,P)|0;hb(c[K>>2]|0,(c[J>>2]|0)+(c[w>>2]|0)|0,c[F>>2]|0,U,c[E>>2]|0,0,0)|0;d=c[K>>2]|0;c[P>>2]=z+(((z-z|0)/4|0)<<2);ob(d,4031,P)|0}d=c[K>>2]|0;c[P>>2]=c[D>>2];ob(d,10010,P)|0;e:do{if((c[C>>2]|0)!=1e3){c[I>>2]=(c[y>>2]|0)<(c[s>>2]|0)?c[y>>2]|0:c[s>>2]|0;do{if((c[C>>2]|0)!=(c[(c[l>>2]|0)+56>>2]|0)){if((c[(c[l>>2]|0)+56>>2]|0)<=0){break}if((c[(c[l>>2]|0)+64>>2]|0)!=0){break}ob(c[K>>2]|0,4028,P)|0}}while(0);c[r>>2]=hb(c[K>>2]|0,(c[L>>2]|0)!=0?0:c[J>>2]|0,c[w>>2]|0,c[o>>2]|0,c[I>>2]|0,v,c[Q>>2]|0)|0}else{a[R+0>>0]=a[19384>>0]|0;a[R+1>>0]=a[19385>>0]|0;f:do{if((c[Q>>2]|0)==0){c[B>>2]=0;while(1){if((c[B>>2]|0)>=($(c[s>>2]|0,c[(c[l>>2]|0)+8>>2]|0)|0)){break f}b[(c[o>>2]|0)+(c[B>>2]<<1)>>1]=0;c[B>>2]=(c[B>>2]|0)+1}}}while(0);if((c[(c[l>>2]|0)+56>>2]|0)!=1001){break}do{if((c[u>>2]|0)!=0){if((c[x>>2]|0)==0){break}if((c[(c[l>>2]|0)+64>>2]|0)!=0){break e}}}while(0);d=c[K>>2]|0;c[P>>2]=0;ob(d,10010,P)|0;hb(c[K>>2]|0,R,2,c[o>>2]|0,c[N>>2]|0,0,c[Q>>2]|0)|0}}while(0);g:do{if((c[C>>2]|0)!=1002){if((c[Q>>2]|0)!=0){break}c[B>>2]=0;while(1){if((c[B>>2]|0)>=($(c[s>>2]|0,c[(c[l>>2]|0)+8>>2]|0)|0)){break g}d=Oe((b[(c[o>>2]|0)+(c[B>>2]<<1)>>1]|0)+(b[da+(c[B>>2]<<1)>>1]|0)|0)|0;b[(c[o>>2]|0)+(c[B>>2]<<1)>>1]=d;c[B>>2]=(c[B>>2]|0)+1}}}while(0);d=c[K>>2]|0;c[P>>2]=M+(((M-M|0)/4|0)<<2);ob(d,10015,P)|0;c[O>>2]=c[(c[M>>2]|0)+52>>2];do{if((c[u>>2]|0)!=0){if((c[x>>2]|0)!=0){break}ob(c[K>>2]|0,4028,P)|0;f=c[K>>2]|0;c[P>>2]=0;ob(f,10010,P)|0;hb(c[K>>2]|0,(c[J>>2]|0)+(c[w>>2]|0)|0,c[F>>2]|0,U,c[E>>2]|0,0,0)|0;f=c[K>>2]|0;c[P>>2]=z+(((z-z|0)/4|0)<<2);ob(f,4031,P)|0;f=(c[o>>2]|0)+(($(c[(c[l>>2]|0)+8>>2]|0,(c[s>>2]|0)-(c[N>>2]|0)|0)|0)<<1)|0;e=U+(($(c[(c[l>>2]|0)+8>>2]|0,c[N>>2]|0)|0)<<1)|0;d=(c[o>>2]|0)+(($(c[(c[l>>2]|0)+8>>2]|0,(c[s>>2]|0)-(c[N>>2]|0)|0)|0)<<1)|0;Pe(f,e,d,c[N>>2]|0,c[(c[l>>2]|0)+8>>2]|0,c[O>>2]|0,c[(c[l>>2]|0)+12>>2]|0)}}while(0);do{if((c[u>>2]|0)!=0){if((c[x>>2]|0)==0){break}c[G>>2]=0;while(1){if((c[G>>2]|0)>=(c[(c[l>>2]|0)+8>>2]|0)){break}c[B>>2]=0;while(1){if((c[B>>2]|0)>=(c[N>>2]|0)){break}e=$(c[(c[l>>2]|0)+8>>2]|0,c[B>>2]|0)|0;d=$(c[(c[l>>2]|0)+8>>2]|0,c[B>>2]|0)|0;b[(c[o>>2]|0)+(d+(c[G>>2]|0)<<1)>>1]=b[U+(e+(c[G>>2]|0)<<1)>>1]|0;c[B>>2]=(c[B>>2]|0)+1}c[G>>2]=(c[G>>2]|0)+1}f=U+(($(c[(c[l>>2]|0)+8>>2]|0,c[N>>2]|0)|0)<<1)|0;e=(c[o>>2]|0)+(($(c[(c[l>>2]|0)+8>>2]|0,c[N>>2]|0)|0)<<1)|0;d=(c[o>>2]|0)+(($(c[(c[l>>2]|0)+8>>2]|0,c[N>>2]|0)|0)<<1)|0;Pe(f,e,d,c[N>>2]|0,c[(c[l>>2]|0)+8>>2]|0,c[O>>2]|0,c[(c[l>>2]|0)+12>>2]|0)}}while(0);do{if((c[H>>2]|0)!=0){if((c[m>>2]|0)<(c[E>>2]|0)){Pe(c[S>>2]|0,c[o>>2]|0,c[o>>2]|0,c[N>>2]|0,c[(c[l>>2]|0)+8>>2]|0,c[O>>2]|0,c[(c[l>>2]|0)+12>>2]|0);break}c[B>>2]=0;while(1){if((c[B>>2]|0)>=($(c[(c[l>>2]|0)+8>>2]|0,c[N>>2]|0)|0)){break}b[(c[o>>2]|0)+(c[B>>2]<<1)>>1]=b[(c[S>>2]|0)+(c[B>>2]<<1)>>1]|0;c[B>>2]=(c[B>>2]|0)+1}f=(c[S>>2]|0)+(($(c[(c[l>>2]|0)+8>>2]|0,c[N>>2]|0)|0)<<1)|0;e=(c[o>>2]|0)+(($(c[(c[l>>2]|0)+8>>2]|0,c[N>>2]|0)|0)<<1)|0;d=(c[o>>2]|0)+(($(c[(c[l>>2]|0)+8>>2]|0,c[N>>2]|0)|0)<<1)|0;Pe(f,e,d,c[N>>2]|0,c[(c[l>>2]|0)+8>>2]|0,c[O>>2]|0,c[(c[l>>2]|0)+12>>2]|0)}}while(0);h:do{if((c[(c[l>>2]|0)+40>>2]|0)!=0){c[t>>2]=Qe(16384+(((c[(c[l>>2]|0)+40>>2]&65535)<<16>>16)*21771|0)>>15&65535)|0;c[B>>2]=0;while(1){if((c[B>>2]|0)>=($(c[s>>2]|0,c[(c[l>>2]|0)+8>>2]|0)|0)){break h}d=$(b[(c[o>>2]|0)+(c[B>>2]<<1)>>1]|0,(c[t>>2]>>16&65535)<<16>>16)|0;c[A>>2]=d+(($(b[(c[o>>2]|0)+(c[B>>2]<<1)>>1]|0,c[t>>2]&65535&65535)|0)+32768>>16);if((c[A>>2]|0)>32767){y=32767}else{y=(c[A>>2]|0)<-32767?-32767:c[A>>2]|0}b[(c[o>>2]|0)+(c[B>>2]<<1)>>1]=y;c[B>>2]=(c[B>>2]|0)+1}}}while(0);if((c[w>>2]|0)<=1){c[(c[l>>2]|0)+72>>2]=0}else{c[(c[l>>2]|0)+72>>2]=c[v+28>>2]^c[z>>2]}c[(c[l>>2]|0)+56>>2]=c[C>>2];if((c[u>>2]|0)!=0){o=(c[x>>2]|0)!=0^1}else{o=0}c[(c[l>>2]|0)+64>>2]=o&1;if((c[r>>2]|0)>=0){Ee()|0}c[n>>2]=(c[r>>2]|0)<0?c[r>>2]|0:c[m>>2]|0;c[q>>2]=1}}while(0);na(c[p>>2]|0);d=c[n>>2]|0;i=k;return d|0}function Ee(){return 0}function Fe(b){b=b|0;var d=0,e=0,f=0;e=i;i=i+16|0;f=e+4|0;d=e;c[f>>2]=b;do{if((a[c[f>>2]>>0]&128|0)==0){if((a[c[f>>2]>>0]&96|0)==96){c[d>>2]=1001;break}else{c[d>>2]=1e3;break}}else{c[d>>2]=1002}}while(0);i=e;return c[d>>2]|0}function Ge(b){b=b|0;var e=0,f=0,g=0;e=i;i=i+16|0;g=e+4|0;f=e;c[g>>2]=b;b=d[c[g>>2]>>0]|0;if((a[c[g>>2]>>0]&128|0)!=0){b=1102+(b>>5&3)|0;c[f>>2]=b;c[f>>2]=(c[f>>2]|0)==1102?1101:b;b=c[f>>2]|0;i=e;return b|0}g=d[c[g>>2]>>0]|0;if((b&96|0)==96){c[f>>2]=(g&16|0)!=0?1105:1104;b=c[f>>2]|0;i=e;return b|0}else{c[f>>2]=1101+(g>>5&3);b=c[f>>2]|0;i=e;return b|0}return 0}function He(b){b=b|0;var d=0,e=0;e=i;i=i+16|0;d=e;c[d>>2]=b;i=e;return((a[c[d>>2]>>0]&4|0)!=0?2:1)|0}function Ie(a,d,e,f,h,j){a=a|0;d=d|0;e=e|0;f=f|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0;t=i;i=i+48|0;q=t+4|0;r=t+16|0;s=t+36|0;l=t;v=t+32|0;k=t+40|0;u=t+44|0;n=t+24|0;m=t+20|0;w=t+8|0;p=t+12|0;o=t+28|0;c[r>>2]=a;c[s>>2]=d;c[l>>2]=e;c[v>>2]=f;c[k>>2]=h;c[u>>2]=j;if((c[k>>2]|0)<=0){c[q>>2]=-1;a=c[q>>2]|0;i=t;return a|0}do{if(((c[s>>2]|0)!=0?(c[l>>2]|0)>0:0)?(c[u>>2]|0)==0:0){c[w>>2]=Je(c[r>>2]|0,c[s>>2]|0,c[l>>2]|0)|0;if((c[w>>2]|0)>0){c[k>>2]=(c[k>>2]|0)<(c[w>>2]|0)?c[k>>2]|0:c[w>>2]|0;break}c[q>>2]=-4;a=c[q>>2]|0;i=t;return a|0}}while(0);a=$(c[k>>2]|0,c[(c[r>>2]|0)+8>>2]|0)|0;c[p>>2]=ia()|0;w=i;i=i+((2*a|0)+15&-16)|0;c[n>>2]=Ce(c[r>>2]|0,c[s>>2]|0,c[l>>2]|0,w,c[k>>2]|0,c[u>>2]|0,0,0,0)|0;a:do{if((c[n>>2]|0)>0){c[m>>2]=0;while(1){if((c[m>>2]|0)>=($(c[n>>2]|0,c[(c[r>>2]|0)+8>>2]|0)|0)){break a}g[(c[v>>2]|0)+(c[m>>2]<<2)>>2]=+(b[w+(c[m>>2]<<1)>>1]|0)*30517578125.0e-15;c[m>>2]=(c[m>>2]|0)+1}}}while(0);c[q>>2]=c[n>>2];c[o>>2]=1;na(c[p>>2]|0);a=c[q>>2]|0;i=t;return a|0}function Je(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0;e=i;i=i+16|0;f=e+8|0;h=e+4|0;g=e;c[f>>2]=a;c[h>>2]=b;c[g>>2]=d;a=Me(c[h>>2]|0,c[g>>2]|0,c[(c[f>>2]|0)+12>>2]|0)|0;i=e;return a|0}function Ke(a){a=a|0;var b=0,d=0;b=i;i=i+16|0;d=b;c[d>>2]=a;Be(c[d>>2]|0);i=b;return}function Le(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0;f=i;i=i+16|0;e=f+12|0;g=f+8|0;h=f+4|0;j=f;c[g>>2]=b;c[h>>2]=d;do{if((c[h>>2]|0)>=1){c[j>>2]=a[c[g>>2]>>0]&3;if((c[j>>2]|0)==0){c[e>>2]=1;break}if((c[j>>2]|0)!=3){c[e>>2]=2;break}if((c[h>>2]|0)<2){c[e>>2]=-4;break}else{c[e>>2]=a[(c[g>>2]|0)+1>>0]&63;break}}else{c[e>>2]=-1}}while(0);i=f;return c[e>>2]|0}function Me(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0;e=i;i=i+32|0;f=e+20|0;h=e+16|0;l=e+12|0;j=e+8|0;g=e+4|0;k=e;c[h>>2]=a;c[l>>2]=b;c[j>>2]=d;c[k>>2]=Le(c[h>>2]|0,c[l>>2]|0)|0;d=c[k>>2]|0;if((c[k>>2]|0)<0){c[f>>2]=d;l=c[f>>2]|0;i=e;return l|0}c[g>>2]=$(d,te(c[h>>2]|0,c[j>>2]|0)|0)|0;if(((c[g>>2]|0)*25|0)>((c[j>>2]|0)*3|0)){c[f>>2]=-4;l=c[f>>2]|0;i=e;return l|0}else{c[f>>2]=c[g>>2];l=c[f>>2]|0;i=e;return l|0}return 0}function Ne(a){a=a|0;var b=0,d=0;b=i;i=i+16|0;d=b;c[d>>2]=a;a=c[(c[d>>2]|0)+20>>2]|0;a=a-(32-(We(c[(c[d>>2]|0)+28>>2]|0)|0))|0;i=b;return a|0}function Oe(a){a=a|0;var b=0,d=0;b=i;i=i+16|0;d=b;c[d>>2]=a;if((c[d>>2]|0)<=32767){if((c[d>>2]|0)<-32768){a=-32768}else{a=(c[d>>2]&65535)<<16>>16}}else{a=32767}i=b;return a&65535|0}function Pe(a,d,e,f,g,h,j){a=a|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0;s=i;i=i+48|0;t=s+36|0;k=s+16|0;u=s+28|0;m=s+4|0;o=s+32|0;q=s;v=s+12|0;l=s+24|0;n=s+20|0;p=s+8|0;r=s+40|0;c[t>>2]=a;c[k>>2]=d;c[u>>2]=e;c[m>>2]=f;c[o>>2]=g;c[q>>2]=h;c[v>>2]=j;c[p>>2]=48e3/(c[v>>2]|0)|0;c[n>>2]=0;while(1){if((c[n>>2]|0)>=(c[o>>2]|0)){break}c[l>>2]=0;while(1){if((c[l>>2]|0)>=(c[m>>2]|0)){break}a=$(c[l>>2]|0,c[p>>2]|0)|0;v=$(c[l>>2]|0,c[p>>2]|0)|0;b[r>>1]=($(b[(c[q>>2]|0)+(a<<1)>>1]|0,b[(c[q>>2]|0)+(v<<1)>>1]|0)|0)>>15;v=$(c[l>>2]|0,c[o>>2]|0)|0;v=$(b[r>>1]|0,b[(c[k>>2]|0)+(v+(c[n>>2]|0)<<1)>>1]|0)|0;a=$(c[l>>2]|0,c[o>>2]|0)|0;a=v+($((32767-(b[r>>1]|0)&65535)<<16>>16,b[(c[t>>2]|0)+(a+(c[n>>2]|0)<<1)>>1]|0)|0)>>15&65535;v=$(c[l>>2]|0,c[o>>2]|0)|0;b[(c[u>>2]|0)+(v+(c[n>>2]|0)<<1)>>1]=a;c[l>>2]=(c[l>>2]|0)+1}c[n>>2]=(c[n>>2]|0)+1}i=s;return}function Qe(a){a=a|0;var d=0,e=0,f=0,g=0,h=0;d=i;i=i+16|0;e=d+4|0;g=d+10|0;f=d;h=d+8|0;b[g>>1]=a;c[f>>2]=b[g>>1]>>10;if((c[f>>2]|0)>14){c[e>>2]=2130706432;h=c[e>>2]|0;i=d;return h|0}if((c[f>>2]|0)<-15){c[e>>2]=0;h=c[e>>2]|0;i=d;return h|0}b[h>>1]=Re((b[g>>1]|0)-(((c[f>>2]&65535)<<10&65535)<<16>>16)&65535)|0;g=b[h>>1]|0;a=0-(c[f>>2]|0)-2|0;if((0-(c[f>>2]|0)-2|0)>0){f=g>>a}else{f=g<<0-a}c[e>>2]=f;h=c[e>>2]|0;i=d;return h|0}function Re(a){a=a|0;var c=0,d=0,f=0;c=i;i=i+16|0;f=c+2|0;d=c;b[f>>1]=a;b[d>>1]=e[f>>1]<<4;a=(16383+((($(b[d>>1]|0,(22804+((($(b[d>>1]|0,(14819+(((b[d>>1]|0)*10204>>15&65535)<<16>>16)&65535)<<16>>16)|0)>>15&65535)<<16>>16)&65535)<<16>>16)|0)>>15&65535)<<16>>16)&65535)<<16>>16;i=c;return a|0}function Se(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0;b=i;do{if(a>>>0<245){if(a>>>0<11){a=16}else{a=a+11&-8}v=a>>>3;p=c[4848]|0;w=p>>>v;if((w&3|0)!=0){h=(w&1^1)+v|0;g=h<<1;e=19432+(g<<2)|0;g=19432+(g+2<<2)|0;j=c[g>>2]|0;d=j+8|0;f=c[d>>2]|0;do{if((e|0)!=(f|0)){if(f>>>0<(c[19408>>2]|0)>>>0){ga()}k=f+12|0;if((c[k>>2]|0)==(j|0)){c[k>>2]=e;c[g>>2]=f;break}else{ga()}}else{c[4848]=p&~(1<<h)}}while(0);H=h<<3;c[j+4>>2]=H|3;H=j+(H|4)|0;c[H>>2]=c[H>>2]|1;H=d;i=b;return H|0}if(a>>>0>(c[19400>>2]|0)>>>0){if((w|0)!=0){h=2<<v;h=w<<v&(h|0-h);h=(h&0-h)+ -1|0;d=h>>>12&16;h=h>>>d;f=h>>>5&8;h=h>>>f;g=h>>>2&4;h=h>>>g;e=h>>>1&2;h=h>>>e;j=h>>>1&1;j=(f|d|g|e|j)+(h>>>j)|0;h=j<<1;e=19432+(h<<2)|0;h=19432+(h+2<<2)|0;g=c[h>>2]|0;d=g+8|0;f=c[d>>2]|0;do{if((e|0)!=(f|0)){if(f>>>0<(c[19408>>2]|0)>>>0){ga()}k=f+12|0;if((c[k>>2]|0)==(g|0)){c[k>>2]=e;c[h>>2]=f;break}else{ga()}}else{c[4848]=p&~(1<<j)}}while(0);h=j<<3;f=h-a|0;c[g+4>>2]=a|3;e=g+a|0;c[g+(a|4)>>2]=f|1;c[g+h>>2]=f;h=c[19400>>2]|0;if((h|0)!=0){g=c[19412>>2]|0;k=h>>>3;j=k<<1;h=19432+(j<<2)|0;l=c[4848]|0;k=1<<k;if((l&k|0)!=0){j=19432+(j+2<<2)|0;k=c[j>>2]|0;if(k>>>0<(c[19408>>2]|0)>>>0){ga()}else{D=j;C=k}}else{c[4848]=l|k;D=19432+(j+2<<2)|0;C=h}c[D>>2]=g;c[C+12>>2]=g;c[g+8>>2]=C;c[g+12>>2]=h}c[19400>>2]=f;c[19412>>2]=e;H=d;i=b;return H|0}p=c[19396>>2]|0;if((p|0)!=0){e=(p&0-p)+ -1|0;G=e>>>12&16;e=e>>>G;F=e>>>5&8;e=e>>>F;H=e>>>2&4;e=e>>>H;f=e>>>1&2;e=e>>>f;d=e>>>1&1;d=c[19696+((F|G|H|f|d)+(e>>>d)<<2)>>2]|0;e=(c[d+4>>2]&-8)-a|0;f=d;while(1){g=c[f+16>>2]|0;if((g|0)==0){g=c[f+20>>2]|0;if((g|0)==0){break}}f=(c[g+4>>2]&-8)-a|0;H=f>>>0<e>>>0;e=H?f:e;f=g;d=H?g:d}h=c[19408>>2]|0;if(d>>>0<h>>>0){ga()}f=d+a|0;if(!(d>>>0<f>>>0)){ga()}g=c[d+24>>2]|0;k=c[d+12>>2]|0;do{if((k|0)==(d|0)){k=d+20|0;j=c[k>>2]|0;if((j|0)==0){k=d+16|0;j=c[k>>2]|0;if((j|0)==0){B=0;break}}while(1){l=j+20|0;m=c[l>>2]|0;if((m|0)!=0){j=m;k=l;continue}m=j+16|0;l=c[m>>2]|0;if((l|0)==0){break}else{j=l;k=m}}if(k>>>0<h>>>0){ga()}else{c[k>>2]=0;B=j;break}}else{j=c[d+8>>2]|0;if(j>>>0<h>>>0){ga()}h=j+12|0;if((c[h>>2]|0)!=(d|0)){ga()}l=k+8|0;if((c[l>>2]|0)==(d|0)){c[h>>2]=k;c[l>>2]=j;B=k;break}else{ga()}}}while(0);do{if((g|0)!=0){h=c[d+28>>2]|0;j=19696+(h<<2)|0;if((d|0)==(c[j>>2]|0)){c[j>>2]=B;if((B|0)==0){c[19396>>2]=c[19396>>2]&~(1<<h);break}}else{if(g>>>0<(c[19408>>2]|0)>>>0){ga()}h=g+16|0;if((c[h>>2]|0)==(d|0)){c[h>>2]=B}else{c[g+20>>2]=B}if((B|0)==0){break}}if(B>>>0<(c[19408>>2]|0)>>>0){ga()}c[B+24>>2]=g;g=c[d+16>>2]|0;do{if((g|0)!=0){if(g>>>0<(c[19408>>2]|0)>>>0){ga()}else{c[B+16>>2]=g;c[g+24>>2]=B;break}}}while(0);g=c[d+20>>2]|0;if((g|0)!=0){if(g>>>0<(c[19408>>2]|0)>>>0){ga()}else{c[B+20>>2]=g;c[g+24>>2]=B;break}}}}while(0);if(e>>>0<16){H=e+a|0;c[d+4>>2]=H|3;H=d+(H+4)|0;c[H>>2]=c[H>>2]|1}else{c[d+4>>2]=a|3;c[d+(a|4)>>2]=e|1;c[d+(e+a)>>2]=e;h=c[19400>>2]|0;if((h|0)!=0){g=c[19412>>2]|0;l=h>>>3;j=l<<1;h=19432+(j<<2)|0;k=c[4848]|0;l=1<<l;if((k&l|0)!=0){j=19432+(j+2<<2)|0;k=c[j>>2]|0;if(k>>>0<(c[19408>>2]|0)>>>0){ga()}else{A=j;z=k}}else{c[4848]=k|l;A=19432+(j+2<<2)|0;z=h}c[A>>2]=g;c[z+12>>2]=g;c[g+8>>2]=z;c[g+12>>2]=h}c[19400>>2]=e;c[19412>>2]=f}H=d+8|0;i=b;return H|0}}}else{if(!(a>>>0>4294967231)){z=a+11|0;a=z&-8;B=c[19396>>2]|0;if((B|0)!=0){A=0-a|0;z=z>>>8;if((z|0)!=0){if(a>>>0>16777215){C=31}else{G=(z+1048320|0)>>>16&8;H=z<<G;F=(H+520192|0)>>>16&4;H=H<<F;C=(H+245760|0)>>>16&2;C=14-(F|G|C)+(H<<C>>>15)|0;C=a>>>(C+7|0)&1|C<<1}}else{C=0}D=c[19696+(C<<2)>>2]|0;a:do{if((D|0)==0){F=0;z=0}else{if((C|0)==31){z=0}else{z=25-(C>>>1)|0}F=0;E=a<<z;z=0;while(1){H=c[D+4>>2]&-8;G=H-a|0;if(G>>>0<A>>>0){if((H|0)==(a|0)){A=G;F=D;z=D;break a}else{A=G;z=D}}H=c[D+20>>2]|0;D=c[D+(E>>>31<<2)+16>>2]|0;F=(H|0)==0|(H|0)==(D|0)?F:H;if((D|0)==0){break}else{E=E<<1}}}}while(0);if((F|0)==0&(z|0)==0){H=2<<C;B=B&(H|0-H);if((B|0)==0){break}H=(B&0-B)+ -1|0;D=H>>>12&16;H=H>>>D;C=H>>>5&8;H=H>>>C;E=H>>>2&4;H=H>>>E;G=H>>>1&2;H=H>>>G;F=H>>>1&1;F=c[19696+((C|D|E|G|F)+(H>>>F)<<2)>>2]|0}if((F|0)!=0){while(1){H=(c[F+4>>2]&-8)-a|0;B=H>>>0<A>>>0;A=B?H:A;z=B?F:z;B=c[F+16>>2]|0;if((B|0)!=0){F=B;continue}F=c[F+20>>2]|0;if((F|0)==0){break}}}if((z|0)!=0?A>>>0<((c[19400>>2]|0)-a|0)>>>0:0){f=c[19408>>2]|0;if(z>>>0<f>>>0){ga()}d=z+a|0;if(!(z>>>0<d>>>0)){ga()}e=c[z+24>>2]|0;h=c[z+12>>2]|0;do{if((h|0)==(z|0)){h=z+20|0;g=c[h>>2]|0;if((g|0)==0){h=z+16|0;g=c[h>>2]|0;if((g|0)==0){x=0;break}}while(1){j=g+20|0;k=c[j>>2]|0;if((k|0)!=0){g=k;h=j;continue}j=g+16|0;k=c[j>>2]|0;if((k|0)==0){break}else{g=k;h=j}}if(h>>>0<f>>>0){ga()}else{c[h>>2]=0;x=g;break}}else{g=c[z+8>>2]|0;if(g>>>0<f>>>0){ga()}f=g+12|0;if((c[f>>2]|0)!=(z|0)){ga()}j=h+8|0;if((c[j>>2]|0)==(z|0)){c[f>>2]=h;c[j>>2]=g;x=h;break}else{ga()}}}while(0);do{if((e|0)!=0){g=c[z+28>>2]|0;f=19696+(g<<2)|0;if((z|0)==(c[f>>2]|0)){c[f>>2]=x;if((x|0)==0){c[19396>>2]=c[19396>>2]&~(1<<g);break}}else{if(e>>>0<(c[19408>>2]|0)>>>0){ga()}f=e+16|0;if((c[f>>2]|0)==(z|0)){c[f>>2]=x}else{c[e+20>>2]=x}if((x|0)==0){break}}if(x>>>0<(c[19408>>2]|0)>>>0){ga()}c[x+24>>2]=e;e=c[z+16>>2]|0;do{if((e|0)!=0){if(e>>>0<(c[19408>>2]|0)>>>0){ga()}else{c[x+16>>2]=e;c[e+24>>2]=x;break}}}while(0);e=c[z+20>>2]|0;if((e|0)!=0){if(e>>>0<(c[19408>>2]|0)>>>0){ga()}else{c[x+20>>2]=e;c[e+24>>2]=x;break}}}}while(0);b:do{if(!(A>>>0<16)){c[z+4>>2]=a|3;c[z+(a|4)>>2]=A|1;c[z+(A+a)>>2]=A;f=A>>>3;if(A>>>0<256){h=f<<1;e=19432+(h<<2)|0;g=c[4848]|0;f=1<<f;do{if((g&f|0)==0){c[4848]=g|f;w=19432+(h+2<<2)|0;v=e}else{f=19432+(h+2<<2)|0;g=c[f>>2]|0;if(!(g>>>0<(c[19408>>2]|0)>>>0)){w=f;v=g;break}ga()}}while(0);c[w>>2]=d;c[v+12>>2]=d;c[z+(a+8)>>2]=v;c[z+(a+12)>>2]=e;break}e=A>>>8;if((e|0)!=0){if(A>>>0>16777215){e=31}else{G=(e+1048320|0)>>>16&8;H=e<<G;F=(H+520192|0)>>>16&4;H=H<<F;e=(H+245760|0)>>>16&2;e=14-(F|G|e)+(H<<e>>>15)|0;e=A>>>(e+7|0)&1|e<<1}}else{e=0}f=19696+(e<<2)|0;c[z+(a+28)>>2]=e;c[z+(a+20)>>2]=0;c[z+(a+16)>>2]=0;h=c[19396>>2]|0;g=1<<e;if((h&g|0)==0){c[19396>>2]=h|g;c[f>>2]=d;c[z+(a+24)>>2]=f;c[z+(a+12)>>2]=d;c[z+(a+8)>>2]=d;break}f=c[f>>2]|0;if((e|0)==31){e=0}else{e=25-(e>>>1)|0}c:do{if((c[f+4>>2]&-8|0)!=(A|0)){e=A<<e;while(1){g=f+(e>>>31<<2)+16|0;h=c[g>>2]|0;if((h|0)==0){break}if((c[h+4>>2]&-8|0)==(A|0)){p=h;break c}else{e=e<<1;f=h}}if(g>>>0<(c[19408>>2]|0)>>>0){ga()}else{c[g>>2]=d;c[z+(a+24)>>2]=f;c[z+(a+12)>>2]=d;c[z+(a+8)>>2]=d;break b}}else{p=f}}while(0);f=p+8|0;e=c[f>>2]|0;g=c[19408>>2]|0;if(p>>>0<g>>>0){ga()}if(e>>>0<g>>>0){ga()}else{c[e+12>>2]=d;c[f>>2]=d;c[z+(a+8)>>2]=e;c[z+(a+12)>>2]=p;c[z+(a+24)>>2]=0;break}}else{H=A+a|0;c[z+4>>2]=H|3;H=z+(H+4)|0;c[H>>2]=c[H>>2]|1}}while(0);H=z+8|0;i=b;return H|0}}}else{a=-1}}}while(0);p=c[19400>>2]|0;if(!(a>>>0>p>>>0)){e=p-a|0;d=c[19412>>2]|0;if(e>>>0>15){c[19412>>2]=d+a;c[19400>>2]=e;c[d+(a+4)>>2]=e|1;c[d+p>>2]=e;c[d+4>>2]=a|3}else{c[19400>>2]=0;c[19412>>2]=0;c[d+4>>2]=p|3;H=d+(p+4)|0;c[H>>2]=c[H>>2]|1}H=d+8|0;i=b;return H|0}p=c[19404>>2]|0;if(a>>>0<p>>>0){G=p-a|0;c[19404>>2]=G;H=c[19416>>2]|0;c[19416>>2]=H+a;c[H+(a+4)>>2]=G|1;c[H+4>>2]=a|3;H=H+8|0;i=b;return H|0}do{if((c[4966]|0)==0){p=oa(30)|0;if((p+ -1&p|0)==0){c[19872>>2]=p;c[19868>>2]=p;c[19876>>2]=-1;c[19880>>2]=-1;c[19884>>2]=0;c[19836>>2]=0;c[4966]=(ka(0)|0)&-16^1431655768;break}else{ga()}}}while(0);w=a+48|0;p=c[19872>>2]|0;x=a+47|0;z=p+x|0;p=0-p|0;v=z&p;if(!(v>>>0>a>>>0)){H=0;i=b;return H|0}A=c[19832>>2]|0;if((A|0)!=0?(G=c[19824>>2]|0,H=G+v|0,H>>>0<=G>>>0|H>>>0>A>>>0):0){H=0;i=b;return H|0}d:do{if((c[19836>>2]&4|0)==0){B=c[19416>>2]|0;e:do{if((B|0)!=0){A=19840|0;while(1){C=c[A>>2]|0;if(!(C>>>0>B>>>0)?(y=A+4|0,(C+(c[y>>2]|0)|0)>>>0>B>>>0):0){break}A=c[A+8>>2]|0;if((A|0)==0){o=182;break e}}if((A|0)!=0){B=z-(c[19404>>2]|0)&p;if(B>>>0<2147483647){p=ja(B|0)|0;A=(p|0)==((c[A>>2]|0)+(c[y>>2]|0)|0);y=p;z=B;p=A?p:-1;A=A?B:0;o=191}else{A=0}}else{o=182}}else{o=182}}while(0);do{if((o|0)==182){p=ja(0)|0;if((p|0)!=(-1|0)){z=p;A=c[19868>>2]|0;y=A+ -1|0;if((y&z|0)==0){A=v}else{A=v-z+(y+z&0-A)|0}y=c[19824>>2]|0;z=y+A|0;if(A>>>0>a>>>0&A>>>0<2147483647){H=c[19832>>2]|0;if((H|0)!=0?z>>>0<=y>>>0|z>>>0>H>>>0:0){A=0;break}y=ja(A|0)|0;o=(y|0)==(p|0);z=A;p=o?p:-1;A=o?A:0;o=191}else{A=0}}else{A=0}}}while(0);f:do{if((o|0)==191){o=0-z|0;if((p|0)!=(-1|0)){q=A;o=202;break d}do{if((y|0)!=(-1|0)&z>>>0<2147483647&z>>>0<w>>>0?(u=c[19872>>2]|0,u=x-z+u&0-u,u>>>0<2147483647):0){if((ja(u|0)|0)==(-1|0)){ja(o|0)|0;break f}else{z=u+z|0;break}}}while(0);if((y|0)!=(-1|0)){p=y;q=z;o=202;break d}}}while(0);c[19836>>2]=c[19836>>2]|4;o=199}else{A=0;o=199}}while(0);if((((o|0)==199?v>>>0<2147483647:0)?(t=ja(v|0)|0,s=ja(0)|0,(s|0)!=(-1|0)&(t|0)!=(-1|0)&t>>>0<s>>>0):0)?(r=s-t|0,q=r>>>0>(a+40|0)>>>0,q):0){p=t;q=q?r:A;o=202}if((o|0)==202){r=(c[19824>>2]|0)+q|0;c[19824>>2]=r;if(r>>>0>(c[19828>>2]|0)>>>0){c[19828>>2]=r}r=c[19416>>2]|0;g:do{if((r|0)!=0){v=19840|0;while(1){t=c[v>>2]|0;u=v+4|0;s=c[u>>2]|0;if((p|0)==(t+s|0)){o=214;break}w=c[v+8>>2]|0;if((w|0)==0){break}else{v=w}}if(((o|0)==214?(c[v+12>>2]&8|0)==0:0)?r>>>0>=t>>>0&r>>>0<p>>>0:0){c[u>>2]=s+q;d=(c[19404>>2]|0)+q|0;e=r+8|0;if((e&7|0)==0){e=0}else{e=0-e&7}H=d-e|0;c[19416>>2]=r+e;c[19404>>2]=H;c[r+(e+4)>>2]=H|1;c[r+(d+4)>>2]=40;c[19420>>2]=c[19880>>2];break}if(p>>>0<(c[19408>>2]|0)>>>0){c[19408>>2]=p}t=p+q|0;s=19840|0;while(1){if((c[s>>2]|0)==(t|0)){o=224;break}u=c[s+8>>2]|0;if((u|0)==0){break}else{s=u}}if((o|0)==224?(c[s+12>>2]&8|0)==0:0){c[s>>2]=p;h=s+4|0;c[h>>2]=(c[h>>2]|0)+q;h=p+8|0;if((h&7|0)==0){h=0}else{h=0-h&7}j=p+(q+8)|0;if((j&7|0)==0){n=0}else{n=0-j&7}o=p+(n+q)|0;j=h+a|0;k=p+j|0;m=o-(p+h)-a|0;c[p+(h+4)>>2]=a|3;h:do{if((o|0)!=(c[19416>>2]|0)){if((o|0)==(c[19412>>2]|0)){H=(c[19400>>2]|0)+m|0;c[19400>>2]=H;c[19412>>2]=k;c[p+(j+4)>>2]=H|1;c[p+(H+j)>>2]=H;break}r=q+4|0;t=c[p+(r+n)>>2]|0;if((t&3|0)==1){a=t&-8;s=t>>>3;i:do{if(!(t>>>0<256)){l=c[p+((n|24)+q)>>2]|0;u=c[p+(q+12+n)>>2]|0;do{if((u|0)==(o|0)){u=n|16;t=p+(r+u)|0;s=c[t>>2]|0;if((s|0)==0){t=p+(u+q)|0;s=c[t>>2]|0;if((s|0)==0){g=0;break}}while(1){u=s+20|0;v=c[u>>2]|0;if((v|0)!=0){s=v;t=u;continue}u=s+16|0;v=c[u>>2]|0;if((v|0)==0){break}else{s=v;t=u}}if(t>>>0<(c[19408>>2]|0)>>>0){ga()}else{c[t>>2]=0;g=s;break}}else{t=c[p+((n|8)+q)>>2]|0;if(t>>>0<(c[19408>>2]|0)>>>0){ga()}v=t+12|0;if((c[v>>2]|0)!=(o|0)){ga()}s=u+8|0;if((c[s>>2]|0)==(o|0)){c[v>>2]=u;c[s>>2]=t;g=u;break}else{ga()}}}while(0);if((l|0)==0){break}t=c[p+(q+28+n)>>2]|0;s=19696+(t<<2)|0;do{if((o|0)!=(c[s>>2]|0)){if(l>>>0<(c[19408>>2]|0)>>>0){ga()}s=l+16|0;if((c[s>>2]|0)==(o|0)){c[s>>2]=g}else{c[l+20>>2]=g}if((g|0)==0){break i}}else{c[s>>2]=g;if((g|0)!=0){break}c[19396>>2]=c[19396>>2]&~(1<<t);break i}}while(0);if(g>>>0<(c[19408>>2]|0)>>>0){ga()}c[g+24>>2]=l;l=n|16;o=c[p+(l+q)>>2]|0;do{if((o|0)!=0){if(o>>>0<(c[19408>>2]|0)>>>0){ga()}else{c[g+16>>2]=o;c[o+24>>2]=g;break}}}while(0);l=c[p+(r+l)>>2]|0;if((l|0)==0){break}if(l>>>0<(c[19408>>2]|0)>>>0){ga()}else{c[g+20>>2]=l;c[l+24>>2]=g;break}}else{r=c[p+((n|8)+q)>>2]|0;g=c[p+(q+12+n)>>2]|0;t=19432+(s<<1<<2)|0;do{if((r|0)!=(t|0)){if(r>>>0<(c[19408>>2]|0)>>>0){ga()}if((c[r+12>>2]|0)==(o|0)){break}ga()}}while(0);if((g|0)==(r|0)){c[4848]=c[4848]&~(1<<s);break}do{if((g|0)==(t|0)){l=g+8|0}else{if(g>>>0<(c[19408>>2]|0)>>>0){ga()}s=g+8|0;if((c[s>>2]|0)==(o|0)){l=s;break}ga()}}while(0);c[r+12>>2]=g;c[l>>2]=r}}while(0);o=p+((a|n)+q)|0;m=a+m|0}g=o+4|0;c[g>>2]=c[g>>2]&-2;c[p+(j+4)>>2]=m|1;c[p+(m+j)>>2]=m;g=m>>>3;if(m>>>0<256){m=g<<1;d=19432+(m<<2)|0;l=c[4848]|0;g=1<<g;do{if((l&g|0)==0){c[4848]=l|g;f=19432+(m+2<<2)|0;e=d}else{l=19432+(m+2<<2)|0;g=c[l>>2]|0;if(!(g>>>0<(c[19408>>2]|0)>>>0)){f=l;e=g;break}ga()}}while(0);c[f>>2]=k;c[e+12>>2]=k;c[p+(j+8)>>2]=e;c[p+(j+12)>>2]=d;break}e=m>>>8;do{if((e|0)==0){e=0}else{if(m>>>0>16777215){e=31;break}G=(e+1048320|0)>>>16&8;H=e<<G;F=(H+520192|0)>>>16&4;H=H<<F;e=(H+245760|0)>>>16&2;e=14-(F|G|e)+(H<<e>>>15)|0;e=m>>>(e+7|0)&1|e<<1}}while(0);l=19696+(e<<2)|0;c[p+(j+28)>>2]=e;c[p+(j+20)>>2]=0;c[p+(j+16)>>2]=0;f=c[19396>>2]|0;g=1<<e;if((f&g|0)==0){c[19396>>2]=f|g;c[l>>2]=k;c[p+(j+24)>>2]=l;c[p+(j+12)>>2]=k;c[p+(j+8)>>2]=k;break}l=c[l>>2]|0;if((e|0)==31){e=0}else{e=25-(e>>>1)|0}j:do{if((c[l+4>>2]&-8|0)!=(m|0)){e=m<<e;while(1){g=l+(e>>>31<<2)+16|0;f=c[g>>2]|0;if((f|0)==0){break}if((c[f+4>>2]&-8|0)==(m|0)){d=f;break j}else{e=e<<1;l=f}}if(g>>>0<(c[19408>>2]|0)>>>0){ga()}else{c[g>>2]=k;c[p+(j+24)>>2]=l;c[p+(j+12)>>2]=k;c[p+(j+8)>>2]=k;break h}}else{d=l}}while(0);f=d+8|0;e=c[f>>2]|0;g=c[19408>>2]|0;if(d>>>0<g>>>0){ga()}if(e>>>0<g>>>0){ga()}else{c[e+12>>2]=k;c[f>>2]=k;c[p+(j+8)>>2]=e;c[p+(j+12)>>2]=d;c[p+(j+24)>>2]=0;break}}else{H=(c[19404>>2]|0)+m|0;c[19404>>2]=H;c[19416>>2]=k;c[p+(j+4)>>2]=H|1}}while(0);H=p+(h|8)|0;i=b;return H|0}e=19840|0;while(1){d=c[e>>2]|0;if(!(d>>>0>r>>>0)?(n=c[e+4>>2]|0,m=d+n|0,m>>>0>r>>>0):0){break}e=c[e+8>>2]|0}e=d+(n+ -39)|0;if((e&7|0)==0){e=0}else{e=0-e&7}d=d+(n+ -47+e)|0;d=d>>>0<(r+16|0)>>>0?r:d;e=d+8|0;f=p+8|0;if((f&7|0)==0){f=0}else{f=0-f&7}H=q+ -40-f|0;c[19416>>2]=p+f;c[19404>>2]=H;c[p+(f+4)>>2]=H|1;c[p+(q+ -36)>>2]=40;c[19420>>2]=c[19880>>2];c[d+4>>2]=27;c[e+0>>2]=c[19840>>2];c[e+4>>2]=c[19844>>2];c[e+8>>2]=c[19848>>2];c[e+12>>2]=c[19852>>2];c[19840>>2]=p;c[19844>>2]=q;c[19852>>2]=0;c[19848>>2]=e;e=d+28|0;c[e>>2]=7;if((d+32|0)>>>0<m>>>0){do{H=e;e=e+4|0;c[e>>2]=7}while((H+8|0)>>>0<m>>>0)}if((d|0)!=(r|0)){d=d-r|0;e=r+(d+4)|0;c[e>>2]=c[e>>2]&-2;c[r+4>>2]=d|1;c[r+d>>2]=d;e=d>>>3;if(d>>>0<256){g=e<<1;d=19432+(g<<2)|0;f=c[4848]|0;e=1<<e;do{if((f&e|0)==0){c[4848]=f|e;k=19432+(g+2<<2)|0;j=d}else{f=19432+(g+2<<2)|0;e=c[f>>2]|0;if(!(e>>>0<(c[19408>>2]|0)>>>0)){k=f;j=e;break}ga()}}while(0);c[k>>2]=r;c[j+12>>2]=r;c[r+8>>2]=j;c[r+12>>2]=d;break}e=d>>>8;if((e|0)!=0){if(d>>>0>16777215){e=31}else{G=(e+1048320|0)>>>16&8;H=e<<G;F=(H+520192|0)>>>16&4;H=H<<F;e=(H+245760|0)>>>16&2;e=14-(F|G|e)+(H<<e>>>15)|0;e=d>>>(e+7|0)&1|e<<1}}else{e=0}j=19696+(e<<2)|0;c[r+28>>2]=e;c[r+20>>2]=0;c[r+16>>2]=0;f=c[19396>>2]|0;g=1<<e;if((f&g|0)==0){c[19396>>2]=f|g;c[j>>2]=r;c[r+24>>2]=j;c[r+12>>2]=r;c[r+8>>2]=r;break}f=c[j>>2]|0;if((e|0)==31){e=0}else{e=25-(e>>>1)|0}k:do{if((c[f+4>>2]&-8|0)!=(d|0)){e=d<<e;while(1){j=f+(e>>>31<<2)+16|0;g=c[j>>2]|0;if((g|0)==0){break}if((c[g+4>>2]&-8|0)==(d|0)){h=g;break k}else{e=e<<1;f=g}}if(j>>>0<(c[19408>>2]|0)>>>0){ga()}else{c[j>>2]=r;c[r+24>>2]=f;c[r+12>>2]=r;c[r+8>>2]=r;break g}}else{h=f}}while(0);f=h+8|0;e=c[f>>2]|0;d=c[19408>>2]|0;if(h>>>0<d>>>0){ga()}if(e>>>0<d>>>0){ga()}else{c[e+12>>2]=r;c[f>>2]=r;c[r+8>>2]=e;c[r+12>>2]=h;c[r+24>>2]=0;break}}}else{H=c[19408>>2]|0;if((H|0)==0|p>>>0<H>>>0){c[19408>>2]=p}c[19840>>2]=p;c[19844>>2]=q;c[19852>>2]=0;c[19428>>2]=c[4966];c[19424>>2]=-1;d=0;do{H=d<<1;G=19432+(H<<2)|0;c[19432+(H+3<<2)>>2]=G;c[19432+(H+2<<2)>>2]=G;d=d+1|0}while((d|0)!=32);d=p+8|0;if((d&7|0)==0){d=0}else{d=0-d&7}H=q+ -40-d|0;c[19416>>2]=p+d;c[19404>>2]=H;c[p+(d+4)>>2]=H|1;c[p+(q+ -36)>>2]=40;c[19420>>2]=c[19880>>2]}}while(0);d=c[19404>>2]|0;if(d>>>0>a>>>0){G=d-a|0;c[19404>>2]=G;H=c[19416>>2]|0;c[19416>>2]=H+a;c[H+(a+4)>>2]=G|1;c[H+4>>2]=a|3;H=H+8|0;i=b;return H|0}}c[(pa()|0)>>2]=12;H=0;i=b;return H|0}function Te(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0;b=i;if((a|0)==0){i=b;return}q=a+ -8|0;r=c[19408>>2]|0;if(q>>>0<r>>>0){ga()}o=c[a+ -4>>2]|0;n=o&3;if((n|0)==1){ga()}j=o&-8;h=a+(j+ -8)|0;do{if((o&1|0)==0){u=c[q>>2]|0;if((n|0)==0){i=b;return}q=-8-u|0;o=a+q|0;n=u+j|0;if(o>>>0<r>>>0){ga()}if((o|0)==(c[19412>>2]|0)){d=a+(j+ -4)|0;if((c[d>>2]&3|0)!=3){d=o;m=n;break}c[19400>>2]=n;c[d>>2]=c[d>>2]&-2;c[a+(q+4)>>2]=n|1;c[h>>2]=n;i=b;return}t=u>>>3;if(u>>>0<256){d=c[a+(q+8)>>2]|0;m=c[a+(q+12)>>2]|0;p=19432+(t<<1<<2)|0;if((d|0)!=(p|0)){if(d>>>0<r>>>0){ga()}if((c[d+12>>2]|0)!=(o|0)){ga()}}if((m|0)==(d|0)){c[4848]=c[4848]&~(1<<t);d=o;m=n;break}if((m|0)!=(p|0)){if(m>>>0<r>>>0){ga()}p=m+8|0;if((c[p>>2]|0)==(o|0)){s=p}else{ga()}}else{s=m+8|0}c[d+12>>2]=m;c[s>>2]=d;d=o;m=n;break}s=c[a+(q+24)>>2]|0;t=c[a+(q+12)>>2]|0;do{if((t|0)==(o|0)){u=a+(q+20)|0;t=c[u>>2]|0;if((t|0)==0){u=a+(q+16)|0;t=c[u>>2]|0;if((t|0)==0){p=0;break}}while(1){w=t+20|0;v=c[w>>2]|0;if((v|0)!=0){t=v;u=w;continue}v=t+16|0;w=c[v>>2]|0;if((w|0)==0){break}else{t=w;u=v}}if(u>>>0<r>>>0){ga()}else{c[u>>2]=0;p=t;break}}else{u=c[a+(q+8)>>2]|0;if(u>>>0<r>>>0){ga()}r=u+12|0;if((c[r>>2]|0)!=(o|0)){ga()}v=t+8|0;if((c[v>>2]|0)==(o|0)){c[r>>2]=t;c[v>>2]=u;p=t;break}else{ga()}}}while(0);if((s|0)!=0){t=c[a+(q+28)>>2]|0;r=19696+(t<<2)|0;if((o|0)==(c[r>>2]|0)){c[r>>2]=p;if((p|0)==0){c[19396>>2]=c[19396>>2]&~(1<<t);d=o;m=n;break}}else{if(s>>>0<(c[19408>>2]|0)>>>0){ga()}r=s+16|0;if((c[r>>2]|0)==(o|0)){c[r>>2]=p}else{c[s+20>>2]=p}if((p|0)==0){d=o;m=n;break}}if(p>>>0<(c[19408>>2]|0)>>>0){ga()}c[p+24>>2]=s;r=c[a+(q+16)>>2]|0;do{if((r|0)!=0){if(r>>>0<(c[19408>>2]|0)>>>0){ga()}else{c[p+16>>2]=r;c[r+24>>2]=p;break}}}while(0);q=c[a+(q+20)>>2]|0;if((q|0)!=0){if(q>>>0<(c[19408>>2]|0)>>>0){ga()}else{c[p+20>>2]=q;c[q+24>>2]=p;d=o;m=n;break}}else{d=o;m=n}}else{d=o;m=n}}else{d=q;m=j}}while(0);if(!(d>>>0<h>>>0)){ga()}n=a+(j+ -4)|0;o=c[n>>2]|0;if((o&1|0)==0){ga()}if((o&2|0)==0){if((h|0)==(c[19416>>2]|0)){w=(c[19404>>2]|0)+m|0;c[19404>>2]=w;c[19416>>2]=d;c[d+4>>2]=w|1;if((d|0)!=(c[19412>>2]|0)){i=b;return}c[19412>>2]=0;c[19400>>2]=0;i=b;return}if((h|0)==(c[19412>>2]|0)){w=(c[19400>>2]|0)+m|0;c[19400>>2]=w;c[19412>>2]=d;c[d+4>>2]=w|1;c[d+w>>2]=w;i=b;return}m=(o&-8)+m|0;n=o>>>3;do{if(!(o>>>0<256)){l=c[a+(j+16)>>2]|0;q=c[a+(j|4)>>2]|0;do{if((q|0)==(h|0)){o=a+(j+12)|0;n=c[o>>2]|0;if((n|0)==0){o=a+(j+8)|0;n=c[o>>2]|0;if((n|0)==0){k=0;break}}while(1){p=n+20|0;q=c[p>>2]|0;if((q|0)!=0){n=q;o=p;continue}p=n+16|0;q=c[p>>2]|0;if((q|0)==0){break}else{n=q;o=p}}if(o>>>0<(c[19408>>2]|0)>>>0){ga()}else{c[o>>2]=0;k=n;break}}else{o=c[a+j>>2]|0;if(o>>>0<(c[19408>>2]|0)>>>0){ga()}p=o+12|0;if((c[p>>2]|0)!=(h|0)){ga()}n=q+8|0;if((c[n>>2]|0)==(h|0)){c[p>>2]=q;c[n>>2]=o;k=q;break}else{ga()}}}while(0);if((l|0)!=0){n=c[a+(j+20)>>2]|0;o=19696+(n<<2)|0;if((h|0)==(c[o>>2]|0)){c[o>>2]=k;if((k|0)==0){c[19396>>2]=c[19396>>2]&~(1<<n);break}}else{if(l>>>0<(c[19408>>2]|0)>>>0){ga()}n=l+16|0;if((c[n>>2]|0)==(h|0)){c[n>>2]=k}else{c[l+20>>2]=k}if((k|0)==0){break}}if(k>>>0<(c[19408>>2]|0)>>>0){ga()}c[k+24>>2]=l;h=c[a+(j+8)>>2]|0;do{if((h|0)!=0){if(h>>>0<(c[19408>>2]|0)>>>0){ga()}else{c[k+16>>2]=h;c[h+24>>2]=k;break}}}while(0);h=c[a+(j+12)>>2]|0;if((h|0)!=0){if(h>>>0<(c[19408>>2]|0)>>>0){ga()}else{c[k+20>>2]=h;c[h+24>>2]=k;break}}}}else{k=c[a+j>>2]|0;a=c[a+(j|4)>>2]|0;j=19432+(n<<1<<2)|0;if((k|0)!=(j|0)){if(k>>>0<(c[19408>>2]|0)>>>0){ga()}if((c[k+12>>2]|0)!=(h|0)){ga()}}if((a|0)==(k|0)){c[4848]=c[4848]&~(1<<n);break}if((a|0)!=(j|0)){if(a>>>0<(c[19408>>2]|0)>>>0){ga()}j=a+8|0;if((c[j>>2]|0)==(h|0)){l=j}else{ga()}}else{l=a+8|0}c[k+12>>2]=a;c[l>>2]=k}}while(0);c[d+4>>2]=m|1;c[d+m>>2]=m;if((d|0)==(c[19412>>2]|0)){c[19400>>2]=m;i=b;return}}else{c[n>>2]=o&-2;c[d+4>>2]=m|1;c[d+m>>2]=m}h=m>>>3;if(m>>>0<256){a=h<<1;e=19432+(a<<2)|0;j=c[4848]|0;h=1<<h;if((j&h|0)!=0){h=19432+(a+2<<2)|0;a=c[h>>2]|0;if(a>>>0<(c[19408>>2]|0)>>>0){ga()}else{f=h;g=a}}else{c[4848]=j|h;f=19432+(a+2<<2)|0;g=e}c[f>>2]=d;c[g+12>>2]=d;c[d+8>>2]=g;c[d+12>>2]=e;i=b;return}f=m>>>8;if((f|0)!=0){if(m>>>0>16777215){f=31}else{v=(f+1048320|0)>>>16&8;w=f<<v;u=(w+520192|0)>>>16&4;w=w<<u;f=(w+245760|0)>>>16&2;f=14-(u|v|f)+(w<<f>>>15)|0;f=m>>>(f+7|0)&1|f<<1}}else{f=0}g=19696+(f<<2)|0;c[d+28>>2]=f;c[d+20>>2]=0;c[d+16>>2]=0;a=c[19396>>2]|0;h=1<<f;a:do{if((a&h|0)!=0){g=c[g>>2]|0;if((f|0)==31){f=0}else{f=25-(f>>>1)|0}b:do{if((c[g+4>>2]&-8|0)!=(m|0)){f=m<<f;a=g;while(1){h=a+(f>>>31<<2)+16|0;g=c[h>>2]|0;if((g|0)==0){break}if((c[g+4>>2]&-8|0)==(m|0)){e=g;break b}else{f=f<<1;a=g}}if(h>>>0<(c[19408>>2]|0)>>>0){ga()}else{c[h>>2]=d;c[d+24>>2]=a;c[d+12>>2]=d;c[d+8>>2]=d;break a}}else{e=g}}while(0);g=e+8|0;f=c[g>>2]|0;h=c[19408>>2]|0;if(e>>>0<h>>>0){ga()}if(f>>>0<h>>>0){ga()}else{c[f+12>>2]=d;c[g>>2]=d;c[d+8>>2]=f;c[d+12>>2]=e;c[d+24>>2]=0;break}}else{c[19396>>2]=a|h;c[g>>2]=d;c[d+24>>2]=g;c[d+12>>2]=d;c[d+8>>2]=d}}while(0);w=(c[19424>>2]|0)+ -1|0;c[19424>>2]=w;if((w|0)==0){d=19848|0}else{i=b;return}while(1){d=c[d>>2]|0;if((d|0)==0){break}else{d=d+8|0}}c[19424>>2]=-1;i=b;return}function Ue(){}function Ve(a,b,c){a=a|0;b=b|0;c=c|0;if((c|0)<32){D=b>>c;return a>>>c|(b&(1<<c)-1)<<32-c}D=(b|0)<0?-1:0;return b>>c-32|0}function We(b){b=b|0;var c=0;c=a[n+(b>>>24)>>0]|0;if((c|0)<8)return c|0;c=a[n+(b>>16&255)>>0]|0;if((c|0)<8)return c+8|0;c=a[n+(b>>8&255)>>0]|0;if((c|0)<8)return c+16|0;return(a[n+(b&255)>>0]|0)+24|0}function Xe(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0;f=b+e|0;if((e|0)>=20){d=d&255;i=b&3;h=d|d<<8|d<<16|d<<24;g=f&~3;if(i){i=b+4-i|0;while((b|0)<(i|0)){a[b>>0]=d;b=b+1|0}}while((b|0)<(g|0)){c[b>>2]=h;b=b+4|0}}while((b|0)<(f|0)){a[b>>0]=d;b=b+1|0}return b-e|0}function Ye(b){b=b|0;var c=0;c=b;while(a[c>>0]|0){c=c+1|0}return c-b|0}function Ze(b,d,e){b=b|0;d=d|0;e=e|0;var f=0;if((e|0)>=4096)return ma(b|0,d|0,e|0)|0;f=b|0;if((b&3)==(d&3)){while(b&3){if((e|0)==0)return f|0;a[b>>0]=a[d>>0]|0;b=b+1|0;d=d+1|0;e=e-1|0}while((e|0)>=4){c[b>>2]=c[d>>2];b=b+4|0;d=d+4|0;e=e-4|0}}while((e|0)>0){a[b>>0]=a[d>>0]|0;b=b+1|0;d=d+1|0;e=e-1|0}return f|0}function _e(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;c=a+c>>>0;return(D=b+d+(c>>>0<a>>>0|0)>>>0,c|0)|0}function $e(b,c,d){b=b|0;c=c|0;d=d|0;var e=0;if((c|0)<(b|0)&(b|0)<(c+d|0)){e=b;c=c+d|0;b=b+d|0;while((d|0)>0){b=b-1|0;c=c-1|0;d=d-1|0;a[b>>0]=a[c>>0]|0}b=e}else{Ze(b,c,d)|0}return b|0}function af(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;b=b-d-(c>>>0>a>>>0|0)>>>0;return(D=b,a-c>>>0|0)|0}function bf(a,b,c){a=a|0;b=b|0;c=c|0;if((c|0)<32){D=b<<c|(a&(1<<c)-1<<32-c)>>>32-c;return a<<c}D=a<<c-32;return 0}function cf(a,b,c){a=a|0;b=b|0;c=c|0;if((c|0)<32){D=b>>>c;return a>>>c|(b&(1<<c)-1)<<32-c}D=0;return b>>>c-32|0}function df(b){b=b|0;var c=0;c=a[m+(b&255)>>0]|0;if((c|0)<8)return c|0;c=a[m+(b>>8&255)>>0]|0;if((c|0)<8)return c+8|0;c=a[m+(b>>16&255)>>0]|0;if((c|0)<8)return c+16|0;return(a[m+(b>>>24)>>0]|0)+24|0}function ef(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0;f=a&65535;d=b&65535;c=$(d,f)|0;e=a>>>16;d=(c>>>16)+($(d,e)|0)|0;b=b>>>16;a=$(b,f)|0;return(D=(d>>>16)+($(b,e)|0)+(((d&65535)+a|0)>>>16)|0,d+a<<16|c&65535|0)|0}function ff(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0;j=b>>31|((b|0)<0?-1:0)<<1;i=((b|0)<0?-1:0)>>31|((b|0)<0?-1:0)<<1;f=d>>31|((d|0)<0?-1:0)<<1;e=((d|0)<0?-1:0)>>31|((d|0)<0?-1:0)<<1;h=af(j^a,i^b,j,i)|0;g=D;b=f^j;a=e^i;a=af((lf(h,g,af(f^c,e^d,f,e)|0,D,0)|0)^b,D^a,b,a)|0;return a|0}function gf(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0;f=i;i=i+8|0;j=f|0;h=b>>31|((b|0)<0?-1:0)<<1;g=((b|0)<0?-1:0)>>31|((b|0)<0?-1:0)<<1;l=e>>31|((e|0)<0?-1:0)<<1;k=((e|0)<0?-1:0)>>31|((e|0)<0?-1:0)<<1;b=af(h^a,g^b,h,g)|0;a=D;lf(b,a,af(l^d,k^e,l,k)|0,D,j)|0;a=af(c[j>>2]^h,c[j+4>>2]^g,h,g)|0;b=D;i=f;return(D=b,a)|0}function hf(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0;e=a;f=c;a=ef(e,f)|0;c=D;return(D=($(b,f)|0)+($(d,e)|0)+c|c&0,a|0|0)|0}function jf(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;a=lf(a,b,c,d,0)|0;return a|0}function kf(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0;g=i;i=i+8|0;f=g|0;lf(a,b,d,e,f)|0;i=g;return(D=c[f+4>>2]|0,c[f>>2]|0)|0}function lf(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;h=a;j=b;i=j;l=d;g=e;k=g;if((i|0)==0){g=(f|0)!=0;if((k|0)==0){if(g){c[f>>2]=(h>>>0)%(l>>>0);c[f+4>>2]=0}k=0;m=(h>>>0)/(l>>>0)>>>0;return(D=k,m)|0}else{if(!g){l=0;m=0;return(D=l,m)|0}c[f>>2]=a|0;c[f+4>>2]=b&0;l=0;m=0;return(D=l,m)|0}}m=(k|0)==0;do{if((l|0)!=0){if(!m){k=(We(k|0)|0)-(We(i|0)|0)|0;if(k>>>0<=31){m=k+1|0;l=31-k|0;a=k-31>>31;j=m;b=h>>>(m>>>0)&a|i<<l;a=i>>>(m>>>0)&a;k=0;l=h<<l;break}if((f|0)==0){l=0;m=0;return(D=l,m)|0}c[f>>2]=a|0;c[f+4>>2]=j|b&0;l=0;m=0;return(D=l,m)|0}k=l-1|0;if((k&l|0)!=0){l=(We(l|0)|0)+33-(We(i|0)|0)|0;p=64-l|0;m=32-l|0;n=m>>31;o=l-32|0;a=o>>31;j=l;b=m-1>>31&i>>>(o>>>0)|(i<<m|h>>>(l>>>0))&a;a=a&i>>>(l>>>0);k=h<<p&n;l=(i<<p|h>>>(o>>>0))&n|h<<m&l-33>>31;break}if((f|0)!=0){c[f>>2]=k&h;c[f+4>>2]=0}if((l|0)==1){o=j|b&0;p=a|0|0;return(D=o,p)|0}else{p=df(l|0)|0;o=i>>>(p>>>0)|0;p=i<<32-p|h>>>(p>>>0)|0;return(D=o,p)|0}}else{if(m){if((f|0)!=0){c[f>>2]=(i>>>0)%(l>>>0);c[f+4>>2]=0}o=0;p=(i>>>0)/(l>>>0)>>>0;return(D=o,p)|0}if((h|0)==0){if((f|0)!=0){c[f>>2]=0;c[f+4>>2]=(i>>>0)%(k>>>0)}o=0;p=(i>>>0)/(k>>>0)>>>0;return(D=o,p)|0}l=k-1|0;if((l&k|0)==0){if((f|0)!=0){c[f>>2]=a|0;c[f+4>>2]=l&i|b&0}o=0;p=i>>>((df(k|0)|0)>>>0);return(D=o,p)|0}k=(We(k|0)|0)-(We(i|0)|0)|0;if(k>>>0<=30){a=k+1|0;l=31-k|0;j=a;b=i<<l|h>>>(a>>>0);a=i>>>(a>>>0);k=0;l=h<<l;break}if((f|0)==0){o=0;p=0;return(D=o,p)|0}c[f>>2]=a|0;c[f+4>>2]=j|b&0;o=0;p=0;return(D=o,p)|0}}while(0);if((j|0)==0){g=l;e=0;i=0}else{h=d|0|0;g=g|e&0;e=_e(h,g,-1,-1)|0;d=D;i=0;do{m=l;l=k>>>31|l<<1;k=i|k<<1;m=b<<1|m>>>31|0;n=b>>>31|a<<1|0;af(e,d,m,n)|0;p=D;o=p>>31|((p|0)<0?-1:0)<<1;i=o&1;b=af(m,n,o&h,(((p|0)<0?-1:0)>>31|((p|0)<0?-1:0)<<1)&g)|0;a=D;j=j-1|0}while((j|0)!=0);g=l;e=0}h=0;if((f|0)!=0){c[f>>2]=b;c[f+4>>2]=a}o=(k|0)>>>31|(g|h)<<1|(h<<1|k>>>31)&0|e;p=(k<<1|0>>>31)&-2|i;return(D=o,p)|0}



function ec(a,d,e,f,g,h){a=a|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0;u=i;i=i+176|0;n=u+4|0;x=u+144|0;B=u+124|0;p=u+120|0;v=u+132|0;m=u+140|0;o=u+148|0;q=u+156|0;r=u+8|0;s=u+160|0;t=u+128|0;l=u+12|0;j=u;w=u+16|0;y=u+136|0;z=u+164|0;A=u+168|0;k=u+152|0;c[n>>2]=a;c[x>>2]=d;c[B>>2]=e;c[p>>2]=f;c[v>>2]=g;c[m>>2]=h;c[k>>2]=c[n>>2];b[z>>1]=10126;b[z+2>>1]=-31164;b[A>>1]=-26510;b[A+2>>1]=-19261;c[y>>2]=c[(c[B>>2]|0)+52>>2];c[l>>2]=0;while(1){if((c[l>>2]|0)>=(c[v>>2]|0)){break}c[n>>2]=(c[k>>2]|0)+(($(c[l>>2]|0,c[m>>2]|0)|0)<<3);c[o>>2]=c[n>>2];c[q>>2]=(c[o>>2]|0)+(c[p>>2]<<3);c[r>>2]=(c[o>>2]|0)+(c[p>>2]<<1<<3);c[s>>2]=(c[o>>2]|0)+((c[p>>2]|0)*3<<3);c[t>>2]=(c[o>>2]|0)+(c[p>>2]<<2<<3);c[j>>2]=0;while(1){if((c[j>>2]|0)>=(c[p>>2]|0)){break}d=c[o>>2]|0;c[w+0>>2]=c[d+0>>2];c[w+4>>2]=c[d+4>>2];d=$(c[j>>2]|0,c[x>>2]|0)|0;d=($(b[(c[y>>2]|0)+(d<<2)>>1]|0,(c[c[q>>2]>>2]>>16&65535)<<16>>16)|0)<<1;B=$(c[j>>2]|0,c[x>>2]|0)|0;B=d+(($(b[(c[y>>2]|0)+(B<<2)>>1]|0,c[c[q>>2]>>2]&65535&65535)|0)>>15)|0;d=$(c[j>>2]|0,c[x>>2]|0)|0;d=($(b[(c[y>>2]|0)+(d<<2)+2>>1]|0,(c[(c[q>>2]|0)+4>>2]>>16&65535)<<16>>16)|0)<<1;a=$(c[j>>2]|0,c[x>>2]|0)|0;c[w+8>>2]=B-(d+(($(b[(c[y>>2]|0)+(a<<2)+2>>1]|0,c[(c[q>>2]|0)+4>>2]&65535&65535)|0)>>15));a=$(c[j>>2]|0,c[x>>2]|0)|0;a=($(b[(c[y>>2]|0)+(a<<2)+2>>1]|0,(c[c[q>>2]>>2]>>16&65535)<<16>>16)|0)<<1;d=$(c[j>>2]|0,c[x>>2]|0)|0;d=a+(($(b[(c[y>>2]|0)+(d<<2)+2>>1]|0,c[c[q>>2]>>2]&65535&65535)|0)>>15)|0;a=$(c[j>>2]|0,c[x>>2]|0)|0;a=($(b[(c[y>>2]|0)+(a<<2)>>1]|0,(c[(c[q>>2]|0)+4>>2]>>16&65535)<<16>>16)|0)<<1;B=$(c[j>>2]|0,c[x>>2]|0)|0;c[w+12>>2]=d+(a+(($(b[(c[y>>2]|0)+(B<<2)>>1]|0,c[(c[q>>2]|0)+4>>2]&65535&65535)|0)>>15));B=$(c[j>>2]<<1,c[x>>2]|0)|0;B=($(b[(c[y>>2]|0)+(B<<2)>>1]|0,(c[c[r>>2]>>2]>>16&65535)<<16>>16)|0)<<1;a=$(c[j>>2]<<1,c[x>>2]|0)|0;a=B+(($(b[(c[y>>2]|0)+(a<<2)>>1]|0,c[c[r>>2]>>2]&65535&65535)|0)>>15)|0;B=$(c[j>>2]<<1,c[x>>2]|0)|0;B=($(b[(c[y>>2]|0)+(B<<2)+2>>1]|0,(c[(c[r>>2]|0)+4>>2]>>16&65535)<<16>>16)|0)<<1;d=$(c[j>>2]<<1,c[x>>2]|0)|0;c[w+16>>2]=a-(B+(($(b[(c[y>>2]|0)+(d<<2)+2>>1]|0,c[(c[r>>2]|0)+4>>2]&65535&65535)|0)>>15));d=$(c[j>>2]<<1,c[x>>2]|0)|0;d=($(b[(c[y>>2]|0)+(d<<2)+2>>1]|0,(c[c[r>>2]>>2]>>16&65535)<<16>>16)|0)<<1;B=$(c[j>>2]<<1,c[x>>2]|0)|0;B=d+(($(b[(c[y>>2]|0)+(B<<2)+2>>1]|0,c[c[r>>2]>>2]&65535&65535)|0)>>15)|0;d=$(c[j>>2]<<1,c[x>>2]|0)|0;d=($(b[(c[y>>2]|0)+(d<<2)>>1]|0,(c[(c[r>>2]|0)+4>>2]>>16&65535)<<16>>16)|0)<<1;a=$(c[j>>2]<<1,c[x>>2]|0)|0;c[w+20>>2]=B+(d+(($(b[(c[y>>2]|0)+(a<<2)>>1]|0,c[(c[r>>2]|0)+4>>2]&65535&65535)|0)>>15));a=$((c[j>>2]|0)*3|0,c[x>>2]|0)|0;a=($(b[(c[y>>2]|0)+(a<<2)>>1]|0,(c[c[s>>2]>>2]>>16&65535)<<16>>16)|0)<<1;d=$((c[j>>2]|0)*3|0,c[x>>2]|0)|0;d=a+(($(b[(c[y>>2]|0)+(d<<2)>>1]|0,c[c[s>>2]>>2]&65535&65535)|0)>>15)|0;a=$((c[j>>2]|0)*3|0,c[x>>2]|0)|0;a=($(b[(c[y>>2]|0)+(a<<2)+2>>1]|0,(c[(c[s>>2]|0)+4>>2]>>16&65535)<<16>>16)|0)<<1;B=$((c[j>>2]|0)*3|0,c[x>>2]|0)|0;c[w+24>>2]=d-(a+(($(b[(c[y>>2]|0)+(B<<2)+2>>1]|0,c[(c[s>>2]|0)+4>>2]&65535&65535)|0)>>15));B=$((c[j>>2]|0)*3|0,c[x>>2]|0)|0;B=($(b[(c[y>>2]|0)+(B<<2)+2>>1]|0,(c[c[s>>2]>>2]>>16&65535)<<16>>16)|0)<<1;a=$((c[j>>2]|0)*3|0,c[x>>2]|0)|0;a=B+(($(b[(c[y>>2]|0)+(a<<2)+2>>1]|0,c[c[s>>2]>>2]&65535&65535)|0)>>15)|0;B=$((c[j>>2]|0)*3|0,c[x>>2]|0)|0;B=($(b[(c[y>>2]|0)+(B<<2)>>1]|0,(c[(c[s>>2]|0)+4>>2]>>16&65535)<<16>>16)|0)<<1;d=$((c[j>>2]|0)*3|0,c[x>>2]|0)|0;c[w+28>>2]=a+(B+(($(b[(c[y>>2]|0)+(d<<2)>>1]|0,c[(c[s>>2]|0)+4>>2]&65535&65535)|0)>>15));d=$(c[j>>2]<<2,c[x>>2]|0)|0;d=($(b[(c[y>>2]|0)+(d<<2)>>1]|0,(c[c[t>>2]>>2]>>16&65535)<<16>>16)|0)<<1;B=$(c[j>>2]<<2,c[x>>2]|0)|0;B=d+(($(b[(c[y>>2]|0)+(B<<2)>>1]|0,c[c[t>>2]>>2]&65535&65535)|0)>>15)|0;d=$(c[j>>2]<<2,c[x>>2]|0)|0;d=($(b[(c[y>>2]|0)+(d<<2)+2>>1]|0,(c[(c[t>>2]|0)+4>>2]>>16&65535)<<16>>16)|0)<<1;a=$(c[j>>2]<<2,c[x>>2]|0)|0;c[w+32>>2]=B-(d+(($(b[(c[y>>2]|0)+(a<<2)+2>>1]|0,c[(c[t>>2]|0)+4>>2]&65535&65535)|0)>>15));a=$(c[j>>2]<<2,c[x>>2]|0)|0;a=($(b[(c[y>>2]|0)+(a<<2)+2>>1]|0,(c[c[t>>2]>>2]>>16&65535)<<16>>16)|0)<<1;d=$(c[j>>2]<<2,c[x>>2]|0)|0;d=a+(($(b[(c[y>>2]|0)+(d<<2)+2>>1]|0,c[c[t>>2]>>2]&65535&65535)|0)>>15)|0;a=$(c[j>>2]<<2,c[x>>2]|0)|0;a=($(b[(c[y>>2]|0)+(a<<2)>>1]|0,(c[(c[t>>2]|0)+4>>2]>>16&65535)<<16>>16)|0)<<1;B=$(c[j>>2]<<2,c[x>>2]|0)|0;c[w+36>>2]=d+(a+(($(b[(c[y>>2]|0)+(B<<2)>>1]|0,c[(c[t>>2]|0)+4>>2]&65535&65535)|0)>>15));c[w+56>>2]=(c[w+8>>2]|0)+(c[w+32>>2]|0);c[w+60>>2]=(c[w+12>>2]|0)+(c[w+36>>2]|0);c[w+80>>2]=(c[w+8>>2]|0)-(c[w+32>>2]|0);c[w+84>>2]=(c[w+12>>2]|0)-(c[w+36>>2]|0);c[w+64>>2]=(c[w+16>>2]|0)+(c[w+24>>2]|0);c[w+68>>2]=(c[w+20>>2]|0)+(c[w+28>>2]|0);c[w+72>>2]=(c[w+16>>2]|0)-(c[w+24>>2]|0);c[w+76>>2]=(c[w+20>>2]|0)-(c[w+28>>2]|0);B=c[o>>2]|0;c[B>>2]=(c[B>>2]|0)+((c[w+56>>2]|0)+(c[w+64>>2]|0));B=(c[o>>2]|0)+4|0;c[B>>2]=(c[B>>2]|0)+((c[w+60>>2]|0)+(c[w+68>>2]|0));B=($(b[z>>1]|0,(c[w+56>>2]>>16&65535)<<16>>16)|0)<<1;B=(c[w>>2]|0)+(B+(($(b[z>>1]|0,c[w+56>>2]&65535&65535)|0)>>15))|0;a=($(b[A>>1]|0,(c[w+64>>2]>>16&65535)<<16>>16)|0)<<1;c[w+40>>2]=B+(a+(($(b[A>>1]|0,c[w+64>>2]&65535&65535)|0)>>15));a=($(b[z>>1]|0,(c[w+60>>2]>>16&65535)<<16>>16)|0)<<1;a=(c[w+4>>2]|0)+(a+(($(b[z>>1]|0,c[w+60>>2]&65535&65535)|0)>>15))|0;B=($(b[A>>1]|0,(c[w+68>>2]>>16&65535)<<16>>16)|0)<<1;c[w+44>>2]=a+(B+(($(b[A>>1]|0,c[w+68>>2]&65535&65535)|0)>>15));B=($(b[z+2>>1]|0,(c[w+84>>2]>>16&65535)<<16>>16)|0)<<1;B=B+(($(b[z+2>>1]|0,c[w+84>>2]&65535&65535)|0)>>15)|0;a=($(b[A+2>>1]|0,(c[w+76>>2]>>16&65535)<<16>>16)|0)<<1;c[w+48>>2]=B+(a+(($(b[A+2>>1]|0,c[w+76>>2]&65535&65535)|0)>>15));a=($(b[z+2>>1]|0,(c[w+80>>2]>>16&65535)<<16>>16)|0)<<1;a=0-(a+(($(b[z+2>>1]|0,c[w+80>>2]&65535&65535)|0)>>15))|0;B=($(b[A+2>>1]|0,(c[w+72>>2]>>16&65535)<<16>>16)|0)<<1;c[w+52>>2]=a-(B+(($(b[A+2>>1]|0,c[w+72>>2]&65535&65535)|0)>>15));c[c[q>>2]>>2]=(c[w+40>>2]|0)-(c[w+48>>2]|0);c[(c[q>>2]|0)+4>>2]=(c[w+44>>2]|0)-(c[w+52>>2]|0);c[c[t>>2]>>2]=(c[w+40>>2]|0)+(c[w+48>>2]|0);c[(c[t>>2]|0)+4>>2]=(c[w+44>>2]|0)+(c[w+52>>2]|0);B=($(b[A>>1]|0,(c[w+56>>2]>>16&65535)<<16>>16)|0)<<1;B=(c[w>>2]|0)+(B+(($(b[A>>1]|0,c[w+56>>2]&65535&65535)|0)>>15))|0;a=($(b[z>>1]|0,(c[w+64>>2]>>16&65535)<<16>>16)|0)<<1;c[w+88>>2]=B+(a+(($(b[z>>1]|0,c[w+64>>2]&65535&65535)|0)>>15));a=($(b[A>>1]|0,(c[w+60>>2]>>16&65535)<<16>>16)|0)<<1;a=(c[w+4>>2]|0)+(a+(($(b[A>>1]|0,c[w+60>>2]&65535&65535)|0)>>15))|0;B=($(b[z>>1]|0,(c[w+68>>2]>>16&65535)<<16>>16)|0)<<1;c[w+92>>2]=a+(B+(($(b[z>>1]|0,c[w+68>>2]&65535&65535)|0)>>15));B=($(b[A+2>>1]|0,(c[w+84>>2]>>16&65535)<<16>>16)|0)<<1;B=0-(B+(($(b[A+2>>1]|0,c[w+84>>2]&65535&65535)|0)>>15))|0;a=($(b[z+2>>1]|0,(c[w+76>>2]>>16&65535)<<16>>16)|0)<<1;c[w+96>>2]=B+(a+(($(b[z+2>>1]|0,c[w+76>>2]&65535&65535)|0)>>15));a=($(b[A+2>>1]|0,(c[w+80>>2]>>16&65535)<<16>>16)|0)<<1;a=a+(($(b[A+2>>1]|0,c[w+80>>2]&65535&65535)|0)>>15)|0;B=($(b[z+2>>1]|0,(c[w+72>>2]>>16&65535)<<16>>16)|0)<<1;c[w+100>>2]=a-(B+(($(b[z+2>>1]|0,c[w+72>>2]&65535&65535)|0)>>15));c[c[r>>2]>>2]=(c[w+88>>2]|0)+(c[w+96>>2]|0);c[(c[r>>2]|0)+4>>2]=(c[w+92>>2]|0)+(c[w+100>>2]|0);c[c[s>>2]>>2]=(c[w+88>>2]|0)-(c[w+96>>2]|0);c[(c[s>>2]|0)+4>>2]=(c[w+92>>2]|0)-(c[w+100>>2]|0);c[o>>2]=(c[o>>2]|0)+8;c[q>>2]=(c[q>>2]|0)+8;c[r>>2]=(c[r>>2]|0)+8;c[s>>2]=(c[s>>2]|0)+8;c[t>>2]=(c[t>>2]|0)+8;c[j>>2]=(c[j>>2]|0)+1}c[l>>2]=(c[l>>2]|0)+1}i=u;return}function fc(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0;d=i;i=i+16|0;g=d+8|0;e=d+4|0;f=d;c[g>>2]=a;c[e>>2]=b;c[f>>2]=32736-(c[g>>2]|0);a=($(c[f>>2]|0,16384-(c[e>>2]|0)|0)|0)>>>15;i=d;return a|0}function gc(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0;e=i;i=i+32|0;k=e+8|0;g=e+16|0;m=e+20|0;h=e+24|0;f=e+4|0;l=e;j=e+12|0;c[k>>2]=a;c[g>>2]=b;c[m>>2]=d;c[h>>2]=0;c[l>>2]=Mb(c[k>>2]|0,15)|0;c[f>>2]=0;do{if((c[l>>2]|0)>>>0>=(c[g>>2]|0)>>>0){c[h>>2]=(c[h>>2]|0)+1;c[f>>2]=c[g>>2];c[g>>2]=(fc(c[g>>2]|0,c[m>>2]|0)|0)+1;while(1){if((c[g>>2]|0)>>>0>1){b=(c[l>>2]|0)>>>0>=((c[f>>2]|0)+(c[g>>2]<<1)|0)>>>0}else{b=0}d=c[g>>2]|0;if(!b){break}c[g>>2]=d<<1;c[f>>2]=(c[f>>2]|0)+(c[g>>2]|0);c[g>>2]=($((c[g>>2]|0)-2|0,c[m>>2]|0)|0)>>>15;c[g>>2]=(c[g>>2]|0)+1;c[h>>2]=(c[h>>2]|0)+1}if(d>>>0<=1){c[j>>2]=((c[l>>2]|0)-(c[f>>2]|0)|0)>>>1;c[h>>2]=(c[h>>2]|0)+(c[j>>2]|0);c[f>>2]=(c[f>>2]|0)+(c[j>>2]<<1)}if((c[l>>2]|0)>>>0<((c[f>>2]|0)+(c[g>>2]|0)|0)>>>0){c[h>>2]=0-(c[h>>2]|0);break}else{c[f>>2]=(c[f>>2]|0)+(c[g>>2]|0);break}}}while(0);k=c[k>>2]|0;j=c[f>>2]|0;if(!(((c[f>>2]|0)+(c[g>>2]|0)|0)>>>0<32768)){a=32768;Nb(k,j,a,32768);a=c[h>>2]|0;i=e;return a|0}a=(c[f>>2]|0)+(c[g>>2]|0)|0;Nb(k,j,a,32768);a=c[h>>2]|0;i=e;return a|0}function hc(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0;b=i;i=i+32|0;g=b+16|0;e=b+12|0;d=b+8|0;f=b+4|0;h=b;c[g>>2]=a;c[d>>2]=0;c[f>>2]=32-(We(c[g>>2]|0)|0)-1>>1;c[e>>2]=1<<c[f>>2];do{c[h>>2]=(c[d>>2]<<1)+(c[e>>2]|0)<<c[f>>2];if((c[h>>2]|0)>>>0<=(c[g>>2]|0)>>>0){c[d>>2]=(c[d>>2]|0)+(c[e>>2]|0);c[g>>2]=(c[g>>2]|0)-(c[h>>2]|0)}c[e>>2]=(c[e>>2]|0)>>>1;c[f>>2]=(c[f>>2]|0)+ -1}while((c[f>>2]|0)>=0);i=b;return c[d>>2]|0}function ic(a,d){a=a|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0;e=i;i=i+32|0;l=e+8|0;h=e+16|0;f=e+20|0;g=e+24|0;j=e+4|0;k=e;m=e+12|0;c[h>>2]=a;c[f>>2]=d;c[m>>2]=((jc(c[f>>2]|0)|0)<<16>>16)-29;a=c[h>>2]|0;d=c[m>>2]|0;if((c[m>>2]|0)>0){d=a>>d}else{d=a<<0-d}c[h>>2]=d;d=c[f>>2]|0;a=c[m>>2]|0;if((c[m>>2]|0)>0){m=d>>a}else{m=d<<0-a}c[f>>2]=m;b[g>>1]=(kc(((c[f>>2]|0)+32768>>16&65535)<<16>>16)|0)+4>>3;a=($(b[g>>1]|0,(c[h>>2]>>16&65535)<<16>>16)|0)<<1;c[j>>2]=a+(($(b[g>>1]|0,c[h>>2]&65535&65535)|0)>>15);a=($((c[j>>2]>>16&65535)<<16>>16,(c[f>>2]>>16&65535)<<16>>16)|0)<<1;a=a+(($((c[j>>2]>>16&65535)<<16>>16,c[f>>2]&65535&65535)|0)>>15)|0;c[k>>2]=((c[h>>2]|0)+2>>2)-(a+(($((c[f>>2]>>16&65535)<<16>>16,c[j>>2]&65535&65535)|0)>>15));a=($(b[g>>1]|0,(c[k>>2]>>16&65535)<<16>>16)|0)<<1;c[j>>2]=(c[j>>2]|0)+(a+(($(b[g>>1]|0,c[k>>2]&65535&65535)|0)>>15)<<2);if((c[j>>2]|0)>=536870912){c[l>>2]=2147483647;a=c[l>>2]|0;i=e;return a|0}if((c[j>>2]|0)<=-536870912){c[l>>2]=-2147483647;a=c[l>>2]|0;i=e;return a|0}else{c[l>>2]=c[j>>2]<<2;a=c[l>>2]|0;i=e;return a|0}return 0}function jc(a){a=a|0;var b=0,d=0;b=i;i=i+16|0;d=b;c[d>>2]=a;a=32-(We(c[d>>2]|0)|0)-1&65535;i=b;return a|0}function kc(a){a=a|0;var d=0,e=0,f=0,g=0,h=0;d=i;i=i+16|0;h=d+4|0;e=d;f=d+10|0;g=d+8|0;c[h>>2]=a;c[e>>2]=(jc(c[h>>2]|0)|0)<<16>>16;h=c[h>>2]|0;a=(c[e>>2]|0)-15|0;if(((c[e>>2]|0)-15|0)>0){a=h>>a}else{a=h<<0-a}b[f>>1]=a-32768;b[g>>1]=30840+((($(-15420,b[f>>1]|0)|0)>>15&65535)<<16>>16);h=(($(b[g>>1]|0,b[f>>1]|0)|0)>>15&65535)<<16>>16;b[g>>1]=(b[g>>1]|0)-((($(b[g>>1]|0,(h+(((b[g>>1]|0)+ -32768&65535)<<16>>16)&65535)<<16>>16)|0)>>15&65535)<<16>>16);f=(($(b[g>>1]|0,b[f>>1]|0)|0)>>15&65535)<<16>>16;b[g>>1]=(b[g>>1]|0)-((1+((($(b[g>>1]|0,(f+(((b[g>>1]|0)+ -32768&65535)<<16>>16)&65535)<<16>>16)|0)>>15&65535)<<16>>16)&65535)<<16>>16);g=b[g>>1]|0;f=(c[e>>2]|0)-16|0;if(((c[e>>2]|0)-16|0)>0){h=g>>f;i=d;return h|0}else{h=g<<0-f;i=d;return h|0}return 0}function lc(a){a=a|0;var d=0,e=0,f=0,g=0,h=0,j=0;d=i;i=i+16|0;j=d;h=d+10|0;f=d+8|0;g=d+6|0;e=d+4|0;c[j>>2]=a;b[h>>1]=(c[j>>2]|0)-32768;b[f>>1]=23557+((($(b[h>>1]|0,((((b[h>>1]|0)*6713>>15&65535)<<16>>16)+ -13490&65535)<<16>>16)|0)>>15&65535)<<16>>16);b[g>>1]=($(b[f>>1]|0,b[f>>1]|0)|0)>>15;a=(($(b[g>>1]|0,b[h>>1]|0)|0)>>15&65535)<<16>>16;b[e>>1]=(((a+(b[g>>1]|0)&65535)<<16>>16)-16384&65535)<<1;a=(b[f>>1]|0)+((($(b[f>>1]|0,(($(b[e>>1]|0,((((b[e>>1]|0)*12288>>15&65535)<<16>>16)-16384&65535)<<16>>16)|0)>>15&65535)<<16>>16)|0)>>15&65535)<<16>>16)&65535;i=d;return a|0}function mc(a){a=a|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0;f=i;i=i+32|0;d=f+12|0;h=f+8|0;g=f+4|0;j=f+16|0;e=f;c[h>>2]=a;if((c[h>>2]|0)==0){c[d>>2]=0;k=c[d>>2]|0;i=f;return k|0}if((c[h>>2]|0)>=1073741824){c[d>>2]=32767;k=c[d>>2]|0;i=f;return k|0}c[g>>2]=((jc(c[h>>2]|0)|0)<<16>>16>>1)-7;k=c[h>>2]|0;a=c[g>>2]<<1;if((c[g>>2]<<1|0)>0){a=k>>a}else{a=k<<0-a}c[h>>2]=a;b[j>>1]=(c[h>>2]|0)-32768;c[e>>2]=((b[2724]|0)+((($(b[j>>1]|0,((b[5450>>1]|0)+((($(b[j>>1]|0,((b[5452>>1]|0)+((($(b[j>>1]|0,((b[5454>>1]|0)+((($(b[j>>1]|0,b[5456>>1]|0)|0)>>15&65535)<<16>>16)&65535)<<16>>16)|0)>>15&65535)<<16>>16)&65535)<<16>>16)|0)>>15&65535)<<16>>16)&65535)<<16>>16)|0)>>15&65535)<<16>>16)&65535)<<16>>16;j=c[e>>2]|0;h=7-(c[g>>2]|0)|0;if((7-(c[g>>2]|0)|0)>0){g=j>>h}else{g=j<<0-h}c[e>>2]=g;c[d>>2]=c[e>>2];k=c[d>>2]|0;i=f;return k|0}function nc(a){a=a|0;var d=0,e=0,f=0;d=i;i=i+16|0;e=d+4|0;f=d;c[f>>2]=a;c[f>>2]=c[f>>2]&131071;if((c[f>>2]|0)>65536){c[f>>2]=131072-(c[f>>2]|0)}a=c[f>>2]|0;do{if((c[f>>2]&32767|0)!=0){f=c[f>>2]|0;if((a|0)<32768){b[e>>1]=oc(f&65535)|0;break}else{b[e>>1]=0-((oc(65536-f&65535)|0)<<16>>16);break}}else{if((a&65535|0)!=0){b[e>>1]=0;break}if((c[f>>2]&131071|0)!=0){b[e>>1]=-32767;break}else{b[e>>1]=32767;break}}}while(0);i=d;return b[e>>1]|0}function oc(a){a=a|0;var c=0,d=0,e=0;c=i;i=i+16|0;e=c+2|0;d=c;b[e>>1]=a;b[d>>1]=16384+($(b[e>>1]|0,b[e>>1]|0)|0)>>15;if(32766<(32767-(b[d>>1]|0)+(16384+($(b[d>>1]|0,((16384+($(b[d>>1]|0,(8277+(16384+($(-626,b[d>>1]|0)|0)>>15)&65535)<<16>>16)|0)>>15)+ -7651&65535)<<16>>16)|0)>>15)|0)){e=32766;e=e&65535;e=e<<16>>16;e=1+e|0;e=e&65535;i=c;return e|0}e=32767-(b[d>>1]|0)+(16384+($(b[d>>1]|0,((16384+($(b[d>>1]|0,(8277+(16384+($(-626,b[d>>1]|0)|0)>>15)&65535)<<16>>16)|0)>>15)+ -7651&65535)<<16>>16)|0)>>15)|0;e=e&65535;e=e<<16>>16;e=1+e|0;e=e&65535;i=c;return e|0}function pc(a,d,e,f,g,h,j){a=a|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0;F=i;i=i+144|0;G=F+64|0;T=F+56|0;t=F+44|0;u=F+108|0;m=F+116|0;H=F+16|0;R=F+20|0;C=F+24|0;S=F+28|0;l=F+32|0;v=F+36|0;I=F+40|0;N=F+96|0;M=F+104|0;Q=F+112|0;L=F+120|0;J=F+124|0;K=F+128|0;O=F+68|0;P=F+72|0;w=F+76|0;E=F+80|0;z=F+84|0;x=F+12|0;y=F+4|0;k=F;D=F+8|0;A=F+132|0;B=F+134|0;n=F+48|0;p=F+100|0;s=F+52|0;r=F+60|0;o=F+92|0;q=F+88|0;c[G>>2]=a;c[T>>2]=d;c[t>>2]=e;c[u>>2]=f;c[m>>2]=g;c[H>>2]=h;c[R>>2]=j;c[S>>2]=c[c[G>>2]>>2];c[I>>2]=c[(c[G>>2]|0)+24>>2];c[C>>2]=0;while(1){j=c[S>>2]>>1;if((c[C>>2]|0)>=(c[H>>2]|0)){break}c[S>>2]=j;c[I>>2]=(c[I>>2]|0)+(c[S>>2]<<1);c[C>>2]=(c[C>>2]|0)+1}c[l>>2]=j;c[v>>2]=c[S>>2]>>2;c[N>>2]=c[T>>2];c[M>>2]=(c[T>>2]|0)+(($(c[R>>2]|0,(c[l>>2]|0)-1|0)|0)<<2);c[Q>>2]=(c[t>>2]|0)+(c[m>>2]>>1<<2);c[L>>2]=c[I>>2];c[J>>2]=c[(c[(c[G>>2]|0)+8+(c[H>>2]<<2)>>2]|0)+48>>2];c[C>>2]=0;while(1){if((c[C>>2]|0)>=(c[v>>2]|0)){break}a=c[J>>2]|0;c[J>>2]=a+2;c[K>>2]=b[a>>1]|0;a=($(b[(c[L>>2]|0)+(c[C>>2]<<1)>>1]|0,(c[c[M>>2]>>2]>>16&65535)<<16>>16)|0)<<1;a=a+(($(b[(c[L>>2]|0)+(c[C>>2]<<1)>>1]|0,c[c[M>>2]>>2]&65535&65535)|0)>>15)|0;d=($(b[(c[L>>2]|0)+((c[v>>2]|0)+(c[C>>2]|0)<<1)>>1]|0,(c[c[N>>2]>>2]>>16&65535)<<16>>16)|0)<<1;c[O>>2]=a+(d+(($(b[(c[L>>2]|0)+((c[v>>2]|0)+(c[C>>2]|0)<<1)>>1]|0,c[c[N>>2]>>2]&65535&65535)|0)>>15));d=($(b[(c[L>>2]|0)+(c[C>>2]<<1)>>1]|0,(c[c[N>>2]>>2]>>16&65535)<<16>>16)|0)<<1;d=d+(($(b[(c[L>>2]|0)+(c[C>>2]<<1)>>1]|0,c[c[N>>2]>>2]&65535&65535)|0)>>15)|0;a=($(b[(c[L>>2]|0)+((c[v>>2]|0)+(c[C>>2]|0)<<1)>>1]|0,(c[c[M>>2]>>2]>>16&65535)<<16>>16)|0)<<1;c[P>>2]=d-(a+(($(b[(c[L>>2]|0)+((c[v>>2]|0)+(c[C>>2]|0)<<1)>>1]|0,c[c[M>>2]>>2]&65535&65535)|0)>>15));c[(c[Q>>2]|0)+((c[K>>2]<<1)+1<<2)>>2]=c[O>>2];c[(c[Q>>2]|0)+(c[K>>2]<<1<<2)>>2]=c[P>>2];c[N>>2]=(c[N>>2]|0)+(c[R>>2]<<1<<2);c[M>>2]=(c[M>>2]|0)+(0-(c[R>>2]<<1)<<2);c[C>>2]=(c[C>>2]|0)+1}ac(c[(c[G>>2]|0)+8+(c[H>>2]<<2)>>2]|0,(c[t>>2]|0)+(c[m>>2]>>1<<2)|0);c[w>>2]=(c[t>>2]|0)+(c[m>>2]>>1<<2);c[E>>2]=(c[t>>2]|0)+(c[m>>2]>>1<<2)+(c[l>>2]<<2)+ -8;c[z>>2]=c[I>>2];c[C>>2]=0;while(1){if((c[C>>2]|0)>=((c[v>>2]|0)+1>>1|0)){break}c[x>>2]=c[(c[w>>2]|0)+4>>2];c[y>>2]=c[c[w>>2]>>2];b[A>>1]=b[(c[z>>2]|0)+(c[C>>2]<<1)>>1]|0;b[B>>1]=b[(c[z>>2]|0)+((c[v>>2]|0)+(c[C>>2]|0)<<1)>>1]|0;a=($(b[A>>1]|0,(c[x>>2]>>16&65535)<<16>>16)|0)<<1;a=a+(($(b[A>>1]|0,c[x>>2]&65535&65535)|0)>>15)|0;d=($(b[B>>1]|0,(c[y>>2]>>16&65535)<<16>>16)|0)<<1;c[k>>2]=a+(d+(($(b[B>>1]|0,c[y>>2]&65535&65535)|0)>>15));d=($(b[B>>1]|0,(c[x>>2]>>16&65535)<<16>>16)|0)<<1;d=d+(($(b[B>>1]|0,c[x>>2]&65535&65535)|0)>>15)|0;a=($(b[A>>1]|0,(c[y>>2]>>16&65535)<<16>>16)|0)<<1;c[D>>2]=d-(a+(($(b[A>>1]|0,c[y>>2]&65535&65535)|0)>>15));c[x>>2]=c[(c[E>>2]|0)+4>>2];c[y>>2]=c[c[E>>2]>>2];c[c[w>>2]>>2]=c[k>>2];c[(c[E>>2]|0)+4>>2]=c[D>>2];b[A>>1]=b[(c[z>>2]|0)+((c[v>>2]|0)-(c[C>>2]|0)-1<<1)>>1]|0;b[B>>1]=b[(c[z>>2]|0)+((c[l>>2]|0)-(c[C>>2]|0)-1<<1)>>1]|0;a=($(b[A>>1]|0,(c[x>>2]>>16&65535)<<16>>16)|0)<<1;a=a+(($(b[A>>1]|0,c[x>>2]&65535&65535)|0)>>15)|0;d=($(b[B>>1]|0,(c[y>>2]>>16&65535)<<16>>16)|0)<<1;c[k>>2]=a+(d+(($(b[B>>1]|0,c[y>>2]&65535&65535)|0)>>15));d=($(b[B>>1]|0,(c[x>>2]>>16&65535)<<16>>16)|0)<<1;d=d+(($(b[B>>1]|0,c[x>>2]&65535&65535)|0)>>15)|0;a=($(b[A>>1]|0,(c[y>>2]>>16&65535)<<16>>16)|0)<<1;c[D>>2]=d-(a+(($(b[A>>1]|0,c[y>>2]&65535&65535)|0)>>15));c[c[E>>2]>>2]=c[k>>2];c[(c[w>>2]|0)+4>>2]=c[D>>2];c[w>>2]=(c[w>>2]|0)+8;c[E>>2]=(c[E>>2]|0)+ -8;c[C>>2]=(c[C>>2]|0)+1}c[n>>2]=(c[t>>2]|0)+(c[m>>2]<<2)+ -4;c[p>>2]=c[t>>2];c[s>>2]=c[u>>2];c[r>>2]=(c[u>>2]|0)+(c[m>>2]<<1)+ -2;c[C>>2]=0;while(1){if((c[C>>2]|0)>=((c[m>>2]|0)/2|0|0)){break}c[o>>2]=c[c[n>>2]>>2];c[q>>2]=c[c[p>>2]>>2];a=($(b[c[r>>2]>>1]|0,(c[q>>2]>>16&65535)<<16>>16)|0)<<1;a=a+(($(b[c[r>>2]>>1]|0,c[q>>2]&65535&65535)|0)>>15)|0;d=($(b[c[s>>2]>>1]|0,(c[o>>2]>>16&65535)<<16>>16)|0)<<1;d=a-(d+(($(b[c[s>>2]>>1]|0,c[o>>2]&65535&65535)|0)>>15))|0;a=c[p>>2]|0;c[p>>2]=a+4;c[a>>2]=d;a=($(b[c[s>>2]>>1]|0,(c[q>>2]>>16&65535)<<16>>16)|0)<<1;a=a+(($(b[c[s>>2]>>1]|0,c[q>>2]&65535&65535)|0)>>15)|0;d=($(b[c[r>>2]>>1]|0,(c[o>>2]>>16&65535)<<16>>16)|0)<<1;d=a+(d+(($(b[c[r>>2]>>1]|0,c[o>>2]&65535&65535)|0)>>15))|0;a=c[n>>2]|0;c[n>>2]=a+ -4;c[a>>2]=d;c[s>>2]=(c[s>>2]|0)+2;c[r>>2]=(c[r>>2]|0)+ -2;c[C>>2]=(c[C>>2]|0)+1}i=F;return}function qc(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0;f=i;i=i+32|0;h=f+20|0;k=f+16|0;l=f+12|0;g=f+8|0;e=f+4|0;j=f;c[k>>2]=a;c[l>>2]=b;c[g>>2]=d;c[e>>2]=0;a:while(1){if((c[e>>2]|0)>=1){j=12;break}c[j>>2]=0;while(1){if((c[j>>2]|0)>=4){break}if((c[k>>2]|0)==(c[c[5464+(c[e>>2]<<2)>>2]>>2]|0)?(c[l>>2]<<c[j>>2]|0)==($(c[(c[5464+(c[e>>2]<<2)>>2]|0)+36>>2]|0,c[(c[5464+(c[e>>2]<<2)>>2]|0)+32>>2]|0)|0):0){j=7;break a}c[j>>2]=(c[j>>2]|0)+1}c[e>>2]=(c[e>>2]|0)+1}if((j|0)==7){if((c[g>>2]|0)!=0){c[c[g>>2]>>2]=0}c[h>>2]=c[5464+(c[e>>2]<<2)>>2];a=c[h>>2]|0;i=f;return a|0}else if((j|0)==12){if((c[g>>2]|0)!=0){c[c[g>>2]>>2]=-1}c[h>>2]=0;a=c[h>>2]|0;i=f;return a|0}return 0}function rc(a,d,e,f,g){a=a|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0;o=i;i=i+96|0;s=o+52|0;l=o+32|0;m=o+4|0;v=o+8|0;h=o+48|0;p=o;q=o+12|0;u=o+56|0;r=o+64|0;n=o+72|0;j=o+84|0;k=o+82|0;t=o+44|0;w=o+36|0;x=o+40|0;c[s>>2]=a;c[l>>2]=d;c[m>>2]=e;c[v>>2]=f;c[h>>2]=g;b[u>>1]=32767;b[n+0>>1]=0;b[n+2>>1]=0;b[n+4>>1]=0;b[n+6>>1]=0;b[n+8>>1]=0;b[k>>1]=26214;c[w>>2]=sc(c[c[s>>2]>>2]|0,c[m>>2]|0)|0;if((c[v>>2]|0)==2){c[x>>2]=sc(c[(c[s>>2]|0)+4>>2]|0,c[m>>2]|0)|0;c[w>>2]=(c[w>>2]|0)>(c[x>>2]|0)?c[w>>2]|0:c[x>>2]|0}if((c[w>>2]|0)<1){c[w>>2]=1}a=((tc(c[w>>2]|0)|0)<<16>>16)-10|0;c[t>>2]=a;c[t>>2]=(c[t>>2]|0)<0?0:a;if((c[v>>2]|0)==2){c[t>>2]=(c[t>>2]|0)+1}c[p>>2]=1;while(1){if((c[p>>2]|0)>=(c[m>>2]>>1|0)){break}b[(c[l>>2]|0)+(c[p>>2]<<1)>>1]=((c[(c[c[s>>2]>>2]|0)+((c[p>>2]<<1)-1<<2)>>2]|0)+(c[(c[c[s>>2]>>2]|0)+((c[p>>2]<<1)+1<<2)>>2]|0)>>1)+(c[(c[c[s>>2]>>2]|0)+(c[p>>2]<<1<<2)>>2]|0)>>1>>c[t>>2];c[p>>2]=(c[p>>2]|0)+1}b[c[l>>2]>>1]=(c[(c[c[s>>2]>>2]|0)+4>>2]>>1)+(c[c[c[s>>2]>>2]>>2]|0)>>1>>c[t>>2];if((c[v>>2]|0)==2){c[p>>2]=1;while(1){if((c[p>>2]|0)>=(c[m>>2]>>1|0)){break}a=(c[l>>2]|0)+(c[p>>2]<<1)|0;b[a>>1]=(b[a>>1]|0)+(((c[(c[(c[s>>2]|0)+4>>2]|0)+((c[p>>2]<<1)-1<<2)>>2]|0)+(c[(c[(c[s>>2]|0)+4>>2]|0)+((c[p>>2]<<1)+1<<2)>>2]|0)>>1)+(c[(c[(c[s>>2]|0)+4>>2]|0)+(c[p>>2]<<1<<2)>>2]|0)>>1>>c[t>>2]);c[p>>2]=(c[p>>2]|0)+1}a=c[l>>2]|0;b[a>>1]=(b[a>>1]|0)+((c[(c[(c[s>>2]|0)+4>>2]|0)+4>>2]>>1)+(c[c[(c[s>>2]|0)+4>>2]>>2]|0)>>1>>c[t>>2])}Ab(c[l>>2]|0,q,0,0,4,c[m>>2]>>1,c[h>>2]|0)|0;c[q>>2]=(c[q>>2]|0)+(c[q>>2]>>13);c[p>>2]=1;while(1){if((c[p>>2]|0)>4){break}a=(($(c[p>>2]<<1,c[p>>2]|0)|0)&65535)<<16>>16;a=($(a,(c[q+(c[p>>2]<<2)>>2]>>16&65535)<<16>>16)|0)<<1;d=(($(c[p>>2]<<1,c[p>>2]|0)|0)&65535)<<16>>16;d=a+(($(d,c[q+(c[p>>2]<<2)>>2]&65535&65535)|0)>>15)|0;a=q+(c[p>>2]<<2)|0;c[a>>2]=(c[a>>2]|0)-d;c[p>>2]=(c[p>>2]|0)+1}wb(r,q,4);c[p>>2]=0;while(1){if((c[p>>2]|0)>=4){break}b[u>>1]=(b[u>>1]|0)*29491>>15;a=($(b[r+(c[p>>2]<<1)>>1]|0,b[u>>1]|0)|0)>>15&65535;b[r+(c[p>>2]<<1)>>1]=a;c[p>>2]=(c[p>>2]|0)+1}b[j>>1]=(b[r>>1]|0)+3277;b[j+2>>1]=(b[r+2>>1]|0)+(($(b[k>>1]|0,b[r>>1]|0)|0)>>15);b[j+4>>1]=(b[r+4>>1]|0)+(($(b[k>>1]|0,b[r+2>>1]|0)|0)>>15);b[j+6>>1]=(b[r+6>>1]|0)+(($(b[k>>1]|0,b[r+4>>1]|0)|0)>>15);b[j+8>>1]=($(b[k>>1]|0,b[r+6>>1]|0)|0)>>15;uc(c[l>>2]|0,j,c[l>>2]|0,c[m>>2]>>1,n);i=o;return}function sc(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0;e=i;i=i+32|0;g=e+16|0;j=e+12|0;d=e+8|0;h=e+4|0;f=e;c[g>>2]=a;c[j>>2]=b;c[h>>2]=0;c[f>>2]=0;c[d>>2]=0;while(1){b=c[h>>2]|0;if((c[d>>2]|0)>=(c[j>>2]|0)){break}if((b|0)>(c[(c[g>>2]|0)+(c[d>>2]<<2)>>2]|0)){b=c[h>>2]|0}else{b=c[(c[g>>2]|0)+(c[d>>2]<<2)>>2]|0}c[h>>2]=b;if((c[f>>2]|0)<(c[(c[g>>2]|0)+(c[d>>2]<<2)>>2]|0)){b=c[f>>2]|0}else{b=c[(c[g>>2]|0)+(c[d>>2]<<2)>>2]|0}c[f>>2]=b;c[d>>2]=(c[d>>2]|0)+1}if((b|0)>(0-(c[f>>2]|0)|0)){a=c[h>>2]|0;i=e;return a|0}else{a=0-(c[f>>2]|0)|0;i=e;return a|0}return 0}function tc(a){a=a|0;var b=0,d=0;b=i;i=i+16|0;d=b;c[d>>2]=a;a=32-(We(c[d>>2]|0)|0)-1&65535;i=b;return a|0}function uc(a,d,e,f,g){a=a|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0;o=i;i=i+64|0;r=o+44|0;z=o+16|0;y=o;q=o+28|0;j=o+32|0;p=o+40|0;t=o+48|0;u=o+50|0;v=o+52|0;w=o+54|0;x=o+56|0;s=o+36|0;k=o+4|0;l=o+8|0;m=o+20|0;n=o+24|0;h=o+12|0;c[r>>2]=a;c[z>>2]=d;c[y>>2]=e;c[q>>2]=f;c[j>>2]=g;b[t>>1]=b[c[z>>2]>>1]|0;b[u>>1]=b[(c[z>>2]|0)+2>>1]|0;b[v>>1]=b[(c[z>>2]|0)+4>>1]|0;b[w>>1]=b[(c[z>>2]|0)+6>>1]|0;b[x>>1]=b[(c[z>>2]|0)+8>>1]|0;c[s>>2]=b[c[j>>2]>>1]|0;c[k>>2]=b[(c[j>>2]|0)+2>>1]|0;c[l>>2]=b[(c[j>>2]|0)+4>>1]|0;c[m>>2]=b[(c[j>>2]|0)+6>>1]|0;c[n>>2]=b[(c[j>>2]|0)+8>>1]|0;c[p>>2]=0;while(1){if((c[p>>2]|0)>=(c[q>>2]|0)){break}c[h>>2]=b[(c[r>>2]|0)+(c[p>>2]<<1)>>1]<<12;c[h>>2]=(c[h>>2]|0)+($(b[t>>1]|0,(c[s>>2]&65535)<<16>>16)|0);c[h>>2]=(c[h>>2]|0)+($(b[u>>1]|0,(c[k>>2]&65535)<<16>>16)|0);c[h>>2]=(c[h>>2]|0)+($(b[v>>1]|0,(c[l>>2]&65535)<<16>>16)|0);c[h>>2]=(c[h>>2]|0)+($(b[w>>1]|0,(c[m>>2]&65535)<<16>>16)|0);c[h>>2]=(c[h>>2]|0)+($(b[x>>1]|0,(c[n>>2]&65535)<<16>>16)|0);c[n>>2]=c[m>>2];c[m>>2]=c[l>>2];c[l>>2]=c[k>>2];c[k>>2]=c[s>>2];c[s>>2]=b[(c[r>>2]|0)+(c[p>>2]<<1)>>1]|0;b[(c[y>>2]|0)+(c[p>>2]<<1)>>1]=(c[h>>2]|0)+2048>>12;c[p>>2]=(c[p>>2]|0)+1}b[c[j>>2]>>1]=c[s>>2];b[(c[j>>2]|0)+2>>1]=c[k>>2];b[(c[j>>2]|0)+4>>1]=c[l>>2];b[(c[j>>2]|0)+6>>1]=c[m>>2];b[(c[j>>2]|0)+8>>1]=c[n>>2];i=o;return}function vc(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;p=i;i=i+48|0;l=p+40|0;m=p+16|0;g=p+4|0;n=p+8|0;k=p+44|0;j=p;h=p+12|0;q=p+24|0;o=p+20|0;c[l>>2]=a;c[m>>2]=b;c[g>>2]=d;c[n>>2]=e;c[k>>2]=f;c[h>>2]=1;c[j>>2]=0;while(1){if((c[j>>2]|0)>=((c[k>>2]|0)-3|0)){break}c[q+0>>2]=0;c[q+4>>2]=0;c[q+8>>2]=0;c[q+12>>2]=0;wc(c[l>>2]|0,(c[m>>2]|0)+(c[j>>2]<<1)|0,q,c[n>>2]|0);c[(c[g>>2]|0)+(c[j>>2]<<2)>>2]=c[q>>2];c[(c[g>>2]|0)+((c[j>>2]|0)+1<<2)>>2]=c[q+4>>2];c[(c[g>>2]|0)+((c[j>>2]|0)+2<<2)>>2]=c[q+8>>2];c[(c[g>>2]|0)+((c[j>>2]|0)+3<<2)>>2]=c[q+12>>2];if((c[q>>2]|0)>(c[q+4>>2]|0)){f=c[q>>2]|0}else{f=c[q+4>>2]|0}c[q>>2]=f;if((c[q+8>>2]|0)>(c[q+12>>2]|0)){f=c[q+8>>2]|0}else{f=c[q+12>>2]|0}c[q+8>>2]=f;if((c[q>>2]|0)>(c[q+8>>2]|0)){f=c[q>>2]|0}else{f=c[q+8>>2]|0}c[q>>2]=f;if((c[h>>2]|0)>(c[q>>2]|0)){f=c[h>>2]|0}else{f=c[q>>2]|0}c[h>>2]=f;c[j>>2]=(c[j>>2]|0)+4}while(1){if((c[j>>2]|0)>=(c[k>>2]|0)){break}c[o>>2]=xc(c[l>>2]|0,(c[m>>2]|0)+(c[j>>2]<<1)|0,c[n>>2]|0)|0;c[(c[g>>2]|0)+(c[j>>2]<<2)>>2]=c[o>>2];c[h>>2]=(c[h>>2]|0)>(c[o>>2]|0)?c[h>>2]|0:c[o>>2]|0;c[j>>2]=(c[j>>2]|0)+1}i=p;return c[h>>2]|0}function wc(a,d,e,f){a=a|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0;p=i;i=i+48|0;h=p+8|0;k=p+12|0;m=p+16|0;r=p+4|0;q=p;g=p+26|0;l=p+24|0;n=p+22|0;o=p+20|0;u=p+28|0;t=p+30|0;s=p+32|0;j=p+34|0;c[h>>2]=a;c[k>>2]=d;c[m>>2]=e;c[r>>2]=f;b[o>>1]=0;a=c[k>>2]|0;c[k>>2]=a+2;b[g>>1]=b[a>>1]|0;a=c[k>>2]|0;c[k>>2]=a+2;b[l>>1]=b[a>>1]|0;a=c[k>>2]|0;c[k>>2]=a+2;b[n>>1]=b[a>>1]|0;c[q>>2]=0;while(1){if((c[q>>2]|0)>=((c[r>>2]|0)-3|0)){break}a=c[h>>2]|0;c[h>>2]=a+2;b[u>>1]=b[a>>1]|0;a=c[k>>2]|0;c[k>>2]=a+2;b[o>>1]=b[a>>1]|0;a=(c[c[m>>2]>>2]|0)+($(b[u>>1]|0,b[g>>1]|0)|0)|0;c[c[m>>2]>>2]=a;a=(c[(c[m>>2]|0)+4>>2]|0)+($(b[u>>1]|0,b[l>>1]|0)|0)|0;c[(c[m>>2]|0)+4>>2]=a;a=(c[(c[m>>2]|0)+8>>2]|0)+($(b[u>>1]|0,b[n>>1]|0)|0)|0;c[(c[m>>2]|0)+8>>2]=a;a=(c[(c[m>>2]|0)+12>>2]|0)+($(b[u>>1]|0,b[o>>1]|0)|0)|0;c[(c[m>>2]|0)+12>>2]=a;a=c[h>>2]|0;c[h>>2]=a+2;b[u>>1]=b[a>>1]|0;a=c[k>>2]|0;c[k>>2]=a+2;b[g>>1]=b[a>>1]|0;a=(c[c[m>>2]>>2]|0)+($(b[u>>1]|0,b[l>>1]|0)|0)|0;c[c[m>>2]>>2]=a;a=(c[(c[m>>2]|0)+4>>2]|0)+($(b[u>>1]|0,b[n>>1]|0)|0)|0;c[(c[m>>2]|0)+4>>2]=a;a=(c[(c[m>>2]|0)+8>>2]|0)+($(b[u>>1]|0,b[o>>1]|0)|0)|0;c[(c[m>>2]|0)+8>>2]=a;a=(c[(c[m>>2]|0)+12>>2]|0)+($(b[u>>1]|0,b[g>>1]|0)|0)|0;c[(c[m>>2]|0)+12>>2]=a;a=c[h>>2]|0;c[h>>2]=a+2;b[u>>1]=b[a>>1]|0;a=c[k>>2]|0;c[k>>2]=a+2;b[l>>1]=b[a>>1]|0;a=(c[c[m>>2]>>2]|0)+($(b[u>>1]|0,b[n>>1]|0)|0)|0;c[c[m>>2]>>2]=a;a=(c[(c[m>>2]|0)+4>>2]|0)+($(b[u>>1]|0,b[o>>1]|0)|0)|0;c[(c[m>>2]|0)+4>>2]=a;a=(c[(c[m>>2]|0)+8>>2]|0)+($(b[u>>1]|0,b[g>>1]|0)|0)|0;c[(c[m>>2]|0)+8>>2]=a;a=(c[(c[m>>2]|0)+12>>2]|0)+($(b[u>>1]|0,b[l>>1]|0)|0)|0;c[(c[m>>2]|0)+12>>2]=a;a=c[h>>2]|0;c[h>>2]=a+2;b[u>>1]=b[a>>1]|0;a=c[k>>2]|0;c[k>>2]=a+2;b[n>>1]=b[a>>1]|0;a=(c[c[m>>2]>>2]|0)+($(b[u>>1]|0,b[o>>1]|0)|0)|0;c[c[m>>2]>>2]=a;a=(c[(c[m>>2]|0)+4>>2]|0)+($(b[u>>1]|0,b[g>>1]|0)|0)|0;c[(c[m>>2]|0)+4>>2]=a;a=(c[(c[m>>2]|0)+8>>2]|0)+($(b[u>>1]|0,b[l>>1]|0)|0)|0;c[(c[m>>2]|0)+8>>2]=a;a=(c[(c[m>>2]|0)+12>>2]|0)+($(b[u>>1]|0,b[n>>1]|0)|0)|0;c[(c[m>>2]|0)+12>>2]=a;c[q>>2]=(c[q>>2]|0)+4}a=c[q>>2]|0;c[q>>2]=a+1;if((a|0)<(c[r>>2]|0)){a=c[h>>2]|0;c[h>>2]=a+2;b[t>>1]=b[a>>1]|0;a=c[k>>2]|0;c[k>>2]=a+2;b[o>>1]=b[a>>1]|0;a=(c[c[m>>2]>>2]|0)+($(b[t>>1]|0,b[g>>1]|0)|0)|0;c[c[m>>2]>>2]=a;a=(c[(c[m>>2]|0)+4>>2]|0)+($(b[t>>1]|0,b[l>>1]|0)|0)|0;c[(c[m>>2]|0)+4>>2]=a;a=(c[(c[m>>2]|0)+8>>2]|0)+($(b[t>>1]|0,b[n>>1]|0)|0)|0;c[(c[m>>2]|0)+8>>2]=a;a=(c[(c[m>>2]|0)+12>>2]|0)+($(b[t>>1]|0,b[o>>1]|0)|0)|0;c[(c[m>>2]|0)+12>>2]=a}a=c[q>>2]|0;c[q>>2]=a+1;if((a|0)<(c[r>>2]|0)){a=c[h>>2]|0;c[h>>2]=a+2;b[s>>1]=b[a>>1]|0;a=c[k>>2]|0;c[k>>2]=a+2;b[g>>1]=b[a>>1]|0;a=(c[c[m>>2]>>2]|0)+($(b[s>>1]|0,b[l>>1]|0)|0)|0;c[c[m>>2]>>2]=a;a=(c[(c[m>>2]|0)+4>>2]|0)+($(b[s>>1]|0,b[n>>1]|0)|0)|0;c[(c[m>>2]|0)+4>>2]=a;a=(c[(c[m>>2]|0)+8>>2]|0)+($(b[s>>1]|0,b[o>>1]|0)|0)|0;c[(c[m>>2]|0)+8>>2]=a;a=(c[(c[m>>2]|0)+12>>2]|0)+($(b[s>>1]|0,b[g>>1]|0)|0)|0;c[(c[m>>2]|0)+12>>2]=a}if((c[q>>2]|0)>=(c[r>>2]|0)){i=p;return}a=c[h>>2]|0;c[h>>2]=a+2;b[j>>1]=b[a>>1]|0;a=c[k>>2]|0;c[k>>2]=a+2;b[l>>1]=b[a>>1]|0;a=(c[c[m>>2]>>2]|0)+($(b[j>>1]|0,b[n>>1]|0)|0)|0;c[c[m>>2]>>2]=a;a=(c[(c[m>>2]|0)+4>>2]|0)+($(b[j>>1]|0,b[o>>1]|0)|0)|0;c[(c[m>>2]|0)+4>>2]=a;a=(c[(c[m>>2]|0)+8>>2]|0)+($(b[j>>1]|0,b[g>>1]|0)|0)|0;c[(c[m>>2]|0)+8>>2]=a;a=(c[(c[m>>2]|0)+12>>2]|0)+($(b[j>>1]|0,b[l>>1]|0)|0)|0;c[(c[m>>2]|0)+12>>2]=a;i=p;return}function xc(a,d,e){a=a|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0;f=i;i=i+32|0;k=f+16|0;l=f+12|0;j=f+8|0;h=f+4|0;g=f;c[k>>2]=a;c[l>>2]=d;c[j>>2]=e;c[g>>2]=0;c[h>>2]=0;while(1){e=c[g>>2]|0;if((c[h>>2]|0)>=(c[j>>2]|0)){break}c[g>>2]=e+($(b[(c[k>>2]|0)+(c[h>>2]<<1)>>1]|0,b[(c[l>>2]|0)+(c[h>>2]<<1)>>1]|0)|0);c[h>>2]=(c[h>>2]|0)+1}i=f;return e|0}function yc(a,d,e,f,g,h){a=a|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0;A=i;i=i+96|0;v=A+36|0;n=A+24|0;o=A+20|0;p=A+68|0;y=A+32|0;u=A+48|0;j=A+56|0;w=A+64|0;x=A+72|0;r=A+80|0;B=A+40|0;C=A+8|0;q=A;k=A+4|0;z=A+44|0;s=A+52|0;t=A+28|0;l=A+60|0;m=A+12|0;c[v>>2]=a;c[n>>2]=d;c[o>>2]=e;c[p>>2]=f;c[y>>2]=g;c[A+16>>2]=h;c[x+0>>2]=0;c[x+4>>2]=0;c[q>>2]=0;c[w>>2]=(c[o>>2]|0)+(c[p>>2]|0);f=c[o>>2]>>2;c[z>>2]=ia()|0;g=i;i=i+((2*f|0)+15&-16)|0;f=i;i=i+((2*(c[w>>2]>>2)|0)+15&-16)|0;h=i;i=i+((4*(c[p>>2]>>1)|0)+15&-16)|0;c[j>>2]=0;while(1){if((c[j>>2]|0)>=(c[o>>2]>>2|0)){break}b[g+(c[j>>2]<<1)>>1]=b[(c[v>>2]|0)+(c[j>>2]<<1<<1)>>1]|0;c[j>>2]=(c[j>>2]|0)+1}c[j>>2]=0;while(1){if((c[j>>2]|0)>=(c[w>>2]>>2|0)){break}b[f+(c[j>>2]<<1)>>1]=b[(c[n>>2]|0)+(c[j>>2]<<1<<1)>>1]|0;c[j>>2]=(c[j>>2]|0)+1}c[B>>2]=zc(g,c[o>>2]>>2)|0;c[C>>2]=zc(f,c[w>>2]>>2)|0;if(1>(((c[B>>2]|0)>(c[C>>2]|0)?c[B>>2]|0:c[C>>2]|0)|0)){B=1}else{B=(c[B>>2]|0)>(c[C>>2]|0)?c[B>>2]|0:c[C>>2]|0}c[q>>2]=((tc(B)|0)<<16>>16)-11;if((c[q>>2]|0)>0){c[j>>2]=0;while(1){if((c[j>>2]|0)>=(c[o>>2]>>2|0)){break}b[g+(c[j>>2]<<1)>>1]=b[g+(c[j>>2]<<1)>>1]>>c[q>>2];c[j>>2]=(c[j>>2]|0)+1}c[j>>2]=0;while(1){if((c[j>>2]|0)>=(c[w>>2]>>2|0)){break}b[f+(c[j>>2]<<1)>>1]=b[f+(c[j>>2]<<1)>>1]>>c[q>>2];c[j>>2]=(c[j>>2]|0)+1}c[q>>2]=c[q>>2]<<1}else{c[q>>2]=0}c[r>>2]=vc(g,f,h,c[o>>2]>>2,c[p>>2]>>2)|0;Ac(h,f,c[o>>2]>>2,c[p>>2]>>2,x,0,c[r>>2]|0);c[r>>2]=1;c[u>>2]=0;while(1){if((c[u>>2]|0)>=(c[p>>2]>>1|0)){break}c[h+(c[u>>2]<<2)>>2]=0;if(!((O((c[u>>2]|0)-(c[x>>2]<<1)|0)|0)>2?(O((c[u>>2]|0)-(c[x+4>>2]<<1)|0)|0)>2:0)){c[s>>2]=0;c[j>>2]=0;while(1){if((c[j>>2]|0)>=(c[o>>2]>>1|0)){break}a=$(b[(c[v>>2]|0)+(c[j>>2]<<1)>>1]|0,b[(c[n>>2]|0)+((c[u>>2]|0)+(c[j>>2]|0)<<1)>>1]|0)|0;c[s>>2]=(c[s>>2]|0)+(a>>c[q>>2]);c[j>>2]=(c[j>>2]|0)+1}c[h+(c[u>>2]<<2)>>2]=-1>(c[s>>2]|0)?-1:c[s>>2]|0;c[r>>2]=(c[r>>2]|0)>(c[s>>2]|0)?c[r>>2]|0:c[s>>2]|0}c[u>>2]=(c[u>>2]|0)+1}Ac(h,c[n>>2]|0,c[o>>2]>>1,c[p>>2]>>1,x,(c[q>>2]|0)+1|0,c[r>>2]|0);if((c[x>>2]|0)>0?(c[x>>2]|0)<((c[p>>2]>>1)-1|0):0){c[t>>2]=c[h+((c[x>>2]|0)-1<<2)>>2];c[l>>2]=c[h+(c[x>>2]<<2)>>2];c[m>>2]=c[h+((c[x>>2]|0)+1<<2)>>2];if(((c[m>>2]|0)-(c[t>>2]|0)|0)>(((((c[l>>2]|0)-(c[t>>2]|0)>>16&65535)<<16>>16)*22938<<1)+(((c[l>>2]|0)-(c[t>>2]|0)&65535&65535)*22938>>15)|0)){c[k>>2]=1;a=c[x>>2]|0;a=a<<1;d=c[k>>2]|0;d=a-d|0;a=c[y>>2]|0;c[a>>2]=d;a=c[z>>2]|0;na(a|0);i=A;return}if(((c[t>>2]|0)-(c[m>>2]|0)|0)>(((((c[l>>2]|0)-(c[m>>2]|0)>>16&65535)<<16>>16)*22938<<1)+(((c[l>>2]|0)-(c[m>>2]|0)&65535&65535)*22938>>15)|0)){c[k>>2]=-1;a=c[x>>2]|0;a=a<<1;d=c[k>>2]|0;d=a-d|0;a=c[y>>2]|0;c[a>>2]=d;a=c[z>>2]|0;na(a|0);i=A;return}else{c[k>>2]=0;a=c[x>>2]|0;a=a<<1;d=c[k>>2]|0;d=a-d|0;a=c[y>>2]|0;c[a>>2]=d;a=c[z>>2]|0;na(a|0);i=A;return}}c[k>>2]=0;a=c[x>>2]|0;a=a<<1;d=c[k>>2]|0;d=a-d|0;a=c[y>>2]|0;c[a>>2]=d;a=c[z>>2]|0;na(a|0);i=A;return}function zc(a,d){a=a|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0;f=i;i=i+16|0;h=f+8|0;k=f+4|0;e=f;j=f+14|0;g=f+12|0;c[h>>2]=a;c[k>>2]=d;b[j>>1]=0;b[g>>1]=0;c[e>>2]=0;while(1){d=b[j>>1]|0;if((c[e>>2]|0)>=(c[k>>2]|0)){break}if((d|0)>(b[(c[h>>2]|0)+(c[e>>2]<<1)>>1]|0)){d=b[j>>1]|0}else{d=b[(c[h>>2]|0)+(c[e>>2]<<1)>>1]|0}b[j>>1]=d<<16>>16;if((b[g>>1]|0)<(b[(c[h>>2]|0)+(c[e>>2]<<1)>>1]|0)){d=b[g>>1]|0}else{d=b[(c[h>>2]|0)+(c[e>>2]<<1)>>1]|0}b[g>>1]=d<<16>>16;c[e>>2]=(c[e>>2]|0)+1}if((d|0)>(0-(b[g>>1]|0)|0)){a=b[j>>1]|0;i=f;return a|0}else{a=0-(b[g>>1]|0)|0;i=f;return a|0}return 0}function Ac(a,d,e,f,g,h,j){a=a|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0;v=i;i=i+80|0;q=v+8|0;u=v+16|0;l=v+44|0;t=v;x=v+40|0;w=v+48|0;z=v+52|0;k=v+56|0;y=v+4|0;p=v+24|0;o=v+60|0;n=v+32|0;s=v+20|0;m=v+64|0;r=v+12|0;c[q>>2]=a;c[u>>2]=d;c[l>>2]=e;c[t>>2]=f;c[x>>2]=g;c[w>>2]=h;c[z>>2]=j;c[p>>2]=1;c[s>>2]=((tc(c[z>>2]|0)|0)<<16>>16)-14;b[o>>1]=-1;b[o+2>>1]=-1;c[n>>2]=0;c[n+4>>2]=0;c[c[x>>2]>>2]=0;c[(c[x>>2]|0)+4>>2]=1;c[y>>2]=0;while(1){if((c[y>>2]|0)>=(c[l>>2]|0)){break}z=$(b[(c[u>>2]|0)+(c[y>>2]<<1)>>1]|0,b[(c[u>>2]|0)+(c[y>>2]<<1)>>1]|0)|0;c[p>>2]=(c[p>>2]|0)+(z>>c[w>>2]);c[y>>2]=(c[y>>2]|0)+1}c[k>>2]=0;while(1){if((c[k>>2]|0)>=(c[t>>2]|0)){break}do{if((c[(c[q>>2]|0)+(c[k>>2]<<2)>>2]|0)>0){y=c[(c[q>>2]|0)+(c[k>>2]<<2)>>2]|0;j=c[s>>2]|0;if((c[s>>2]|0)>0){j=y>>j}else{j=y<<0-j}c[r>>2]=(j&65535)<<16>>16;b[m>>1]=($((c[r>>2]&65535)<<16>>16,(c[r>>2]&65535)<<16>>16)|0)>>15;a=($(b[m>>1]|0,(c[n+4>>2]>>16&65535)<<16>>16)|0)<<1;a=a+(($(b[m>>1]|0,c[n+4>>2]&65535&65535)|0)>>15)|0;z=($(b[o+2>>1]|0,(c[p>>2]>>16&65535)<<16>>16)|0)<<1;if((a|0)>(z+(($(b[o+2>>1]|0,c[p>>2]&65535&65535)|0)>>15)|0)){a=($(b[m>>1]|0,(c[n>>2]>>16&65535)<<16>>16)|0)<<1;a=a+(($(b[m>>1]|0,c[n>>2]&65535&65535)|0)>>15)|0;z=($(b[o>>1]|0,(c[p>>2]>>16&65535)<<16>>16)|0)<<1;if((a|0)>(z+(($(b[o>>1]|0,c[p>>2]&65535&65535)|0)>>15)|0)){b[o+2>>1]=b[o>>1]|0;c[n+4>>2]=c[n>>2];c[(c[x>>2]|0)+4>>2]=c[c[x>>2]>>2];b[o>>1]=b[m>>1]|0;c[n>>2]=c[p>>2];c[c[x>>2]>>2]=c[k>>2];break}else{b[o+2>>1]=b[m>>1]|0;c[n+4>>2]=c[p>>2];c[(c[x>>2]|0)+4>>2]=c[k>>2];break}}}}while(0);a=$(b[(c[u>>2]|0)+((c[k>>2]|0)+(c[l>>2]|0)<<1)>>1]|0,b[(c[u>>2]|0)+((c[k>>2]|0)+(c[l>>2]|0)<<1)>>1]|0)|0;z=$(b[(c[u>>2]|0)+(c[k>>2]<<1)>>1]|0,b[(c[u>>2]|0)+(c[k>>2]<<1)>>1]|0)|0;c[p>>2]=(c[p>>2]|0)+((a>>c[w>>2])-(z>>c[w>>2]));c[p>>2]=1>(c[p>>2]|0)?1:c[p>>2]|0;c[k>>2]=(c[k>>2]|0)+1}i=v;return}function Bc(a){a=a|0;var b=0,d=0;b=i;i=i+16|0;d=b;c[d>>2]=a;a=c[(c[d>>2]|0)+20>>2]|0;a=a-(32-(We(c[(c[d>>2]|0)+28>>2]|0)|0))|0;i=b;return a|0}function Cc(a,e,f,g,h,j,k,l){a=a|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;var m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0;z=i;i=i+96|0;r=z+16|0;E=z+52|0;D=z+32|0;s=z+36|0;G=z+20|0;t=z+48|0;A=z+56|0;F=z+64|0;C=z+72|0;p=z+40|0;q=z+76|0;x=z+8|0;w=z+80|0;n=z+82|0;u=z+24|0;m=z+28|0;v=z+60|0;o=z+68|0;y=z+44|0;B=z;c[r>>2]=a;c[E>>2]=e;c[D>>2]=f;c[s>>2]=g;c[G>>2]=h;c[t>>2]=j;c[A>>2]=k;c[F>>2]=l;c[C>>2]=14496+((c[F>>2]|0)*84|0)+((c[G>>2]|0)*42|0);c[x+0>>2]=0;c[x+4>>2]=0;if((c[G>>2]|0)!=0){b[w>>1]=0;b[n>>1]=4915}else{b[n>>1]=b[14840+(c[F>>2]<<1)>>1]|0;b[w>>1]=b[14832+(c[F>>2]<<1)>>1]|0}c[u>>2]=c[(c[t>>2]|0)+4>>2]<<3;c[p>>2]=c[E>>2];while(1){if((c[p>>2]|0)>=(c[D>>2]|0)){break}c[q>>2]=0;do{c[m>>2]=Bc(c[t>>2]|0)|0;do{if(((c[u>>2]|0)-(c[m>>2]|0)|0)<15){if(((c[u>>2]|0)-(c[m>>2]|0)|0)>=2){c[v>>2]=Pb(c[t>>2]|0,14848,2)|0;c[v>>2]=c[v>>2]>>1^0-(c[v>>2]&1);break}if(((c[u>>2]|0)-(c[m>>2]|0)|0)>=1){c[v>>2]=0-(Ob(c[t>>2]|0,1)|0);break}else{c[v>>2]=-1;break}}else{c[B>>2]=((c[p>>2]|0)<20?c[p>>2]|0:20)<<1;c[v>>2]=gc(c[t>>2]|0,d[(c[C>>2]|0)+(c[B>>2]|0)>>0]<<7,d[(c[C>>2]|0)+((c[B>>2]|0)+1)>>0]<<6)|0}}while(0);c[o>>2]=c[v>>2]<<10;G=(c[p>>2]|0)+($(c[q>>2]|0,c[(c[r>>2]|0)+8>>2]|0)|0)|0;if(-9216>(b[(c[s>>2]|0)+(G<<1)>>1]|0)){l=-9216}else{l=(c[p>>2]|0)+($(c[q>>2]|0,c[(c[r>>2]|0)+8>>2]|0)|0)|0;l=b[(c[s>>2]|0)+(l<<1)>>1]|0}G=(c[p>>2]|0)+($(c[q>>2]|0,c[(c[r>>2]|0)+8>>2]|0)|0)|0;b[(c[s>>2]|0)+(G<<1)>>1]=l;G=(c[p>>2]|0)+($(c[q>>2]|0,c[(c[r>>2]|0)+8>>2]|0)|0)|0;G=($(b[w>>1]|0,b[(c[s>>2]|0)+(G<<1)>>1]|0)|0)+128>>8;c[y>>2]=G+(c[x+(c[q>>2]<<2)>>2]|0)+(c[o>>2]<<7);c[y>>2]=-3670016>(c[y>>2]|0)?-3670016:c[y>>2]|0;G=(c[p>>2]|0)+($(c[q>>2]|0,c[(c[r>>2]|0)+8>>2]|0)|0)|0;b[(c[s>>2]|0)+(G<<1)>>1]=(c[y>>2]|0)+64>>7;G=(c[x+(c[q>>2]<<2)>>2]|0)+(c[o>>2]<<7)-($(b[n>>1]|0,((c[o>>2]|0)+128>>8&65535)<<16>>16)|0)|0;c[x+(c[q>>2]<<2)>>2]=G;G=(c[q>>2]|0)+1|0;c[q>>2]=G}while((G|0)<(c[A>>2]|0));c[p>>2]=(c[p>>2]|0)+1}i=z;return}function Dc(a,d,e,f,g,h,j){a=a|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0;s=i;i=i+48|0;r=s+36|0;v=s+16|0;u=s+28|0;k=s+4|0;m=s+32|0;l=s;t=s+12|0;n=s+24|0;q=s+20|0;o=s+8|0;p=s+40|0;c[r>>2]=a;c[v>>2]=d;c[u>>2]=e;c[k>>2]=f;c[m>>2]=g;c[l>>2]=h;c[t>>2]=j;c[n>>2]=c[v>>2];while(1){if((c[n>>2]|0)>=(c[u>>2]|0)){break}if((c[(c[m>>2]|0)+(c[n>>2]<<2)>>2]|0)>0){c[q>>2]=0;do{c[o>>2]=Rb(c[l>>2]|0,c[(c[m>>2]|0)+(c[n>>2]<<2)>>2]|0)|0;b[p>>1]=(((c[o>>2]<<10)+512>>c[(c[m>>2]|0)+(c[n>>2]<<2)>>2]&65535)<<16>>16)-512;v=(c[n>>2]|0)+($(c[q>>2]|0,c[(c[r>>2]|0)+8>>2]|0)|0)|0;v=(c[k>>2]|0)+(v<<1)|0;b[v>>1]=(b[v>>1]|0)+(b[p>>1]|0);v=(c[q>>2]|0)+1|0;c[q>>2]=v}while((v|0)<(c[t>>2]|0))}c[n>>2]=(c[n>>2]|0)+1}i=s;return}function Ec(a,d,e,f,g,h,j,k,l){a=a|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;var m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0;x=i;i=i+64|0;z=x+48|0;p=x+36|0;o=x+20|0;A=x+16|0;t=x+32|0;u=x+40|0;r=x+44|0;w=x+8|0;s=x+4|0;n=x+24|0;q=x+12|0;v=x+28|0;m=x;y=x+52|0;c[z>>2]=a;c[p>>2]=d;c[o>>2]=e;c[A>>2]=f;c[t>>2]=g;c[u>>2]=h;c[r>>2]=j;c[w>>2]=k;c[s>>2]=l;c[q>>2]=0;while(1){if((c[q>>2]|0)>=2){break}c[n>>2]=c[p>>2];while(1){if((c[n>>2]|0)>=(c[o>>2]|0)){break}if((c[r>>2]|0)<(c[s>>2]|0)){break}if((c[(c[t>>2]|0)+(c[n>>2]<<2)>>2]|0)<8?(c[(c[u>>2]|0)+(c[n>>2]<<2)>>2]|0)==(c[q>>2]|0):0){c[v>>2]=0;do{c[m>>2]=Rb(c[w>>2]|0,1)|0;b[y>>1]=(((c[m>>2]&65535)<<10&65535)<<16>>16)-512>>(c[(c[t>>2]|0)+(c[n>>2]<<2)>>2]|0)+1;a=(c[n>>2]|0)+($(c[v>>2]|0,c[(c[z>>2]|0)+8>>2]|0)|0)|0;a=(c[A>>2]|0)+(a<<1)|0;b[a>>1]=(b[a>>1]|0)+(b[y>>1]|0);c[r>>2]=(c[r>>2]|0)+ -1;a=(c[v>>2]|0)+1|0;c[v>>2]=a}while((a|0)<(c[s>>2]|0))}c[n>>2]=(c[n>>2]|0)+1}c[q>>2]=(c[q>>2]|0)+1}i=x;return}function Fc(a,e,f,g,h,j,k,l,m,n,o,p,q,r,s,t,u,v,w){a=a|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;m=m|0;n=n|0;o=o|0;p=p|0;q=q|0;r=r|0;s=s|0;t=t|0;u=u|0;v=v|0;w=w|0;var x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ja=0;U=i;i=i+160|0;ba=U+72|0;P=U+56|0;N=U+4|0;ca=U+52|0;A=U+140|0;ja=U+68|0;E=U+20|0;G=U+24|0;B=U+28|0;C=U+32|0;I=U+36|0;J=U+40|0;K=U+44|0;L=U+48|0;M=U+112|0;x=U+120|0;O=U+128|0;y=U+136|0;Q=U+144|0;aa=U+148|0;Z=U+76|0;_=U+80|0;X=U+84|0;R=U+88|0;z=U+92|0;D=U+96|0;F=U+100|0;H=U+104|0;T=U+12|0;fa=U;da=U+8|0;ga=U+108|0;ea=U+116|0;ha=U+60|0;W=U+124|0;V=U+16|0;Y=U+64|0;S=U+132|0;c[ba>>2]=a;c[P>>2]=e;c[N>>2]=f;c[ca>>2]=g;c[A>>2]=h;c[ja>>2]=j;c[E>>2]=k;c[G>>2]=l;c[B>>2]=m;c[C>>2]=n;c[I>>2]=o;c[J>>2]=p;c[K>>2]=q;c[L>>2]=r;c[M>>2]=s;c[x>>2]=t;c[O>>2]=u;c[y>>2]=v;c[Q>>2]=w;c[B>>2]=(c[B>>2]|0)>0?c[B>>2]|0:0;c[_>>2]=c[(c[ba>>2]|0)+8>>2];c[z>>2]=c[P>>2];c[D>>2]=(c[B>>2]|0)>=8?8:0;c[B>>2]=(c[B>>2]|0)-(c[D>>2]|0);c[H>>2]=0;c[F>>2]=0;do{if((c[L>>2]|0)==2){c[F>>2]=d[14856+((c[N>>2]|0)-(c[P>>2]|0))>>0]|0;if((c[F>>2]|0)>(c[B>>2]|0)){c[F>>2]=0;break}else{c[B>>2]=(c[B>>2]|0)-(c[F>>2]|0);c[H>>2]=(c[B>>2]|0)>=8?8:0;c[B>>2]=(c[B>>2]|0)-(c[H>>2]|0);break}}}while(0);t=c[_>>2]|0;c[T>>2]=ia()|0;w=i;i=i+((4*t|0)+15&-16)|0;t=i;i=i+((4*(c[_>>2]|0)|0)+15&-16)|0;v=i;i=i+((4*(c[_>>2]|0)|0)+15&-16)|0;u=i;i=i+((4*(c[_>>2]|0)|0)+15&-16)|0;c[X>>2]=c[P>>2];while(1){if((c[X>>2]|0)>=(c[N>>2]|0)){break}if((c[L>>2]<<3|0)>(((b[(c[(c[ba>>2]|0)+24>>2]|0)+((c[X>>2]|0)+1<<1)>>1]|0)-(b[(c[(c[ba>>2]|0)+24>>2]|0)+(c[X>>2]<<1)>>1]|0)|0)*3<<c[M>>2]<<3>>4|0)){s=c[L>>2]<<3}else{s=((b[(c[(c[ba>>2]|0)+24>>2]|0)+((c[X>>2]|0)+1<<1)>>1]|0)-(b[(c[(c[ba>>2]|0)+24>>2]|0)+(c[X>>2]<<1)>>1]|0)|0)*3<<c[M>>2]<<3>>4}c[v+(c[X>>2]<<2)>>2]=s;a=$(c[L>>2]|0,(b[(c[(c[ba>>2]|0)+24>>2]|0)+((c[X>>2]|0)+1<<1)>>1]|0)-(b[(c[(c[ba>>2]|0)+24>>2]|0)+(c[X>>2]<<1)>>1]|0)|0)|0;a=$(a,(c[ja>>2]|0)-5-(c[M>>2]|0)|0)|0;a=$(a,(c[N>>2]|0)-(c[X>>2]|0)-1|0)|0;a=($(a,1<<(c[M>>2]|0)+3)|0)>>6;c[u+(c[X>>2]<<2)>>2]=a;if(((b[(c[(c[ba>>2]|0)+24>>2]|0)+((c[X>>2]|0)+1<<1)>>1]|0)-(b[(c[(c[ba>>2]|0)+24>>2]|0)+(c[X>>2]<<1)>>1]|0)<<c[M>>2]|0)==1){a=u+(c[X>>2]<<2)|0;c[a>>2]=(c[a>>2]|0)-(c[L>>2]<<3)}c[X>>2]=(c[X>>2]|0)+1}c[aa>>2]=1;c[Z>>2]=(c[(c[ba>>2]|0)+40>>2]|0)-1;do{c[fa>>2]=0;c[da>>2]=0;c[ga>>2]=(c[aa>>2]|0)+(c[Z>>2]|0)>>1;c[X>>2]=c[N>>2];while(1){a=c[X>>2]|0;c[X>>2]=a+ -1;if((a|0)<=(c[P>>2]|0)){break}c[ha>>2]=(b[(c[(c[ba>>2]|0)+24>>2]|0)+((c[X>>2]|0)+1<<1)>>1]|0)-(b[(c[(c[ba>>2]|0)+24>>2]|0)+(c[X>>2]<<1)>>1]|0);e=$(c[L>>2]|0,c[ha>>2]|0)|0;a=$(c[ga>>2]|0,c[_>>2]|0)|0;a=$(e,d[(c[(c[ba>>2]|0)+44>>2]|0)+(a+(c[X>>2]|0))>>0]|0)|0;c[ea>>2]=a<<c[M>>2]>>2;if((c[ea>>2]|0)>0){if(0>((c[ea>>2]|0)+(c[u+(c[X>>2]<<2)>>2]|0)|0)){ja=0}else{ja=(c[ea>>2]|0)+(c[u+(c[X>>2]<<2)>>2]|0)|0}c[ea>>2]=ja}c[ea>>2]=(c[ea>>2]|0)+(c[(c[ca>>2]|0)+(c[X>>2]<<2)>>2]|0);if((c[ea>>2]|0)<(c[v+(c[X>>2]<<2)>>2]|0)?(c[fa>>2]|0)==0:0){if((c[ea>>2]|0)<(c[L>>2]<<3|0)){continue}c[da>>2]=(c[da>>2]|0)+(c[L>>2]<<3);continue}c[fa>>2]=1;if((c[ea>>2]|0)<(c[(c[A>>2]|0)+(c[X>>2]<<2)>>2]|0)){ja=c[ea>>2]|0}else{ja=c[(c[A>>2]|0)+(c[X>>2]<<2)>>2]|0}c[da>>2]=(c[da>>2]|0)+ja}ja=c[ga>>2]|0;if((c[da>>2]|0)>(c[B>>2]|0)){c[Z>>2]=ja-1}else{c[aa>>2]=ja+1}}while((c[aa>>2]|0)<=(c[Z>>2]|0));a=c[aa>>2]|0;c[aa>>2]=a+ -1;c[Z>>2]=a;c[X>>2]=c[P>>2];while(1){if((c[X>>2]|0)>=(c[N>>2]|0)){break}c[Y>>2]=(b[(c[(c[ba>>2]|0)+24>>2]|0)+((c[X>>2]|0)+1<<1)>>1]|0)-(b[(c[(c[ba>>2]|0)+24>>2]|0)+(c[X>>2]<<1)>>1]|0);e=$(c[L>>2]|0,c[Y>>2]|0)|0;a=$(c[aa>>2]|0,c[_>>2]|0)|0;a=$(e,d[(c[(c[ba>>2]|0)+44>>2]|0)+(a+(c[X>>2]|0))>>0]|0)|0;c[W>>2]=a<<c[M>>2]>>2;if((c[Z>>2]|0)>=(c[(c[ba>>2]|0)+40>>2]|0)){da=c[(c[A>>2]|0)+(c[X>>2]<<2)>>2]|0}else{a=$(c[L>>2]|0,c[Y>>2]|0)|0;da=$(c[Z>>2]|0,c[_>>2]|0)|0;da=$(a,d[(c[(c[ba>>2]|0)+44>>2]|0)+(da+(c[X>>2]|0))>>0]|0)|0;da=da<<c[M>>2]>>2}c[V>>2]=da;if((c[W>>2]|0)>0){if(0>((c[W>>2]|0)+(c[u+(c[X>>2]<<2)>>2]|0)|0)){da=0}else{da=(c[W>>2]|0)+(c[u+(c[X>>2]<<2)>>2]|0)|0}c[W>>2]=da}if((c[V>>2]|0)>0){if(0>((c[V>>2]|0)+(c[u+(c[X>>2]<<2)>>2]|0)|0)){da=0}else{da=(c[V>>2]|0)+(c[u+(c[X>>2]<<2)>>2]|0)|0}c[V>>2]=da}if((c[aa>>2]|0)>0){c[W>>2]=(c[W>>2]|0)+(c[(c[ca>>2]|0)+(c[X>>2]<<2)>>2]|0)}c[V>>2]=(c[V>>2]|0)+(c[(c[ca>>2]|0)+(c[X>>2]<<2)>>2]|0);if((c[(c[ca>>2]|0)+(c[X>>2]<<2)>>2]|0)>0){c[z>>2]=c[X>>2]}if(0>((c[V>>2]|0)-(c[W>>2]|0)|0)){da=0}else{da=(c[V>>2]|0)-(c[W>>2]|0)|0}c[V>>2]=da;c[w+(c[X>>2]<<2)>>2]=c[W>>2];c[t+(c[X>>2]<<2)>>2]=c[V>>2];c[X>>2]=(c[X>>2]|0)+1}c[R>>2]=Gc(c[ba>>2]|0,c[P>>2]|0,c[N>>2]|0,c[z>>2]|0,w,t,v,c[A>>2]|0,c[B>>2]|0,c[C>>2]|0,c[D>>2]|0,c[E>>2]|0,c[F>>2]|0,c[G>>2]|0,c[H>>2]|0,c[I>>2]|0,c[J>>2]|0,c[K>>2]|0,c[L>>2]|0,c[M>>2]|0,c[x>>2]|0,c[O>>2]|0,c[y>>2]|0,c[Q>>2]|0)|0;a=c[R>>2]|0;c[S>>2]=1;na(c[T>>2]|0);i=U;return a|0}function Gc(a,e,f,g,h,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B){a=a|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;m=m|0;n=n|0;o=o|0;p=p|0;q=q|0;r=r|0;s=s|0;t=t|0;u=u|0;v=v|0;w=w|0;x=x|0;y=y|0;z=z|0;A=A|0;B=B|0;var C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0,Aa=0,Ba=0,Ca=0,Da=0;_=i;i=i+224|0;O=_+204|0;da=_+188|0;aa=_+168|0;ta=_+84|0;wa=_+96|0;ya=_+100|0;qa=_+20|0;U=_+24|0;ea=_+28|0;Z=_+32|0;ua=_+36|0;R=_+40|0;ka=_+44|0;T=_+48|0;ja=_+52|0;I=_+56|0;F=_+60|0;K=_+64|0;L=_+68|0;W=_+72|0;ia=_+76|0;ga=_+80|0;na=_+176|0;pa=_+184|0;fa=_+192|0;xa=_+200|0;Ba=_+208|0;Ca=_+104|0;G=_+108|0;P=_+112|0;M=_+116|0;X=_+120|0;ra=_+124|0;ca=_+128|0;ha=_+132|0;za=_+136|0;D=_+140|0;Aa=_+144|0;Da=_+148|0;va=_+152|0;oa=_+156|0;ma=_+160|0;sa=_+164|0;ba=_+16|0;V=_+4|0;Q=_+8|0;H=_;J=_+12|0;N=_+172|0;E=_+88|0;S=_+180|0;Y=_+92|0;C=_+196|0;c[O>>2]=a;c[da>>2]=e;c[aa>>2]=f;c[ta>>2]=g;c[wa>>2]=h;c[ya>>2]=j;c[qa>>2]=k;c[U>>2]=l;c[ea>>2]=m;c[Z>>2]=n;c[ua>>2]=o;c[R>>2]=p;c[ka>>2]=q;c[T>>2]=r;c[ja>>2]=s;c[I>>2]=t;c[F>>2]=u;c[K>>2]=v;c[L>>2]=w;c[W>>2]=x;c[ia>>2]=y;c[ga>>2]=z;c[na>>2]=A;c[pa>>2]=B;c[X>>2]=-1;c[ra>>2]=c[L>>2]<<3;c[M>>2]=(c[L>>2]|0)>1&1;c[P>>2]=c[W>>2]<<3;c[xa>>2]=0;c[Ba>>2]=64;c[Ca>>2]=0;while(1){if((c[Ca>>2]|0)>=6){break}c[Aa>>2]=(c[xa>>2]|0)+(c[Ba>>2]|0)>>1;c[fa>>2]=0;c[za>>2]=0;c[G>>2]=c[aa>>2];while(1){a=c[G>>2]|0;c[G>>2]=a+ -1;if((a|0)<=(c[da>>2]|0)){break}c[Da>>2]=(c[(c[wa>>2]|0)+(c[G>>2]<<2)>>2]|0)+(($(c[Aa>>2]|0,c[(c[ya>>2]|0)+(c[G>>2]<<2)>>2]|0)|0)>>6);if((c[Da>>2]|0)<(c[(c[qa>>2]|0)+(c[G>>2]<<2)>>2]|0)?(c[za>>2]|0)==0:0){if((c[Da>>2]|0)<(c[ra>>2]|0)){continue}c[fa>>2]=(c[fa>>2]|0)+(c[ra>>2]|0);continue}c[za>>2]=1;if((c[Da>>2]|0)<(c[(c[U>>2]|0)+(c[G>>2]<<2)>>2]|0)){B=c[Da>>2]|0}else{B=c[(c[U>>2]|0)+(c[G>>2]<<2)>>2]|0}c[fa>>2]=(c[fa>>2]|0)+B}B=c[Aa>>2]|0;if((c[fa>>2]|0)>(c[ea>>2]|0)){c[Ba>>2]=B}else{c[xa>>2]=B}c[Ca>>2]=(c[Ca>>2]|0)+1}c[fa>>2]=0;c[za>>2]=0;c[G>>2]=c[aa>>2];while(1){a=c[G>>2]|0;c[G>>2]=a+ -1;if((a|0)<=(c[da>>2]|0)){break}c[va>>2]=(c[(c[wa>>2]|0)+(c[G>>2]<<2)>>2]|0)+(($(c[xa>>2]|0,c[(c[ya>>2]|0)+(c[G>>2]<<2)>>2]|0)|0)>>6);do{if((c[va>>2]|0)<(c[(c[qa>>2]|0)+(c[G>>2]<<2)>>2]|0)?(c[za>>2]|0)==0:0){if((c[va>>2]|0)>=(c[ra>>2]|0)){c[va>>2]=c[ra>>2];break}else{c[va>>2]=0;break}}else{la=24}}while(0);if((la|0)==24){la=0;c[za>>2]=1}if((c[va>>2]|0)<(c[(c[U>>2]|0)+(c[G>>2]<<2)>>2]|0)){Aa=c[va>>2]|0}else{Aa=c[(c[U>>2]|0)+(c[G>>2]<<2)>>2]|0}c[va>>2]=Aa;c[(c[I>>2]|0)+(c[G>>2]<<2)>>2]=c[va>>2];c[fa>>2]=(c[fa>>2]|0)+(c[va>>2]|0)}c[X>>2]=c[aa>>2];while(1){c[G>>2]=(c[X>>2]|0)-1;if((c[G>>2]|0)<=(c[ta>>2]|0)){la=31;break}c[ca>>2]=(c[ea>>2]|0)-(c[fa>>2]|0);c[ha>>2]=Hc(c[ca>>2]|0,(b[(c[(c[O>>2]|0)+24>>2]|0)+(c[X>>2]<<1)>>1]|0)-(b[(c[(c[O>>2]|0)+24>>2]|0)+(c[da>>2]<<1)>>1]|0)|0)|0;a=$((b[(c[(c[O>>2]|0)+24>>2]|0)+(c[X>>2]<<1)>>1]|0)-(b[(c[(c[O>>2]|0)+24>>2]|0)+(c[da>>2]<<1)>>1]|0)|0,c[ha>>2]|0)|0;c[ca>>2]=(c[ca>>2]|0)-a;if(((c[ca>>2]|0)-((b[(c[(c[O>>2]|0)+24>>2]|0)+(c[G>>2]<<1)>>1]|0)-(b[(c[(c[O>>2]|0)+24>>2]|0)+(c[da>>2]<<1)>>1]|0))|0)>0){va=(c[ca>>2]|0)-((b[(c[(c[O>>2]|0)+24>>2]|0)+(c[G>>2]<<1)>>1]|0)-(b[(c[(c[O>>2]|0)+24>>2]|0)+(c[da>>2]<<1)>>1]|0))|0}else{va=0}c[sa>>2]=va;c[oa>>2]=(b[(c[(c[O>>2]|0)+24>>2]|0)+(c[X>>2]<<1)>>1]|0)-(b[(c[(c[O>>2]|0)+24>>2]|0)+(c[G>>2]<<1)>>1]|0);a=(c[(c[I>>2]|0)+(c[G>>2]<<2)>>2]|0)+($(c[ha>>2]|0,c[oa>>2]|0)|0)|0;c[ma>>2]=a+(c[sa>>2]|0);if((c[(c[qa>>2]|0)+(c[G>>2]<<2)>>2]|0)>((c[ra>>2]|0)+8|0)){va=c[(c[qa>>2]|0)+(c[G>>2]<<2)>>2]|0}else{va=(c[ra>>2]|0)+8|0}if((c[ma>>2]|0)>=(va|0)){if((c[ga>>2]|0)==0){if((Ob(c[ia>>2]|0,1)|0)!=0){break}}else{if((c[X>>2]|0)<=((c[da>>2]|0)+2|0)){la=42;break}a=$((c[G>>2]|0)<(c[na>>2]|0)?7:9,c[oa>>2]|0)|0;if((c[ma>>2]|0)>(a<<c[W>>2]<<3>>4|0)?(c[G>>2]|0)<=(c[pa>>2]|0):0){la=42;break}Wb(c[ia>>2]|0,0,1)}c[fa>>2]=(c[fa>>2]|0)+8;c[ma>>2]=(c[ma>>2]|0)-8}c[fa>>2]=(c[fa>>2]|0)-((c[(c[I>>2]|0)+(c[G>>2]<<2)>>2]|0)+(c[ka>>2]|0));if((c[ka>>2]|0)>0){c[ka>>2]=d[14856+((c[G>>2]|0)-(c[da>>2]|0))>>0]|0}c[fa>>2]=(c[fa>>2]|0)+(c[ka>>2]|0);if((c[ma>>2]|0)>=(c[ra>>2]|0)){c[fa>>2]=(c[fa>>2]|0)+(c[ra>>2]|0);c[(c[I>>2]|0)+(c[G>>2]<<2)>>2]=c[ra>>2]}else{c[(c[I>>2]|0)+(c[G>>2]<<2)>>2]=0}c[X>>2]=(c[X>>2]|0)+ -1}if((la|0)==31){c[ea>>2]=(c[ea>>2]|0)+(c[ua>>2]|0)}else if((la|0)==42){Wb(c[ia>>2]|0,1,1)}do{if((c[ka>>2]|0)>0){if((c[ga>>2]|0)==0){a=c[da>>2]|0;a=a+(Qb(c[ia>>2]|0,(c[X>>2]|0)+1-(c[da>>2]|0)|0)|0)|0;c[c[R>>2]>>2]=a;break}if((c[c[R>>2]>>2]|0)<(c[X>>2]|0)){ka=c[c[R>>2]>>2]|0}else{ka=c[X>>2]|0}c[c[R>>2]>>2]=ka;Xb(c[ia>>2]|0,(c[c[R>>2]>>2]|0)-(c[da>>2]|0)|0,(c[X>>2]|0)+1-(c[da>>2]|0)|0)}else{c[c[R>>2]>>2]=0}}while(0);if((c[c[R>>2]>>2]|0)<=(c[da>>2]|0)){c[ea>>2]=(c[ea>>2]|0)+(c[ja>>2]|0);c[ja>>2]=0}do{if((c[ja>>2]|0)>0){ia=c[ia>>2]|0;if((c[ga>>2]|0)!=0){Wb(ia,c[c[T>>2]>>2]|0,1);break}else{a=Ob(ia,1)|0;c[c[T>>2]>>2]=a;break}}else{c[c[T>>2]>>2]=0}}while(0);c[ca>>2]=(c[ea>>2]|0)-(c[fa>>2]|0);c[ha>>2]=Hc(c[ca>>2]|0,(b[(c[(c[O>>2]|0)+24>>2]|0)+(c[X>>2]<<1)>>1]|0)-(b[(c[(c[O>>2]|0)+24>>2]|0)+(c[da>>2]<<1)>>1]|0)|0)|0;a=$((b[(c[(c[O>>2]|0)+24>>2]|0)+(c[X>>2]<<1)>>1]|0)-(b[(c[(c[O>>2]|0)+24>>2]|0)+(c[da>>2]<<1)>>1]|0)|0,c[ha>>2]|0)|0;c[ca>>2]=(c[ca>>2]|0)-a;c[G>>2]=c[da>>2];while(1){if((c[G>>2]|0)>=(c[X>>2]|0)){break}e=$(c[ha>>2]|0,(b[(c[(c[O>>2]|0)+24>>2]|0)+((c[G>>2]|0)+1<<1)>>1]|0)-(b[(c[(c[O>>2]|0)+24>>2]|0)+(c[G>>2]<<1)>>1]|0)|0)|0;a=(c[I>>2]|0)+(c[G>>2]<<2)|0;c[a>>2]=(c[a>>2]|0)+e;c[G>>2]=(c[G>>2]|0)+1}c[G>>2]=c[da>>2];while(1){if((c[G>>2]|0)>=(c[X>>2]|0)){break}if((c[ca>>2]|0)<((b[(c[(c[O>>2]|0)+24>>2]|0)+((c[G>>2]|0)+1<<1)>>1]|0)-(b[(c[(c[O>>2]|0)+24>>2]|0)+(c[G>>2]<<1)>>1]|0)|0)){ea=c[ca>>2]|0}else{ea=(b[(c[(c[O>>2]|0)+24>>2]|0)+((c[G>>2]|0)+1<<1)>>1]|0)-(b[(c[(c[O>>2]|0)+24>>2]|0)+(c[G>>2]<<1)>>1]|0)|0}c[ba>>2]=ea;a=(c[I>>2]|0)+(c[G>>2]<<2)|0;c[a>>2]=(c[a>>2]|0)+(c[ba>>2]|0);c[ca>>2]=(c[ca>>2]|0)-(c[ba>>2]|0);c[G>>2]=(c[G>>2]|0)+1}c[D>>2]=0;c[G>>2]=c[da>>2];while(1){if((c[G>>2]|0)>=(c[X>>2]|0)){break}c[V>>2]=(b[(c[(c[O>>2]|0)+24>>2]|0)+((c[G>>2]|0)+1<<1)>>1]|0)-(b[(c[(c[O>>2]|0)+24>>2]|0)+(c[G>>2]<<1)>>1]|0);c[Q>>2]=c[V>>2]<<c[W>>2];c[S>>2]=(c[(c[I>>2]|0)+(c[G>>2]<<2)>>2]|0)+(c[D>>2]|0);ba=c[S>>2]|0;if((c[Q>>2]|0)>1){if((ba-(c[(c[U>>2]|0)+(c[G>>2]<<2)>>2]|0)|0)>0){ba=(c[S>>2]|0)-(c[(c[U>>2]|0)+(c[G>>2]<<2)>>2]|0)|0}else{ba=0}c[E>>2]=ba;c[(c[I>>2]|0)+(c[G>>2]<<2)>>2]=(c[S>>2]|0)-(c[E>>2]|0);ba=$(c[L>>2]|0,c[Q>>2]|0)|0;if(((c[L>>2]|0)==2?(c[Q>>2]|0)>2:0)?(c[c[T>>2]>>2]|0)==0:0){ca=(c[G>>2]|0)<(c[c[R>>2]>>2]|0)}else{ca=0}c[H>>2]=ba+(ca?1:0);c[N>>2]=$(c[H>>2]|0,(b[(c[(c[O>>2]|0)+48>>2]|0)+(c[G>>2]<<1)>>1]|0)+(c[P>>2]|0)|0)|0;c[J>>2]=(c[N>>2]>>1)-((c[H>>2]|0)*21|0);if((c[Q>>2]|0)==2){c[J>>2]=(c[J>>2]|0)+(c[H>>2]<<3>>2)}if(((c[(c[I>>2]|0)+(c[G>>2]<<2)>>2]|0)+(c[J>>2]|0)|0)>=(c[H>>2]<<1<<3|0)){if(((c[(c[I>>2]|0)+(c[G>>2]<<2)>>2]|0)+(c[J>>2]|0)|0)<((c[H>>2]|0)*3<<3|0)){c[J>>2]=(c[J>>2]|0)+(c[N>>2]>>3)}}else{c[J>>2]=(c[J>>2]|0)+(c[N>>2]>>2)}if(0>((c[(c[I>>2]|0)+(c[G>>2]<<2)>>2]|0)+(c[J>>2]|0)+(c[H>>2]<<2)|0)){ba=0}else{ba=(c[(c[I>>2]|0)+(c[G>>2]<<2)>>2]|0)+(c[J>>2]|0)+(c[H>>2]<<2)|0}c[(c[F>>2]|0)+(c[G>>2]<<2)>>2]=ba;a=(Hc(c[(c[F>>2]|0)+(c[G>>2]<<2)>>2]|0,c[H>>2]|0)|0)>>>3;c[(c[F>>2]|0)+(c[G>>2]<<2)>>2]=a;a=$(c[L>>2]|0,c[(c[F>>2]|0)+(c[G>>2]<<2)>>2]|0)|0;if((a|0)>(c[(c[I>>2]|0)+(c[G>>2]<<2)>>2]>>3|0)){c[(c[F>>2]|0)+(c[G>>2]<<2)>>2]=c[(c[I>>2]|0)+(c[G>>2]<<2)>>2]>>c[M>>2]>>3}if((c[(c[F>>2]|0)+(c[G>>2]<<2)>>2]|0)<8){ba=c[(c[F>>2]|0)+(c[G>>2]<<2)>>2]|0}else{ba=8}c[(c[F>>2]|0)+(c[G>>2]<<2)>>2]=ba;e=$(c[(c[F>>2]|0)+(c[G>>2]<<2)>>2]|0,c[H>>2]<<3)|0;c[(c[K>>2]|0)+(c[G>>2]<<2)>>2]=(e|0)>=((c[(c[I>>2]|0)+(c[G>>2]<<2)>>2]|0)+(c[J>>2]|0)|0)&1;e=($(c[L>>2]|0,c[(c[F>>2]|0)+(c[G>>2]<<2)>>2]|0)|0)<<3;a=(c[I>>2]|0)+(c[G>>2]<<2)|0;c[a>>2]=(c[a>>2]|0)-e}else{if(0>(ba-(c[L>>2]<<3)|0)){ba=0}else{ba=(c[S>>2]|0)-(c[L>>2]<<3)|0}c[E>>2]=ba;c[(c[I>>2]|0)+(c[G>>2]<<2)>>2]=(c[S>>2]|0)-(c[E>>2]|0);c[(c[F>>2]|0)+(c[G>>2]<<2)>>2]=0;c[(c[K>>2]|0)+(c[G>>2]<<2)>>2]=1}if((c[E>>2]|0)>0){if((c[E>>2]>>(c[M>>2]|0)+3|0)<(8-(c[(c[F>>2]|0)+(c[G>>2]<<2)>>2]|0)|0)){ba=c[E>>2]>>(c[M>>2]|0)+3}else{ba=8-(c[(c[F>>2]|0)+(c[G>>2]<<2)>>2]|0)|0}c[Y>>2]=ba;a=(c[F>>2]|0)+(c[G>>2]<<2)|0;c[a>>2]=(c[a>>2]|0)+(c[Y>>2]|0);c[C>>2]=($(c[Y>>2]|0,c[L>>2]|0)|0)<<3;c[(c[K>>2]|0)+(c[G>>2]<<2)>>2]=(c[C>>2]|0)>=((c[E>>2]|0)-(c[D>>2]|0)|0)&1;c[E>>2]=(c[E>>2]|0)-(c[C>>2]|0)}c[D>>2]=c[E>>2];c[G>>2]=(c[G>>2]|0)+1}c[c[Z>>2]>>2]=c[D>>2];while(1){if((c[G>>2]|0)>=(c[aa>>2]|0)){break}c[(c[F>>2]|0)+(c[G>>2]<<2)>>2]=c[(c[I>>2]|0)+(c[G>>2]<<2)>>2]>>c[M>>2]>>3;c[(c[I>>2]|0)+(c[G>>2]<<2)>>2]=0;c[(c[K>>2]|0)+(c[G>>2]<<2)>>2]=(c[(c[F>>2]|0)+(c[G>>2]<<2)>>2]|0)<1&1;c[G>>2]=(c[G>>2]|0)+1}i=_;return c[X>>2]|0}function Hc(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;f=i;i=i+16|0;e=f+4|0;d=f;c[e>>2]=a;c[d>>2]=b;i=f;return((c[e>>2]|0)>>>0)/((c[d>>2]|0)>>>0)|0|0}function Ic(a,d,e,f,g,h){a=a|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0;G=i;i=i+96|0;l=G+64|0;y=G+24|0;s=G+44|0;H=G+52|0;C=G+12|0;B=G+40|0;u=G+48|0;z=G+56|0;w=G+74|0;t=G+8|0;A=G+4|0;v=G+32|0;o=G+80|0;D=G+16|0;F=G+36|0;k=G+76|0;x=G+72|0;j=G+28|0;r=G+20|0;q=G+78|0;m=G;n=G+70|0;p=G+68|0;E=G+60|0;c[l>>2]=a;c[y>>2]=d;c[s>>2]=e;c[H>>2]=f;c[C>>2]=g;c[B>>2]=h;f=c[y>>2]|0;c[F>>2]=ia()|0;g=i;i=i+((2*f|0)+15&-16)|0;f=i;i=i+((4*(c[y>>2]|0)|0)+15&-16)|0;e=i;i=i+((2*(c[y>>2]|0)|0)+15&-16)|0;Jc(c[l>>2]|0,c[y>>2]|0,1,c[C>>2]|0,c[s>>2]|0,c[H>>2]|0);c[A>>2]=0;c[z>>2]=0;do{h=e+(c[z>>2]<<1)|0;if((b[(c[l>>2]|0)+(c[z>>2]<<1)>>1]|0)>0){b[h>>1]=1}else{b[h>>1]=-1;b[(c[l>>2]|0)+(c[z>>2]<<1)>>1]=0-(b[(c[l>>2]|0)+(c[z>>2]<<1)>>1]|0)}c[f+(c[z>>2]<<2)>>2]=0;b[g+(c[z>>2]<<1)>>1]=0;H=(c[z>>2]|0)+1|0;c[z>>2]=H}while((H|0)<(c[y>>2]|0));b[o>>1]=0;c[v>>2]=0;c[t>>2]=c[s>>2];if((c[s>>2]|0)>(c[y>>2]>>1|0)){c[z>>2]=0;do{c[A>>2]=(c[A>>2]|0)+(b[(c[l>>2]|0)+(c[z>>2]<<1)>>1]|0);H=(c[z>>2]|0)+1|0;c[z>>2]=H}while((H|0)<(c[y>>2]|0));if((c[A>>2]|0)<=(c[s>>2]|0)){b[c[l>>2]>>1]=16384;c[z>>2]=1;do{b[(c[l>>2]|0)+(c[z>>2]<<1)>>1]=0;H=(c[z>>2]|0)+1|0;c[z>>2]=H}while((H|0)<(c[y>>2]|0));c[A>>2]=16384}a=((c[s>>2]|0)-1&65535)<<16>>16;a=$(a,((kc(c[A>>2]|0)|0)>>16&65535)<<16>>16)|0;H=((c[s>>2]|0)-1&65535)<<16>>16;b[k>>1]=a+(($(H,(kc(c[A>>2]|0)|0)&65535&65535)|0)>>16);c[z>>2]=0;do{H=($(b[(c[l>>2]|0)+(c[z>>2]<<1)>>1]|0,b[k>>1]|0)|0)>>15;c[f+(c[z>>2]<<2)>>2]=H;b[g+(c[z>>2]<<1)>>1]=c[f+(c[z>>2]<<2)>>2];b[o>>1]=(b[o>>1]|0)+($(b[g+(c[z>>2]<<1)>>1]|0,b[g+(c[z>>2]<<1)>>1]|0)|0);c[v>>2]=(c[v>>2]|0)+($(b[(c[l>>2]|0)+(c[z>>2]<<1)>>1]|0,b[g+(c[z>>2]<<1)>>1]|0)|0);H=g+(c[z>>2]<<1)|0;b[H>>1]=b[H>>1]<<1;c[t>>2]=(c[t>>2]|0)-(c[f+(c[z>>2]<<2)>>2]|0);H=(c[z>>2]|0)+1|0;c[z>>2]=H}while((H|0)<(c[y>>2]|0))}if((c[t>>2]|0)>((c[y>>2]|0)+3|0)){b[x>>1]=c[t>>2];b[o>>1]=(b[o>>1]|0)+($(b[x>>1]|0,b[x>>1]|0)|0);b[o>>1]=(b[o>>1]|0)+($(b[x>>1]|0,b[g>>1]|0)|0);c[f>>2]=(c[f>>2]|0)+(c[t>>2]|0);c[t>>2]=0}b[w>>1]=1;c[u>>2]=0;while(1){if((c[u>>2]|0)>=(c[t>>2]|0)){break}c[r>>2]=-32767;b[q>>1]=0;c[m>>2]=1+((Kc((c[s>>2]|0)-(c[t>>2]|0)+(c[u>>2]|0)+1|0)|0)<<16>>16);c[j>>2]=0;b[o>>1]=(b[o>>1]|0)+1;c[z>>2]=0;do{b[n>>1]=(c[v>>2]|0)+(b[(c[l>>2]|0)+(c[z>>2]<<1)>>1]|0)>>c[m>>2];b[p>>1]=(b[o>>1]|0)+(b[g+(c[z>>2]<<1)>>1]|0);b[n>>1]=($(b[n>>1]|0,b[n>>1]|0)|0)>>15;H=$(b[q>>1]|0,b[n>>1]|0)|0;if((H|0)>($(b[p>>1]|0,(c[r>>2]&65535)<<16>>16)|0)){b[q>>1]=b[p>>1]|0;c[r>>2]=b[n>>1]|0;c[j>>2]=c[z>>2]}H=(c[z>>2]|0)+1|0;c[z>>2]=H}while((H|0)<(c[y>>2]|0));c[v>>2]=(c[v>>2]|0)+(b[(c[l>>2]|0)+(c[j>>2]<<1)>>1]|0);b[o>>1]=(b[o>>1]|0)+(b[g+(c[j>>2]<<1)>>1]|0);H=g+(c[j>>2]<<1)|0;b[H>>1]=(b[H>>1]|0)+(b[w>>1]<<1);H=f+(c[j>>2]<<2)|0;c[H>>2]=(c[H>>2]|0)+1;c[u>>2]=(c[u>>2]|0)+1}c[z>>2]=0;do{H=($(b[e+(c[z>>2]<<1)>>1]|0,b[(c[l>>2]|0)+(c[z>>2]<<1)>>1]|0)|0)&65535;b[(c[l>>2]|0)+(c[z>>2]<<1)>>1]=H;if((b[e+(c[z>>2]<<1)>>1]|0)<0){c[f+(c[z>>2]<<2)>>2]=0-(c[f+(c[z>>2]<<2)>>2]|0)}H=(c[z>>2]|0)+1|0;c[z>>2]=H}while((H|0)<(c[y>>2]|0));Cb(f,c[y>>2]|0,c[s>>2]|0,c[B>>2]|0);c[D>>2]=Lc(f,c[y>>2]|0,c[C>>2]|0)|0;H=c[D>>2]|0;c[E>>2]=1;na(c[F>>2]|0);i=G;return H|0}function Jc(a,d,e,f,g,h){a=a|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0;s=i;i=i+48|0;p=s+12|0;n=s+16|0;k=s+8|0;m=s+20|0;u=s+28|0;j=s;l=s+32|0;q=s+36|0;r=s+38|0;v=s+42|0;w=s+40|0;o=s+4|0;t=s+24|0;c[p>>2]=a;c[n>>2]=d;c[k>>2]=e;c[m>>2]=f;c[u>>2]=g;c[j>>2]=h;c[o>>2]=0;if((c[u>>2]<<1|0)>=(c[n>>2]|0)){i=s;return}if((c[j>>2]|0)==0){i=s;return}c[t>>2]=c[14880+((c[j>>2]|0)-1<<2)>>2];a=(((c[n>>2]&65535)<<16>>16)*32767>>16&65535)<<16>>16;a=($(a,((kc((c[n>>2]|0)+($(c[t>>2]|0,c[u>>2]|0)|0)|0)|0)>>16&65535)<<16>>16)|0)<<1;d=(((c[n>>2]&65535)<<16>>16)*32767>>16&65535)<<16>>16;d=a+(($(d,(kc((c[n>>2]|0)+($(c[t>>2]|0,c[u>>2]|0)|0)|0)|0)&65535&65535)|0)>>15)|0;a=((kc((c[n>>2]|0)+($(c[t>>2]|0,c[u>>2]|0)|0)|0)|0)>>16&65535)<<16>>16;b[v>>1]=d+(($(a,((c[n>>2]&65535)<<16>>16)*32767&65535&65535)|0)>>15);b[w>>1]=($(b[v>>1]|0,b[v>>1]|0)|0)>>15>>1;b[q>>1]=nc(b[w>>1]|0)|0;b[r>>1]=nc(32767-(b[w>>1]|0)|0)|0;a:do{if((c[n>>2]|0)>=(c[m>>2]<<3|0)){c[o>>2]=1;while(1){a=$(c[o>>2]|0,c[o>>2]|0)|0;a=$(a+(c[o>>2]|0)|0,c[m>>2]|0)|0;if((a+(c[m>>2]>>2)|0)>=(c[n>>2]|0)){break a}c[o>>2]=(c[o>>2]|0)+1}}}while(0);c[n>>2]=Tc(c[n>>2]|0,c[m>>2]|0)|0;c[l>>2]=0;while(1){if((c[l>>2]|0)>=(c[m>>2]|0)){break}if((c[k>>2]|0)>=0){a=(c[p>>2]|0)+(($(c[l>>2]|0,c[n>>2]|0)|0)<<1)|0;Uc(a,c[n>>2]|0,1,b[q>>1]|0,0-(b[r>>1]|0)&65535);if((c[o>>2]|0)!=0){a=(c[p>>2]|0)+(($(c[l>>2]|0,c[n>>2]|0)|0)<<1)|0;Uc(a,c[n>>2]|0,c[o>>2]|0,b[r>>1]|0,0-(b[q>>1]|0)&65535)}}else{if((c[o>>2]|0)!=0){a=(c[p>>2]|0)+(($(c[l>>2]|0,c[n>>2]|0)|0)<<1)|0;Uc(a,c[n>>2]|0,c[o>>2]|0,b[r>>1]|0,b[q>>1]|0)}a=(c[p>>2]|0)+(($(c[l>>2]|0,c[n>>2]|0)|0)<<1)|0;Uc(a,c[n>>2]|0,1,b[q>>1]|0,b[r>>1]|0)}c[l>>2]=(c[l>>2]|0)+1}i=s;return}function Kc(a){a=a|0;var b=0,d=0;b=i;i=i+16|0;d=b;c[d>>2]=a;a=32-(We(c[d>>2]|0)|0)-1&65535;i=b;return a|0}function Lc(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0;k=i;i=i+48|0;f=k+28|0;m=k+16|0;o=k+4|0;e=k+8|0;g=k+32|0;l=k;j=k+12|0;n=k+24|0;h=k+20|0;c[m>>2]=a;c[o>>2]=b;c[e>>2]=d;if((c[e>>2]|0)<=1){c[f>>2]=1;a=c[f>>2]|0;i=k;return a|0}c[l>>2]=Tc(c[o>>2]|0,c[e>>2]|0)|0;c[g>>2]=0;c[j>>2]=0;do{c[h>>2]=0;c[n>>2]=0;do{a=$(c[j>>2]|0,c[l>>2]|0)|0;c[h>>2]=c[h>>2]|c[(c[m>>2]|0)+(a+(c[n>>2]|0)<<2)>>2];a=(c[n>>2]|0)+1|0;c[n>>2]=a}while((a|0)<(c[l>>2]|0));c[g>>2]=c[g>>2]|((c[h>>2]|0)!=0&1)<<c[j>>2];a=(c[j>>2]|0)+1|0;c[j>>2]=a}while((a|0)<(c[e>>2]|0));c[f>>2]=c[g>>2];a=c[f>>2]|0;i=k;return a|0}function Mc(a,d,e,f,g,h,j){a=a|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0;k=i;i=i+48|0;r=k;o=k+16|0;q=k+4|0;p=k+8|0;n=k+32|0;u=k+36|0;s=k+40|0;t=k+24|0;m=k+20|0;l=k+28|0;c[r>>2]=a;c[o>>2]=d;c[q>>2]=e;c[p>>2]=f;c[n>>2]=g;c[u>>2]=h;b[s>>1]=j;d=c[o>>2]|0;c[l>>2]=ia()|0;a=i;i=i+((4*d|0)+15&-16)|0;c[t>>2]=Eb(a,c[o>>2]|0,c[q>>2]|0,c[u>>2]|0)|0;Nc(a,c[r>>2]|0,c[o>>2]|0,c[t>>2]|0,b[s>>1]|0);Jc(c[r>>2]|0,c[o>>2]|0,-1,c[n>>2]|0,c[q>>2]|0,c[p>>2]|0);c[m>>2]=Lc(a,c[o>>2]|0,c[n>>2]|0)|0;a=c[m>>2]|0;c[k+12>>2]=1;na(c[l>>2]|0);i=k;return a|0}function Nc(a,d,e,f,g){a=a|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;p=i;i=i+32|0;k=p+8|0;n=p+16|0;o=p+24|0;r=p+12|0;q=p+28|0;l=p;m=p+20|0;h=p+4|0;j=p+30|0;c[k>>2]=a;c[n>>2]=d;c[o>>2]=e;c[r>>2]=f;b[q>>1]=g;c[m>>2]=(Kc(c[r>>2]|0)|0)<<16>>16>>1;f=c[r>>2]|0;g=(c[m>>2]|0)-7<<1;if(((c[m>>2]|0)-7<<1|0)>0){g=f>>g}else{g=f<<0-g}c[h>>2]=g;r=(lc(c[h>>2]|0)|0)<<16>>16;b[j>>1]=16384+($(r,b[q>>1]|0)|0)>>15;c[l>>2]=0;do{r=$(b[j>>1]|0,(c[(c[k>>2]|0)+(c[l>>2]<<2)>>2]&65535)<<16>>16)|0;b[(c[n>>2]|0)+(c[l>>2]<<1)>>1]=r+(1<<(c[m>>2]|0)+1>>1)>>(c[m>>2]|0)+1;r=(c[l>>2]|0)+1|0;c[l>>2]=r}while((r|0)<(c[o>>2]|0));i=p;return}function Oc(a,d,e){a=a|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;m=i;i=i+32|0;o=m+4|0;h=m+16|0;n=m+28|0;g=m+8|0;l=m+24|0;p=m;j=m+30|0;f=m+20|0;k=m+12|0;c[o>>2]=a;c[h>>2]=d;b[n>>1]=e;c[p>>2]=1+(Pc(c[o>>2]|0,c[o>>2]|0,c[h>>2]|0)|0);c[l>>2]=(Kc(c[p>>2]|0)|0)<<16>>16>>1;d=c[p>>2]|0;e=(c[l>>2]|0)-7<<1;if(((c[l>>2]|0)-7<<1|0)>0){e=d>>e}else{e=d<<0-e}c[f>>2]=e;p=(lc(c[f>>2]|0)|0)<<16>>16;b[j>>1]=16384+($(p,b[n>>1]|0)|0)>>15;c[k>>2]=c[o>>2];c[g>>2]=0;while(1){if((c[g>>2]|0)>=(c[h>>2]|0)){break}p=$(b[j>>1]|0,b[c[k>>2]>>1]|0)|0;b[c[k>>2]>>1]=p+(1<<(c[l>>2]|0)+1>>1)>>(c[l>>2]|0)+1;c[k>>2]=(c[k>>2]|0)+2;c[g>>2]=(c[g>>2]|0)+1}i=m;return}function Pc(a,d,e){a=a|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0;f=i;i=i+32|0;k=f+16|0;l=f+12|0;j=f+8|0;h=f+4|0;g=f;c[k>>2]=a;c[l>>2]=d;c[j>>2]=e;c[g>>2]=0;c[h>>2]=0;while(1){e=c[g>>2]|0;if((c[h>>2]|0)>=(c[j>>2]|0)){break}c[g>>2]=e+($(b[(c[k>>2]|0)+(c[h>>2]<<1)>>1]|0,b[(c[l>>2]|0)+(c[h>>2]<<1)>>1]|0)|0);c[h>>2]=(c[h>>2]|0)+1}i=f;return e|0}function Qc(a,d,e,f){a=a|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0;o=i;i=i+48|0;p=o+24|0;g=o+20|0;t=o+28|0;n=o+16|0;q=o+4|0;h=o;j=o+34|0;k=o+36|0;m=o+8|0;l=o+12|0;r=o+32|0;s=o+38|0;c[p>>2]=a;c[g>>2]=d;c[t>>2]=e;c[n>>2]=f;c[l>>2]=1;c[m>>2]=1;if((c[t>>2]|0)==0){a=Pc(c[p>>2]|0,c[p>>2]|0,c[n>>2]|0)|0;c[m>>2]=(c[m>>2]|0)+a;a=Pc(c[g>>2]|0,c[g>>2]|0,c[n>>2]|0)|0;c[l>>2]=(c[l>>2]|0)+a;a=c[m>>2]|0;a=mc(a)|0;a=a&65535;b[j>>1]=a;a=c[l>>2]|0;a=mc(a)|0;a=a&65535;b[k>>1]=a;a=b[k>>1]|0;t=b[j>>1]|0;t=Rc(a,t)|0;t=t<<16>>16;t=t*20861|0;t=t>>15;c[h>>2]=t;t=c[h>>2]|0;i=o;return t|0}c[q>>2]=0;while(1){if((c[q>>2]|0)>=(c[n>>2]|0)){break}b[r>>1]=((b[(c[p>>2]|0)+(c[q>>2]<<1)>>1]>>1&65535)<<16>>16)+((b[(c[g>>2]|0)+(c[q>>2]<<1)>>1]>>1&65535)<<16>>16);b[s>>1]=((b[(c[p>>2]|0)+(c[q>>2]<<1)>>1]>>1&65535)<<16>>16)-((b[(c[g>>2]|0)+(c[q>>2]<<1)>>1]>>1&65535)<<16>>16);c[m>>2]=(c[m>>2]|0)+($(b[r>>1]|0,b[r>>1]|0)|0);c[l>>2]=(c[l>>2]|0)+($(b[s>>1]|0,b[s>>1]|0)|0);c[q>>2]=(c[q>>2]|0)+1}a=c[m>>2]|0;a=mc(a)|0;a=a&65535;b[j>>1]=a;a=c[l>>2]|0;a=mc(a)|0;a=a&65535;b[k>>1]=a;a=b[k>>1]|0;t=b[j>>1]|0;t=Rc(a,t)|0;t=t<<16>>16;t=t*20861|0;t=t>>15;c[h>>2]=t;t=c[h>>2]|0;i=o;return t|0}function Rc(a,d){a=a|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0;e=i;i=i+16|0;f=e+12|0;h=e+10|0;j=e+8|0;g=e+4|0;k=e;b[h>>1]=a;b[j>>1]=d;if((b[h>>1]|0)<(b[j>>1]|0)){a=(b[h>>1]<<15>>16&65535)<<16>>16;a=($(a,((kc(b[j>>1]|0)|0)>>16&65535)<<16>>16)|0)<<1;k=(b[h>>1]<<15>>16&65535)<<16>>16;k=a+(($(k,(kc(b[j>>1]|0)|0)&65535&65535)|0)>>15)|0;a=((kc(b[j>>1]|0)|0)>>16&65535)<<16>>16;a=k+(($(a,b[h>>1]<<15&65535&65535)|0)>>15)|0;c[g>>2]=a;c[g>>2]=(c[g>>2]|0)>=32767?32767:a;b[f>>1]=(Sc(c[g>>2]&65535)|0)<<16>>16>>1;a=b[f>>1]|0;i=e;return a|0}else{a=(b[j>>1]<<15>>16&65535)<<16>>16;a=($(a,((kc(b[h>>1]|0)|0)>>16&65535)<<16>>16)|0)<<1;g=(b[j>>1]<<15>>16&65535)<<16>>16;g=a+(($(g,(kc(b[h>>1]|0)|0)&65535&65535)|0)>>15)|0;a=((kc(b[h>>1]|0)|0)>>16&65535)<<16>>16;a=g+(($(a,b[j>>1]<<15&65535&65535)|0)>>15)|0;c[k>>2]=a;c[k>>2]=(c[k>>2]|0)>=32767?32767:a;b[f>>1]=25736-((Sc(c[k>>2]&65535)|0)<<16>>16>>1);a=b[f>>1]|0;i=e;return a|0}return 0}function Sc(a){a=a|0;var c=0,d=0;c=i;i=i+16|0;d=c;b[d>>1]=a;a=16384+($(b[d>>1]|0,(32767+(16384+($(b[d>>1]|0,((16384+($(b[d>>1]|0,((16384+((b[d>>1]|0)*4936|0)>>15)+ -11943&65535)<<16>>16)|0)>>15)+ -21&65535)<<16>>16)|0)>>15)&65535)<<16>>16)|0)>>15&65535;i=c;return a|0}function Tc(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;f=i;i=i+16|0;e=f+4|0;d=f;c[e>>2]=a;c[d>>2]=b;i=f;return((c[e>>2]|0)>>>0)/((c[d>>2]|0)>>>0)|0|0}function Uc(a,d,e,f,g){a=a|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0;q=i;i=i+48|0;r=q+4|0;s=q+8|0;m=q;o=q+24|0;p=q+20|0;j=q+16|0;h=q+22|0;k=q+12|0;t=q+26|0;u=q+28|0;l=q+30|0;n=q+32|0;c[r>>2]=a;c[s>>2]=d;c[m>>2]=e;b[o>>1]=f;b[p>>1]=g;c[k>>2]=c[r>>2];b[h>>1]=0-(b[p>>1]|0);c[j>>2]=0;while(1){if((c[j>>2]|0)>=((c[s>>2]|0)-(c[m>>2]|0)|0)){break}b[t>>1]=b[c[k>>2]>>1]|0;b[u>>1]=b[(c[k>>2]|0)+(c[m>>2]<<1)>>1]|0;d=$(b[o>>1]|0,b[u>>1]|0)|0;d=d+($(b[p>>1]|0,b[t>>1]|0)|0)+16384>>15&65535;b[(c[k>>2]|0)+(c[m>>2]<<1)>>1]=d;d=$(b[o>>1]|0,b[t>>1]|0)|0;d=d+($(b[h>>1]|0,b[u>>1]|0)|0)+16384>>15&65535;a=c[k>>2]|0;c[k>>2]=a+2;b[a>>1]=d;c[j>>2]=(c[j>>2]|0)+1}c[k>>2]=(c[r>>2]|0)+((c[s>>2]|0)-(c[m>>2]<<1)-1<<1);c[j>>2]=(c[s>>2]|0)-(c[m>>2]<<1)-1;while(1){if((c[j>>2]|0)<0){break}b[l>>1]=b[c[k>>2]>>1]|0;b[n>>1]=b[(c[k>>2]|0)+(c[m>>2]<<1)>>1]|0;d=$(b[o>>1]|0,b[n>>1]|0)|0;d=d+($(b[p>>1]|0,b[l>>1]|0)|0)+16384>>15&65535;b[(c[k>>2]|0)+(c[m>>2]<<1)>>1]=d;d=$(b[o>>1]|0,b[l>>1]|0)|0;d=d+($(b[h>>1]|0,b[n>>1]|0)|0)+16384>>15&65535;a=c[k>>2]|0;c[k>>2]=a+ -2;b[a>>1]=d;c[j>>2]=(c[j>>2]|0)+ -1}i=q;return}function Vc(a){a=a|0;var d=0,e=0,f=0,g=0,h=0;e=i;i=i+16|0;d=e+12|0;f=e+8|0;h=e+4|0;g=e;c[d>>2]=a;c[h>>2]=32767/((c[(c[d>>2]|0)+2340>>2]|0)+1|0)|0;c[g>>2]=0;c[f>>2]=0;while(1){if((c[f>>2]|0)>=(c[(c[d>>2]|0)+2340>>2]|0)){break}c[g>>2]=(c[g>>2]|0)+(c[h>>2]|0);b[(c[d>>2]|0)+4052+(c[f>>2]<<1)>>1]=c[g>>2];c[f>>2]=(c[f>>2]|0)+1}c[(c[d>>2]|0)+4148>>2]=0;c[(c[d>>2]|0)+4152>>2]=3176576;i=e;return}function Wc(a,d,e,f){a=a|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0;j=i;i=i+80|0;m=j+12|0;t=j+16|0;h=j+28|0;l=j+4|0;k=j+32|0;r=j+36|0;g=j+40|0;s=j+24|0;q=j+20|0;n=j+48|0;o=j;p=j+8|0;c[m>>2]=a;c[t>>2]=d;c[h>>2]=e;c[l>>2]=f;c[o>>2]=(c[m>>2]|0)+2772;if((c[(c[m>>2]|0)+2316>>2]|0)!=(c[(c[o>>2]|0)+1384>>2]|0)){Vc(c[m>>2]|0);c[(c[o>>2]|0)+1384>>2]=c[(c[m>>2]|0)+2316>>2]}a:do{if((c[(c[m>>2]|0)+4160>>2]|0)==0?(c[(c[m>>2]|0)+4164>>2]|0)==0:0){c[k>>2]=0;while(1){if((c[k>>2]|0)>=(c[(c[m>>2]|0)+2340>>2]|0)){break}a=(c[o>>2]|0)+1280+(c[k>>2]<<1)|0;b[a>>1]=(b[a>>1]|0)+((((b[(c[m>>2]|0)+2344+(c[k>>2]<<1)>>1]|0)-(b[(c[o>>2]|0)+1280+(c[k>>2]<<1)>>1]|0)>>16)*16348|0)+(((b[(c[m>>2]|0)+2344+(c[k>>2]<<1)>>1]|0)-(b[(c[o>>2]|0)+1280+(c[k>>2]<<1)>>1]|0)&65535)*16348>>16));c[k>>2]=(c[k>>2]|0)+1}c[s>>2]=0;c[r>>2]=0;c[k>>2]=0;while(1){if((c[k>>2]|0)>=(c[(c[m>>2]|0)+2324>>2]|0)){break}if((c[(c[t>>2]|0)+16+(c[k>>2]<<2)>>2]|0)>(c[s>>2]|0)){c[s>>2]=c[(c[t>>2]|0)+16+(c[k>>2]<<2)>>2];c[r>>2]=c[k>>2]}c[k>>2]=(c[k>>2]|0)+1}$e((c[o>>2]|0)+(c[(c[m>>2]|0)+2332>>2]<<2)|0,c[o>>2]|0,($((c[(c[m>>2]|0)+2324>>2]|0)-1|0,c[(c[m>>2]|0)+2332>>2]|0)|0)<<2|0)|0;a=$(c[r>>2]|0,c[(c[m>>2]|0)+2332>>2]|0)|0;Ze(c[o>>2]|0,(c[m>>2]|0)+4+(a<<2)|0,c[(c[m>>2]|0)+2332>>2]<<2|0)|0;c[k>>2]=0;while(1){if((c[k>>2]|0)>=(c[(c[m>>2]|0)+2324>>2]|0)){break a}a=(c[o>>2]|0)+1376|0;c[a>>2]=(c[a>>2]|0)+((((c[(c[t>>2]|0)+16+(c[k>>2]<<2)>>2]|0)-(c[(c[o>>2]|0)+1376>>2]|0)>>16)*4634|0)+(((c[(c[t>>2]|0)+16+(c[k>>2]<<2)>>2]|0)-(c[(c[o>>2]|0)+1376>>2]|0)&65535)*4634>>16));c[k>>2]=(c[k>>2]|0)+1}}}while(0);if((c[(c[m>>2]|0)+4160>>2]|0)==0){Xe((c[o>>2]|0)+1312|0,0,c[(c[m>>2]|0)+2340>>2]<<2|0)|0;i=j;return}a=(c[l>>2]|0)+16|0;c[p>>2]=ia()|0;r=i;i=i+((4*a|0)+15&-16)|0;a=$(b[(c[m>>2]|0)+4224>>1]>>16,(c[(c[m>>2]|0)+4244>>2]&65535)<<16>>16)|0;a=a+(($(b[(c[m>>2]|0)+4224>>1]&65535,(c[(c[m>>2]|0)+4244>>2]&65535)<<16>>16)|0)>>16)|0;c[q>>2]=a+($(b[(c[m>>2]|0)+4224>>1]|0,(c[(c[m>>2]|0)+4244>>2]>>15)+1>>1)|0);if((c[q>>2]|0)<2097152?(c[(c[o>>2]|0)+1376>>2]|0)<=8388608:0){a=$(c[q>>2]>>16,(c[q>>2]&65535)<<16>>16)|0;a=a+(($(c[q>>2]&65535,(c[q>>2]&65535)<<16>>16)|0)>>16)|0;c[q>>2]=a+($(c[q>>2]|0,(c[q>>2]>>15)+1>>1)|0);a=$(c[(c[o>>2]|0)+1376>>2]>>16,(c[(c[o>>2]|0)+1376>>2]&65535)<<16>>16)|0;a=a+(($(c[(c[o>>2]|0)+1376>>2]&65535,(c[(c[o>>2]|0)+1376>>2]&65535)<<16>>16)|0)>>16)|0;a=a+($(c[(c[o>>2]|0)+1376>>2]|0,(c[(c[o>>2]|0)+1376>>2]>>15)+1>>1)|0)|0;c[q>>2]=a-(c[q>>2]<<5);c[q>>2]=(Xc(c[q>>2]|0)|0)<<8}else{c[q>>2]=$(c[q>>2]>>16,c[q>>2]>>16)|0;a=$(c[(c[o>>2]|0)+1376>>2]>>16,c[(c[o>>2]|0)+1376>>2]>>16)|0;c[q>>2]=a-(c[q>>2]<<5);c[q>>2]=(Xc(c[q>>2]|0)|0)<<16}Yc(r+64|0,c[o>>2]|0,c[q>>2]|0,c[l>>2]|0,(c[o>>2]|0)+1380|0);fd(n,(c[o>>2]|0)+1280|0,c[(c[m>>2]|0)+2340>>2]|0);s=r+0|0;f=(c[o>>2]|0)+1312|0;q=s+64|0;do{c[s>>2]=c[f>>2];s=s+4|0;f=f+4|0}while((s|0)<(q|0));c[k>>2]=0;while(1){if((c[k>>2]|0)>=(c[l>>2]|0)){break}c[g>>2]=c[(c[m>>2]|0)+2340>>2]>>1;a=$(c[r+(16+(c[k>>2]|0)-1<<2)>>2]>>16,b[n>>1]|0)|0;c[g>>2]=(c[g>>2]|0)+(a+(($(c[r+(16+(c[k>>2]|0)-1<<2)>>2]&65535,b[n>>1]|0)|0)>>16));a=$(c[r+(16+(c[k>>2]|0)-2<<2)>>2]>>16,b[n+2>>1]|0)|0;c[g>>2]=(c[g>>2]|0)+(a+(($(c[r+(16+(c[k>>2]|0)-2<<2)>>2]&65535,b[n+2>>1]|0)|0)>>16));a=$(c[r+(16+(c[k>>2]|0)-3<<2)>>2]>>16,b[n+4>>1]|0)|0;c[g>>2]=(c[g>>2]|0)+(a+(($(c[r+(16+(c[k>>2]|0)-3<<2)>>2]&65535,b[n+4>>1]|0)|0)>>16));a=$(c[r+(16+(c[k>>2]|0)-4<<2)>>2]>>16,b[n+6>>1]|0)|0;c[g>>2]=(c[g>>2]|0)+(a+(($(c[r+(16+(c[k>>2]|0)-4<<2)>>2]&65535,b[n+6>>1]|0)|0)>>16));a=$(c[r+(16+(c[k>>2]|0)-5<<2)>>2]>>16,b[n+8>>1]|0)|0;c[g>>2]=(c[g>>2]|0)+(a+(($(c[r+(16+(c[k>>2]|0)-5<<2)>>2]&65535,b[n+8>>1]|0)|0)>>16));a=$(c[r+(16+(c[k>>2]|0)-6<<2)>>2]>>16,b[n+10>>1]|0)|0;c[g>>2]=(c[g>>2]|0)+(a+(($(c[r+(16+(c[k>>2]|0)-6<<2)>>2]&65535,b[n+10>>1]|0)|0)>>16));a=$(c[r+(16+(c[k>>2]|0)-7<<2)>>2]>>16,b[n+12>>1]|0)|0;c[g>>2]=(c[g>>2]|0)+(a+(($(c[r+(16+(c[k>>2]|0)-7<<2)>>2]&65535,b[n+12>>1]|0)|0)>>16));a=$(c[r+(16+(c[k>>2]|0)-8<<2)>>2]>>16,b[n+14>>1]|0)|0;c[g>>2]=(c[g>>2]|0)+(a+(($(c[r+(16+(c[k>>2]|0)-8<<2)>>2]&65535,b[n+14>>1]|0)|0)>>16));a=$(c[r+(16+(c[k>>2]|0)-9<<2)>>2]>>16,b[n+16>>1]|0)|0;c[g>>2]=(c[g>>2]|0)+(a+(($(c[r+(16+(c[k>>2]|0)-9<<2)>>2]&65535,b[n+16>>1]|0)|0)>>16));a=$(c[r+(16+(c[k>>2]|0)-10<<2)>>2]>>16,b[n+18>>1]|0)|0;c[g>>2]=(c[g>>2]|0)+(a+(($(c[r+(16+(c[k>>2]|0)-10<<2)>>2]&65535,b[n+18>>1]|0)|0)>>16));if((c[(c[m>>2]|0)+2340>>2]|0)==16){a=$(c[r+(16+(c[k>>2]|0)-11<<2)>>2]>>16,b[n+20>>1]|0)|0;c[g>>2]=(c[g>>2]|0)+(a+(($(c[r+(16+(c[k>>2]|0)-11<<2)>>2]&65535,b[n+20>>1]|0)|0)>>16));a=$(c[r+(16+(c[k>>2]|0)-12<<2)>>2]>>16,b[n+22>>1]|0)|0;c[g>>2]=(c[g>>2]|0)+(a+(($(c[r+(16+(c[k>>2]|0)-12<<2)>>2]&65535,b[n+22>>1]|0)|0)>>16));a=$(c[r+(16+(c[k>>2]|0)-13<<2)>>2]>>16,b[n+24>>1]|0)|0;c[g>>2]=(c[g>>2]|0)+(a+(($(c[r+(16+(c[k>>2]|0)-13<<2)>>2]&65535,b[n+24>>1]|0)|0)>>16));a=$(c[r+(16+(c[k>>2]|0)-14<<2)>>2]>>16,b[n+26>>1]|0)|0;c[g>>2]=(c[g>>2]|0)+(a+(($(c[r+(16+(c[k>>2]|0)-14<<2)>>2]&65535,b[n+26>>1]|0)|0)>>16));a=$(c[r+(16+(c[k>>2]|0)-15<<2)>>2]>>16,b[n+28>>1]|0)|0;c[g>>2]=(c[g>>2]|0)+(a+(($(c[r+(16+(c[k>>2]|0)-15<<2)>>2]&65535,b[n+28>>1]|0)|0)>>16));a=$(c[r+(16+(c[k>>2]|0)-16<<2)>>2]>>16,b[n+30>>1]|0)|0;c[g>>2]=(c[g>>2]|0)+(a+(($(c[r+(16+(c[k>>2]|0)-16<<2)>>2]&65535,b[n+30>>1]|0)|0)>>16))}c[r+(16+(c[k>>2]|0)<<2)>>2]=(c[r+(16+(c[k>>2]|0)<<2)>>2]|0)+(c[g>>2]<<4);if(((b[(c[h>>2]|0)+(c[k>>2]<<1)>>1]|0)+((c[r+(16+(c[k>>2]|0)<<2)>>2]>>9)+1>>1)|0)<=32767){if(((b[(c[h>>2]|0)+(c[k>>2]<<1)>>1]|0)+((c[r+(16+(c[k>>2]|0)<<2)>>2]>>9)+1>>1)|0)<-32768){q=-32768}else{q=(b[(c[h>>2]|0)+(c[k>>2]<<1)>>1]|0)+((c[r+(16+(c[k>>2]|0)<<2)>>2]>>9)+1>>1)|0}}else{q=32767}b[(c[h>>2]|0)+(c[k>>2]<<1)>>1]=q;c[k>>2]=(c[k>>2]|0)+1}s=(c[o>>2]|0)+1312|0;f=r+(c[l>>2]<<2)+0|0;q=s+64|0;do{c[s>>2]=c[f>>2];s=s+4|0;f=f+4|0}while((s|0)<(q|0));na(c[p>>2]|0);i=j;return}function Xc(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0;b=i;i=i+32|0;d=b+16|0;h=b+12|0;e=b+8|0;f=b+4|0;g=b;c[h>>2]=a;if((c[h>>2]|0)<=0){c[d>>2]=0;h=c[d>>2]|0;i=b;return h|0}Zc(c[h>>2]|0,f,g);if((c[f>>2]&1|0)!=0){c[e>>2]=32768}else{c[e>>2]=46214}c[e>>2]=c[e>>2]>>(c[f>>2]>>1);h=$(c[e>>2]>>16,(((c[g>>2]&65535)<<16>>16)*213&65535)<<16>>16)|0;c[e>>2]=(c[e>>2]|0)+(h+(($(c[e>>2]&65535,(((c[g>>2]&65535)<<16>>16)*213&65535)<<16>>16)|0)>>16));c[d>>2]=c[e>>2];h=c[d>>2]|0;i=b;return h|0}function Yc(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;h=i;i=i+48|0;q=h+28|0;j=h+16|0;l=h+4|0;p=h+8|0;o=h+32|0;m=h;g=h+12|0;k=h+24|0;n=h+20|0;c[q>>2]=a;c[j>>2]=b;c[l>>2]=d;c[p>>2]=e;c[o>>2]=f;c[n>>2]=255;while(1){if((c[n>>2]|0)<=(c[p>>2]|0)){break}c[n>>2]=c[n>>2]>>1}c[m>>2]=c[c[o>>2]>>2];c[g>>2]=0;while(1){f=c[m>>2]|0;if((c[g>>2]|0)>=(c[p>>2]|0)){break}c[m>>2]=907633515+($(f,196314165)|0);c[k>>2]=c[m>>2]>>24&c[n>>2];a=$(c[(c[j>>2]|0)+(c[k>>2]<<2)>>2]>>16,(c[l>>2]>>4&65535)<<16>>16)|0;a=a+(($(c[(c[j>>2]|0)+(c[k>>2]<<2)>>2]&65535,(c[l>>2]>>4&65535)<<16>>16)|0)>>16)|0;if((a+($(c[(c[j>>2]|0)+(c[k>>2]<<2)>>2]|0,(c[l>>2]>>4>>15)+1>>1)|0)|0)<=32767){a=$(c[(c[j>>2]|0)+(c[k>>2]<<2)>>2]>>16,(c[l>>2]>>4&65535)<<16>>16)|0;a=a+(($(c[(c[j>>2]|0)+(c[k>>2]<<2)>>2]&65535,(c[l>>2]>>4&65535)<<16>>16)|0)>>16)|0;if((a+($(c[(c[j>>2]|0)+(c[k>>2]<<2)>>2]|0,(c[l>>2]>>4>>15)+1>>1)|0)|0)<-32768){f=-32768}else{f=$(c[(c[j>>2]|0)+(c[k>>2]<<2)>>2]>>16,(c[l>>2]>>4&65535)<<16>>16)|0;f=f+(($(c[(c[j>>2]|0)+(c[k>>2]<<2)>>2]&65535,(c[l>>2]>>4&65535)<<16>>16)|0)>>16)|0;f=f+($(c[(c[j>>2]|0)+(c[k>>2]<<2)>>2]|0,(c[l>>2]>>4>>15)+1>>1)|0)|0}}else{f=32767}c[(c[q>>2]|0)+(c[g>>2]<<2)>>2]=(f&65535)<<16>>16;c[g>>2]=(c[g>>2]|0)+1}c[c[o>>2]>>2]=f;i=h;return}function Zc(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0;e=i;i=i+16|0;h=e+12|0;j=e+8|0;f=e+4|0;g=e;c[h>>2]=a;c[j>>2]=b;c[f>>2]=d;c[g>>2]=_c(c[h>>2]|0)|0;c[c[j>>2]>>2]=c[g>>2];a=($c(c[h>>2]|0,24-(c[g>>2]|0)|0)|0)&127;c[c[f>>2]>>2]=a;i=e;return}function _c(a){a=a|0;var b=0,d=0;b=i;i=i+16|0;d=b;c[d>>2]=a;if((c[d>>2]|0)==0){d=32;i=b;return d|0}d=32-(32-(We(c[d>>2]|0)|0))|0;i=b;return d|0}function $c(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0;d=i;i=i+32|0;e=d+20|0;k=d+16|0;j=d+12|0;g=d+8|0;h=d+4|0;f=d;c[k>>2]=a;c[j>>2]=b;c[g>>2]=c[k>>2];c[h>>2]=c[j>>2];c[f>>2]=0-(c[j>>2]|0);if((c[j>>2]|0)==0){c[e>>2]=c[k>>2];a=c[e>>2]|0;i=d;return a|0}b=c[g>>2]|0;if((c[j>>2]|0)<0){c[e>>2]=b<<c[f>>2]|(c[g>>2]|0)>>>(32-(c[f>>2]|0)|0);a=c[e>>2]|0;i=d;return a|0}else{c[e>>2]=b<<32-(c[h>>2]|0)|(c[g>>2]|0)>>>(c[h>>2]|0);a=c[e>>2]|0;i=d;return a|0}return 0}function ad(a,d,e,f,g){a=a|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;o=i;i=i+96|0;n=o+20|0;l=o+12|0;q=o+16|0;h=o+8|0;k=o;j=o+4|0;p=o+56|0;m=o+24|0;c[n>>2]=a;c[l>>2]=d;c[q>>2]=e;c[h>>2]=f;c[k>>2]=g;c[j>>2]=0;while(1){if((c[j>>2]|0)>=(c[k>>2]|0)){break}b[m+(c[j>>2]<<1)>>1]=0-(b[(c[q>>2]|0)+(c[j>>2]<<1)>>1]|0);c[j>>2]=(c[j>>2]|0)+1}c[j>>2]=0;while(1){if((c[j>>2]|0)>=(c[k>>2]|0)){break}b[p+(c[j>>2]<<1)>>1]=b[(c[l>>2]|0)+((c[k>>2]|0)-(c[j>>2]|0)-1<<1)>>1]|0;c[j>>2]=(c[j>>2]|0)+1}xb((c[l>>2]|0)+(c[k>>2]<<1)|0,m,(c[n>>2]|0)+(c[k>>2]<<1)|0,(c[h>>2]|0)-(c[k>>2]|0)|0,c[k>>2]|0,p);c[j>>2]=0;while(1){if((c[j>>2]|0)>=(c[k>>2]|0)){break}b[(c[n>>2]|0)+(c[j>>2]<<1)>>1]=0;c[j>>2]=(c[j>>2]|0)+1}i=o;return}function bd(a,d){a=a|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0;f=i;i=i+160|0;e=f+136|0;l=f+144|0;h=f+148|0;k=f+152|0;g=f+8|0;m=f;j=f+140|0;c[l>>2]=a;c[h>>2]=d;c[j>>2]=0;c[m>>2]=g+((c[h>>2]&1)<<6);c[k>>2]=0;while(1){if((c[k>>2]|0)>=(c[h>>2]|0)){break}c[j>>2]=(c[j>>2]|0)+(b[(c[l>>2]|0)+(c[k>>2]<<1)>>1]|0);c[(c[m>>2]|0)+(c[k>>2]<<2)>>2]=b[(c[l>>2]|0)+(c[k>>2]<<1)>>1]<<12;c[k>>2]=(c[k>>2]|0)+1}if((c[j>>2]|0)>=4096){c[e>>2]=0;a=c[e>>2]|0;i=f;return a|0}else{c[e>>2]=cd(g,c[h>>2]|0)|0;a=c[e>>2]|0;i=f;return a|0}return 0}function cd(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0;k=i;i=i+64|0;j=k+44|0;p=k+36|0;s=k+20|0;l=k+16|0;q=k+32|0;m=k+40|0;h=k+48|0;f=k+8|0;g=k+4|0;d=k+24|0;r=k+12|0;o=k+28|0;n=k;c[p>>2]=a;c[s>>2]=b;c[n>>2]=(c[p>>2]|0)+((c[s>>2]&1)<<6);c[h>>2]=1073741824;c[l>>2]=(c[s>>2]|0)-1;while(1){if((c[l>>2]|0)<=0){break}if((c[(c[n>>2]|0)+(c[l>>2]<<2)>>2]|0)>16773022){e=5;break}if((c[(c[n>>2]|0)+(c[l>>2]<<2)>>2]|0)<-16773022){e=5;break}c[f>>2]=0-(c[(c[n>>2]|0)+(c[l>>2]<<2)>>2]<<7);s=c[f>>2]|0;a=c[f>>2]|0;a=hf(s|0,((s|0)<0)<<31>>31|0,a|0,((a|0)<0)<<31>>31|0)|0;a=Ve(a|0,D|0,32)|0;c[g>>2]=1073741824-a;a=c[g>>2]|0;c[m>>2]=32-(dd((c[g>>2]|0)>0?a:0-a|0)|0);c[d>>2]=ed(c[g>>2]|0,(c[m>>2]|0)+30|0)|0;a=c[h>>2]|0;s=c[g>>2]|0;s=hf(a|0,((a|0)<0)<<31>>31|0,s|0,((s|0)<0)<<31>>31|0)|0;s=Ve(s|0,D|0,32)|0;c[h>>2]=s<<2;c[o>>2]=c[n>>2];c[n>>2]=(c[p>>2]|0)+((c[l>>2]&1)<<6);c[q>>2]=0;while(1){if((c[q>>2]|0)>=(c[l>>2]|0)){break}b=c[(c[o>>2]|0)+(c[q>>2]<<2)>>2]|0;a=c[(c[o>>2]|0)+((c[l>>2]|0)-(c[q>>2]|0)-1<<2)>>2]|0;s=c[f>>2]|0;s=hf(a|0,((a|0)<0)<<31>>31|0,s|0,((s|0)<0)<<31>>31|0)|0;s=Ve(s|0,D|0,30)|0;s=_e(s|0,D|0,1,0)|0;s=Ve(s|0,D|0,1)|0;c[r>>2]=b-s;s=(c[m>>2]|0)==1;b=c[r>>2]|0;a=c[d>>2]|0;a=hf(b|0,((b|0)<0)<<31>>31|0,a|0,((a|0)<0)<<31>>31|0)|0;b=D;if(s){a=Ve(a|0,b|0,1)|0;s=D;t=c[r>>2]|0;b=c[d>>2]|0;b=hf(t|0,((t|0)<0)<<31>>31|0,b|0,((b|0)<0)<<31>>31|0)|0;b=_e(a|0,s|0,b&1|0,0)|0}else{b=Ve(a|0,b|0,(c[m>>2]|0)-1|0)|0;b=_e(b|0,D|0,1,0)|0;b=Ve(b|0,D|0,1)|0}c[(c[n>>2]|0)+(c[q>>2]<<2)>>2]=b;c[q>>2]=(c[q>>2]|0)+1}c[l>>2]=(c[l>>2]|0)+ -1}if((e|0)==5){c[j>>2]=0;t=c[j>>2]|0;i=k;return t|0}if((c[c[n>>2]>>2]|0)<=16773022?!((c[c[n>>2]>>2]|0)<-16773022):0){c[f>>2]=0-(c[c[n>>2]>>2]<<7);t=c[f>>2]|0;s=c[f>>2]|0;s=hf(t|0,((t|0)<0)<<31>>31|0,s|0,((s|0)<0)<<31>>31|0)|0;s=Ve(s|0,D|0,32)|0;c[g>>2]=1073741824-s;s=c[h>>2]|0;t=c[g>>2]|0;t=hf(s|0,((s|0)<0)<<31>>31|0,t|0,((t|0)<0)<<31>>31|0)|0;t=Ve(t|0,D|0,32)|0;c[h>>2]=t<<2;c[j>>2]=c[h>>2];t=c[j>>2]|0;i=k;return t|0}c[j>>2]=0;t=c[j>>2]|0;i=k;return t|0}function dd(a){a=a|0;var b=0,d=0;b=i;i=i+16|0;d=b;c[d>>2]=a;if((c[d>>2]|0)==0){d=32;i=b;return d|0}d=32-(32-(We(c[d>>2]|0)|0))|0;i=b;return d|0}function ed(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0;d=i;i=i+48|0;e=d+28|0;n=d+16|0;h=d+4|0;j=d+8|0;f=d+32|0;k=d;m=d+12|0;l=d+24|0;g=d+20|0;c[n>>2]=a;c[h>>2]=b;b=c[n>>2]|0;c[j>>2]=(dd((c[n>>2]|0)>0?b:0-b|0)|0)-1;c[m>>2]=c[n>>2]<<c[j>>2];c[k>>2]=536870911/(c[m>>2]>>16|0)|0;c[g>>2]=c[k>>2]<<16;b=$(c[m>>2]>>16,(c[k>>2]&65535)<<16>>16)|0;c[l>>2]=536870912-(b+(($(c[m>>2]&65535,(c[k>>2]&65535)<<16>>16)|0)>>16))<<3;b=$(c[l>>2]>>16,(c[k>>2]&65535)<<16>>16)|0;b=(c[g>>2]|0)+(b+(($(c[l>>2]&65535,(c[k>>2]&65535)<<16>>16)|0)>>16))|0;c[g>>2]=b+($(c[l>>2]|0,(c[k>>2]>>15)+1>>1)|0);c[f>>2]=61-(c[j>>2]|0)-(c[h>>2]|0);b=c[f>>2]|0;if((c[f>>2]|0)>0){if((b|0)<32){c[e>>2]=c[g>>2]>>c[f>>2];n=c[e>>2]|0;i=d;return n|0}else{c[e>>2]=0;n=c[e>>2]|0;i=d;return n|0}}h=c[g>>2]|0;a=0-(c[f>>2]|0)|0;do{if((-2147483648>>0-b|0)>(2147483647>>0-(c[f>>2]|0)|0)){if((h|0)>(-2147483648>>a|0)){g=-2147483648>>0-(c[f>>2]|0);break}if((c[g>>2]|0)<(2147483647>>0-(c[f>>2]|0)|0)){g=2147483647>>0-(c[f>>2]|0);break}else{g=c[g>>2]|0;break}}else{if((h|0)>(2147483647>>a|0)){g=2147483647>>0-(c[f>>2]|0);break}if((c[g>>2]|0)<(-2147483648>>0-(c[f>>2]|0)|0)){g=-2147483648>>0-(c[f>>2]|0);break}else{g=c[g>>2]|0;break}}}while(0);c[e>>2]=g<<0-(c[f>>2]|0);n=c[e>>2]|0;i=d;return n|0}function fd(a,e,f){a=a|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0;g=i;i=i+272|0;l=g+264|0;x=g+48|0;k=g+24|0;C=g+36|0;j=g+224|0;m=g+16|0;s=g+20|0;w=g+120|0;t=g+188|0;u=g+228|0;n=g+268|0;v=g+40|0;y=g+44|0;z=g+8|0;A=g;B=g+4|0;h=g+56|0;o=g+28|0;p=g+184|0;q=g+12|0;r=g+32|0;c[l>>2]=a;c[x>>2]=e;c[k>>2]=f;c[q>>2]=0;c[C>>2]=(c[k>>2]|0)==16?14896:14912;c[j>>2]=0;while(1){if((c[j>>2]|0)>=(c[k>>2]|0)){break}c[y>>2]=b[(c[x>>2]|0)+(c[j>>2]<<1)>>1]>>8;c[z>>2]=(b[(c[x>>2]|0)+(c[j>>2]<<1)>>1]|0)-(c[y>>2]<<8);c[A>>2]=b[15584+(c[y>>2]<<1)>>1]|0;c[B>>2]=(b[15584+((c[y>>2]|0)+1<<1)>>1]|0)-(c[A>>2]|0);a=((c[A>>2]<<8)+($(c[B>>2]|0,c[z>>2]|0)|0)>>3)+1>>1;c[w+(d[(c[C>>2]|0)+(c[j>>2]|0)>>0]<<2)>>2]=a;c[j>>2]=(c[j>>2]|0)+1}c[s>>2]=c[k>>2]>>1;gd(t,w,c[s>>2]|0);gd(u,w+4|0,c[s>>2]|0);c[j>>2]=0;while(1){if((c[j>>2]|0)>=(c[s>>2]|0)){break}c[n>>2]=(c[t+((c[j>>2]|0)+1<<2)>>2]|0)+(c[t+(c[j>>2]<<2)>>2]|0);c[v>>2]=(c[u+((c[j>>2]|0)+1<<2)>>2]|0)-(c[u+(c[j>>2]<<2)>>2]|0);c[h+(c[j>>2]<<2)>>2]=0-(c[v>>2]|0)-(c[n>>2]|0);c[h+((c[k>>2]|0)-(c[j>>2]|0)-1<<2)>>2]=(c[v>>2]|0)-(c[n>>2]|0);c[j>>2]=(c[j>>2]|0)+1}c[m>>2]=0;while(1){if((c[m>>2]|0)>=10){break}c[o>>2]=0;c[j>>2]=0;while(1){if((c[j>>2]|0)>=(c[k>>2]|0)){break}a=c[h+(c[j>>2]<<2)>>2]|0;c[p>>2]=(c[h+(c[j>>2]<<2)>>2]|0)>0?a:0-a|0;if((c[p>>2]|0)>(c[o>>2]|0)){c[o>>2]=c[p>>2];c[q>>2]=c[j>>2]}c[j>>2]=(c[j>>2]|0)+1}c[o>>2]=(c[o>>2]>>4)+1>>1;if((c[o>>2]|0)<=32767){break}c[o>>2]=(c[o>>2]|0)<163838?c[o>>2]|0:163838;c[r>>2]=65470-(((c[o>>2]|0)-32767<<14|0)/(($(c[o>>2]|0,(c[q>>2]|0)+1|0)|0)>>2|0)|0);Ld(h,c[k>>2]|0,c[r>>2]|0);c[m>>2]=(c[m>>2]|0)+1}a=(c[m>>2]|0)==10;c[j>>2]=0;a:do{if(a){while(1){if((c[j>>2]|0)>=(c[k>>2]|0)){break a}if(((c[h+(c[j>>2]<<2)>>2]>>4)+1>>1|0)<=32767){if(((c[h+(c[j>>2]<<2)>>2]>>4)+1>>1|0)<-32768){n=-32768}else{n=(c[h+(c[j>>2]<<2)>>2]>>4)+1>>1}}else{n=32767}b[(c[l>>2]|0)+(c[j>>2]<<1)>>1]=n;c[h+(c[j>>2]<<2)>>2]=b[(c[l>>2]|0)+(c[j>>2]<<1)>>1]<<5;c[j>>2]=(c[j>>2]|0)+1}}else{while(1){if((c[j>>2]|0)>=(c[k>>2]|0)){break a}b[(c[l>>2]|0)+(c[j>>2]<<1)>>1]=(c[h+(c[j>>2]<<2)>>2]>>4)+1>>1;c[j>>2]=(c[j>>2]|0)+1}}}while(0);c[m>>2]=0;while(1){if((c[m>>2]|0)>=16){h=31;break}if((bd(c[l>>2]|0,c[k>>2]|0)|0)>=107374){h=31;break}Ld(h,c[k>>2]|0,65536-(2<<c[m>>2])|0);c[j>>2]=0;while(1){if((c[j>>2]|0)>=(c[k>>2]|0)){break}b[(c[l>>2]|0)+(c[j>>2]<<1)>>1]=(c[h+(c[j>>2]<<2)>>2]>>4)+1>>1;c[j>>2]=(c[j>>2]|0)+1}c[m>>2]=(c[m>>2]|0)+1}if((h|0)==31){i=g;return}}function gd(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0;e=i;i=i+32|0;j=e+20|0;f=e+16|0;l=e+12|0;g=e+8|0;k=e+4|0;h=e;c[j>>2]=a;c[f>>2]=b;c[l>>2]=d;c[c[j>>2]>>2]=65536;c[(c[j>>2]|0)+4>>2]=0-(c[c[f>>2]>>2]|0);c[g>>2]=1;while(1){if((c[g>>2]|0)>=(c[l>>2]|0)){break}c[h>>2]=c[(c[f>>2]|0)+(c[g>>2]<<1<<2)>>2];b=c[(c[j>>2]|0)+((c[g>>2]|0)-1<<2)>>2]<<1;d=c[h>>2]|0;a=c[(c[j>>2]|0)+(c[g>>2]<<2)>>2]|0;a=hf(d|0,((d|0)<0)<<31>>31|0,a|0,((a|0)<0)<<31>>31|0)|0;a=Ve(a|0,D|0,15)|0;a=_e(a|0,D|0,1,0)|0;a=Ve(a|0,D|0,1)|0;c[(c[j>>2]|0)+((c[g>>2]|0)+1<<2)>>2]=b-a;c[k>>2]=c[g>>2];while(1){if((c[k>>2]|0)<=1){break}d=c[(c[j>>2]|0)+((c[k>>2]|0)-2<<2)>>2]|0;a=c[h>>2]|0;b=c[(c[j>>2]|0)+((c[k>>2]|0)-1<<2)>>2]|0;b=hf(a|0,((a|0)<0)<<31>>31|0,b|0,((b|0)<0)<<31>>31|0)|0;b=Ve(b|0,D|0,15)|0;b=_e(b|0,D|0,1,0)|0;b=Ve(b|0,D|0,1)|0;a=(c[j>>2]|0)+(c[k>>2]<<2)|0;c[a>>2]=(c[a>>2]|0)+(d-b);c[k>>2]=(c[k>>2]|0)+ -1}a=(c[j>>2]|0)+4|0;c[a>>2]=(c[a>>2]|0)-(c[h>>2]|0);c[g>>2]=(c[g>>2]|0)+1}i=e;return}function hd(a,d,e){a=a|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0;l=i;i=i+32|0;k=l+20|0;f=l+16|0;g=l+12|0;m=l+8|0;h=l+4|0;j=l;c[k>>2]=a;c[f>>2]=d;c[g>>2]=e;c[h>>2]=id(b[c[f>>2]>>1]|0,1)|0;c[h>>2]=131072/(c[h>>2]|0)|0;c[j>>2]=id((b[(c[f>>2]|0)+2>>1]|0)-(b[c[f>>2]>>1]|0)|0,1)|0;c[j>>2]=131072/(c[j>>2]|0)|0;a=(jd((c[h>>2]|0)+(c[j>>2]|0)|0,32767)|0)&65535;b[c[k>>2]>>1]=a;c[m>>2]=1;while(1){if((c[m>>2]|0)>=((c[g>>2]|0)-1|0)){break}c[h>>2]=id((b[(c[f>>2]|0)+((c[m>>2]|0)+1<<1)>>1]|0)-(b[(c[f>>2]|0)+(c[m>>2]<<1)>>1]|0)|0,1)|0;c[h>>2]=131072/(c[h>>2]|0)|0;a=(jd((c[h>>2]|0)+(c[j>>2]|0)|0,32767)|0)&65535;b[(c[k>>2]|0)+(c[m>>2]<<1)>>1]=a;c[j>>2]=id((b[(c[f>>2]|0)+((c[m>>2]|0)+2<<1)>>1]|0)-(b[(c[f>>2]|0)+((c[m>>2]|0)+1<<1)>>1]|0)|0,1)|0;c[j>>2]=131072/(c[j>>2]|0)|0;a=(jd((c[h>>2]|0)+(c[j>>2]|0)|0,32767)|0)&65535;b[(c[k>>2]|0)+((c[m>>2]|0)+1<<1)>>1]=a;c[m>>2]=(c[m>>2]|0)+2}c[h>>2]=id(32768-(b[(c[f>>2]|0)+((c[g>>2]|0)-1<<1)>>1]|0)|0,1)|0;c[h>>2]=131072/(c[h>>2]|0)|0;a=(jd((c[h>>2]|0)+(c[j>>2]|0)|0,32767)|0)&65535;b[(c[k>>2]|0)+((c[g>>2]|0)-1<<1)>>1]=a;i=l;return}function id(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;f=i;i=i+16|0;e=f+4|0;d=f;c[e>>2]=a;c[d>>2]=b;i=f;return((c[e>>2]|0)>(c[d>>2]|0)?c[e>>2]|0:c[d>>2]|0)|0}function jd(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;f=i;i=i+16|0;e=f+4|0;d=f;c[e>>2]=a;c[d>>2]=b;i=f;return((c[e>>2]|0)<(c[d>>2]|0)?c[e>>2]|0:c[d>>2]|0)|0}function kd(e,f,g){e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0;k=i;i=i+144|0;p=k+24|0;s=k+16|0;j=k+12|0;m=k+8|0;r=k+128|0;q=k+32|0;o=k+64|0;l=k+96|0;n=k+20|0;h=k;t=k+4|0;c[p>>2]=e;c[s>>2]=f;c[j>>2]=g;e=$(a[c[s>>2]>>0]|0,b[(c[j>>2]|0)+2>>1]|0)|0;c[t>>2]=(c[(c[j>>2]|0)+8>>2]|0)+e;c[m>>2]=0;while(1){if((c[m>>2]|0)>=(b[(c[j>>2]|0)+2>>1]|0)){break}b[(c[p>>2]|0)+(c[m>>2]<<1)>>1]=d[(c[t>>2]|0)+(c[m>>2]|0)>>0]<<7;c[m>>2]=(c[m>>2]|0)+1}td(q,r,c[j>>2]|0,a[c[s>>2]>>0]|0);ld(o,(c[s>>2]|0)+1|0,r,b[(c[j>>2]|0)+4>>1]|0,b[(c[j>>2]|0)+2>>1]|0);hd(l,c[p>>2]|0,b[(c[j>>2]|0)+2>>1]|0);c[m>>2]=0;while(1){if((c[m>>2]|0)>=(b[(c[j>>2]|0)+2>>1]|0)){break}c[n>>2]=md(b[l+(c[m>>2]<<1)>>1]<<16)|0;c[h>>2]=(b[(c[p>>2]|0)+(c[m>>2]<<1)>>1]|0)+((b[o+(c[m>>2]<<1)>>1]<<14|0)/(c[n>>2]|0)|0);if((c[h>>2]|0)>32767){g=32767}else{g=(c[h>>2]|0)<0?0:c[h>>2]|0}b[(c[p>>2]|0)+(c[m>>2]<<1)>>1]=g;c[m>>2]=(c[m>>2]|0)+1}qd(c[p>>2]|0,c[(c[j>>2]|0)+32>>2]|0,b[(c[j>>2]|0)+2>>1]|0);i=k;return}function ld(e,f,g,h,j){e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0;q=i;i=i+32|0;r=q+24|0;p=q+16|0;m=q+12|0;k=q+8|0;s=q+28|0;n=q;l=q+20|0;o=q+4|0;c[r>>2]=e;c[p>>2]=f;c[m>>2]=g;c[k>>2]=h;b[s>>1]=j;c[l>>2]=0;c[n>>2]=(b[s>>1]|0)-1;while(1){if((c[n>>2]|0)<0){break}c[o>>2]=($((c[l>>2]&65535)<<16>>16,d[(c[m>>2]|0)+(c[n>>2]|0)>>0]|0)|0)>>8;c[l>>2]=a[(c[p>>2]|0)+(c[n>>2]|0)>>0]<<10;j=c[l>>2]|0;if((c[l>>2]|0)<=0){if((j|0)<0){c[l>>2]=(c[l>>2]|0)+102}}else{c[l>>2]=j-102}s=$(c[l>>2]>>16,(c[k>>2]&65535)<<16>>16)|0;c[l>>2]=(c[o>>2]|0)+(s+(($(c[l>>2]&65535,(c[k>>2]&65535)<<16>>16)|0)>>16));b[(c[r>>2]|0)+(c[n>>2]<<1)>>1]=c[l>>2];c[n>>2]=(c[n>>2]|0)+ -1}i=q;return}function md(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0;b=i;i=i+32|0;d=b+16|0;h=b+12|0;e=b+8|0;f=b+4|0;g=b;c[h>>2]=a;if((c[h>>2]|0)<=0){c[d>>2]=0;h=c[d>>2]|0;i=b;return h|0}nd(c[h>>2]|0,f,g);if((c[f>>2]&1|0)!=0){c[e>>2]=32768}else{c[e>>2]=46214}c[e>>2]=c[e>>2]>>(c[f>>2]>>1);h=$(c[e>>2]>>16,(((c[g>>2]&65535)<<16>>16)*213&65535)<<16>>16)|0;c[e>>2]=(c[e>>2]|0)+(h+(($(c[e>>2]&65535,(((c[g>>2]&65535)<<16>>16)*213&65535)<<16>>16)|0)>>16));c[d>>2]=c[e>>2];h=c[d>>2]|0;i=b;return h|0}function nd(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0;e=i;i=i+16|0;h=e+12|0;j=e+8|0;f=e+4|0;g=e;c[h>>2]=a;c[j>>2]=b;c[f>>2]=d;c[g>>2]=od(c[h>>2]|0)|0;c[c[j>>2]>>2]=c[g>>2];a=(pd(c[h>>2]|0,24-(c[g>>2]|0)|0)|0)&127;c[c[f>>2]>>2]=a;i=e;return}function od(a){a=a|0;var b=0,d=0;b=i;i=i+16|0;d=b;c[d>>2]=a;if((c[d>>2]|0)==0){d=32;i=b;return d|0}d=32-(32-(We(c[d>>2]|0)|0))|0;i=b;return d|0}function pd(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0;d=i;i=i+32|0;e=d+20|0;k=d+16|0;j=d+12|0;g=d+8|0;h=d+4|0;f=d;c[k>>2]=a;c[j>>2]=b;c[g>>2]=c[k>>2];c[h>>2]=c[j>>2];c[f>>2]=0-(c[j>>2]|0);if((c[j>>2]|0)==0){c[e>>2]=c[k>>2];a=c[e>>2]|0;i=d;return a|0}b=c[g>>2]|0;if((c[j>>2]|0)<0){c[e>>2]=b<<c[f>>2]|(c[g>>2]|0)>>>(32-(c[f>>2]|0)|0);a=c[e>>2]|0;i=d;return a|0}else{c[e>>2]=b<<32-(c[h>>2]|0)|(c[g>>2]|0)>>>(c[h>>2]|0);a=c[e>>2]|0;i=d;return a|0}return 0}function qd(a,d,e){a=a|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0;p=i;i=i+48|0;h=p+12|0;k=p+16|0;j=p+28|0;l=p+4|0;f=p+32|0;r=p+36|0;m=p+40|0;t=p+44|0;n=p+20|0;o=p+8|0;q=p;s=p+24|0;c[h>>2]=a;c[k>>2]=d;c[j>>2]=e;c[f>>2]=0;c[m>>2]=0;while(1){if((c[m>>2]|0)>=20){break}c[o>>2]=(b[c[h>>2]>>1]|0)-(b[c[k>>2]>>1]|0);c[f>>2]=0;c[l>>2]=1;while(1){if((c[l>>2]|0)>((c[j>>2]|0)-1|0)){break}c[n>>2]=(b[(c[h>>2]|0)+(c[l>>2]<<1)>>1]|0)-((b[(c[h>>2]|0)+((c[l>>2]|0)-1<<1)>>1]|0)+(b[(c[k>>2]|0)+(c[l>>2]<<1)>>1]|0));if((c[n>>2]|0)<(c[o>>2]|0)){c[o>>2]=c[n>>2];c[f>>2]=c[l>>2]}c[l>>2]=(c[l>>2]|0)+1}c[n>>2]=32768-((b[(c[h>>2]|0)+((c[j>>2]|0)-1<<1)>>1]|0)+(b[(c[k>>2]|0)+(c[j>>2]<<1)>>1]|0));if((c[n>>2]|0)<(c[o>>2]|0)){c[o>>2]=c[n>>2];c[f>>2]=c[j>>2]}if((c[o>>2]|0)>=0){g=41;break}do{if((c[f>>2]|0)==0){b[c[h>>2]>>1]=b[c[k>>2]>>1]|0}else{if((c[f>>2]|0)==(c[j>>2]|0)){b[(c[h>>2]|0)+((c[j>>2]|0)-1<<1)>>1]=32768-(b[(c[k>>2]|0)+(c[j>>2]<<1)>>1]|0);break}c[q>>2]=0;c[r>>2]=0;while(1){if((c[r>>2]|0)>=(c[f>>2]|0)){break}c[q>>2]=(c[q>>2]|0)+(b[(c[k>>2]|0)+(c[r>>2]<<1)>>1]|0);c[r>>2]=(c[r>>2]|0)+1}c[q>>2]=(c[q>>2]|0)+(b[(c[k>>2]|0)+(c[f>>2]<<1)>>1]>>1);c[s>>2]=32768;c[r>>2]=c[j>>2];while(1){if((c[r>>2]|0)<=(c[f>>2]|0)){break}c[s>>2]=(c[s>>2]|0)-(b[(c[k>>2]|0)+(c[r>>2]<<1)>>1]|0);c[r>>2]=(c[r>>2]|0)+ -1}c[s>>2]=(c[s>>2]|0)-(b[(c[k>>2]|0)+(c[f>>2]<<1)>>1]>>1);e=((b[(c[h>>2]|0)+((c[f>>2]|0)-1<<1)>>1]|0)+(b[(c[h>>2]|0)+(c[f>>2]<<1)>>1]|0)>>1)+((b[(c[h>>2]|0)+((c[f>>2]|0)-1<<1)>>1]|0)+(b[(c[h>>2]|0)+(c[f>>2]<<1)>>1]|0)&1)|0;do{if((c[q>>2]|0)>(c[s>>2]|0)){if((e|0)>(c[q>>2]|0)){e=c[q>>2]|0;break}if((((b[(c[h>>2]|0)+((c[f>>2]|0)-1<<1)>>1]|0)+(b[(c[h>>2]|0)+(c[f>>2]<<1)>>1]|0)>>1)+((b[(c[h>>2]|0)+((c[f>>2]|0)-1<<1)>>1]|0)+(b[(c[h>>2]|0)+(c[f>>2]<<1)>>1]|0)&1)|0)<(c[s>>2]|0)){e=c[s>>2]|0;break}else{e=((b[(c[h>>2]|0)+((c[f>>2]|0)-1<<1)>>1]|0)+(b[(c[h>>2]|0)+(c[f>>2]<<1)>>1]|0)>>1)+((b[(c[h>>2]|0)+((c[f>>2]|0)-1<<1)>>1]|0)+(b[(c[h>>2]|0)+(c[f>>2]<<1)>>1]|0)&1)|0;break}}else{if((e|0)>(c[s>>2]|0)){e=c[s>>2]|0;break}if((((b[(c[h>>2]|0)+((c[f>>2]|0)-1<<1)>>1]|0)+(b[(c[h>>2]|0)+(c[f>>2]<<1)>>1]|0)>>1)+((b[(c[h>>2]|0)+((c[f>>2]|0)-1<<1)>>1]|0)+(b[(c[h>>2]|0)+(c[f>>2]<<1)>>1]|0)&1)|0)<(c[q>>2]|0)){e=c[q>>2]|0;break}else{e=((b[(c[h>>2]|0)+((c[f>>2]|0)-1<<1)>>1]|0)+(b[(c[h>>2]|0)+(c[f>>2]<<1)>>1]|0)>>1)+((b[(c[h>>2]|0)+((c[f>>2]|0)-1<<1)>>1]|0)+(b[(c[h>>2]|0)+(c[f>>2]<<1)>>1]|0)&1)|0;break}}}while(0);b[t>>1]=e;b[(c[h>>2]|0)+((c[f>>2]|0)-1<<1)>>1]=(b[t>>1]|0)-(b[(c[k>>2]|0)+(c[f>>2]<<1)>>1]>>1);b[(c[h>>2]|0)+(c[f>>2]<<1)>>1]=(b[(c[h>>2]|0)+((c[f>>2]|0)-1<<1)>>1]|0)+(b[(c[k>>2]|0)+(c[f>>2]<<1)>>1]|0)}}while(0);c[m>>2]=(c[m>>2]|0)+1}if((g|0)==41){i=p;return}if((c[m>>2]|0)!=20){i=p;return}oe(c[h>>2]|0,c[j>>2]|0);a=(rd(b[c[h>>2]>>1]|0,b[c[k>>2]>>1]|0)|0)&65535;b[c[h>>2]>>1]=a;c[l>>2]=1;while(1){if((c[l>>2]|0)>=(c[j>>2]|0)){break}a=(rd(b[(c[h>>2]|0)+(c[l>>2]<<1)>>1]|0,(b[(c[h>>2]|0)+((c[l>>2]|0)-1<<1)>>1]|0)+(b[(c[k>>2]|0)+(c[l>>2]<<1)>>1]|0)|0)|0)&65535;b[(c[h>>2]|0)+(c[l>>2]<<1)>>1]=a;c[l>>2]=(c[l>>2]|0)+1}a=(sd(b[(c[h>>2]|0)+((c[j>>2]|0)-1<<1)>>1]|0,32768-(b[(c[k>>2]|0)+(c[j>>2]<<1)>>1]|0)|0)|0)&65535;b[(c[h>>2]|0)+((c[j>>2]|0)-1<<1)>>1]=a;c[l>>2]=(c[j>>2]|0)-2;while(1){if((c[l>>2]|0)<0){break}a=(sd(b[(c[h>>2]|0)+(c[l>>2]<<1)>>1]|0,(b[(c[h>>2]|0)+((c[l>>2]|0)+1<<1)>>1]|0)-(b[(c[k>>2]|0)+((c[l>>2]|0)+1<<1)>>1]|0)|0)|0)&65535;b[(c[h>>2]|0)+(c[l>>2]<<1)>>1]=a;c[l>>2]=(c[l>>2]|0)+ -1}i=p;return}function rd(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;f=i;i=i+16|0;e=f+4|0;d=f;c[e>>2]=a;c[d>>2]=b;i=f;return((c[e>>2]|0)>(c[d>>2]|0)?c[e>>2]|0:c[d>>2]|0)|0}function sd(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;f=i;i=i+16|0;e=f+4|0;d=f;c[e>>2]=a;c[d>>2]=b;i=f;return((c[e>>2]|0)<(c[d>>2]|0)?c[e>>2]|0:c[d>>2]|0)|0}function td(e,f,g,h){e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;n=i;i=i+32|0;o=n+4|0;p=n+12|0;l=n+8|0;q=n+20|0;k=n;j=n+24|0;m=n+16|0;c[o>>2]=e;c[p>>2]=f;c[l>>2]=g;c[q>>2]=h;e=($(c[q>>2]|0,b[(c[l>>2]|0)+2>>1]|0)|0)/2|0;c[m>>2]=(c[(c[l>>2]|0)+20>>2]|0)+e;c[k>>2]=0;while(1){if((c[k>>2]|0)>=(b[(c[l>>2]|0)+2>>1]|0)){break}q=c[m>>2]|0;c[m>>2]=q+1;a[j>>0]=a[q>>0]|0;b[(c[o>>2]|0)+(c[k>>2]<<1)>>1]=((d[j>>0]>>1&7)<<16>>16)*9;q=(c[k>>2]|0)+($(a[j>>0]&1,(b[(c[l>>2]|0)+2>>1]|0)-1|0)|0)|0;a[(c[p>>2]|0)+(c[k>>2]|0)>>0]=a[(c[(c[l>>2]|0)+16>>2]|0)+q>>0]|0;b[(c[o>>2]|0)+((c[k>>2]|0)+1<<1)>>1]=((d[j>>0]>>5&7)<<16>>16)*9;q=(c[k>>2]|0)+($(d[j>>0]>>4&1,(b[(c[l>>2]|0)+2>>1]|0)-1|0)|0)+1|0;a[(c[p>>2]|0)+((c[k>>2]|0)+1)>>0]=a[(c[(c[l>>2]|0)+16>>2]|0)+q>>0]|0;c[k>>2]=(c[k>>2]|0)+2}i=n;return}function ud(a){a=a|0;var b=0,d=0;b=i;i=i+16|0;d=b;c[d>>2]=a;c[(c[d>>2]|0)+4168>>2]=c[(c[d>>2]|0)+2328>>2]<<7;c[(c[d>>2]|0)+4240>>2]=65536;c[(c[d>>2]|0)+4244>>2]=65536;c[(c[d>>2]|0)+4256>>2]=20;c[(c[d>>2]|0)+4252>>2]=2;i=b;return}function vd(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0;h=i;i=i+16|0;g=h+12|0;k=h+8|0;j=h+4|0;f=h;c[g>>2]=a;c[k>>2]=b;c[j>>2]=d;c[f>>2]=e;if((c[(c[g>>2]|0)+2316>>2]|0)!=(c[(c[g>>2]|0)+4248>>2]|0)){ud(c[g>>2]|0);c[(c[g>>2]|0)+4248>>2]=c[(c[g>>2]|0)+2316>>2]}e=c[g>>2]|0;k=c[k>>2]|0;if((c[f>>2]|0)!=0){wd(e,k,c[j>>2]|0);a=(c[g>>2]|0)+4160|0;c[a>>2]=(c[a>>2]|0)+1;i=h;return}else{xd(e,k);i=h;return}}function wd(a,d,e){a=a|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0;h=i;i=i+160|0;j=h+60|0;o=h+96|0;s=h+48|0;r=h+52|0;u=h+88|0;E=h+16|0;p=h+20|0;w=h+24|0;G=h+28|0;I=h+32|0;J=h+84|0;f=h+92|0;x=h+100|0;y=h+108|0;v=h+56|0;H=h+112|0;K=h+64|0;B=h+68|0;D=h+72|0;g=h+76|0;F=h+12|0;m=h+116|0;C=h+80|0;t=h+36|0;n=h+120|0;l=h+4|0;k=h+40|0;q=h+104|0;z=h;A=h+8|0;c[j>>2]=a;c[o>>2]=d;c[s>>2]=e;c[l>>2]=(c[j>>2]|0)+4168;d=(c[(c[j>>2]|0)+2336>>2]|0)+(c[(c[j>>2]|0)+2328>>2]|0)|0;c[q>>2]=ia()|0;a=i;i=i+((4*d|0)+15&-16)|0;d=i;i=i+((2*(c[(c[j>>2]|0)+2336>>2]|0)|0)+15&-16)|0;c[k>>2]=c[(c[l>>2]|0)+72>>2]>>6;c[k+4>>2]=c[(c[l>>2]|0)+76>>2]>>6;if((c[(c[j>>2]|0)+2376>>2]|0)!=0){L=(c[l>>2]|0)+14|0;e=L+32|0;do{b[L>>1]=0;L=L+2|0}while((L|0)<(e|0))}Ed(H,I,K,J,(c[j>>2]|0)+4|0,k,c[(c[j>>2]|0)+2332>>2]|0,c[(c[j>>2]|0)+2324>>2]|0);e=c[(c[l>>2]|0)+84>>2]|0;if((c[H>>2]>>c[J>>2]|0)<(c[K>>2]>>c[I>>2]|0)){L=Fd(0,($(e-1|0,c[(c[l>>2]|0)+88>>2]|0)|0)-128|0)|0;c[B>>2]=(c[j>>2]|0)+4+(L<<2)}else{L=Fd(0,($(e,c[(c[l>>2]|0)+88>>2]|0)|0)-128|0)|0;c[B>>2]=(c[j>>2]|0)+4+(L<<2)}c[C>>2]=(c[l>>2]|0)+4;b[m>>1]=b[(c[l>>2]|0)+56>>1]|0;c[x>>2]=b[14928+((Gd(1,c[(c[j>>2]|0)+4160>>2]|0)|0)<<1)>>1]|0;L=(c[(c[j>>2]|0)+4164>>2]|0)==2;H=Gd(1,c[(c[j>>2]|0)+4160>>2]|0)|0;if(L){c[y>>2]=b[14936+(H<<1)>>1]|0}else{c[y>>2]=b[14944+(H<<1)>>1]|0}Kd((c[l>>2]|0)+14|0,c[(c[j>>2]|0)+2340>>2]|0,64881);Ze(n|0,(c[l>>2]|0)+14|0,c[(c[j>>2]|0)+2340>>2]<<1|0)|0;do{if((c[(c[j>>2]|0)+4160>>2]|0)==0){b[m>>1]=16384;if((c[(c[j>>2]|0)+4164>>2]|0)!=2){c[z>>2]=bd((c[l>>2]|0)+14|0,c[(c[j>>2]|0)+2340>>2]|0)|0;c[A>>2]=Id(134217728,c[z>>2]|0)|0;c[A>>2]=Ad(4194304,c[A>>2]|0)|0;c[A>>2]=c[A>>2]<<3;L=$(c[A>>2]>>16,(c[y>>2]&65535)<<16>>16)|0;c[y>>2]=L+(($(c[A>>2]&65535,(c[y>>2]&65535)<<16>>16)|0)>>16)>>14;break}c[r>>2]=0;while(1){if((c[r>>2]|0)>=5){break}b[m>>1]=(b[m>>1]|0)-(b[(c[C>>2]|0)+(c[r>>2]<<1)>>1]|0);c[r>>2]=(c[r>>2]|0)+1}b[m>>1]=Hd(3277,b[m>>1]|0)|0;b[m>>1]=($(b[m>>1]|0,b[(c[l>>2]|0)+68>>1]|0)|0)>>14}}while(0);c[f>>2]=c[(c[l>>2]|0)+52>>2];c[p>>2]=(c[c[l>>2]>>2]>>7)+1>>1;c[G>>2]=c[(c[j>>2]|0)+2336>>2];c[w>>2]=(c[(c[j>>2]|0)+2336>>2]|0)-(c[p>>2]|0)-(c[(c[j>>2]|0)+2340>>2]|0)-2;ad(d+(c[w>>2]<<1)|0,(c[j>>2]|0)+1348+(c[w>>2]<<1)|0,n,(c[(c[j>>2]|0)+2336>>2]|0)-(c[w>>2]|0)|0,c[(c[j>>2]|0)+2340>>2]|0);c[v>>2]=Jd(c[(c[l>>2]|0)+76>>2]|0,46)|0;c[v>>2]=(c[v>>2]|0)<1073741823?c[v>>2]|0:1073741823;c[r>>2]=(c[w>>2]|0)+(c[(c[j>>2]|0)+2340>>2]|0);while(1){if((c[r>>2]|0)>=(c[(c[j>>2]|0)+2336>>2]|0)){break}L=$(c[v>>2]>>16,b[d+(c[r>>2]<<1)>>1]|0)|0;L=L+(($(c[v>>2]&65535,b[d+(c[r>>2]<<1)>>1]|0)|0)>>16)|0;c[a+(c[r>>2]<<2)>>2]=L;c[r>>2]=(c[r>>2]|0)+1}c[E>>2]=0;while(1){if((c[E>>2]|0)>=(c[(c[j>>2]|0)+2324>>2]|0)){break}c[D>>2]=a+((c[G>>2]|0)-(c[p>>2]|0)+2<<2);c[r>>2]=0;while(1){if((c[r>>2]|0)>=(c[(c[j>>2]|0)+2332>>2]|0)){break}c[F>>2]=2;L=$(c[c[D>>2]>>2]>>16,b[c[C>>2]>>1]|0)|0;c[F>>2]=(c[F>>2]|0)+(L+(($(c[c[D>>2]>>2]&65535,b[c[C>>2]>>1]|0)|0)>>16));L=$(c[(c[D>>2]|0)+ -4>>2]>>16,b[(c[C>>2]|0)+2>>1]|0)|0;c[F>>2]=(c[F>>2]|0)+(L+(($(c[(c[D>>2]|0)+ -4>>2]&65535,b[(c[C>>2]|0)+2>>1]|0)|0)>>16));L=$(c[(c[D>>2]|0)+ -8>>2]>>16,b[(c[C>>2]|0)+4>>1]|0)|0;c[F>>2]=(c[F>>2]|0)+(L+(($(c[(c[D>>2]|0)+ -8>>2]&65535,b[(c[C>>2]|0)+4>>1]|0)|0)>>16));L=$(c[(c[D>>2]|0)+ -12>>2]>>16,b[(c[C>>2]|0)+6>>1]|0)|0;c[F>>2]=(c[F>>2]|0)+(L+(($(c[(c[D>>2]|0)+ -12>>2]&65535,b[(c[C>>2]|0)+6>>1]|0)|0)>>16));L=$(c[(c[D>>2]|0)+ -16>>2]>>16,b[(c[C>>2]|0)+8>>1]|0)|0;c[F>>2]=(c[F>>2]|0)+(L+(($(c[(c[D>>2]|0)+ -16>>2]&65535,b[(c[C>>2]|0)+8>>1]|0)|0)>>16));c[D>>2]=(c[D>>2]|0)+4;c[f>>2]=907633515+($(c[f>>2]|0,196314165)|0);c[w>>2]=c[f>>2]>>25&127;L=$(c[(c[B>>2]|0)+(c[w>>2]<<2)>>2]>>16,b[m>>1]|0)|0;L=(c[F>>2]|0)+(L+(($(c[(c[B>>2]|0)+(c[w>>2]<<2)>>2]&65535,b[m>>1]|0)|0)>>16))<<2;c[a+(c[G>>2]<<2)>>2]=L;c[G>>2]=(c[G>>2]|0)+1;c[r>>2]=(c[r>>2]|0)+1}c[u>>2]=0;while(1){if((c[u>>2]|0)>=5){break}L=($((c[x>>2]&65535)<<16>>16,b[(c[C>>2]|0)+(c[u>>2]<<1)>>1]|0)|0)>>15&65535;b[(c[C>>2]|0)+(c[u>>2]<<1)>>1]=L;c[u>>2]=(c[u>>2]|0)+1}b[m>>1]=($(b[m>>1]|0,(c[y>>2]&65535)<<16>>16)|0)>>15;c[c[l>>2]>>2]=(c[c[l>>2]>>2]|0)+(((c[c[l>>2]>>2]>>16)*655|0)+((c[c[l>>2]>>2]&65535)*655>>16));L=Id(c[c[l>>2]>>2]|0,((c[(c[j>>2]|0)+2316>>2]&65535)<<16>>16)*18<<8)|0;c[c[l>>2]>>2]=L;c[p>>2]=(c[c[l>>2]>>2]>>7)+1>>1;c[E>>2]=(c[E>>2]|0)+1}c[t>>2]=a+((c[(c[j>>2]|0)+2336>>2]|0)-16<<2);L=(c[t>>2]|0)+0|0;v=(c[j>>2]|0)+1284|0;e=L+64|0;do{c[L>>2]=c[v>>2];L=L+4|0;v=v+4|0}while((L|0)<(e|0));c[r>>2]=0;while(1){v=c[j>>2]|0;if((c[r>>2]|0)>=(c[(c[j>>2]|0)+2328>>2]|0)){break}c[g>>2]=c[v+2340>>2]>>1;L=$(c[(c[t>>2]|0)+(16+(c[r>>2]|0)-1<<2)>>2]>>16,b[n>>1]|0)|0;c[g>>2]=(c[g>>2]|0)+(L+(($(c[(c[t>>2]|0)+(16+(c[r>>2]|0)-1<<2)>>2]&65535,b[n>>1]|0)|0)>>16));L=$(c[(c[t>>2]|0)+(16+(c[r>>2]|0)-2<<2)>>2]>>16,b[n+2>>1]|0)|0;c[g>>2]=(c[g>>2]|0)+(L+(($(c[(c[t>>2]|0)+(16+(c[r>>2]|0)-2<<2)>>2]&65535,b[n+2>>1]|0)|0)>>16));L=$(c[(c[t>>2]|0)+(16+(c[r>>2]|0)-3<<2)>>2]>>16,b[n+4>>1]|0)|0;c[g>>2]=(c[g>>2]|0)+(L+(($(c[(c[t>>2]|0)+(16+(c[r>>2]|0)-3<<2)>>2]&65535,b[n+4>>1]|0)|0)>>16));L=$(c[(c[t>>2]|0)+(16+(c[r>>2]|0)-4<<2)>>2]>>16,b[n+6>>1]|0)|0;c[g>>2]=(c[g>>2]|0)+(L+(($(c[(c[t>>2]|0)+(16+(c[r>>2]|0)-4<<2)>>2]&65535,b[n+6>>1]|0)|0)>>16));L=$(c[(c[t>>2]|0)+(16+(c[r>>2]|0)-5<<2)>>2]>>16,b[n+8>>1]|0)|0;c[g>>2]=(c[g>>2]|0)+(L+(($(c[(c[t>>2]|0)+(16+(c[r>>2]|0)-5<<2)>>2]&65535,b[n+8>>1]|0)|0)>>16));L=$(c[(c[t>>2]|0)+(16+(c[r>>2]|0)-6<<2)>>2]>>16,b[n+10>>1]|0)|0;c[g>>2]=(c[g>>2]|0)+(L+(($(c[(c[t>>2]|0)+(16+(c[r>>2]|0)-6<<2)>>2]&65535,b[n+10>>1]|0)|0)>>16));L=$(c[(c[t>>2]|0)+(16+(c[r>>2]|0)-7<<2)>>2]>>16,b[n+12>>1]|0)|0;c[g>>2]=(c[g>>2]|0)+(L+(($(c[(c[t>>2]|0)+(16+(c[r>>2]|0)-7<<2)>>2]&65535,b[n+12>>1]|0)|0)>>16));L=$(c[(c[t>>2]|0)+(16+(c[r>>2]|0)-8<<2)>>2]>>16,b[n+14>>1]|0)|0;c[g>>2]=(c[g>>2]|0)+(L+(($(c[(c[t>>2]|0)+(16+(c[r>>2]|0)-8<<2)>>2]&65535,b[n+14>>1]|0)|0)>>16));L=$(c[(c[t>>2]|0)+(16+(c[r>>2]|0)-9<<2)>>2]>>16,b[n+16>>1]|0)|0;c[g>>2]=(c[g>>2]|0)+(L+(($(c[(c[t>>2]|0)+(16+(c[r>>2]|0)-9<<2)>>2]&65535,b[n+16>>1]|0)|0)>>16));L=$(c[(c[t>>2]|0)+(16+(c[r>>2]|0)-10<<2)>>2]>>16,b[n+18>>1]|0)|0;c[g>>2]=(c[g>>2]|0)+(L+(($(c[(c[t>>2]|0)+(16+(c[r>>2]|0)-10<<2)>>2]&65535,b[n+18>>1]|0)|0)>>16));c[u>>2]=10;while(1){if((c[u>>2]|0)>=(c[(c[j>>2]|0)+2340>>2]|0)){break}L=$(c[(c[t>>2]|0)+(16+(c[r>>2]|0)-(c[u>>2]|0)-1<<2)>>2]>>16,b[n+(c[u>>2]<<1)>>1]|0)|0;c[g>>2]=(c[g>>2]|0)+(L+(($(c[(c[t>>2]|0)+(16+(c[r>>2]|0)-(c[u>>2]|0)-1<<2)>>2]&65535,b[n+(c[u>>2]<<1)>>1]|0)|0)>>16));c[u>>2]=(c[u>>2]|0)+1}c[(c[t>>2]|0)+(16+(c[r>>2]|0)<<2)>>2]=(c[(c[t>>2]|0)+(16+(c[r>>2]|0)<<2)>>2]|0)+(c[g>>2]<<4);L=$(c[(c[t>>2]|0)+(16+(c[r>>2]|0)<<2)>>2]>>16,(c[k+4>>2]&65535)<<16>>16)|0;L=L+(($(c[(c[t>>2]|0)+(16+(c[r>>2]|0)<<2)>>2]&65535,(c[k+4>>2]&65535)<<16>>16)|0)>>16)|0;if(((L+($(c[(c[t>>2]|0)+(16+(c[r>>2]|0)<<2)>>2]|0,(c[k+4>>2]>>15)+1>>1)|0)>>7)+1>>1|0)<=32767){L=$(c[(c[t>>2]|0)+(16+(c[r>>2]|0)<<2)>>2]>>16,(c[k+4>>2]&65535)<<16>>16)|0;L=L+(($(c[(c[t>>2]|0)+(16+(c[r>>2]|0)<<2)>>2]&65535,(c[k+4>>2]&65535)<<16>>16)|0)>>16)|0;if(((L+($(c[(c[t>>2]|0)+(16+(c[r>>2]|0)<<2)>>2]|0,(c[k+4>>2]>>15)+1>>1)|0)>>7)+1>>1|0)<-32768){v=-32768}else{v=$(c[(c[t>>2]|0)+(16+(c[r>>2]|0)<<2)>>2]>>16,(c[k+4>>2]&65535)<<16>>16)|0;v=v+(($(c[(c[t>>2]|0)+(16+(c[r>>2]|0)<<2)>>2]&65535,(c[k+4>>2]&65535)<<16>>16)|0)>>16)|0;v=(v+($(c[(c[t>>2]|0)+(16+(c[r>>2]|0)<<2)>>2]|0,(c[k+4>>2]>>15)+1>>1)|0)>>7)+1>>1}}else{v=32767}if((v|0)<=32767){L=$(c[(c[t>>2]|0)+(16+(c[r>>2]|0)<<2)>>2]>>16,(c[k+4>>2]&65535)<<16>>16)|0;L=L+(($(c[(c[t>>2]|0)+(16+(c[r>>2]|0)<<2)>>2]&65535,(c[k+4>>2]&65535)<<16>>16)|0)>>16)|0;if(((L+($(c[(c[t>>2]|0)+(16+(c[r>>2]|0)<<2)>>2]|0,(c[k+4>>2]>>15)+1>>1)|0)>>7)+1>>1|0)<=32767){L=$(c[(c[t>>2]|0)+(16+(c[r>>2]|0)<<2)>>2]>>16,(c[k+4>>2]&65535)<<16>>16)|0;L=L+(($(c[(c[t>>2]|0)+(16+(c[r>>2]|0)<<2)>>2]&65535,(c[k+4>>2]&65535)<<16>>16)|0)>>16)|0;if(((L+($(c[(c[t>>2]|0)+(16+(c[r>>2]|0)<<2)>>2]|0,(c[k+4>>2]>>15)+1>>1)|0)>>7)+1>>1|0)<-32768){v=-32768}else{v=$(c[(c[t>>2]|0)+(16+(c[r>>2]|0)<<2)>>2]>>16,(c[k+4>>2]&65535)<<16>>16)|0;v=v+(($(c[(c[t>>2]|0)+(16+(c[r>>2]|0)<<2)>>2]&65535,(c[k+4>>2]&65535)<<16>>16)|0)>>16)|0;v=(v+($(c[(c[t>>2]|0)+(16+(c[r>>2]|0)<<2)>>2]|0,(c[k+4>>2]>>15)+1>>1)|0)>>7)+1>>1}}else{v=32767}if(!((v|0)<-32768)){L=$(c[(c[t>>2]|0)+(16+(c[r>>2]|0)<<2)>>2]>>16,(c[k+4>>2]&65535)<<16>>16)|0;L=L+(($(c[(c[t>>2]|0)+(16+(c[r>>2]|0)<<2)>>2]&65535,(c[k+4>>2]&65535)<<16>>16)|0)>>16)|0;if(((L+($(c[(c[t>>2]|0)+(16+(c[r>>2]|0)<<2)>>2]|0,(c[k+4>>2]>>15)+1>>1)|0)>>7)+1>>1|0)<=32767){L=$(c[(c[t>>2]|0)+(16+(c[r>>2]|0)<<2)>>2]>>16,(c[k+4>>2]&65535)<<16>>16)|0;L=L+(($(c[(c[t>>2]|0)+(16+(c[r>>2]|0)<<2)>>2]&65535,(c[k+4>>2]&65535)<<16>>16)|0)>>16)|0;if(((L+($(c[(c[t>>2]|0)+(16+(c[r>>2]|0)<<2)>>2]|0,(c[k+4>>2]>>15)+1>>1)|0)>>7)+1>>1|0)<-32768){v=-32768}else{v=$(c[(c[t>>2]|0)+(16+(c[r>>2]|0)<<2)>>2]>>16,(c[k+4>>2]&65535)<<16>>16)|0;v=v+(($(c[(c[t>>2]|0)+(16+(c[r>>2]|0)<<2)>>2]&65535,(c[k+4>>2]&65535)<<16>>16)|0)>>16)|0;v=(v+($(c[(c[t>>2]|0)+(16+(c[r>>2]|0)<<2)>>2]|0,(c[k+4>>2]>>15)+1>>1)|0)>>7)+1>>1}}else{v=32767}}else{v=-32768}}else{v=32767}b[(c[s>>2]|0)+(c[r>>2]<<1)>>1]=v;c[r>>2]=(c[r>>2]|0)+1}L=v+1284|0;v=(c[t>>2]|0)+(c[(c[j>>2]|0)+2328>>2]<<2)+0|0;e=L+64|0;do{c[L>>2]=c[v>>2];L=L+4|0;v=v+4|0}while((L|0)<(e|0));c[(c[l>>2]|0)+52>>2]=c[f>>2];b[(c[l>>2]|0)+56>>1]=b[m>>1]|0;c[r>>2]=0;while(1){if((c[r>>2]|0)>=4){break}c[(c[o>>2]|0)+(c[r>>2]<<2)>>2]=c[p>>2];c[r>>2]=(c[r>>2]|0)+1}na(c[q>>2]|0);i=h;return}function xd(d,e){d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;j=i;i=i+48|0;h=j+36|0;g=j+16|0;n=j;q=j+28|0;k=j+32|0;r=j+40|0;m=j+12|0;l=j+24|0;f=j+20|0;p=j+8|0;o=j+4|0;c[h>>2]=d;c[g>>2]=e;c[m>>2]=(c[h>>2]|0)+4168;c[(c[h>>2]|0)+4164>>2]=a[(c[h>>2]|0)+2765>>0]|0;c[n>>2]=0;a:do{if((a[(c[h>>2]|0)+2765>>0]|0)==2){c[r>>2]=0;while(1){d=$(c[r>>2]|0,c[(c[h>>2]|0)+2332>>2]|0)|0;if((d|0)>=(c[(c[g>>2]|0)+((c[(c[h>>2]|0)+2324>>2]|0)-1<<2)>>2]|0)){break}if((c[r>>2]|0)==(c[(c[h>>2]|0)+2324>>2]|0)){break}c[q>>2]=0;c[k>>2]=0;while(1){if((c[k>>2]|0)>=5){break}c[q>>2]=(c[q>>2]|0)+(b[(c[g>>2]|0)+96+((((c[(c[h>>2]|0)+2324>>2]|0)-1-(c[r>>2]|0)|0)*5|0)+(c[k>>2]|0)<<1)>>1]|0);c[k>>2]=(c[k>>2]|0)+1}if((c[q>>2]|0)>(c[n>>2]|0)){c[n>>2]=c[q>>2];d=(c[m>>2]|0)+4|0;e=(c[g>>2]|0)+96+((((c[(c[h>>2]|0)+2324>>2]|0)-1-(c[r>>2]|0)&65535)<<16>>16)*5<<1)|0;b[d+0>>1]=b[e+0>>1]|0;b[d+2>>1]=b[e+2>>1]|0;b[d+4>>1]=b[e+4>>1]|0;b[d+6>>1]=b[e+6>>1]|0;b[d+8>>1]=b[e+8>>1]|0;c[c[m>>2]>>2]=c[(c[g>>2]|0)+((c[(c[h>>2]|0)+2324>>2]|0)-1-(c[r>>2]|0)<<2)>>2]<<8}c[r>>2]=(c[r>>2]|0)+1}d=(c[m>>2]|0)+4|0;b[d+0>>1]=0;b[d+2>>1]=0;b[d+4>>1]=0;b[d+6>>1]=0;b[d+8>>1]=0;b[(c[m>>2]|0)+8>>1]=c[n>>2];if((c[n>>2]|0)<11469){c[f>>2]=11744256;c[l>>2]=(c[f>>2]|0)/(((c[n>>2]|0)>1?c[n>>2]|0:1)|0)|0;c[k>>2]=0;while(1){if((c[k>>2]|0)>=5){break a}d=($(b[(c[m>>2]|0)+4+(c[k>>2]<<1)>>1]|0,(c[l>>2]&65535)<<16>>16)|0)>>10&65535;b[(c[m>>2]|0)+4+(c[k>>2]<<1)>>1]=d;c[k>>2]=(c[k>>2]|0)+1}}if((c[n>>2]|0)>15565){c[o>>2]=255016960;c[p>>2]=(c[o>>2]|0)/(((c[n>>2]|0)>1?c[n>>2]|0:1)|0)|0;c[k>>2]=0;while(1){if((c[k>>2]|0)>=5){break a}d=($(b[(c[m>>2]|0)+4+(c[k>>2]<<1)>>1]|0,(c[p>>2]&65535)<<16>>16)|0)>>14&65535;b[(c[m>>2]|0)+4+(c[k>>2]<<1)>>1]=d;c[k>>2]=(c[k>>2]|0)+1}}}else{c[c[m>>2]>>2]=((c[(c[h>>2]|0)+2316>>2]&65535)<<16>>16)*18<<8;d=(c[m>>2]|0)+4|0;b[d+0>>1]=0;b[d+2>>1]=0;b[d+4>>1]=0;b[d+6>>1]=0;b[d+8>>1]=0}}while(0);Ze((c[m>>2]|0)+14|0,(c[g>>2]|0)+64|0,c[(c[h>>2]|0)+2340>>2]<<1|0)|0;b[(c[m>>2]|0)+68>>1]=c[(c[g>>2]|0)+136>>2];d=(c[m>>2]|0)+72|0;r=(c[g>>2]|0)+16+((c[(c[h>>2]|0)+2324>>2]|0)-2<<2)|0;c[d+0>>2]=c[r+0>>2];c[d+4>>2]=c[r+4>>2];c[(c[m>>2]|0)+88>>2]=c[(c[h>>2]|0)+2332>>2];c[(c[m>>2]|0)+84>>2]=c[(c[h>>2]|0)+2324>>2];i=j;return}function yd(a,d,e){a=a|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;m=i;i=i+48|0;r=m+36|0;j=m+16|0;h=m;q=m+28|0;l=m+32|0;k=m+40|0;g=m+12|0;n=m+24|0;f=m+20|0;o=m+8|0;p=m+4|0;c[r>>2]=a;c[j>>2]=d;c[h>>2]=e;c[g>>2]=(c[r>>2]|0)+4168;if((c[(c[r>>2]|0)+4160>>2]|0)!=0){se((c[g>>2]|0)+60|0,(c[g>>2]|0)+64|0,c[j>>2]|0,c[h>>2]|0);c[(c[g>>2]|0)+48>>2]=1;i=m;return}a:do{if((c[(c[r>>2]|0)+4216>>2]|0)!=0){se(k,l,c[j>>2]|0,c[h>>2]|0);if((c[l>>2]|0)<=(c[(c[g>>2]|0)+64>>2]|0)){if((c[l>>2]|0)<(c[(c[g>>2]|0)+64>>2]|0)){c[k>>2]=c[k>>2]>>(c[(c[g>>2]|0)+64>>2]|0)-(c[l>>2]|0)}}else{c[(c[g>>2]|0)+60>>2]=c[(c[g>>2]|0)+60>>2]>>(c[l>>2]|0)-(c[(c[g>>2]|0)+64>>2]|0)}if((c[k>>2]|0)>(c[(c[g>>2]|0)+60>>2]|0)){c[f>>2]=zd(c[(c[g>>2]|0)+60>>2]|0)|0;c[f>>2]=(c[f>>2]|0)-1;c[(c[g>>2]|0)+60>>2]=c[(c[g>>2]|0)+60>>2]<<c[f>>2];a=c[k>>2]|0;c[k>>2]=a>>(Ad(24-(c[f>>2]|0)|0,0)|0);c[n>>2]=(c[(c[g>>2]|0)+60>>2]|0)/(((c[k>>2]|0)>1?c[k>>2]|0:1)|0)|0;c[o>>2]=(Bd(c[n>>2]|0)|0)<<4;c[p>>2]=(65536-(c[o>>2]|0)|0)/(c[h>>2]|0)|0;c[p>>2]=c[p>>2]<<2;c[q>>2]=0;while(1){if((c[q>>2]|0)>=(c[h>>2]|0)){break a}a=$(c[o>>2]>>16,b[(c[j>>2]|0)+(c[q>>2]<<1)>>1]|0)|0;a=a+(($(c[o>>2]&65535,b[(c[j>>2]|0)+(c[q>>2]<<1)>>1]|0)|0)>>16)&65535;b[(c[j>>2]|0)+(c[q>>2]<<1)>>1]=a;c[o>>2]=(c[o>>2]|0)+(c[p>>2]|0);if((c[o>>2]|0)>65536){break a}c[q>>2]=(c[q>>2]|0)+1}}}}while(0);c[(c[g>>2]|0)+48>>2]=0;i=m;return}function zd(a){a=a|0;var b=0,d=0;b=i;i=i+16|0;d=b;c[d>>2]=a;if((c[d>>2]|0)==0){d=32;i=b;return d|0}d=32-(32-(We(c[d>>2]|0)|0))|0;i=b;return d|0}function Ad(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;f=i;i=i+16|0;e=f+4|0;d=f;c[e>>2]=a;c[d>>2]=b;i=f;return((c[e>>2]|0)>(c[d>>2]|0)?c[e>>2]|0:c[d>>2]|0)|0}function Bd(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0;b=i;i=i+32|0;d=b+16|0;h=b+12|0;e=b+8|0;f=b+4|0;g=b;c[h>>2]=a;if((c[h>>2]|0)<=0){c[d>>2]=0;h=c[d>>2]|0;i=b;return h|0}Cd(c[h>>2]|0,f,g);if((c[f>>2]&1|0)!=0){c[e>>2]=32768}else{c[e>>2]=46214}c[e>>2]=c[e>>2]>>(c[f>>2]>>1);h=$(c[e>>2]>>16,(((c[g>>2]&65535)<<16>>16)*213&65535)<<16>>16)|0;c[e>>2]=(c[e>>2]|0)+(h+(($(c[e>>2]&65535,(((c[g>>2]&65535)<<16>>16)*213&65535)<<16>>16)|0)>>16));c[d>>2]=c[e>>2];h=c[d>>2]|0;i=b;return h|0}function Cd(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0;e=i;i=i+16|0;h=e+12|0;j=e+8|0;f=e+4|0;g=e;c[h>>2]=a;c[j>>2]=b;c[f>>2]=d;c[g>>2]=zd(c[h>>2]|0)|0;c[c[j>>2]>>2]=c[g>>2];a=(Dd(c[h>>2]|0,24-(c[g>>2]|0)|0)|0)&127;c[c[f>>2]>>2]=a;i=e;return}function Dd(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0;d=i;i=i+32|0;e=d+20|0;k=d+16|0;j=d+12|0;g=d+8|0;h=d+4|0;f=d;c[k>>2]=a;c[j>>2]=b;c[g>>2]=c[k>>2];c[h>>2]=c[j>>2];c[f>>2]=0-(c[j>>2]|0);if((c[j>>2]|0)==0){c[e>>2]=c[k>>2];a=c[e>>2]|0;i=d;return a|0}b=c[g>>2]|0;if((c[j>>2]|0)<0){c[e>>2]=b<<c[f>>2]|(c[g>>2]|0)>>>(32-(c[f>>2]|0)|0);a=c[e>>2]|0;i=d;return a|0}else{c[e>>2]=b<<32-(c[h>>2]|0)|(c[g>>2]|0)>>>(c[h>>2]|0);a=c[e>>2]|0;i=d;return a|0}return 0}function Ed(a,d,e,f,g,h,j,k){a=a|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0;l=i;i=i+48|0;v=l+4|0;r=l+16|0;o=l+36|0;p=l;w=l+32|0;x=l+40|0;n=l+44|0;m=l+24|0;s=l+20|0;t=l+8|0;u=l+12|0;q=l+28|0;c[v>>2]=a;c[r>>2]=d;c[o>>2]=e;c[p>>2]=f;c[w>>2]=g;c[x>>2]=h;c[n>>2]=j;c[m>>2]=k;a=c[n>>2]<<1;c[q>>2]=ia()|0;k=i;i=i+((2*a|0)+15&-16)|0;c[u>>2]=k;c[t>>2]=0;while(1){if((c[t>>2]|0)>=2){break}c[s>>2]=0;while(1){if((c[s>>2]|0)>=(c[n>>2]|0)){break}a=(c[s>>2]|0)+($((c[t>>2]|0)+(c[m>>2]|0)-2|0,c[n>>2]|0)|0)|0;a=$(c[(c[w>>2]|0)+(a<<2)>>2]>>16,(c[(c[x>>2]|0)+(c[t>>2]<<2)>>2]&65535)<<16>>16)|0;d=(c[s>>2]|0)+($((c[t>>2]|0)+(c[m>>2]|0)-2|0,c[n>>2]|0)|0)|0;d=a+(($(c[(c[w>>2]|0)+(d<<2)>>2]&65535,(c[(c[x>>2]|0)+(c[t>>2]<<2)>>2]&65535)<<16>>16)|0)>>16)|0;a=(c[s>>2]|0)+($((c[t>>2]|0)+(c[m>>2]|0)-2|0,c[n>>2]|0)|0)|0;if((d+($(c[(c[w>>2]|0)+(a<<2)>>2]|0,(c[(c[x>>2]|0)+(c[t>>2]<<2)>>2]>>15)+1>>1)|0)>>8|0)<=32767){a=(c[s>>2]|0)+($((c[t>>2]|0)+(c[m>>2]|0)-2|0,c[n>>2]|0)|0)|0;a=$(c[(c[w>>2]|0)+(a<<2)>>2]>>16,(c[(c[x>>2]|0)+(c[t>>2]<<2)>>2]&65535)<<16>>16)|0;d=(c[s>>2]|0)+($((c[t>>2]|0)+(c[m>>2]|0)-2|0,c[n>>2]|0)|0)|0;d=a+(($(c[(c[w>>2]|0)+(d<<2)>>2]&65535,(c[(c[x>>2]|0)+(c[t>>2]<<2)>>2]&65535)<<16>>16)|0)>>16)|0;a=(c[s>>2]|0)+($((c[t>>2]|0)+(c[m>>2]|0)-2|0,c[n>>2]|0)|0)|0;if((d+($(c[(c[w>>2]|0)+(a<<2)>>2]|0,(c[(c[x>>2]|0)+(c[t>>2]<<2)>>2]>>15)+1>>1)|0)>>8|0)<-32768){j=-32768}else{j=(c[s>>2]|0)+($((c[t>>2]|0)+(c[m>>2]|0)-2|0,c[n>>2]|0)|0)|0;j=$(c[(c[w>>2]|0)+(j<<2)>>2]>>16,(c[(c[x>>2]|0)+(c[t>>2]<<2)>>2]&65535)<<16>>16)|0;a=(c[s>>2]|0)+($((c[t>>2]|0)+(c[m>>2]|0)-2|0,c[n>>2]|0)|0)|0;a=j+(($(c[(c[w>>2]|0)+(a<<2)>>2]&65535,(c[(c[x>>2]|0)+(c[t>>2]<<2)>>2]&65535)<<16>>16)|0)>>16)|0;j=(c[s>>2]|0)+($((c[t>>2]|0)+(c[m>>2]|0)-2|0,c[n>>2]|0)|0)|0;j=a+($(c[(c[w>>2]|0)+(j<<2)>>2]|0,(c[(c[x>>2]|0)+(c[t>>2]<<2)>>2]>>15)+1>>1)|0)>>8}}else{j=32767}b[(c[u>>2]|0)+(c[s>>2]<<1)>>1]=j;c[s>>2]=(c[s>>2]|0)+1}c[u>>2]=(c[u>>2]|0)+(c[n>>2]<<1);c[t>>2]=(c[t>>2]|0)+1}se(c[v>>2]|0,c[r>>2]|0,k,c[n>>2]|0);se(c[o>>2]|0,c[p>>2]|0,k+(c[n>>2]<<1)|0,c[n>>2]|0);na(c[q>>2]|0);i=l;return}function Fd(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;f=i;i=i+16|0;e=f+4|0;d=f;c[e>>2]=a;c[d>>2]=b;i=f;return((c[e>>2]|0)>(c[d>>2]|0)?c[e>>2]|0:c[d>>2]|0)|0}function Gd(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;f=i;i=i+16|0;e=f+4|0;d=f;c[e>>2]=a;c[d>>2]=b;i=f;return((c[e>>2]|0)<(c[d>>2]|0)?c[e>>2]|0:c[d>>2]|0)|0}function Hd(a,c){a=a|0;c=c|0;var d=0,e=0,f=0;f=i;i=i+16|0;e=f+2|0;d=f;b[e>>1]=a;b[d>>1]=c;i=f;return((b[e>>1]|0)>(b[d>>1]|0)?b[e>>1]|0:b[d>>1]|0)<<16>>16&65535|0}function Id(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;f=i;i=i+16|0;e=f+4|0;d=f;c[e>>2]=a;c[d>>2]=b;i=f;return((c[e>>2]|0)<(c[d>>2]|0)?c[e>>2]|0:c[d>>2]|0)|0}function Jd(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0;d=i;i=i+48|0;e=d+28|0;n=d+16|0;h=d+4|0;j=d+8|0;f=d+32|0;k=d;m=d+12|0;l=d+24|0;g=d+20|0;c[n>>2]=a;c[h>>2]=b;b=c[n>>2]|0;c[j>>2]=(zd((c[n>>2]|0)>0?b:0-b|0)|0)-1;c[m>>2]=c[n>>2]<<c[j>>2];c[k>>2]=536870911/(c[m>>2]>>16|0)|0;c[g>>2]=c[k>>2]<<16;b=$(c[m>>2]>>16,(c[k>>2]&65535)<<16>>16)|0;c[l>>2]=536870912-(b+(($(c[m>>2]&65535,(c[k>>2]&65535)<<16>>16)|0)>>16))<<3;b=$(c[l>>2]>>16,(c[k>>2]&65535)<<16>>16)|0;b=(c[g>>2]|0)+(b+(($(c[l>>2]&65535,(c[k>>2]&65535)<<16>>16)|0)>>16))|0;c[g>>2]=b+($(c[l>>2]|0,(c[k>>2]>>15)+1>>1)|0);c[f>>2]=61-(c[j>>2]|0)-(c[h>>2]|0);b=c[f>>2]|0;if((c[f>>2]|0)>0){if((b|0)<32){c[e>>2]=c[g>>2]>>c[f>>2];n=c[e>>2]|0;i=d;return n|0}else{c[e>>2]=0;n=c[e>>2]|0;i=d;return n|0}}h=c[g>>2]|0;a=0-(c[f>>2]|0)|0;do{if((-2147483648>>0-b|0)>(2147483647>>0-(c[f>>2]|0)|0)){if((h|0)>(-2147483648>>a|0)){g=-2147483648>>0-(c[f>>2]|0);break}if((c[g>>2]|0)<(2147483647>>0-(c[f>>2]|0)|0)){g=2147483647>>0-(c[f>>2]|0);break}else{g=c[g>>2]|0;break}}else{if((h|0)>(2147483647>>a|0)){g=2147483647>>0-(c[f>>2]|0);break}if((c[g>>2]|0)<(-2147483648>>0-(c[f>>2]|0)|0)){g=-2147483648>>0-(c[f>>2]|0);break}else{g=c[g>>2]|0;break}}}while(0);c[e>>2]=g<<0-(c[f>>2]|0);n=c[e>>2]|0;i=d;return n|0}function Kd(a,d,e){a=a|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0;h=i;i=i+32|0;f=h+16|0;g=h+12|0;j=h+8|0;k=h+4|0;l=h;c[f>>2]=a;c[g>>2]=d;c[j>>2]=e;c[l>>2]=(c[j>>2]|0)-65536;c[k>>2]=0;while(1){e=c[j>>2]|0;if((c[k>>2]|0)>=((c[g>>2]|0)-1|0)){break}a=(($(e,b[(c[f>>2]|0)+(c[k>>2]<<1)>>1]|0)|0)>>15)+1>>1&65535;b[(c[f>>2]|0)+(c[k>>2]<<1)>>1]=a;a=(($(c[j>>2]|0,c[l>>2]|0)|0)>>15)+1>>1;c[j>>2]=(c[j>>2]|0)+a;c[k>>2]=(c[k>>2]|0)+1}a=(($(e,b[(c[f>>2]|0)+((c[g>>2]|0)-1<<1)>>1]|0)|0)>>15)+1>>1&65535;b[(c[f>>2]|0)+((c[g>>2]|0)-1<<1)>>1]=a;i=h;return}function Ld(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0;h=i;i=i+32|0;e=h+16|0;f=h+12|0;g=h+8|0;j=h+4|0;k=h;c[e>>2]=a;c[f>>2]=b;c[g>>2]=d;c[k>>2]=(c[g>>2]|0)-65536;c[j>>2]=0;while(1){d=c[g>>2]>>16;if((c[j>>2]|0)>=((c[f>>2]|0)-1|0)){break}a=$(d,(c[(c[e>>2]|0)+(c[j>>2]<<2)>>2]&65535)<<16>>16)|0;a=a+(($(c[g>>2]&65535,(c[(c[e>>2]|0)+(c[j>>2]<<2)>>2]&65535)<<16>>16)|0)>>16)|0;a=a+($(c[g>>2]|0,(c[(c[e>>2]|0)+(c[j>>2]<<2)>>2]>>15)+1>>1)|0)|0;c[(c[e>>2]|0)+(c[j>>2]<<2)>>2]=a;a=(($(c[g>>2]|0,c[k>>2]|0)|0)>>15)+1>>1;c[g>>2]=(c[g>>2]|0)+a;c[j>>2]=(c[j>>2]|0)+1}a=$(d,(c[(c[e>>2]|0)+((c[f>>2]|0)-1<<2)>>2]&65535)<<16>>16)|0;a=a+(($(c[g>>2]&65535,(c[(c[e>>2]|0)+((c[f>>2]|0)-1<<2)>>2]&65535)<<16>>16)|0)>>16)|0;a=a+($(c[g>>2]|0,(c[(c[e>>2]|0)+((c[f>>2]|0)-1<<2)>>2]>>15)+1>>1)|0)|0;c[(c[e>>2]|0)+((c[f>>2]|0)-1<<2)>>2]=a;i=h;return}function Md(d,e,f,g,h,j){d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0;r=i;i=i+48|0;t=r+12|0;w=r+16|0;k=r+28|0;u=r+4|0;v=r+32|0;p=r+36|0;q=r+40|0;n=r+24|0;o=r+20|0;m=r+44|0;s=r;l=r+8|0;c[t>>2]=d;c[w>>2]=e;c[k>>2]=f;c[u>>2]=g;c[v>>2]=h;c[p>>2]=j;a[m+1>>0]=0;c[s>>2]=c[w>>2];c[q>>2]=(((c[v>>2]|0)+(c[u>>2]<<1)&65535)<<16>>16)*7;c[l>>2]=19336+(c[q>>2]|0);c[k>>2]=(c[k>>2]|0)+8>>4;c[q>>2]=0;while(1){if((c[q>>2]|0)>=(c[k>>2]|0)){break}c[o>>2]=c[(c[p>>2]|0)+(c[q>>2]<<2)>>2];a:do{if((c[o>>2]|0)>0){if((c[o>>2]&31|0)<6){j=c[o>>2]&31}else{j=6}a[m>>0]=a[(c[l>>2]|0)+j>>0]|0;c[n>>2]=0;while(1){if((c[n>>2]|0)>=16){break a}if((b[(c[s>>2]|0)+(c[n>>2]<<1)>>1]|0)>0){v=((Pb(c[t>>2]|0,m,8)|0)<<1)-1|0;w=(c[s>>2]|0)+(c[n>>2]<<1)|0;b[w>>1]=$(b[w>>1]|0,v)|0}c[n>>2]=(c[n>>2]|0)+1}}}while(0);c[s>>2]=(c[s>>2]|0)+32;c[q>>2]=(c[q>>2]|0)+1}i=r;return}function Nd(a){a=a|0;var b=0,d=0,e=0;d=i;i=i+16|0;e=d+4|0;b=d;c[e>>2]=a;c[b>>2]=0;c[c[e>>2]>>2]=8544;i=d;return c[b>>2]|0}function Od(a){a=a|0;var d=0,e=0,f=0,g=0,h=0;e=i;i=i+16|0;d=e+12|0;g=e+8|0;f=e+4|0;h=e;c[d>>2]=a;c[f>>2]=0;c[h>>2]=c[d>>2];c[g>>2]=0;while(1){if((c[g>>2]|0)>=2){break}c[f>>2]=be((c[h>>2]|0)+((c[g>>2]|0)*4260|0)|0)|0;c[g>>2]=(c[g>>2]|0)+1}h=(c[d>>2]|0)+8520|0;b[h+0>>1]=0;b[h+2>>1]=0;b[h+4>>1]=0;b[h+6>>1]=0;b[h+8>>1]=0;b[h+10>>1]=0;c[(c[d>>2]|0)+8540>>2]=0;i=e;return c[f>>2]|0}




// EMSCRIPTEN_END_FUNCS
return{_strlen:Ye,_free:Te,_opus_decoder_create:ze,_i64Add:_e,_memmove:$e,_opus_decode_float:Ie,_bitshift64Ashr:Ve,_memset:Xe,_malloc:Se,_opus_decoder_destroy:Ke,_memcpy:Ze,_llvm_ctlz_i32:We,runPostSets:Ue,stackAlloc:ra,stackSave:sa,stackRestore:ta,setThrew:ua,setTempRet0:xa,getTempRet0:ya}
// EMSCRIPTEN_END_ASM

})({"Math":Math,"Int8Array":Int8Array,"Int16Array":Int16Array,"Int32Array":Int32Array,"Uint8Array":Uint8Array,"Uint16Array":Uint16Array,"Uint32Array":Uint32Array,"Float32Array":Float32Array,"Float64Array":Float64Array},{"abort":abort,"assert":assert,"asmPrintInt":asmPrintInt,"asmPrintFloat":asmPrintFloat,"min":Math_min,"_fflush":_fflush,"_abort":_abort,"___setErrNo":___setErrNo,"_llvm_stacksave":_llvm_stacksave,"_sbrk":_sbrk,"_time":_time,"_abs":_abs,"_emscripten_memcpy_big":_emscripten_memcpy_big,"_llvm_stackrestore":_llvm_stackrestore,"_sysconf":_sysconf,"___errno_location":___errno_location,"STACKTOP":STACKTOP,"STACK_MAX":STACK_MAX,"tempDoublePtr":tempDoublePtr,"ABORT":ABORT,"cttz_i8":cttz_i8,"ctlz_i8":ctlz_i8,"NaN":NaN,"Infinity":Infinity},buffer);var _strlen=Module["_strlen"]=asm["_strlen"];var _free=Module["_free"]=asm["_free"];var _opus_decoder_create=Module["_opus_decoder_create"]=asm["_opus_decoder_create"];var _i64Add=Module["_i64Add"]=asm["_i64Add"];var _memmove=Module["_memmove"]=asm["_memmove"];var _opus_decode_float=Module["_opus_decode_float"]=asm["_opus_decode_float"];var _bitshift64Ashr=Module["_bitshift64Ashr"]=asm["_bitshift64Ashr"];var _memset=Module["_memset"]=asm["_memset"];var _malloc=Module["_malloc"]=asm["_malloc"];var _opus_decoder_destroy=Module["_opus_decoder_destroy"]=asm["_opus_decoder_destroy"];var _memcpy=Module["_memcpy"]=asm["_memcpy"];var _llvm_ctlz_i32=Module["_llvm_ctlz_i32"]=asm["_llvm_ctlz_i32"];var runPostSets=Module["runPostSets"]=asm["runPostSets"];Runtime.stackAlloc=asm["stackAlloc"];Runtime.stackSave=asm["stackSave"];Runtime.stackRestore=asm["stackRestore"];Runtime.setTempRet0=asm["setTempRet0"];Runtime.getTempRet0=asm["getTempRet0"];var i64Math=(function(){var goog={math:{}};goog.math.Long=(function(low,high){this.low_=low|0;this.high_=high|0});goog.math.Long.IntCache_={};goog.math.Long.fromInt=(function(value){if(-128<=value&&value<128){var cachedObj=goog.math.Long.IntCache_[value];if(cachedObj){return cachedObj}}var obj=new goog.math.Long(value|0,value<0?-1:0);if(-128<=value&&value<128){goog.math.Long.IntCache_[value]=obj}return obj});goog.math.Long.fromNumber=(function(value){if(isNaN(value)||!isFinite(value)){return goog.math.Long.ZERO}else if(value<=-goog.math.Long.TWO_PWR_63_DBL_){return goog.math.Long.MIN_VALUE}else if(value+1>=goog.math.Long.TWO_PWR_63_DBL_){return goog.math.Long.MAX_VALUE}else if(value<0){return goog.math.Long.fromNumber(-value).negate()}else{return new goog.math.Long(value%goog.math.Long.TWO_PWR_32_DBL_|0,value/goog.math.Long.TWO_PWR_32_DBL_|0)}});goog.math.Long.fromBits=(function(lowBits,highBits){return new goog.math.Long(lowBits,highBits)});goog.math.Long.fromString=(function(str,opt_radix){if(str.length==0){throw Error("number format error: empty string")}var radix=opt_radix||10;if(radix<2||36<radix){throw Error("radix out of range: "+radix)}if(str.charAt(0)=="-"){return goog.math.Long.fromString(str.substring(1),radix).negate()}else if(str.indexOf("-")>=0){throw Error('number format error: interior "-" character: '+str)}var radixToPower=goog.math.Long.fromNumber(Math.pow(radix,8));var result=goog.math.Long.ZERO;for(var i=0;i<str.length;i+=8){var size=Math.min(8,str.length-i);var value=parseInt(str.substring(i,i+size),radix);if(size<8){var power=goog.math.Long.fromNumber(Math.pow(radix,size));result=result.multiply(power).add(goog.math.Long.fromNumber(value))}else{result=result.multiply(radixToPower);result=result.add(goog.math.Long.fromNumber(value))}}return result});goog.math.Long.TWO_PWR_16_DBL_=1<<16;goog.math.Long.TWO_PWR_24_DBL_=1<<24;goog.math.Long.TWO_PWR_32_DBL_=goog.math.Long.TWO_PWR_16_DBL_*goog.math.Long.TWO_PWR_16_DBL_;goog.math.Long.TWO_PWR_31_DBL_=goog.math.Long.TWO_PWR_32_DBL_/2;goog.math.Long.TWO_PWR_48_DBL_=goog.math.Long.TWO_PWR_32_DBL_*goog.math.Long.TWO_PWR_16_DBL_;goog.math.Long.TWO_PWR_64_DBL_=goog.math.Long.TWO_PWR_32_DBL_*goog.math.Long.TWO_PWR_32_DBL_;goog.math.Long.TWO_PWR_63_DBL_=goog.math.Long.TWO_PWR_64_DBL_/2;goog.math.Long.ZERO=goog.math.Long.fromInt(0);goog.math.Long.ONE=goog.math.Long.fromInt(1);goog.math.Long.NEG_ONE=goog.math.Long.fromInt(-1);goog.math.Long.MAX_VALUE=goog.math.Long.fromBits(4294967295|0,2147483647|0);goog.math.Long.MIN_VALUE=goog.math.Long.fromBits(0,2147483648|0);goog.math.Long.TWO_PWR_24_=goog.math.Long.fromInt(1<<24);goog.math.Long.prototype.toInt=(function(){return this.low_});goog.math.Long.prototype.toNumber=(function(){return this.high_*goog.math.Long.TWO_PWR_32_DBL_+this.getLowBitsUnsigned()});goog.math.Long.prototype.toString=(function(opt_radix){var radix=opt_radix||10;if(radix<2||36<radix){throw Error("radix out of range: "+radix)}if(this.isZero()){return"0"}if(this.isNegative()){if(this.equals(goog.math.Long.MIN_VALUE)){var radixLong=goog.math.Long.fromNumber(radix);var div=this.div(radixLong);var rem=div.multiply(radixLong).subtract(this);return div.toString(radix)+rem.toInt().toString(radix)}else{return"-"+this.negate().toString(radix)}}var radixToPower=goog.math.Long.fromNumber(Math.pow(radix,6));var rem=this;var result="";while(true){var remDiv=rem.div(radixToPower);var intval=rem.subtract(remDiv.multiply(radixToPower)).toInt();var digits=intval.toString(radix);rem=remDiv;if(rem.isZero()){return digits+result}else{while(digits.length<6){digits="0"+digits}result=""+digits+result}}});goog.math.Long.prototype.getHighBits=(function(){return this.high_});goog.math.Long.prototype.getLowBits=(function(){return this.low_});goog.math.Long.prototype.getLowBitsUnsigned=(function(){return this.low_>=0?this.low_:goog.math.Long.TWO_PWR_32_DBL_+this.low_});goog.math.Long.prototype.getNumBitsAbs=(function(){if(this.isNegative()){if(this.equals(goog.math.Long.MIN_VALUE)){return 64}else{return this.negate().getNumBitsAbs()}}else{var val=this.high_!=0?this.high_:this.low_;for(var bit=31;bit>0;bit--){if((val&1<<bit)!=0){break}}return this.high_!=0?bit+33:bit+1}});goog.math.Long.prototype.isZero=(function(){return this.high_==0&&this.low_==0});goog.math.Long.prototype.isNegative=(function(){return this.high_<0});goog.math.Long.prototype.isOdd=(function(){return(this.low_&1)==1});goog.math.Long.prototype.equals=(function(other){return this.high_==other.high_&&this.low_==other.low_});goog.math.Long.prototype.notEquals=(function(other){return this.high_!=other.high_||this.low_!=other.low_});goog.math.Long.prototype.lessThan=(function(other){return this.compare(other)<0});goog.math.Long.prototype.lessThanOrEqual=(function(other){return this.compare(other)<=0});goog.math.Long.prototype.greaterThan=(function(other){return this.compare(other)>0});goog.math.Long.prototype.greaterThanOrEqual=(function(other){return this.compare(other)>=0});goog.math.Long.prototype.compare=(function(other){if(this.equals(other)){return 0}var thisNeg=this.isNegative();var otherNeg=other.isNegative();if(thisNeg&&!otherNeg){return-1}if(!thisNeg&&otherNeg){return 1}if(this.subtract(other).isNegative()){return-1}else{return 1}});goog.math.Long.prototype.negate=(function(){if(this.equals(goog.math.Long.MIN_VALUE)){return goog.math.Long.MIN_VALUE}else{return this.not().add(goog.math.Long.ONE)}});goog.math.Long.prototype.add=(function(other){var a48=this.high_>>>16;var a32=this.high_&65535;var a16=this.low_>>>16;var a00=this.low_&65535;var b48=other.high_>>>16;var b32=other.high_&65535;var b16=other.low_>>>16;var b00=other.low_&65535;var c48=0,c32=0,c16=0,c00=0;c00+=a00+b00;c16+=c00>>>16;c00&=65535;c16+=a16+b16;c32+=c16>>>16;c16&=65535;c32+=a32+b32;c48+=c32>>>16;c32&=65535;c48+=a48+b48;c48&=65535;return goog.math.Long.fromBits(c16<<16|c00,c48<<16|c32)});goog.math.Long.prototype.subtract=(function(other){return this.add(other.negate())});goog.math.Long.prototype.multiply=(function(other){if(this.isZero()){return goog.math.Long.ZERO}else if(other.isZero()){return goog.math.Long.ZERO}if(this.equals(goog.math.Long.MIN_VALUE)){return other.isOdd()?goog.math.Long.MIN_VALUE:goog.math.Long.ZERO}else if(other.equals(goog.math.Long.MIN_VALUE)){return this.isOdd()?goog.math.Long.MIN_VALUE:goog.math.Long.ZERO}if(this.isNegative()){if(other.isNegative()){return this.negate().multiply(other.negate())}else{return this.negate().multiply(other).negate()}}else if(other.isNegative()){return this.multiply(other.negate()).negate()}if(this.lessThan(goog.math.Long.TWO_PWR_24_)&&other.lessThan(goog.math.Long.TWO_PWR_24_)){return goog.math.Long.fromNumber(this.toNumber()*other.toNumber())}var a48=this.high_>>>16;var a32=this.high_&65535;var a16=this.low_>>>16;var a00=this.low_&65535;var b48=other.high_>>>16;var b32=other.high_&65535;var b16=other.low_>>>16;var b00=other.low_&65535;var c48=0,c32=0,c16=0,c00=0;c00+=a00*b00;c16+=c00>>>16;c00&=65535;c16+=a16*b00;c32+=c16>>>16;c16&=65535;c16+=a00*b16;c32+=c16>>>16;c16&=65535;c32+=a32*b00;c48+=c32>>>16;c32&=65535;c32+=a16*b16;c48+=c32>>>16;c32&=65535;c32+=a00*b32;c48+=c32>>>16;c32&=65535;c48+=a48*b00+a32*b16+a16*b32+a00*b48;c48&=65535;return goog.math.Long.fromBits(c16<<16|c00,c48<<16|c32)});goog.math.Long.prototype.div=(function(other){if(other.isZero()){throw Error("division by zero")}else if(this.isZero()){return goog.math.Long.ZERO}if(this.equals(goog.math.Long.MIN_VALUE)){if(other.equals(goog.math.Long.ONE)||other.equals(goog.math.Long.NEG_ONE)){return goog.math.Long.MIN_VALUE}else if(other.equals(goog.math.Long.MIN_VALUE)){return goog.math.Long.ONE}else{var halfThis=this.shiftRight(1);var approx=halfThis.div(other).shiftLeft(1);if(approx.equals(goog.math.Long.ZERO)){return other.isNegative()?goog.math.Long.ONE:goog.math.Long.NEG_ONE}else{var rem=this.subtract(other.multiply(approx));var result=approx.add(rem.div(other));return result}}}else if(other.equals(goog.math.Long.MIN_VALUE)){return goog.math.Long.ZERO}if(this.isNegative()){if(other.isNegative()){return this.negate().div(other.negate())}else{return this.negate().div(other).negate()}}else if(other.isNegative()){return this.div(other.negate()).negate()}var res=goog.math.Long.ZERO;var rem=this;while(rem.greaterThanOrEqual(other)){var approx=Math.max(1,Math.floor(rem.toNumber()/other.toNumber()));var log2=Math.ceil(Math.log(approx)/Math.LN2);var delta=log2<=48?1:Math.pow(2,log2-48);var approxRes=goog.math.Long.fromNumber(approx);var approxRem=approxRes.multiply(other);while(approxRem.isNegative()||approxRem.greaterThan(rem)){approx-=delta;approxRes=goog.math.Long.fromNumber(approx);approxRem=approxRes.multiply(other)}if(approxRes.isZero()){approxRes=goog.math.Long.ONE}res=res.add(approxRes);rem=rem.subtract(approxRem)}return res});goog.math.Long.prototype.modulo=(function(other){return this.subtract(this.div(other).multiply(other))});goog.math.Long.prototype.not=(function(){return goog.math.Long.fromBits(~this.low_,~this.high_)});goog.math.Long.prototype.and=(function(other){return goog.math.Long.fromBits(this.low_&other.low_,this.high_&other.high_)});goog.math.Long.prototype.or=(function(other){return goog.math.Long.fromBits(this.low_|other.low_,this.high_|other.high_)});goog.math.Long.prototype.xor=(function(other){return goog.math.Long.fromBits(this.low_^other.low_,this.high_^other.high_)});goog.math.Long.prototype.shiftLeft=(function(numBits){numBits&=63;if(numBits==0){return this}else{var low=this.low_;if(numBits<32){var high=this.high_;return goog.math.Long.fromBits(low<<numBits,high<<numBits|low>>>32-numBits)}else{return goog.math.Long.fromBits(0,low<<numBits-32)}}});goog.math.Long.prototype.shiftRight=(function(numBits){numBits&=63;if(numBits==0){return this}else{var high=this.high_;if(numBits<32){var low=this.low_;return goog.math.Long.fromBits(low>>>numBits|high<<32-numBits,high>>numBits)}else{return goog.math.Long.fromBits(high>>numBits-32,high>=0?0:-1)}}});goog.math.Long.prototype.shiftRightUnsigned=(function(numBits){numBits&=63;if(numBits==0){return this}else{var high=this.high_;if(numBits<32){var low=this.low_;return goog.math.Long.fromBits(low>>>numBits|high<<32-numBits,high>>>numBits)}else if(numBits==32){return goog.math.Long.fromBits(high,0)}else{return goog.math.Long.fromBits(high>>>numBits-32,0)}}});var navigator={appName:"Modern Browser"};var dbits;var canary=0xdeadbeefcafe;var j_lm=(canary&16777215)==15715070;function BigInteger(a,b,c){if(a!=null)if("number"==typeof a)this.fromNumber(a,b,c);else if(b==null&&"string"!=typeof a)this.fromString(a,256);else this.fromString(a,b)}function nbi(){return new BigInteger(null)}function am1(i,x,w,j,c,n){while(--n>=0){var v=x*this[i++]+w[j]+c;c=Math.floor(v/67108864);w[j++]=v&67108863}return c}function am2(i,x,w,j,c,n){var xl=x&32767,xh=x>>15;while(--n>=0){var l=this[i]&32767;var h=this[i++]>>15;var m=xh*l+h*xl;l=xl*l+((m&32767)<<15)+w[j]+(c&1073741823);c=(l>>>30)+(m>>>15)+xh*h+(c>>>30);w[j++]=l&1073741823}return c}function am3(i,x,w,j,c,n){var xl=x&16383,xh=x>>14;while(--n>=0){var l=this[i]&16383;var h=this[i++]>>14;var m=xh*l+h*xl;l=xl*l+((m&16383)<<14)+w[j]+c;c=(l>>28)+(m>>14)+xh*h;w[j++]=l&268435455}return c}if(j_lm&&navigator.appName=="Microsoft Internet Explorer"){BigInteger.prototype.am=am2;dbits=30}else if(j_lm&&navigator.appName!="Netscape"){BigInteger.prototype.am=am1;dbits=26}else{BigInteger.prototype.am=am3;dbits=28}BigInteger.prototype.DB=dbits;BigInteger.prototype.DM=(1<<dbits)-1;BigInteger.prototype.DV=1<<dbits;var BI_FP=52;BigInteger.prototype.FV=Math.pow(2,BI_FP);BigInteger.prototype.F1=BI_FP-dbits;BigInteger.prototype.F2=2*dbits-BI_FP;var BI_RM="0123456789abcdefghijklmnopqrstuvwxyz";var BI_RC=new Array;var rr,vv;rr="0".charCodeAt(0);for(vv=0;vv<=9;++vv)BI_RC[rr++]=vv;rr="a".charCodeAt(0);for(vv=10;vv<36;++vv)BI_RC[rr++]=vv;rr="A".charCodeAt(0);for(vv=10;vv<36;++vv)BI_RC[rr++]=vv;function int2char(n){return BI_RM.charAt(n)}function intAt(s,i){var c=BI_RC[s.charCodeAt(i)];return c==null?-1:c}function bnpCopyTo(r){for(var i=this.t-1;i>=0;--i)r[i]=this[i];r.t=this.t;r.s=this.s}function bnpFromInt(x){this.t=1;this.s=x<0?-1:0;if(x>0)this[0]=x;else if(x<-1)this[0]=x+DV;else this.t=0}function nbv(i){var r=nbi();r.fromInt(i);return r}function bnpFromString(s,b){var k;if(b==16)k=4;else if(b==8)k=3;else if(b==256)k=8;else if(b==2)k=1;else if(b==32)k=5;else if(b==4)k=2;else{this.fromRadix(s,b);return}this.t=0;this.s=0;var i=s.length,mi=false,sh=0;while(--i>=0){var x=k==8?s[i]&255:intAt(s,i);if(x<0){if(s.charAt(i)=="-")mi=true;continue}mi=false;if(sh==0)this[this.t++]=x;else if(sh+k>this.DB){this[this.t-1]|=(x&(1<<this.DB-sh)-1)<<sh;this[this.t++]=x>>this.DB-sh}else this[this.t-1]|=x<<sh;sh+=k;if(sh>=this.DB)sh-=this.DB}if(k==8&&(s[0]&128)!=0){this.s=-1;if(sh>0)this[this.t-1]|=(1<<this.DB-sh)-1<<sh}this.clamp();if(mi)BigInteger.ZERO.subTo(this,this)}function bnpClamp(){var c=this.s&this.DM;while(this.t>0&&this[this.t-1]==c)--this.t}function bnToString(b){if(this.s<0)return"-"+this.negate().toString(b);var k;if(b==16)k=4;else if(b==8)k=3;else if(b==2)k=1;else if(b==32)k=5;else if(b==4)k=2;else return this.toRadix(b);var km=(1<<k)-1,d,m=false,r="",i=this.t;var p=this.DB-i*this.DB%k;if(i-->0){if(p<this.DB&&(d=this[i]>>p)>0){m=true;r=int2char(d)}while(i>=0){if(p<k){d=(this[i]&(1<<p)-1)<<k-p;d|=this[--i]>>(p+=this.DB-k)}else{d=this[i]>>(p-=k)&km;if(p<=0){p+=this.DB;--i}}if(d>0)m=true;if(m)r+=int2char(d)}}return m?r:"0"}function bnNegate(){var r=nbi();BigInteger.ZERO.subTo(this,r);return r}function bnAbs(){return this.s<0?this.negate():this}function bnCompareTo(a){var r=this.s-a.s;if(r!=0)return r;var i=this.t;r=i-a.t;if(r!=0)return this.s<0?-r:r;while(--i>=0)if((r=this[i]-a[i])!=0)return r;return 0}function nbits(x){var r=1,t;if((t=x>>>16)!=0){x=t;r+=16}if((t=x>>8)!=0){x=t;r+=8}if((t=x>>4)!=0){x=t;r+=4}if((t=x>>2)!=0){x=t;r+=2}if((t=x>>1)!=0){x=t;r+=1}return r}function bnBitLength(){if(this.t<=0)return 0;return this.DB*(this.t-1)+nbits(this[this.t-1]^this.s&this.DM)}function bnpDLShiftTo(n,r){var i;for(i=this.t-1;i>=0;--i)r[i+n]=this[i];for(i=n-1;i>=0;--i)r[i]=0;r.t=this.t+n;r.s=this.s}function bnpDRShiftTo(n,r){for(var i=n;i<this.t;++i)r[i-n]=this[i];r.t=Math.max(this.t-n,0);r.s=this.s}function bnpLShiftTo(n,r){var bs=n%this.DB;var cbs=this.DB-bs;var bm=(1<<cbs)-1;var ds=Math.floor(n/this.DB),c=this.s<<bs&this.DM,i;for(i=this.t-1;i>=0;--i){r[i+ds+1]=this[i]>>cbs|c;c=(this[i]&bm)<<bs}for(i=ds-1;i>=0;--i)r[i]=0;r[ds]=c;r.t=this.t+ds+1;r.s=this.s;r.clamp()}function bnpRShiftTo(n,r){r.s=this.s;var ds=Math.floor(n/this.DB);if(ds>=this.t){r.t=0;return}var bs=n%this.DB;var cbs=this.DB-bs;var bm=(1<<bs)-1;r[0]=this[ds]>>bs;for(var i=ds+1;i<this.t;++i){r[i-ds-1]|=(this[i]&bm)<<cbs;r[i-ds]=this[i]>>bs}if(bs>0)r[this.t-ds-1]|=(this.s&bm)<<cbs;r.t=this.t-ds;r.clamp()}function bnpSubTo(a,r){var i=0,c=0,m=Math.min(a.t,this.t);while(i<m){c+=this[i]-a[i];r[i++]=c&this.DM;c>>=this.DB}if(a.t<this.t){c-=a.s;while(i<this.t){c+=this[i];r[i++]=c&this.DM;c>>=this.DB}c+=this.s}else{c+=this.s;while(i<a.t){c-=a[i];r[i++]=c&this.DM;c>>=this.DB}c-=a.s}r.s=c<0?-1:0;if(c<-1)r[i++]=this.DV+c;else if(c>0)r[i++]=c;r.t=i;r.clamp()}function bnpMultiplyTo(a,r){var x=this.abs(),y=a.abs();var i=x.t;r.t=i+y.t;while(--i>=0)r[i]=0;for(i=0;i<y.t;++i)r[i+x.t]=x.am(0,y[i],r,i,0,x.t);r.s=0;r.clamp();if(this.s!=a.s)BigInteger.ZERO.subTo(r,r)}function bnpSquareTo(r){var x=this.abs();var i=r.t=2*x.t;while(--i>=0)r[i]=0;for(i=0;i<x.t-1;++i){var c=x.am(i,x[i],r,2*i,0,1);if((r[i+x.t]+=x.am(i+1,2*x[i],r,2*i+1,c,x.t-i-1))>=x.DV){r[i+x.t]-=x.DV;r[i+x.t+1]=1}}if(r.t>0)r[r.t-1]+=x.am(i,x[i],r,2*i,0,1);r.s=0;r.clamp()}function bnpDivRemTo(m,q,r){var pm=m.abs();if(pm.t<=0)return;var pt=this.abs();if(pt.t<pm.t){if(q!=null)q.fromInt(0);if(r!=null)this.copyTo(r);return}if(r==null)r=nbi();var y=nbi(),ts=this.s,ms=m.s;var nsh=this.DB-nbits(pm[pm.t-1]);if(nsh>0){pm.lShiftTo(nsh,y);pt.lShiftTo(nsh,r)}else{pm.copyTo(y);pt.copyTo(r)}var ys=y.t;var y0=y[ys-1];if(y0==0)return;var yt=y0*(1<<this.F1)+(ys>1?y[ys-2]>>this.F2:0);var d1=this.FV/yt,d2=(1<<this.F1)/yt,e=1<<this.F2;var i=r.t,j=i-ys,t=q==null?nbi():q;y.dlShiftTo(j,t);if(r.compareTo(t)>=0){r[r.t++]=1;r.subTo(t,r)}BigInteger.ONE.dlShiftTo(ys,t);t.subTo(y,y);while(y.t<ys)y[y.t++]=0;while(--j>=0){var qd=r[--i]==y0?this.DM:Math.floor(r[i]*d1+(r[i-1]+e)*d2);if((r[i]+=y.am(0,qd,r,j,0,ys))<qd){y.dlShiftTo(j,t);r.subTo(t,r);while(r[i]<--qd)r.subTo(t,r)}}if(q!=null){r.drShiftTo(ys,q);if(ts!=ms)BigInteger.ZERO.subTo(q,q)}r.t=ys;r.clamp();if(nsh>0)r.rShiftTo(nsh,r);if(ts<0)BigInteger.ZERO.subTo(r,r)}function bnMod(a){var r=nbi();this.abs().divRemTo(a,null,r);if(this.s<0&&r.compareTo(BigInteger.ZERO)>0)a.subTo(r,r);return r}function Classic(m){this.m=m}function cConvert(x){if(x.s<0||x.compareTo(this.m)>=0)return x.mod(this.m);else return x}function cRevert(x){return x}function cReduce(x){x.divRemTo(this.m,null,x)}function cMulTo(x,y,r){x.multiplyTo(y,r);this.reduce(r)}function cSqrTo(x,r){x.squareTo(r);this.reduce(r)}Classic.prototype.convert=cConvert;Classic.prototype.revert=cRevert;Classic.prototype.reduce=cReduce;Classic.prototype.mulTo=cMulTo;Classic.prototype.sqrTo=cSqrTo;function bnpInvDigit(){if(this.t<1)return 0;var x=this[0];if((x&1)==0)return 0;var y=x&3;y=y*(2-(x&15)*y)&15;y=y*(2-(x&255)*y)&255;y=y*(2-((x&65535)*y&65535))&65535;y=y*(2-x*y%this.DV)%this.DV;return y>0?this.DV-y:-y}function Montgomery(m){this.m=m;this.mp=m.invDigit();this.mpl=this.mp&32767;this.mph=this.mp>>15;this.um=(1<<m.DB-15)-1;this.mt2=2*m.t}function montConvert(x){var r=nbi();x.abs().dlShiftTo(this.m.t,r);r.divRemTo(this.m,null,r);if(x.s<0&&r.compareTo(BigInteger.ZERO)>0)this.m.subTo(r,r);return r}function montRevert(x){var r=nbi();x.copyTo(r);this.reduce(r);return r}function montReduce(x){while(x.t<=this.mt2)x[x.t++]=0;for(var i=0;i<this.m.t;++i){var j=x[i]&32767;var u0=j*this.mpl+((j*this.mph+(x[i]>>15)*this.mpl&this.um)<<15)&x.DM;j=i+this.m.t;x[j]+=this.m.am(0,u0,x,i,0,this.m.t);while(x[j]>=x.DV){x[j]-=x.DV;x[++j]++}}x.clamp();x.drShiftTo(this.m.t,x);if(x.compareTo(this.m)>=0)x.subTo(this.m,x)}function montSqrTo(x,r){x.squareTo(r);this.reduce(r)}function montMulTo(x,y,r){x.multiplyTo(y,r);this.reduce(r)}Montgomery.prototype.convert=montConvert;Montgomery.prototype.revert=montRevert;Montgomery.prototype.reduce=montReduce;Montgomery.prototype.mulTo=montMulTo;Montgomery.prototype.sqrTo=montSqrTo;function bnpIsEven(){return(this.t>0?this[0]&1:this.s)==0}function bnpExp(e,z){if(e>4294967295||e<1)return BigInteger.ONE;var r=nbi(),r2=nbi(),g=z.convert(this),i=nbits(e)-1;g.copyTo(r);while(--i>=0){z.sqrTo(r,r2);if((e&1<<i)>0)z.mulTo(r2,g,r);else{var t=r;r=r2;r2=t}}return z.revert(r)}function bnModPowInt(e,m){var z;if(e<256||m.isEven())z=new Classic(m);else z=new Montgomery(m);return this.exp(e,z)}BigInteger.prototype.copyTo=bnpCopyTo;BigInteger.prototype.fromInt=bnpFromInt;BigInteger.prototype.fromString=bnpFromString;BigInteger.prototype.clamp=bnpClamp;BigInteger.prototype.dlShiftTo=bnpDLShiftTo;BigInteger.prototype.drShiftTo=bnpDRShiftTo;BigInteger.prototype.lShiftTo=bnpLShiftTo;BigInteger.prototype.rShiftTo=bnpRShiftTo;BigInteger.prototype.subTo=bnpSubTo;BigInteger.prototype.multiplyTo=bnpMultiplyTo;BigInteger.prototype.squareTo=bnpSquareTo;BigInteger.prototype.divRemTo=bnpDivRemTo;BigInteger.prototype.invDigit=bnpInvDigit;BigInteger.prototype.isEven=bnpIsEven;BigInteger.prototype.exp=bnpExp;BigInteger.prototype.toString=bnToString;BigInteger.prototype.negate=bnNegate;BigInteger.prototype.abs=bnAbs;BigInteger.prototype.compareTo=bnCompareTo;BigInteger.prototype.bitLength=bnBitLength;BigInteger.prototype.mod=bnMod;BigInteger.prototype.modPowInt=bnModPowInt;BigInteger.ZERO=nbv(0);BigInteger.ONE=nbv(1);function bnpFromRadix(s,b){this.fromInt(0);if(b==null)b=10;var cs=this.chunkSize(b);var d=Math.pow(b,cs),mi=false,j=0,w=0;for(var i=0;i<s.length;++i){var x=intAt(s,i);if(x<0){if(s.charAt(i)=="-"&&this.signum()==0)mi=true;continue}w=b*w+x;if(++j>=cs){this.dMultiply(d);this.dAddOffset(w,0);j=0;w=0}}if(j>0){this.dMultiply(Math.pow(b,j));this.dAddOffset(w,0)}if(mi)BigInteger.ZERO.subTo(this,this)}function bnpChunkSize(r){return Math.floor(Math.LN2*this.DB/Math.log(r))}function bnSigNum(){if(this.s<0)return-1;else if(this.t<=0||this.t==1&&this[0]<=0)return 0;else return 1}function bnpDMultiply(n){this[this.t]=this.am(0,n-1,this,0,0,this.t);++this.t;this.clamp()}function bnpDAddOffset(n,w){if(n==0)return;while(this.t<=w)this[this.t++]=0;this[w]+=n;while(this[w]>=this.DV){this[w]-=this.DV;if(++w>=this.t)this[this.t++]=0;++this[w]}}function bnpToRadix(b){if(b==null)b=10;if(this.signum()==0||b<2||b>36)return"0";var cs=this.chunkSize(b);var a=Math.pow(b,cs);var d=nbv(a),y=nbi(),z=nbi(),r="";this.divRemTo(d,y,z);while(y.signum()>0){r=(a+z.intValue()).toString(b).substr(1)+r;y.divRemTo(d,y,z)}return z.intValue().toString(b)+r}function bnIntValue(){if(this.s<0){if(this.t==1)return this[0]-this.DV;else if(this.t==0)return-1}else if(this.t==1)return this[0];else if(this.t==0)return 0;return(this[1]&(1<<32-this.DB)-1)<<this.DB|this[0]}function bnpAddTo(a,r){var i=0,c=0,m=Math.min(a.t,this.t);while(i<m){c+=this[i]+a[i];r[i++]=c&this.DM;c>>=this.DB}if(a.t<this.t){c+=a.s;while(i<this.t){c+=this[i];r[i++]=c&this.DM;c>>=this.DB}c+=this.s}else{c+=this.s;while(i<a.t){c+=a[i];r[i++]=c&this.DM;c>>=this.DB}c+=a.s}r.s=c<0?-1:0;if(c>0)r[i++]=c;else if(c<-1)r[i++]=this.DV+c;r.t=i;r.clamp()}BigInteger.prototype.fromRadix=bnpFromRadix;BigInteger.prototype.chunkSize=bnpChunkSize;BigInteger.prototype.signum=bnSigNum;BigInteger.prototype.dMultiply=bnpDMultiply;BigInteger.prototype.dAddOffset=bnpDAddOffset;BigInteger.prototype.toRadix=bnpToRadix;BigInteger.prototype.intValue=bnIntValue;BigInteger.prototype.addTo=bnpAddTo;var Wrapper={abs:(function(l,h){var x=new goog.math.Long(l,h);var ret;if(x.isNegative()){ret=x.negate()}else{ret=x}HEAP32[tempDoublePtr>>2]=ret.low_;HEAP32[tempDoublePtr+4>>2]=ret.high_}),ensureTemps:(function(){if(Wrapper.ensuredTemps)return;Wrapper.ensuredTemps=true;Wrapper.two32=new BigInteger;Wrapper.two32.fromString("4294967296",10);Wrapper.two64=new BigInteger;Wrapper.two64.fromString("18446744073709551616",10);Wrapper.temp1=new BigInteger;Wrapper.temp2=new BigInteger}),lh2bignum:(function(l,h){var a=new BigInteger;a.fromString(h.toString(),10);var b=new BigInteger;a.multiplyTo(Wrapper.two32,b);var c=new BigInteger;c.fromString(l.toString(),10);var d=new BigInteger;c.addTo(b,d);return d}),stringify:(function(l,h,unsigned){var ret=(new goog.math.Long(l,h)).toString();if(unsigned&&ret[0]=="-"){Wrapper.ensureTemps();var bignum=new BigInteger;bignum.fromString(ret,10);ret=new BigInteger;Wrapper.two64.addTo(bignum,ret);ret=ret.toString(10)}return ret}),fromString:(function(str,base,min,max,unsigned){Wrapper.ensureTemps();var bignum=new BigInteger;bignum.fromString(str,base);var bigmin=new BigInteger;bigmin.fromString(min,10);var bigmax=new BigInteger;bigmax.fromString(max,10);if(unsigned&&bignum.compareTo(BigInteger.ZERO)<0){var temp=new BigInteger;bignum.addTo(Wrapper.two64,temp);bignum=temp}var error=false;if(bignum.compareTo(bigmin)<0){bignum=bigmin;error=true}else if(bignum.compareTo(bigmax)>0){bignum=bigmax;error=true}var ret=goog.math.Long.fromString(bignum.toString());HEAP32[tempDoublePtr>>2]=ret.low_;HEAP32[tempDoublePtr+4>>2]=ret.high_;if(error)throw"range error"})};return Wrapper})();if(memoryInitializer){if(ENVIRONMENT_IS_NODE||ENVIRONMENT_IS_SHELL){var data=Module["readBinary"](memoryInitializer);HEAPU8.set(data,STATIC_BASE)}else{addRunDependency("memory initializer");Browser.asyncLoad(memoryInitializer,(function(data){HEAPU8.set(data,STATIC_BASE);removeRunDependency("memory initializer")}),(function(data){throw"could not load memory initializer "+memoryInitializer}))}}function ExitStatus(status){this.name="ExitStatus";this.message="Program terminated with exit("+status+")";this.status=status}ExitStatus.prototype=new Error;ExitStatus.prototype.constructor=ExitStatus;var initialStackTop;var preloadStartTime=null;var calledMain=false;dependenciesFulfilled=function runCaller(){if(!Module["calledRun"]&&shouldRunNow)run();if(!Module["calledRun"])dependenciesFulfilled=runCaller};Module["callMain"]=Module.callMain=function callMain(args){assert(runDependencies==0,"cannot call main when async dependencies remain! (listen on __ATMAIN__)");assert(__ATPRERUN__.length==0,"cannot call main when preRun functions remain to be called");args=args||[];ensureInitRuntime();var argc=args.length+1;function pad(){for(var i=0;i<4-1;i++){argv.push(0)}}var argv=[allocate(intArrayFromString(Module["thisProgram"]||"/bin/this.program"),"i8",ALLOC_NORMAL)];pad();for(var i=0;i<argc-1;i=i+1){argv.push(allocate(intArrayFromString(args[i]),"i8",ALLOC_NORMAL));pad()}argv.push(0);argv=allocate(argv,"i32",ALLOC_NORMAL);initialStackTop=STACKTOP;try{var ret=Module["_main"](argc,argv,0);if(!Module["noExitRuntime"]){exit(ret)}}catch(e){if(e instanceof ExitStatus){return}else if(e=="SimulateInfiniteLoop"){Module["noExitRuntime"]=true;return}else{if(e&&typeof e==="object"&&e.stack)Module.printErr("exception thrown: "+[e,e.stack]);throw e}}finally{calledMain=true}};function run(args){args=args||Module["arguments"];if(preloadStartTime===null)preloadStartTime=Date.now();if(runDependencies>0){Module.printErr("run() called, but dependencies remain, so not running");return}preRun();if(runDependencies>0)return;if(Module["calledRun"])return;function doRun(){if(Module["calledRun"])return;Module["calledRun"]=true;ensureInitRuntime();preMain();if(ENVIRONMENT_IS_WEB&&preloadStartTime!==null){Module.printErr("pre-main prep time: "+(Date.now()-preloadStartTime)+" ms")}if(Module["_main"]&&shouldRunNow){Module["callMain"](args)}postRun()}if(Module["setStatus"]){Module["setStatus"]("Running...");setTimeout((function(){setTimeout((function(){Module["setStatus"]("")}),1);if(!ABORT)doRun()}),1)}else{doRun()}}Module["run"]=Module.run=run;function exit(status){ABORT=true;EXITSTATUS=status;STACKTOP=initialStackTop;exitRuntime();throw new ExitStatus(status)}Module["exit"]=Module.exit=exit;function abort(text){if(text){Module.print(text);Module.printErr(text)}ABORT=true;EXITSTATUS=1;var extra="\nIf this abort() is unexpected, build with -s ASSERTIONS=1 which can give more information.";throw"abort() at "+stackTrace()+extra}Module["abort"]=Module.abort=abort;if(Module["preInit"]){if(typeof Module["preInit"]=="function")Module["preInit"]=[Module["preInit"]];while(Module["preInit"].length>0){Module["preInit"].pop()()}}var shouldRunNow=true;if(Module["noInitialRun"]){shouldRunNow=false}run()




module.exports = Module

/* WEBPACK VAR INJECTION */}.call(this, "/"))

/***/ }),

/***/ "./node_modules/.0.0.0@path-browserify/index.js":
/*!******************************************************!*\
  !*** ./node_modules/.0.0.0@path-browserify/index.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

// resolves . and .. elements in a path array with directory names there
// must be no slashes, empty elements, or device names (c:\) in the array
// (so also no leading and trailing slashes - it does not distinguish
// relative and absolute paths)
function normalizeArray(parts, allowAboveRoot) {
  // if the path tries to go above the root, `up` ends up > 0
  var up = 0;
  for (var i = parts.length - 1; i >= 0; i--) {
    var last = parts[i];
    if (last === '.') {
      parts.splice(i, 1);
    } else if (last === '..') {
      parts.splice(i, 1);
      up++;
    } else if (up) {
      parts.splice(i, 1);
      up--;
    }
  }

  // if the path is allowed to go above the root, restore leading ..s
  if (allowAboveRoot) {
    for (; up--; up) {
      parts.unshift('..');
    }
  }

  return parts;
}

// Split a filename into [root, dir, basename, ext], unix version
// 'root' is just a slash, or nothing.
var splitPathRe =
    /^(\/?|)([\s\S]*?)((?:\.{1,2}|[^\/]+?|)(\.[^.\/]*|))(?:[\/]*)$/;
var splitPath = function(filename) {
  return splitPathRe.exec(filename).slice(1);
};

// path.resolve([from ...], to)
// posix version
exports.resolve = function() {
  var resolvedPath = '',
      resolvedAbsolute = false;

  for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {
    var path = (i >= 0) ? arguments[i] : process.cwd();

    // Skip empty and invalid entries
    if (typeof path !== 'string') {
      throw new TypeError('Arguments to path.resolve must be strings');
    } else if (!path) {
      continue;
    }

    resolvedPath = path + '/' + resolvedPath;
    resolvedAbsolute = path.charAt(0) === '/';
  }

  // At this point the path should be resolved to a full absolute path, but
  // handle relative paths to be safe (might happen when process.cwd() fails)

  // Normalize the path
  resolvedPath = normalizeArray(filter(resolvedPath.split('/'), function(p) {
    return !!p;
  }), !resolvedAbsolute).join('/');

  return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';
};

// path.normalize(path)
// posix version
exports.normalize = function(path) {
  var isAbsolute = exports.isAbsolute(path),
      trailingSlash = substr(path, -1) === '/';

  // Normalize the path
  path = normalizeArray(filter(path.split('/'), function(p) {
    return !!p;
  }), !isAbsolute).join('/');

  if (!path && !isAbsolute) {
    path = '.';
  }
  if (path && trailingSlash) {
    path += '/';
  }

  return (isAbsolute ? '/' : '') + path;
};

// posix version
exports.isAbsolute = function(path) {
  return path.charAt(0) === '/';
};

// posix version
exports.join = function() {
  var paths = Array.prototype.slice.call(arguments, 0);
  return exports.normalize(filter(paths, function(p, index) {
    if (typeof p !== 'string') {
      throw new TypeError('Arguments to path.join must be strings');
    }
    return p;
  }).join('/'));
};


// path.relative(from, to)
// posix version
exports.relative = function(from, to) {
  from = exports.resolve(from).substr(1);
  to = exports.resolve(to).substr(1);

  function trim(arr) {
    var start = 0;
    for (; start < arr.length; start++) {
      if (arr[start] !== '') break;
    }

    var end = arr.length - 1;
    for (; end >= 0; end--) {
      if (arr[end] !== '') break;
    }

    if (start > end) return [];
    return arr.slice(start, end - start + 1);
  }

  var fromParts = trim(from.split('/'));
  var toParts = trim(to.split('/'));

  var length = Math.min(fromParts.length, toParts.length);
  var samePartsLength = length;
  for (var i = 0; i < length; i++) {
    if (fromParts[i] !== toParts[i]) {
      samePartsLength = i;
      break;
    }
  }

  var outputParts = [];
  for (var i = samePartsLength; i < fromParts.length; i++) {
    outputParts.push('..');
  }

  outputParts = outputParts.concat(toParts.slice(samePartsLength));

  return outputParts.join('/');
};

exports.sep = '/';
exports.delimiter = ':';

exports.dirname = function(path) {
  var result = splitPath(path),
      root = result[0],
      dir = result[1];

  if (!root && !dir) {
    // No dirname whatsoever
    return '.';
  }

  if (dir) {
    // It has a dirname, strip trailing slash
    dir = dir.substr(0, dir.length - 1);
  }

  return root + dir;
};


exports.basename = function(path, ext) {
  var f = splitPath(path)[2];
  // TODO: make this comparison case-insensitive on windows?
  if (ext && f.substr(-1 * ext.length) === ext) {
    f = f.substr(0, f.length - ext.length);
  }
  return f;
};


exports.extname = function(path) {
  return splitPath(path)[3];
};

function filter (xs, f) {
    if (xs.filter) return xs.filter(f);
    var res = [];
    for (var i = 0; i < xs.length; i++) {
        if (f(xs[i], i, xs)) res.push(xs[i]);
    }
    return res;
}

// String.prototype.substr - negative index don't work in IE8
var substr = 'ab'.substr(-1) === 'b'
    ? function (str, start, len) { return str.substr(start, len) }
    : function (str, start, len) {
        if (start < 0) start = str.length + start;
        return str.substr(start, len);
    }
;


/***/ }),

/***/ "./node_modules/.0.0.1@indexof/index.js":
/*!**********************************************!*\
  !*** ./node_modules/.0.0.1@indexof/index.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports) {


var indexOf = [].indexOf;

module.exports = function(arr, obj){
  if (indexOf) return arr.indexOf(obj);
  for (var i = 0; i < arr.length; ++i) {
    if (arr[i] === obj) return i;
  }
  return -1;
};

/***/ }),

/***/ "./node_modules/.0.0.4@vm-browserify/index.js":
/*!****************************************************!*\
  !*** ./node_modules/.0.0.4@vm-browserify/index.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var indexOf = __webpack_require__(/*! indexof */ "./node_modules/.0.0.1@indexof/index.js");

var Object_keys = function (obj) {
    if (Object.keys) return Object.keys(obj)
    else {
        var res = [];
        for (var key in obj) res.push(key)
        return res;
    }
};

var forEach = function (xs, fn) {
    if (xs.forEach) return xs.forEach(fn)
    else for (var i = 0; i < xs.length; i++) {
        fn(xs[i], i, xs);
    }
};

var defineProp = (function() {
    try {
        Object.defineProperty({}, '_', {});
        return function(obj, name, value) {
            Object.defineProperty(obj, name, {
                writable: true,
                enumerable: false,
                configurable: true,
                value: value
            })
        };
    } catch(e) {
        return function(obj, name, value) {
            obj[name] = value;
        };
    }
}());

var globals = ['Array', 'Boolean', 'Date', 'Error', 'EvalError', 'Function',
'Infinity', 'JSON', 'Math', 'NaN', 'Number', 'Object', 'RangeError',
'ReferenceError', 'RegExp', 'String', 'SyntaxError', 'TypeError', 'URIError',
'decodeURI', 'decodeURIComponent', 'encodeURI', 'encodeURIComponent', 'escape',
'eval', 'isFinite', 'isNaN', 'parseFloat', 'parseInt', 'undefined', 'unescape'];

function Context() {}
Context.prototype = {};

var Script = exports.Script = function NodeScript (code) {
    if (!(this instanceof Script)) return new Script(code);
    this.code = code;
};

Script.prototype.runInContext = function (context) {
    if (!(context instanceof Context)) {
        throw new TypeError("needs a 'context' argument.");
    }
    
    var iframe = document.createElement('iframe');
    if (!iframe.style) iframe.style = {};
    iframe.style.display = 'none';
    
    document.body.appendChild(iframe);
    
    var win = iframe.contentWindow;
    var wEval = win.eval, wExecScript = win.execScript;

    if (!wEval && wExecScript) {
        // win.eval() magically appears when this is called in IE:
        wExecScript.call(win, 'null');
        wEval = win.eval;
    }
    
    forEach(Object_keys(context), function (key) {
        win[key] = context[key];
    });
    forEach(globals, function (key) {
        if (context[key]) {
            win[key] = context[key];
        }
    });
    
    var winKeys = Object_keys(win);

    var res = wEval.call(win, this.code);
    
    forEach(Object_keys(win), function (key) {
        // Avoid copying circular objects like `top` and `window` by only
        // updating existing context properties or new properties in the `win`
        // that was only introduced after the eval.
        if (key in context || indexOf(winKeys, key) === -1) {
            context[key] = win[key];
        }
    });

    forEach(globals, function (key) {
        if (!(key in context)) {
            defineProp(context, key, win[key]);
        }
    });
    
    document.body.removeChild(iframe);
    
    return res;
};

Script.prototype.runInThisContext = function () {
    return eval(this.code); // maybe...
};

Script.prototype.runInNewContext = function (context) {
    var ctx = Script.createContext(context);
    var res = this.runInContext(ctx);

    forEach(Object_keys(ctx), function (key) {
        context[key] = ctx[key];
    });

    return res;
};

forEach(Object_keys(Script.prototype), function (name) {
    exports[name] = Script[name] = function (code) {
        var s = Script(code);
        return s[name].apply(s, [].slice.call(arguments, 1));
    };
});

exports.createScript = function (code) {
    return exports.Script(code);
};

exports.createContext = Script.createContext = function (context) {
    var copy = new Context();
    if(typeof context === 'object') {
        forEach(Object_keys(context), function (key) {
            copy[key] = context[key];
        });
    }
    return copy;
};


/***/ }),

/***/ "./node_modules/.1.0.0@des.js/lib/des.js":
/*!***********************************************!*\
  !*** ./node_modules/.1.0.0@des.js/lib/des.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.utils = __webpack_require__(/*! ./des/utils */ "./node_modules/.1.0.0@des.js/lib/des/utils.js");
exports.Cipher = __webpack_require__(/*! ./des/cipher */ "./node_modules/.1.0.0@des.js/lib/des/cipher.js");
exports.DES = __webpack_require__(/*! ./des/des */ "./node_modules/.1.0.0@des.js/lib/des/des.js");
exports.CBC = __webpack_require__(/*! ./des/cbc */ "./node_modules/.1.0.0@des.js/lib/des/cbc.js");
exports.EDE = __webpack_require__(/*! ./des/ede */ "./node_modules/.1.0.0@des.js/lib/des/ede.js");


/***/ }),

/***/ "./node_modules/.1.0.0@des.js/lib/des/cbc.js":
/*!***************************************************!*\
  !*** ./node_modules/.1.0.0@des.js/lib/des/cbc.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var assert = __webpack_require__(/*! minimalistic-assert */ "./node_modules/.1.0.1@minimalistic-assert/index.js");
var inherits = __webpack_require__(/*! inherits */ "./node_modules/.2.0.3@inherits/inherits_browser.js");

var proto = {};

function CBCState(iv) {
  assert.equal(iv.length, 8, 'Invalid IV length');

  this.iv = new Array(8);
  for (var i = 0; i < this.iv.length; i++)
    this.iv[i] = iv[i];
}

function instantiate(Base) {
  function CBC(options) {
    Base.call(this, options);
    this._cbcInit();
  }
  inherits(CBC, Base);

  var keys = Object.keys(proto);
  for (var i = 0; i < keys.length; i++) {
    var key = keys[i];
    CBC.prototype[key] = proto[key];
  }

  CBC.create = function create(options) {
    return new CBC(options);
  };

  return CBC;
}

exports.instantiate = instantiate;

proto._cbcInit = function _cbcInit() {
  var state = new CBCState(this.options.iv);
  this._cbcState = state;
};

proto._update = function _update(inp, inOff, out, outOff) {
  var state = this._cbcState;
  var superProto = this.constructor.super_.prototype;

  var iv = state.iv;
  if (this.type === 'encrypt') {
    for (var i = 0; i < this.blockSize; i++)
      iv[i] ^= inp[inOff + i];

    superProto._update.call(this, iv, 0, out, outOff);

    for (var i = 0; i < this.blockSize; i++)
      iv[i] = out[outOff + i];
  } else {
    superProto._update.call(this, inp, inOff, out, outOff);

    for (var i = 0; i < this.blockSize; i++)
      out[outOff + i] ^= iv[i];

    for (var i = 0; i < this.blockSize; i++)
      iv[i] = inp[inOff + i];
  }
};


/***/ }),

/***/ "./node_modules/.1.0.0@des.js/lib/des/cipher.js":
/*!******************************************************!*\
  !*** ./node_modules/.1.0.0@des.js/lib/des/cipher.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var assert = __webpack_require__(/*! minimalistic-assert */ "./node_modules/.1.0.1@minimalistic-assert/index.js");

function Cipher(options) {
  this.options = options;

  this.type = this.options.type;
  this.blockSize = 8;
  this._init();

  this.buffer = new Array(this.blockSize);
  this.bufferOff = 0;
}
module.exports = Cipher;

Cipher.prototype._init = function _init() {
  // Might be overrided
};

Cipher.prototype.update = function update(data) {
  if (data.length === 0)
    return [];

  if (this.type === 'decrypt')
    return this._updateDecrypt(data);
  else
    return this._updateEncrypt(data);
};

Cipher.prototype._buffer = function _buffer(data, off) {
  // Append data to buffer
  var min = Math.min(this.buffer.length - this.bufferOff, data.length - off);
  for (var i = 0; i < min; i++)
    this.buffer[this.bufferOff + i] = data[off + i];
  this.bufferOff += min;

  // Shift next
  return min;
};

Cipher.prototype._flushBuffer = function _flushBuffer(out, off) {
  this._update(this.buffer, 0, out, off);
  this.bufferOff = 0;
  return this.blockSize;
};

Cipher.prototype._updateEncrypt = function _updateEncrypt(data) {
  var inputOff = 0;
  var outputOff = 0;

  var count = ((this.bufferOff + data.length) / this.blockSize) | 0;
  var out = new Array(count * this.blockSize);

  if (this.bufferOff !== 0) {
    inputOff += this._buffer(data, inputOff);

    if (this.bufferOff === this.buffer.length)
      outputOff += this._flushBuffer(out, outputOff);
  }

  // Write blocks
  var max = data.length - ((data.length - inputOff) % this.blockSize);
  for (; inputOff < max; inputOff += this.blockSize) {
    this._update(data, inputOff, out, outputOff);
    outputOff += this.blockSize;
  }

  // Queue rest
  for (; inputOff < data.length; inputOff++, this.bufferOff++)
    this.buffer[this.bufferOff] = data[inputOff];

  return out;
};

Cipher.prototype._updateDecrypt = function _updateDecrypt(data) {
  var inputOff = 0;
  var outputOff = 0;

  var count = Math.ceil((this.bufferOff + data.length) / this.blockSize) - 1;
  var out = new Array(count * this.blockSize);

  // TODO(indutny): optimize it, this is far from optimal
  for (; count > 0; count--) {
    inputOff += this._buffer(data, inputOff);
    outputOff += this._flushBuffer(out, outputOff);
  }

  // Buffer rest of the input
  inputOff += this._buffer(data, inputOff);

  return out;
};

Cipher.prototype.final = function final(buffer) {
  var first;
  if (buffer)
    first = this.update(buffer);

  var last;
  if (this.type === 'encrypt')
    last = this._finalEncrypt();
  else
    last = this._finalDecrypt();

  if (first)
    return first.concat(last);
  else
    return last;
};

Cipher.prototype._pad = function _pad(buffer, off) {
  if (off === 0)
    return false;

  while (off < buffer.length)
    buffer[off++] = 0;

  return true;
};

Cipher.prototype._finalEncrypt = function _finalEncrypt() {
  if (!this._pad(this.buffer, this.bufferOff))
    return [];

  var out = new Array(this.blockSize);
  this._update(this.buffer, 0, out, 0);
  return out;
};

Cipher.prototype._unpad = function _unpad(buffer) {
  return buffer;
};

Cipher.prototype._finalDecrypt = function _finalDecrypt() {
  assert.equal(this.bufferOff, this.blockSize, 'Not enough data to decrypt');
  var out = new Array(this.blockSize);
  this._flushBuffer(out, 0);

  return this._unpad(out);
};


/***/ }),

/***/ "./node_modules/.1.0.0@des.js/lib/des/des.js":
/*!***************************************************!*\
  !*** ./node_modules/.1.0.0@des.js/lib/des/des.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var assert = __webpack_require__(/*! minimalistic-assert */ "./node_modules/.1.0.1@minimalistic-assert/index.js");
var inherits = __webpack_require__(/*! inherits */ "./node_modules/.2.0.3@inherits/inherits_browser.js");

var des = __webpack_require__(/*! ../des */ "./node_modules/.1.0.0@des.js/lib/des.js");
var utils = des.utils;
var Cipher = des.Cipher;

function DESState() {
  this.tmp = new Array(2);
  this.keys = null;
}

function DES(options) {
  Cipher.call(this, options);

  var state = new DESState();
  this._desState = state;

  this.deriveKeys(state, options.key);
}
inherits(DES, Cipher);
module.exports = DES;

DES.create = function create(options) {
  return new DES(options);
};

var shiftTable = [
  1, 1, 2, 2, 2, 2, 2, 2,
  1, 2, 2, 2, 2, 2, 2, 1
];

DES.prototype.deriveKeys = function deriveKeys(state, key) {
  state.keys = new Array(16 * 2);

  assert.equal(key.length, this.blockSize, 'Invalid key length');

  var kL = utils.readUInt32BE(key, 0);
  var kR = utils.readUInt32BE(key, 4);

  utils.pc1(kL, kR, state.tmp, 0);
  kL = state.tmp[0];
  kR = state.tmp[1];
  for (var i = 0; i < state.keys.length; i += 2) {
    var shift = shiftTable[i >>> 1];
    kL = utils.r28shl(kL, shift);
    kR = utils.r28shl(kR, shift);
    utils.pc2(kL, kR, state.keys, i);
  }
};

DES.prototype._update = function _update(inp, inOff, out, outOff) {
  var state = this._desState;

  var l = utils.readUInt32BE(inp, inOff);
  var r = utils.readUInt32BE(inp, inOff + 4);

  // Initial Permutation
  utils.ip(l, r, state.tmp, 0);
  l = state.tmp[0];
  r = state.tmp[1];

  if (this.type === 'encrypt')
    this._encrypt(state, l, r, state.tmp, 0);
  else
    this._decrypt(state, l, r, state.tmp, 0);

  l = state.tmp[0];
  r = state.tmp[1];

  utils.writeUInt32BE(out, l, outOff);
  utils.writeUInt32BE(out, r, outOff + 4);
};

DES.prototype._pad = function _pad(buffer, off) {
  var value = buffer.length - off;
  for (var i = off; i < buffer.length; i++)
    buffer[i] = value;

  return true;
};

DES.prototype._unpad = function _unpad(buffer) {
  var pad = buffer[buffer.length - 1];
  for (var i = buffer.length - pad; i < buffer.length; i++)
    assert.equal(buffer[i], pad);

  return buffer.slice(0, buffer.length - pad);
};

DES.prototype._encrypt = function _encrypt(state, lStart, rStart, out, off) {
  var l = lStart;
  var r = rStart;

  // Apply f() x16 times
  for (var i = 0; i < state.keys.length; i += 2) {
    var keyL = state.keys[i];
    var keyR = state.keys[i + 1];

    // f(r, k)
    utils.expand(r, state.tmp, 0);

    keyL ^= state.tmp[0];
    keyR ^= state.tmp[1];
    var s = utils.substitute(keyL, keyR);
    var f = utils.permute(s);

    var t = r;
    r = (l ^ f) >>> 0;
    l = t;
  }

  // Reverse Initial Permutation
  utils.rip(r, l, out, off);
};

DES.prototype._decrypt = function _decrypt(state, lStart, rStart, out, off) {
  var l = rStart;
  var r = lStart;

  // Apply f() x16 times
  for (var i = state.keys.length - 2; i >= 0; i -= 2) {
    var keyL = state.keys[i];
    var keyR = state.keys[i + 1];

    // f(r, k)
    utils.expand(l, state.tmp, 0);

    keyL ^= state.tmp[0];
    keyR ^= state.tmp[1];
    var s = utils.substitute(keyL, keyR);
    var f = utils.permute(s);

    var t = l;
    l = (r ^ f) >>> 0;
    r = t;
  }

  // Reverse Initial Permutation
  utils.rip(l, r, out, off);
};


/***/ }),

/***/ "./node_modules/.1.0.0@des.js/lib/des/ede.js":
/*!***************************************************!*\
  !*** ./node_modules/.1.0.0@des.js/lib/des/ede.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var assert = __webpack_require__(/*! minimalistic-assert */ "./node_modules/.1.0.1@minimalistic-assert/index.js");
var inherits = __webpack_require__(/*! inherits */ "./node_modules/.2.0.3@inherits/inherits_browser.js");

var des = __webpack_require__(/*! ../des */ "./node_modules/.1.0.0@des.js/lib/des.js");
var Cipher = des.Cipher;
var DES = des.DES;

function EDEState(type, key) {
  assert.equal(key.length, 24, 'Invalid key length');

  var k1 = key.slice(0, 8);
  var k2 = key.slice(8, 16);
  var k3 = key.slice(16, 24);

  if (type === 'encrypt') {
    this.ciphers = [
      DES.create({ type: 'encrypt', key: k1 }),
      DES.create({ type: 'decrypt', key: k2 }),
      DES.create({ type: 'encrypt', key: k3 })
    ];
  } else {
    this.ciphers = [
      DES.create({ type: 'decrypt', key: k3 }),
      DES.create({ type: 'encrypt', key: k2 }),
      DES.create({ type: 'decrypt', key: k1 })
    ];
  }
}

function EDE(options) {
  Cipher.call(this, options);

  var state = new EDEState(this.type, this.options.key);
  this._edeState = state;
}
inherits(EDE, Cipher);

module.exports = EDE;

EDE.create = function create(options) {
  return new EDE(options);
};

EDE.prototype._update = function _update(inp, inOff, out, outOff) {
  var state = this._edeState;

  state.ciphers[0]._update(inp, inOff, out, outOff);
  state.ciphers[1]._update(out, outOff, out, outOff);
  state.ciphers[2]._update(out, outOff, out, outOff);
};

EDE.prototype._pad = DES.prototype._pad;
EDE.prototype._unpad = DES.prototype._unpad;


/***/ }),

/***/ "./node_modules/.1.0.0@des.js/lib/des/utils.js":
/*!*****************************************************!*\
  !*** ./node_modules/.1.0.0@des.js/lib/des/utils.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.readUInt32BE = function readUInt32BE(bytes, off) {
  var res =  (bytes[0 + off] << 24) |
             (bytes[1 + off] << 16) |
             (bytes[2 + off] << 8) |
             bytes[3 + off];
  return res >>> 0;
};

exports.writeUInt32BE = function writeUInt32BE(bytes, value, off) {
  bytes[0 + off] = value >>> 24;
  bytes[1 + off] = (value >>> 16) & 0xff;
  bytes[2 + off] = (value >>> 8) & 0xff;
  bytes[3 + off] = value & 0xff;
};

exports.ip = function ip(inL, inR, out, off) {
  var outL = 0;
  var outR = 0;

  for (var i = 6; i >= 0; i -= 2) {
    for (var j = 0; j <= 24; j += 8) {
      outL <<= 1;
      outL |= (inR >>> (j + i)) & 1;
    }
    for (var j = 0; j <= 24; j += 8) {
      outL <<= 1;
      outL |= (inL >>> (j + i)) & 1;
    }
  }

  for (var i = 6; i >= 0; i -= 2) {
    for (var j = 1; j <= 25; j += 8) {
      outR <<= 1;
      outR |= (inR >>> (j + i)) & 1;
    }
    for (var j = 1; j <= 25; j += 8) {
      outR <<= 1;
      outR |= (inL >>> (j + i)) & 1;
    }
  }

  out[off + 0] = outL >>> 0;
  out[off + 1] = outR >>> 0;
};

exports.rip = function rip(inL, inR, out, off) {
  var outL = 0;
  var outR = 0;

  for (var i = 0; i < 4; i++) {
    for (var j = 24; j >= 0; j -= 8) {
      outL <<= 1;
      outL |= (inR >>> (j + i)) & 1;
      outL <<= 1;
      outL |= (inL >>> (j + i)) & 1;
    }
  }
  for (var i = 4; i < 8; i++) {
    for (var j = 24; j >= 0; j -= 8) {
      outR <<= 1;
      outR |= (inR >>> (j + i)) & 1;
      outR <<= 1;
      outR |= (inL >>> (j + i)) & 1;
    }
  }

  out[off + 0] = outL >>> 0;
  out[off + 1] = outR >>> 0;
};

exports.pc1 = function pc1(inL, inR, out, off) {
  var outL = 0;
  var outR = 0;

  // 7, 15, 23, 31, 39, 47, 55, 63
  // 6, 14, 22, 30, 39, 47, 55, 63
  // 5, 13, 21, 29, 39, 47, 55, 63
  // 4, 12, 20, 28
  for (var i = 7; i >= 5; i--) {
    for (var j = 0; j <= 24; j += 8) {
      outL <<= 1;
      outL |= (inR >> (j + i)) & 1;
    }
    for (var j = 0; j <= 24; j += 8) {
      outL <<= 1;
      outL |= (inL >> (j + i)) & 1;
    }
  }
  for (var j = 0; j <= 24; j += 8) {
    outL <<= 1;
    outL |= (inR >> (j + i)) & 1;
  }

  // 1, 9, 17, 25, 33, 41, 49, 57
  // 2, 10, 18, 26, 34, 42, 50, 58
  // 3, 11, 19, 27, 35, 43, 51, 59
  // 36, 44, 52, 60
  for (var i = 1; i <= 3; i++) {
    for (var j = 0; j <= 24; j += 8) {
      outR <<= 1;
      outR |= (inR >> (j + i)) & 1;
    }
    for (var j = 0; j <= 24; j += 8) {
      outR <<= 1;
      outR |= (inL >> (j + i)) & 1;
    }
  }
  for (var j = 0; j <= 24; j += 8) {
    outR <<= 1;
    outR |= (inL >> (j + i)) & 1;
  }

  out[off + 0] = outL >>> 0;
  out[off + 1] = outR >>> 0;
};

exports.r28shl = function r28shl(num, shift) {
  return ((num << shift) & 0xfffffff) | (num >>> (28 - shift));
};

var pc2table = [
  // inL => outL
  14, 11, 17, 4, 27, 23, 25, 0,
  13, 22, 7, 18, 5, 9, 16, 24,
  2, 20, 12, 21, 1, 8, 15, 26,

  // inR => outR
  15, 4, 25, 19, 9, 1, 26, 16,
  5, 11, 23, 8, 12, 7, 17, 0,
  22, 3, 10, 14, 6, 20, 27, 24
];

exports.pc2 = function pc2(inL, inR, out, off) {
  var outL = 0;
  var outR = 0;

  var len = pc2table.length >>> 1;
  for (var i = 0; i < len; i++) {
    outL <<= 1;
    outL |= (inL >>> pc2table[i]) & 0x1;
  }
  for (var i = len; i < pc2table.length; i++) {
    outR <<= 1;
    outR |= (inR >>> pc2table[i]) & 0x1;
  }

  out[off + 0] = outL >>> 0;
  out[off + 1] = outR >>> 0;
};

exports.expand = function expand(r, out, off) {
  var outL = 0;
  var outR = 0;

  outL = ((r & 1) << 5) | (r >>> 27);
  for (var i = 23; i >= 15; i -= 4) {
    outL <<= 6;
    outL |= (r >>> i) & 0x3f;
  }
  for (var i = 11; i >= 3; i -= 4) {
    outR |= (r >>> i) & 0x3f;
    outR <<= 6;
  }
  outR |= ((r & 0x1f) << 1) | (r >>> 31);

  out[off + 0] = outL >>> 0;
  out[off + 1] = outR >>> 0;
};

var sTable = [
  14, 0, 4, 15, 13, 7, 1, 4, 2, 14, 15, 2, 11, 13, 8, 1,
  3, 10, 10, 6, 6, 12, 12, 11, 5, 9, 9, 5, 0, 3, 7, 8,
  4, 15, 1, 12, 14, 8, 8, 2, 13, 4, 6, 9, 2, 1, 11, 7,
  15, 5, 12, 11, 9, 3, 7, 14, 3, 10, 10, 0, 5, 6, 0, 13,

  15, 3, 1, 13, 8, 4, 14, 7, 6, 15, 11, 2, 3, 8, 4, 14,
  9, 12, 7, 0, 2, 1, 13, 10, 12, 6, 0, 9, 5, 11, 10, 5,
  0, 13, 14, 8, 7, 10, 11, 1, 10, 3, 4, 15, 13, 4, 1, 2,
  5, 11, 8, 6, 12, 7, 6, 12, 9, 0, 3, 5, 2, 14, 15, 9,

  10, 13, 0, 7, 9, 0, 14, 9, 6, 3, 3, 4, 15, 6, 5, 10,
  1, 2, 13, 8, 12, 5, 7, 14, 11, 12, 4, 11, 2, 15, 8, 1,
  13, 1, 6, 10, 4, 13, 9, 0, 8, 6, 15, 9, 3, 8, 0, 7,
  11, 4, 1, 15, 2, 14, 12, 3, 5, 11, 10, 5, 14, 2, 7, 12,

  7, 13, 13, 8, 14, 11, 3, 5, 0, 6, 6, 15, 9, 0, 10, 3,
  1, 4, 2, 7, 8, 2, 5, 12, 11, 1, 12, 10, 4, 14, 15, 9,
  10, 3, 6, 15, 9, 0, 0, 6, 12, 10, 11, 1, 7, 13, 13, 8,
  15, 9, 1, 4, 3, 5, 14, 11, 5, 12, 2, 7, 8, 2, 4, 14,

  2, 14, 12, 11, 4, 2, 1, 12, 7, 4, 10, 7, 11, 13, 6, 1,
  8, 5, 5, 0, 3, 15, 15, 10, 13, 3, 0, 9, 14, 8, 9, 6,
  4, 11, 2, 8, 1, 12, 11, 7, 10, 1, 13, 14, 7, 2, 8, 13,
  15, 6, 9, 15, 12, 0, 5, 9, 6, 10, 3, 4, 0, 5, 14, 3,

  12, 10, 1, 15, 10, 4, 15, 2, 9, 7, 2, 12, 6, 9, 8, 5,
  0, 6, 13, 1, 3, 13, 4, 14, 14, 0, 7, 11, 5, 3, 11, 8,
  9, 4, 14, 3, 15, 2, 5, 12, 2, 9, 8, 5, 12, 15, 3, 10,
  7, 11, 0, 14, 4, 1, 10, 7, 1, 6, 13, 0, 11, 8, 6, 13,

  4, 13, 11, 0, 2, 11, 14, 7, 15, 4, 0, 9, 8, 1, 13, 10,
  3, 14, 12, 3, 9, 5, 7, 12, 5, 2, 10, 15, 6, 8, 1, 6,
  1, 6, 4, 11, 11, 13, 13, 8, 12, 1, 3, 4, 7, 10, 14, 7,
  10, 9, 15, 5, 6, 0, 8, 15, 0, 14, 5, 2, 9, 3, 2, 12,

  13, 1, 2, 15, 8, 13, 4, 8, 6, 10, 15, 3, 11, 7, 1, 4,
  10, 12, 9, 5, 3, 6, 14, 11, 5, 0, 0, 14, 12, 9, 7, 2,
  7, 2, 11, 1, 4, 14, 1, 7, 9, 4, 12, 10, 14, 8, 2, 13,
  0, 15, 6, 12, 10, 9, 13, 0, 15, 3, 3, 5, 5, 6, 8, 11
];

exports.substitute = function substitute(inL, inR) {
  var out = 0;
  for (var i = 0; i < 4; i++) {
    var b = (inL >>> (18 - i * 6)) & 0x3f;
    var sb = sTable[i * 0x40 + b];

    out <<= 4;
    out |= sb;
  }
  for (var i = 0; i < 4; i++) {
    var b = (inR >>> (18 - i * 6)) & 0x3f;
    var sb = sTable[4 * 0x40 + i * 0x40 + b];

    out <<= 4;
    out |= sb;
  }
  return out >>> 0;
};

var permuteTable = [
  16, 25, 12, 11, 3, 20, 4, 15, 31, 17, 9, 6, 27, 14, 1, 22,
  30, 24, 8, 18, 0, 5, 29, 23, 13, 19, 2, 26, 10, 21, 28, 7
];

exports.permute = function permute(num) {
  var out = 0;
  for (var i = 0; i < permuteTable.length; i++) {
    out <<= 1;
    out |= (num >>> permuteTable[i]) & 0x1;
  }
  return out >>> 0;
};

exports.padSplit = function padSplit(num, size, group) {
  var str = num.toString(2);
  while (str.length < size)
    str = '0' + str;

  var out = [];
  for (var i = 0; i < size; i += group)
    out.push(str.slice(i, i + group));
  return out.join(' ');
};


/***/ }),

/***/ "./node_modules/.1.0.0@isarray/index.js":
/*!**********************************************!*\
  !*** ./node_modules/.1.0.0@isarray/index.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports) {

var toString = {}.toString;

module.exports = Array.isArray || function (arr) {
  return toString.call(arr) == '[object Array]';
};


/***/ }),

/***/ "./node_modules/.1.0.1@browserify-cipher/browser.js":
/*!**********************************************************!*\
  !*** ./node_modules/.1.0.1@browserify-cipher/browser.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var DES = __webpack_require__(/*! browserify-des */ "./node_modules/.1.0.2@browserify-des/index.js")
var aes = __webpack_require__(/*! browserify-aes/browser */ "./node_modules/.1.2.0@browserify-aes/browser.js")
var aesModes = __webpack_require__(/*! browserify-aes/modes */ "./node_modules/.1.2.0@browserify-aes/modes/index.js")
var desModes = __webpack_require__(/*! browserify-des/modes */ "./node_modules/.1.0.2@browserify-des/modes.js")
var ebtk = __webpack_require__(/*! evp_bytestokey */ "./node_modules/.1.0.3@evp_bytestokey/index.js")

function createCipher (suite, password) {
  suite = suite.toLowerCase()

  var keyLen, ivLen
  if (aesModes[suite]) {
    keyLen = aesModes[suite].key
    ivLen = aesModes[suite].iv
  } else if (desModes[suite]) {
    keyLen = desModes[suite].key * 8
    ivLen = desModes[suite].iv
  } else {
    throw new TypeError('invalid suite type')
  }

  var keys = ebtk(password, false, keyLen, ivLen)
  return createCipheriv(suite, keys.key, keys.iv)
}

function createDecipher (suite, password) {
  suite = suite.toLowerCase()

  var keyLen, ivLen
  if (aesModes[suite]) {
    keyLen = aesModes[suite].key
    ivLen = aesModes[suite].iv
  } else if (desModes[suite]) {
    keyLen = desModes[suite].key * 8
    ivLen = desModes[suite].iv
  } else {
    throw new TypeError('invalid suite type')
  }

  var keys = ebtk(password, false, keyLen, ivLen)
  return createDecipheriv(suite, keys.key, keys.iv)
}

function createCipheriv (suite, key, iv) {
  suite = suite.toLowerCase()
  if (aesModes[suite]) return aes.createCipheriv(suite, key, iv)
  if (desModes[suite]) return new DES({ key: key, iv: iv, mode: suite })

  throw new TypeError('invalid suite type')
}

function createDecipheriv (suite, key, iv) {
  suite = suite.toLowerCase()
  if (aesModes[suite]) return aes.createDecipheriv(suite, key, iv)
  if (desModes[suite]) return new DES({ key: key, iv: iv, mode: suite, decrypt: true })

  throw new TypeError('invalid suite type')
}

function getCiphers () {
  return Object.keys(desModes).concat(aes.getCiphers())
}

exports.createCipher = exports.Cipher = createCipher
exports.createCipheriv = exports.Cipheriv = createCipheriv
exports.createDecipher = exports.Decipher = createDecipher
exports.createDecipheriv = exports.Decipheriv = createDecipheriv
exports.listCiphers = exports.getCiphers = getCiphers


/***/ }),

/***/ "./node_modules/.1.0.1@hmac-drbg/lib/hmac-drbg.js":
/*!********************************************************!*\
  !*** ./node_modules/.1.0.1@hmac-drbg/lib/hmac-drbg.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var hash = __webpack_require__(/*! hash.js */ "./node_modules/.1.1.7@hash.js/lib/hash.js");
var utils = __webpack_require__(/*! minimalistic-crypto-utils */ "./node_modules/.1.0.1@minimalistic-crypto-utils/lib/utils.js");
var assert = __webpack_require__(/*! minimalistic-assert */ "./node_modules/.1.0.1@minimalistic-assert/index.js");

function HmacDRBG(options) {
  if (!(this instanceof HmacDRBG))
    return new HmacDRBG(options);
  this.hash = options.hash;
  this.predResist = !!options.predResist;

  this.outLen = this.hash.outSize;
  this.minEntropy = options.minEntropy || this.hash.hmacStrength;

  this._reseed = null;
  this.reseedInterval = null;
  this.K = null;
  this.V = null;

  var entropy = utils.toArray(options.entropy, options.entropyEnc || 'hex');
  var nonce = utils.toArray(options.nonce, options.nonceEnc || 'hex');
  var pers = utils.toArray(options.pers, options.persEnc || 'hex');
  assert(entropy.length >= (this.minEntropy / 8),
         'Not enough entropy. Minimum is: ' + this.minEntropy + ' bits');
  this._init(entropy, nonce, pers);
}
module.exports = HmacDRBG;

HmacDRBG.prototype._init = function init(entropy, nonce, pers) {
  var seed = entropy.concat(nonce).concat(pers);

  this.K = new Array(this.outLen / 8);
  this.V = new Array(this.outLen / 8);
  for (var i = 0; i < this.V.length; i++) {
    this.K[i] = 0x00;
    this.V[i] = 0x01;
  }

  this._update(seed);
  this._reseed = 1;
  this.reseedInterval = 0x1000000000000;  // 2^48
};

HmacDRBG.prototype._hmac = function hmac() {
  return new hash.hmac(this.hash, this.K);
};

HmacDRBG.prototype._update = function update(seed) {
  var kmac = this._hmac()
                 .update(this.V)
                 .update([ 0x00 ]);
  if (seed)
    kmac = kmac.update(seed);
  this.K = kmac.digest();
  this.V = this._hmac().update(this.V).digest();
  if (!seed)
    return;

  this.K = this._hmac()
               .update(this.V)
               .update([ 0x01 ])
               .update(seed)
               .digest();
  this.V = this._hmac().update(this.V).digest();
};

HmacDRBG.prototype.reseed = function reseed(entropy, entropyEnc, add, addEnc) {
  // Optional entropy enc
  if (typeof entropyEnc !== 'string') {
    addEnc = add;
    add = entropyEnc;
    entropyEnc = null;
  }

  entropy = utils.toArray(entropy, entropyEnc);
  add = utils.toArray(add, addEnc);

  assert(entropy.length >= (this.minEntropy / 8),
         'Not enough entropy. Minimum is: ' + this.minEntropy + ' bits');

  this._update(entropy.concat(add || []));
  this._reseed = 1;
};

HmacDRBG.prototype.generate = function generate(len, enc, add, addEnc) {
  if (this._reseed > this.reseedInterval)
    throw new Error('Reseed is required');

  // Optional encoding
  if (typeof enc !== 'string') {
    addEnc = add;
    add = enc;
    enc = null;
  }

  // Optional additional data
  if (add) {
    add = utils.toArray(add, addEnc || 'hex');
    this._update(add);
  }

  var temp = [];
  while (temp.length < len) {
    this.V = this._hmac().update(this.V).digest();
    temp = temp.concat(this.V);
  }

  var res = temp.slice(0, len);
  this._update(add);
  this._reseed++;
  return utils.encode(res, enc);
};


/***/ }),

/***/ "./node_modules/.1.0.1@minimalistic-assert/index.js":
/*!**********************************************************!*\
  !*** ./node_modules/.1.0.1@minimalistic-assert/index.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = assert;

function assert(val, msg) {
  if (!val)
    throw new Error(msg || 'Assertion failed');
}

assert.equal = function assertEqual(l, r, msg) {
  if (l != r)
    throw new Error(msg || ('Assertion failed: ' + l + ' != ' + r));
};


/***/ }),

/***/ "./node_modules/.1.0.1@minimalistic-crypto-utils/lib/utils.js":
/*!********************************************************************!*\
  !*** ./node_modules/.1.0.1@minimalistic-crypto-utils/lib/utils.js ***!
  \********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = exports;

function toArray(msg, enc) {
  if (Array.isArray(msg))
    return msg.slice();
  if (!msg)
    return [];
  var res = [];
  if (typeof msg !== 'string') {
    for (var i = 0; i < msg.length; i++)
      res[i] = msg[i] | 0;
    return res;
  }
  if (enc === 'hex') {
    msg = msg.replace(/[^a-z0-9]+/ig, '');
    if (msg.length % 2 !== 0)
      msg = '0' + msg;
    for (var i = 0; i < msg.length; i += 2)
      res.push(parseInt(msg[i] + msg[i + 1], 16));
  } else {
    for (var i = 0; i < msg.length; i++) {
      var c = msg.charCodeAt(i);
      var hi = c >> 8;
      var lo = c & 0xff;
      if (hi)
        res.push(hi, lo);
      else
        res.push(lo);
    }
  }
  return res;
}
utils.toArray = toArray;

function zero2(word) {
  if (word.length === 1)
    return '0' + word;
  else
    return word;
}
utils.zero2 = zero2;

function toHex(msg) {
  var res = '';
  for (var i = 0; i < msg.length; i++)
    res += zero2(msg[i].toString(16));
  return res;
}
utils.toHex = toHex;

utils.encode = function encode(arr, enc) {
  if (enc === 'hex')
    return toHex(arr);
  else
    return arr;
};


/***/ }),

/***/ "./node_modules/.1.0.2@browserify-des/index.js":
/*!*****************************************************!*\
  !*** ./node_modules/.1.0.2@browserify-des/index.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var CipherBase = __webpack_require__(/*! cipher-base */ "./node_modules/.1.0.4@cipher-base/index.js")
var des = __webpack_require__(/*! des.js */ "./node_modules/.1.0.0@des.js/lib/des.js")
var inherits = __webpack_require__(/*! inherits */ "./node_modules/.2.0.3@inherits/inherits_browser.js")
var Buffer = __webpack_require__(/*! safe-buffer */ "./node_modules/.5.1.2@safe-buffer/index.js").Buffer

var modes = {
  'des-ede3-cbc': des.CBC.instantiate(des.EDE),
  'des-ede3': des.EDE,
  'des-ede-cbc': des.CBC.instantiate(des.EDE),
  'des-ede': des.EDE,
  'des-cbc': des.CBC.instantiate(des.DES),
  'des-ecb': des.DES
}
modes.des = modes['des-cbc']
modes.des3 = modes['des-ede3-cbc']
module.exports = DES
inherits(DES, CipherBase)
function DES (opts) {
  CipherBase.call(this)
  var modeName = opts.mode.toLowerCase()
  var mode = modes[modeName]
  var type
  if (opts.decrypt) {
    type = 'decrypt'
  } else {
    type = 'encrypt'
  }
  var key = opts.key
  if (!Buffer.isBuffer(key)) {
    key = Buffer.from(key)
  }
  if (modeName === 'des-ede' || modeName === 'des-ede-cbc') {
    key = Buffer.concat([key, key.slice(0, 8)])
  }
  var iv = opts.iv
  if (!Buffer.isBuffer(iv)) {
    iv = Buffer.from(iv)
  }
  this._des = mode.create({
    key: key,
    iv: iv,
    type: type
  })
}
DES.prototype._update = function (data) {
  return Buffer.from(this._des.update(data))
}
DES.prototype._final = function () {
  return Buffer.from(this._des.final())
}


/***/ }),

/***/ "./node_modules/.1.0.2@browserify-des/modes.js":
/*!*****************************************************!*\
  !*** ./node_modules/.1.0.2@browserify-des/modes.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

exports['des-ecb'] = {
  key: 8,
  iv: 0
}
exports['des-cbc'] = exports.des = {
  key: 8,
  iv: 8
}
exports['des-ede3-cbc'] = exports.des3 = {
  key: 24,
  iv: 8
}
exports['des-ede3'] = {
  key: 24,
  iv: 0
}
exports['des-ede-cbc'] = {
  key: 16,
  iv: 8
}
exports['des-ede'] = {
  key: 16,
  iv: 0
}


/***/ }),

/***/ "./node_modules/.1.0.2@core-util-is/lib/util.js":
/*!******************************************************!*\
  !*** ./node_modules/.1.0.2@core-util-is/lib/util.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

// NOTE: These type checking functions intentionally don't use `instanceof`
// because it is fragile and can be easily faked with `Object.create()`.

function isArray(arg) {
  if (Array.isArray) {
    return Array.isArray(arg);
  }
  return objectToString(arg) === '[object Array]';
}
exports.isArray = isArray;

function isBoolean(arg) {
  return typeof arg === 'boolean';
}
exports.isBoolean = isBoolean;

function isNull(arg) {
  return arg === null;
}
exports.isNull = isNull;

function isNullOrUndefined(arg) {
  return arg == null;
}
exports.isNullOrUndefined = isNullOrUndefined;

function isNumber(arg) {
  return typeof arg === 'number';
}
exports.isNumber = isNumber;

function isString(arg) {
  return typeof arg === 'string';
}
exports.isString = isString;

function isSymbol(arg) {
  return typeof arg === 'symbol';
}
exports.isSymbol = isSymbol;

function isUndefined(arg) {
  return arg === void 0;
}
exports.isUndefined = isUndefined;

function isRegExp(re) {
  return objectToString(re) === '[object RegExp]';
}
exports.isRegExp = isRegExp;

function isObject(arg) {
  return typeof arg === 'object' && arg !== null;
}
exports.isObject = isObject;

function isDate(d) {
  return objectToString(d) === '[object Date]';
}
exports.isDate = isDate;

function isError(e) {
  return (objectToString(e) === '[object Error]' || e instanceof Error);
}
exports.isError = isError;

function isFunction(arg) {
  return typeof arg === 'function';
}
exports.isFunction = isFunction;

function isPrimitive(arg) {
  return arg === null ||
         typeof arg === 'boolean' ||
         typeof arg === 'number' ||
         typeof arg === 'string' ||
         typeof arg === 'symbol' ||  // ES6 symbol
         typeof arg === 'undefined';
}
exports.isPrimitive = isPrimitive;

exports.isBuffer = Buffer.isBuffer;

function objectToString(o) {
  return Object.prototype.toString.call(o);
}


/***/ }),

/***/ "./node_modules/.1.0.2@util-deprecate/browser.js":
/*!*******************************************************!*\
  !*** ./node_modules/.1.0.2@util-deprecate/browser.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(global) {
/**
 * Module exports.
 */

module.exports = deprecate;

/**
 * Mark that a method should not be used.
 * Returns a modified function which warns once by default.
 *
 * If `localStorage.noDeprecation = true` is set, then it is a no-op.
 *
 * If `localStorage.throwDeprecation = true` is set, then deprecated functions
 * will throw an Error when invoked.
 *
 * If `localStorage.traceDeprecation = true` is set, then deprecated functions
 * will invoke `console.trace()` instead of `console.error()`.
 *
 * @param {Function} fn - the function to deprecate
 * @param {String} msg - the string to print to the console when `fn` is invoked
 * @returns {Function} a new "deprecated" version of `fn`
 * @api public
 */

function deprecate (fn, msg) {
  if (config('noDeprecation')) {
    return fn;
  }

  var warned = false;
  function deprecated() {
    if (!warned) {
      if (config('throwDeprecation')) {
        throw new Error(msg);
      } else if (config('traceDeprecation')) {
        console.trace(msg);
      } else {
        console.warn(msg);
      }
      warned = true;
    }
    return fn.apply(this, arguments);
  }

  return deprecated;
}

/**
 * Checks `localStorage` for boolean values for the given `name`.
 *
 * @param {String} name
 * @returns {Boolean}
 * @api private
 */

function config (name) {
  // accessing global.localStorage can trigger a DOMException in sandboxed iframes
  try {
    if (!global.localStorage) return false;
  } catch (_) {
    return false;
  }
  var val = global.localStorage[name];
  if (null == val) return false;
  return String(val).toLowerCase() === 'true';
}

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../.4.31.0@webpack/buildin/global.js */ "./node_modules/.4.31.0@webpack/buildin/global.js")))

/***/ }),

/***/ "./node_modules/.1.0.3@buffer-xor/index.js":
/*!*************************************************!*\
  !*** ./node_modules/.1.0.3@buffer-xor/index.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = function xor (a, b) {
  var length = Math.min(a.length, b.length)
  var buffer = new Buffer(length)

  for (var i = 0; i < length; ++i) {
    buffer[i] = a[i] ^ b[i]
  }

  return buffer
}


/***/ }),

/***/ "./node_modules/.1.0.3@evp_bytestokey/index.js":
/*!*****************************************************!*\
  !*** ./node_modules/.1.0.3@evp_bytestokey/index.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var Buffer = __webpack_require__(/*! safe-buffer */ "./node_modules/.5.1.2@safe-buffer/index.js").Buffer
var MD5 = __webpack_require__(/*! md5.js */ "./node_modules/.1.3.5@md5.js/index.js")

/* eslint-disable camelcase */
function EVP_BytesToKey (password, salt, keyBits, ivLen) {
  if (!Buffer.isBuffer(password)) password = Buffer.from(password, 'binary')
  if (salt) {
    if (!Buffer.isBuffer(salt)) salt = Buffer.from(salt, 'binary')
    if (salt.length !== 8) throw new RangeError('salt should be Buffer with 8 byte length')
  }

  var keyLen = keyBits / 8
  var key = Buffer.alloc(keyLen)
  var iv = Buffer.alloc(ivLen || 0)
  var tmp = Buffer.alloc(0)

  while (keyLen > 0 || ivLen > 0) {
    var hash = new MD5()
    hash.update(tmp)
    hash.update(password)
    if (salt) hash.update(salt)
    tmp = hash.digest()

    var used = 0

    if (keyLen > 0) {
      var keyStart = key.length - keyLen
      used = Math.min(keyLen, tmp.length)
      tmp.copy(key, keyStart, 0, used)
      keyLen -= used
    }

    if (used < tmp.length && ivLen > 0) {
      var ivStart = iv.length - ivLen
      var length = Math.min(ivLen, tmp.length - used)
      tmp.copy(iv, ivStart, used, used + length)
      ivLen -= length
    }
  }

  tmp.fill(0)
  return { key: key, iv: iv }
}

module.exports = EVP_BytesToKey


/***/ }),

/***/ "./node_modules/.1.0.4@cipher-base/index.js":
/*!**************************************************!*\
  !*** ./node_modules/.1.0.4@cipher-base/index.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var Buffer = __webpack_require__(/*! safe-buffer */ "./node_modules/.5.1.2@safe-buffer/index.js").Buffer
var Transform = __webpack_require__(/*! stream */ "./node_modules/.2.0.2@stream-browserify/index.js").Transform
var StringDecoder = __webpack_require__(/*! string_decoder */ "./node_modules/.1.2.0@string_decoder/lib/string_decoder.js").StringDecoder
var inherits = __webpack_require__(/*! inherits */ "./node_modules/.2.0.3@inherits/inherits_browser.js")

function CipherBase (hashMode) {
  Transform.call(this)
  this.hashMode = typeof hashMode === 'string'
  if (this.hashMode) {
    this[hashMode] = this._finalOrDigest
  } else {
    this.final = this._finalOrDigest
  }
  if (this._final) {
    this.__final = this._final
    this._final = null
  }
  this._decoder = null
  this._encoding = null
}
inherits(CipherBase, Transform)

CipherBase.prototype.update = function (data, inputEnc, outputEnc) {
  if (typeof data === 'string') {
    data = Buffer.from(data, inputEnc)
  }

  var outData = this._update(data)
  if (this.hashMode) return this

  if (outputEnc) {
    outData = this._toString(outData, outputEnc)
  }

  return outData
}

CipherBase.prototype.setAutoPadding = function () {}
CipherBase.prototype.getAuthTag = function () {
  throw new Error('trying to get auth tag in unsupported state')
}

CipherBase.prototype.setAuthTag = function () {
  throw new Error('trying to set auth tag in unsupported state')
}

CipherBase.prototype.setAAD = function () {
  throw new Error('trying to set aad in unsupported state')
}

CipherBase.prototype._transform = function (data, _, next) {
  var err
  try {
    if (this.hashMode) {
      this._update(data)
    } else {
      this.push(this._update(data))
    }
  } catch (e) {
    err = e
  } finally {
    next(err)
  }
}
CipherBase.prototype._flush = function (done) {
  var err
  try {
    this.push(this.__final())
  } catch (e) {
    err = e
  }

  done(err)
}
CipherBase.prototype._finalOrDigest = function (outputEnc) {
  var outData = this.__final() || Buffer.alloc(0)
  if (outputEnc) {
    outData = this._toString(outData, outputEnc, true)
  }
  return outData
}

CipherBase.prototype._toString = function (value, enc, fin) {
  if (!this._decoder) {
    this._decoder = new StringDecoder(enc)
    this._encoding = enc
  }

  if (this._encoding !== enc) throw new Error('can\'t switch encodings')

  var out = this._decoder.write(value)
  if (fin) {
    out += this._decoder.end()
  }

  return out
}

module.exports = CipherBase


/***/ }),

/***/ "./node_modules/.1.0.4@randomfill/browser.js":
/*!***************************************************!*\
  !*** ./node_modules/.1.0.4@randomfill/browser.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(global) {

function oldBrowser () {
  throw new Error('secure random number generation not supported by this browser\nuse chrome, FireFox or Internet Explorer 11')
}
var safeBuffer = __webpack_require__(/*! safe-buffer */ "./node_modules/.5.1.2@safe-buffer/index.js")
var randombytes = __webpack_require__(/*! randombytes */ "./node_modules/.2.1.0@randombytes/browser.js")
var Buffer = safeBuffer.Buffer
var kBufferMaxLength = safeBuffer.kMaxLength
var crypto = global.crypto || global.msCrypto
var kMaxUint32 = Math.pow(2, 32) - 1
function assertOffset (offset, length) {
  if (typeof offset !== 'number' || offset !== offset) { // eslint-disable-line no-self-compare
    throw new TypeError('offset must be a number')
  }

  if (offset > kMaxUint32 || offset < 0) {
    throw new TypeError('offset must be a uint32')
  }

  if (offset > kBufferMaxLength || offset > length) {
    throw new RangeError('offset out of range')
  }
}

function assertSize (size, offset, length) {
  if (typeof size !== 'number' || size !== size) { // eslint-disable-line no-self-compare
    throw new TypeError('size must be a number')
  }

  if (size > kMaxUint32 || size < 0) {
    throw new TypeError('size must be a uint32')
  }

  if (size + offset > length || size > kBufferMaxLength) {
    throw new RangeError('buffer too small')
  }
}
if ((crypto && crypto.getRandomValues) || !process.browser) {
  exports.randomFill = randomFill
  exports.randomFillSync = randomFillSync
} else {
  exports.randomFill = oldBrowser
  exports.randomFillSync = oldBrowser
}
function randomFill (buf, offset, size, cb) {
  if (!Buffer.isBuffer(buf) && !(buf instanceof global.Uint8Array)) {
    throw new TypeError('"buf" argument must be a Buffer or Uint8Array')
  }

  if (typeof offset === 'function') {
    cb = offset
    offset = 0
    size = buf.length
  } else if (typeof size === 'function') {
    cb = size
    size = buf.length - offset
  } else if (typeof cb !== 'function') {
    throw new TypeError('"cb" argument must be a function')
  }
  assertOffset(offset, buf.length)
  assertSize(size, offset, buf.length)
  return actualFill(buf, offset, size, cb)
}

function actualFill (buf, offset, size, cb) {
  if (process.browser) {
    var ourBuf = buf.buffer
    var uint = new Uint8Array(ourBuf, offset, size)
    crypto.getRandomValues(uint)
    if (cb) {
      process.nextTick(function () {
        cb(null, buf)
      })
      return
    }
    return buf
  }
  if (cb) {
    randombytes(size, function (err, bytes) {
      if (err) {
        return cb(err)
      }
      bytes.copy(buf, offset)
      cb(null, buf)
    })
    return
  }
  var bytes = randombytes(size)
  bytes.copy(buf, offset)
  return buf
}
function randomFillSync (buf, offset, size) {
  if (typeof offset === 'undefined') {
    offset = 0
  }
  if (!Buffer.isBuffer(buf) && !(buf instanceof global.Uint8Array)) {
    throw new TypeError('"buf" argument must be a Buffer or Uint8Array')
  }

  assertOffset(offset, buf.length)

  if (size === undefined) size = buf.length - offset

  assertSize(size, offset, buf.length)

  return actualFill(buf, offset, size)
}

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../.4.31.0@webpack/buildin/global.js */ "./node_modules/.4.31.0@webpack/buildin/global.js")))

/***/ }),

/***/ "./node_modules/.1.1.0@brorand/index.js":
/*!**********************************************!*\
  !*** ./node_modules/.1.1.0@brorand/index.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var r;

module.exports = function rand(len) {
  if (!r)
    r = new Rand(null);

  return r.generate(len);
};

function Rand(rand) {
  this.rand = rand;
}
module.exports.Rand = Rand;

Rand.prototype.generate = function generate(len) {
  return this._rand(len);
};

// Emulate crypto API using randy
Rand.prototype._rand = function _rand(n) {
  if (this.rand.getBytes)
    return this.rand.getBytes(n);

  var res = new Uint8Array(n);
  for (var i = 0; i < res.length; i++)
    res[i] = this.rand.getByte();
  return res;
};

if (typeof self === 'object') {
  if (self.crypto && self.crypto.getRandomValues) {
    // Modern browsers
    Rand.prototype._rand = function _rand(n) {
      var arr = new Uint8Array(n);
      self.crypto.getRandomValues(arr);
      return arr;
    };
  } else if (self.msCrypto && self.msCrypto.getRandomValues) {
    // IE
    Rand.prototype._rand = function _rand(n) {
      var arr = new Uint8Array(n);
      self.msCrypto.getRandomValues(arr);
      return arr;
    };

  // Safari's WebWorkers do not have `crypto`
  } else if (typeof window === 'object') {
    // Old junk
    Rand.prototype._rand = function() {
      throw new Error('Not implemented yet');
    };
  }
} else {
  // Node.js or Web worker with no crypto support
  try {
    var crypto = __webpack_require__(/*! crypto */ 3);
    if (typeof crypto.randomBytes !== 'function')
      throw new Error('Not supported');

    Rand.prototype._rand = function _rand(n) {
      return crypto.randomBytes(n);
    };
  } catch (e) {
  }
}


/***/ }),

/***/ "./node_modules/.1.1.13@ieee754/index.js":
/*!***********************************************!*\
  !*** ./node_modules/.1.1.13@ieee754/index.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports) {

exports.read = function (buffer, offset, isLE, mLen, nBytes) {
  var e, m
  var eLen = (nBytes * 8) - mLen - 1
  var eMax = (1 << eLen) - 1
  var eBias = eMax >> 1
  var nBits = -7
  var i = isLE ? (nBytes - 1) : 0
  var d = isLE ? -1 : 1
  var s = buffer[offset + i]

  i += d

  e = s & ((1 << (-nBits)) - 1)
  s >>= (-nBits)
  nBits += eLen
  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}

  m = e & ((1 << (-nBits)) - 1)
  e >>= (-nBits)
  nBits += mLen
  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}

  if (e === 0) {
    e = 1 - eBias
  } else if (e === eMax) {
    return m ? NaN : ((s ? -1 : 1) * Infinity)
  } else {
    m = m + Math.pow(2, mLen)
    e = e - eBias
  }
  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)
}

exports.write = function (buffer, value, offset, isLE, mLen, nBytes) {
  var e, m, c
  var eLen = (nBytes * 8) - mLen - 1
  var eMax = (1 << eLen) - 1
  var eBias = eMax >> 1
  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)
  var i = isLE ? 0 : (nBytes - 1)
  var d = isLE ? 1 : -1
  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0

  value = Math.abs(value)

  if (isNaN(value) || value === Infinity) {
    m = isNaN(value) ? 1 : 0
    e = eMax
  } else {
    e = Math.floor(Math.log(value) / Math.LN2)
    if (value * (c = Math.pow(2, -e)) < 1) {
      e--
      c *= 2
    }
    if (e + eBias >= 1) {
      value += rt / c
    } else {
      value += rt * Math.pow(2, 1 - eBias)
    }
    if (value * c >= 2) {
      e++
      c /= 2
    }

    if (e + eBias >= eMax) {
      m = 0
      e = eMax
    } else if (e + eBias >= 1) {
      m = ((value * c) - 1) * Math.pow(2, mLen)
      e = e + eBias
    } else {
      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)
      e = 0
    }
  }

  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}

  e = (e << mLen) | m
  eLen += mLen
  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}

  buffer[offset + i - d] |= s * 128
}


/***/ }),

/***/ "./node_modules/.1.1.7@create-hmac/browser.js":
/*!****************************************************!*\
  !*** ./node_modules/.1.1.7@create-hmac/browser.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var inherits = __webpack_require__(/*! inherits */ "./node_modules/.2.0.3@inherits/inherits_browser.js")
var Legacy = __webpack_require__(/*! ./legacy */ "./node_modules/.1.1.7@create-hmac/legacy.js")
var Base = __webpack_require__(/*! cipher-base */ "./node_modules/.1.0.4@cipher-base/index.js")
var Buffer = __webpack_require__(/*! safe-buffer */ "./node_modules/.5.1.2@safe-buffer/index.js").Buffer
var md5 = __webpack_require__(/*! create-hash/md5 */ "./node_modules/.1.2.0@create-hash/md5.js")
var RIPEMD160 = __webpack_require__(/*! ripemd160 */ "./node_modules/.2.0.2@ripemd160/index.js")

var sha = __webpack_require__(/*! sha.js */ "./node_modules/.2.4.11@sha.js/index.js")

var ZEROS = Buffer.alloc(128)

function Hmac (alg, key) {
  Base.call(this, 'digest')
  if (typeof key === 'string') {
    key = Buffer.from(key)
  }

  var blocksize = (alg === 'sha512' || alg === 'sha384') ? 128 : 64

  this._alg = alg
  this._key = key
  if (key.length > blocksize) {
    var hash = alg === 'rmd160' ? new RIPEMD160() : sha(alg)
    key = hash.update(key).digest()
  } else if (key.length < blocksize) {
    key = Buffer.concat([key, ZEROS], blocksize)
  }

  var ipad = this._ipad = Buffer.allocUnsafe(blocksize)
  var opad = this._opad = Buffer.allocUnsafe(blocksize)

  for (var i = 0; i < blocksize; i++) {
    ipad[i] = key[i] ^ 0x36
    opad[i] = key[i] ^ 0x5C
  }
  this._hash = alg === 'rmd160' ? new RIPEMD160() : sha(alg)
  this._hash.update(ipad)
}

inherits(Hmac, Base)

Hmac.prototype._update = function (data) {
  this._hash.update(data)
}

Hmac.prototype._final = function () {
  var h = this._hash.digest()
  var hash = this._alg === 'rmd160' ? new RIPEMD160() : sha(this._alg)
  return hash.update(this._opad).update(h).digest()
}

module.exports = function createHmac (alg, key) {
  alg = alg.toLowerCase()
  if (alg === 'rmd160' || alg === 'ripemd160') {
    return new Hmac('rmd160', key)
  }
  if (alg === 'md5') {
    return new Legacy(md5, key)
  }
  return new Hmac(alg, key)
}


/***/ }),

/***/ "./node_modules/.1.1.7@create-hmac/legacy.js":
/*!***************************************************!*\
  !*** ./node_modules/.1.1.7@create-hmac/legacy.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var inherits = __webpack_require__(/*! inherits */ "./node_modules/.2.0.3@inherits/inherits_browser.js")
var Buffer = __webpack_require__(/*! safe-buffer */ "./node_modules/.5.1.2@safe-buffer/index.js").Buffer

var Base = __webpack_require__(/*! cipher-base */ "./node_modules/.1.0.4@cipher-base/index.js")

var ZEROS = Buffer.alloc(128)
var blocksize = 64

function Hmac (alg, key) {
  Base.call(this, 'digest')
  if (typeof key === 'string') {
    key = Buffer.from(key)
  }

  this._alg = alg
  this._key = key

  if (key.length > blocksize) {
    key = alg(key)
  } else if (key.length < blocksize) {
    key = Buffer.concat([key, ZEROS], blocksize)
  }

  var ipad = this._ipad = Buffer.allocUnsafe(blocksize)
  var opad = this._opad = Buffer.allocUnsafe(blocksize)

  for (var i = 0; i < blocksize; i++) {
    ipad[i] = key[i] ^ 0x36
    opad[i] = key[i] ^ 0x5C
  }

  this._hash = [ipad]
}

inherits(Hmac, Base)

Hmac.prototype._update = function (data) {
  this._hash.push(data)
}

Hmac.prototype._final = function () {
  var h = this._alg(Buffer.concat(this._hash))
  return this._alg(Buffer.concat([this._opad, h]))
}
module.exports = Hmac


/***/ }),

/***/ "./node_modules/.1.1.7@hash.js/lib/hash.js":
/*!*************************************************!*\
  !*** ./node_modules/.1.1.7@hash.js/lib/hash.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var hash = exports;

hash.utils = __webpack_require__(/*! ./hash/utils */ "./node_modules/.1.1.7@hash.js/lib/hash/utils.js");
hash.common = __webpack_require__(/*! ./hash/common */ "./node_modules/.1.1.7@hash.js/lib/hash/common.js");
hash.sha = __webpack_require__(/*! ./hash/sha */ "./node_modules/.1.1.7@hash.js/lib/hash/sha.js");
hash.ripemd = __webpack_require__(/*! ./hash/ripemd */ "./node_modules/.1.1.7@hash.js/lib/hash/ripemd.js");
hash.hmac = __webpack_require__(/*! ./hash/hmac */ "./node_modules/.1.1.7@hash.js/lib/hash/hmac.js");

// Proxy hash functions to the main object
hash.sha1 = hash.sha.sha1;
hash.sha256 = hash.sha.sha256;
hash.sha224 = hash.sha.sha224;
hash.sha384 = hash.sha.sha384;
hash.sha512 = hash.sha.sha512;
hash.ripemd160 = hash.ripemd.ripemd160;


/***/ }),

/***/ "./node_modules/.1.1.7@hash.js/lib/hash/common.js":
/*!********************************************************!*\
  !*** ./node_modules/.1.1.7@hash.js/lib/hash/common.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(/*! ./utils */ "./node_modules/.1.1.7@hash.js/lib/hash/utils.js");
var assert = __webpack_require__(/*! minimalistic-assert */ "./node_modules/.1.0.1@minimalistic-assert/index.js");

function BlockHash() {
  this.pending = null;
  this.pendingTotal = 0;
  this.blockSize = this.constructor.blockSize;
  this.outSize = this.constructor.outSize;
  this.hmacStrength = this.constructor.hmacStrength;
  this.padLength = this.constructor.padLength / 8;
  this.endian = 'big';

  this._delta8 = this.blockSize / 8;
  this._delta32 = this.blockSize / 32;
}
exports.BlockHash = BlockHash;

BlockHash.prototype.update = function update(msg, enc) {
  // Convert message to array, pad it, and join into 32bit blocks
  msg = utils.toArray(msg, enc);
  if (!this.pending)
    this.pending = msg;
  else
    this.pending = this.pending.concat(msg);
  this.pendingTotal += msg.length;

  // Enough data, try updating
  if (this.pending.length >= this._delta8) {
    msg = this.pending;

    // Process pending data in blocks
    var r = msg.length % this._delta8;
    this.pending = msg.slice(msg.length - r, msg.length);
    if (this.pending.length === 0)
      this.pending = null;

    msg = utils.join32(msg, 0, msg.length - r, this.endian);
    for (var i = 0; i < msg.length; i += this._delta32)
      this._update(msg, i, i + this._delta32);
  }

  return this;
};

BlockHash.prototype.digest = function digest(enc) {
  this.update(this._pad());
  assert(this.pending === null);

  return this._digest(enc);
};

BlockHash.prototype._pad = function pad() {
  var len = this.pendingTotal;
  var bytes = this._delta8;
  var k = bytes - ((len + this.padLength) % bytes);
  var res = new Array(k + this.padLength);
  res[0] = 0x80;
  for (var i = 1; i < k; i++)
    res[i] = 0;

  // Append length
  len <<= 3;
  if (this.endian === 'big') {
    for (var t = 8; t < this.padLength; t++)
      res[i++] = 0;

    res[i++] = 0;
    res[i++] = 0;
    res[i++] = 0;
    res[i++] = 0;
    res[i++] = (len >>> 24) & 0xff;
    res[i++] = (len >>> 16) & 0xff;
    res[i++] = (len >>> 8) & 0xff;
    res[i++] = len & 0xff;
  } else {
    res[i++] = len & 0xff;
    res[i++] = (len >>> 8) & 0xff;
    res[i++] = (len >>> 16) & 0xff;
    res[i++] = (len >>> 24) & 0xff;
    res[i++] = 0;
    res[i++] = 0;
    res[i++] = 0;
    res[i++] = 0;

    for (t = 8; t < this.padLength; t++)
      res[i++] = 0;
  }

  return res;
};


/***/ }),

/***/ "./node_modules/.1.1.7@hash.js/lib/hash/hmac.js":
/*!******************************************************!*\
  !*** ./node_modules/.1.1.7@hash.js/lib/hash/hmac.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(/*! ./utils */ "./node_modules/.1.1.7@hash.js/lib/hash/utils.js");
var assert = __webpack_require__(/*! minimalistic-assert */ "./node_modules/.1.0.1@minimalistic-assert/index.js");

function Hmac(hash, key, enc) {
  if (!(this instanceof Hmac))
    return new Hmac(hash, key, enc);
  this.Hash = hash;
  this.blockSize = hash.blockSize / 8;
  this.outSize = hash.outSize / 8;
  this.inner = null;
  this.outer = null;

  this._init(utils.toArray(key, enc));
}
module.exports = Hmac;

Hmac.prototype._init = function init(key) {
  // Shorten key, if needed
  if (key.length > this.blockSize)
    key = new this.Hash().update(key).digest();
  assert(key.length <= this.blockSize);

  // Add padding to key
  for (var i = key.length; i < this.blockSize; i++)
    key.push(0);

  for (i = 0; i < key.length; i++)
    key[i] ^= 0x36;
  this.inner = new this.Hash().update(key);

  // 0x36 ^ 0x5c = 0x6a
  for (i = 0; i < key.length; i++)
    key[i] ^= 0x6a;
  this.outer = new this.Hash().update(key);
};

Hmac.prototype.update = function update(msg, enc) {
  this.inner.update(msg, enc);
  return this;
};

Hmac.prototype.digest = function digest(enc) {
  this.outer.update(this.inner.digest());
  return this.outer.digest(enc);
};


/***/ }),

/***/ "./node_modules/.1.1.7@hash.js/lib/hash/ripemd.js":
/*!********************************************************!*\
  !*** ./node_modules/.1.1.7@hash.js/lib/hash/ripemd.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(/*! ./utils */ "./node_modules/.1.1.7@hash.js/lib/hash/utils.js");
var common = __webpack_require__(/*! ./common */ "./node_modules/.1.1.7@hash.js/lib/hash/common.js");

var rotl32 = utils.rotl32;
var sum32 = utils.sum32;
var sum32_3 = utils.sum32_3;
var sum32_4 = utils.sum32_4;
var BlockHash = common.BlockHash;

function RIPEMD160() {
  if (!(this instanceof RIPEMD160))
    return new RIPEMD160();

  BlockHash.call(this);

  this.h = [ 0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0 ];
  this.endian = 'little';
}
utils.inherits(RIPEMD160, BlockHash);
exports.ripemd160 = RIPEMD160;

RIPEMD160.blockSize = 512;
RIPEMD160.outSize = 160;
RIPEMD160.hmacStrength = 192;
RIPEMD160.padLength = 64;

RIPEMD160.prototype._update = function update(msg, start) {
  var A = this.h[0];
  var B = this.h[1];
  var C = this.h[2];
  var D = this.h[3];
  var E = this.h[4];
  var Ah = A;
  var Bh = B;
  var Ch = C;
  var Dh = D;
  var Eh = E;
  for (var j = 0; j < 80; j++) {
    var T = sum32(
      rotl32(
        sum32_4(A, f(j, B, C, D), msg[r[j] + start], K(j)),
        s[j]),
      E);
    A = E;
    E = D;
    D = rotl32(C, 10);
    C = B;
    B = T;
    T = sum32(
      rotl32(
        sum32_4(Ah, f(79 - j, Bh, Ch, Dh), msg[rh[j] + start], Kh(j)),
        sh[j]),
      Eh);
    Ah = Eh;
    Eh = Dh;
    Dh = rotl32(Ch, 10);
    Ch = Bh;
    Bh = T;
  }
  T = sum32_3(this.h[1], C, Dh);
  this.h[1] = sum32_3(this.h[2], D, Eh);
  this.h[2] = sum32_3(this.h[3], E, Ah);
  this.h[3] = sum32_3(this.h[4], A, Bh);
  this.h[4] = sum32_3(this.h[0], B, Ch);
  this.h[0] = T;
};

RIPEMD160.prototype._digest = function digest(enc) {
  if (enc === 'hex')
    return utils.toHex32(this.h, 'little');
  else
    return utils.split32(this.h, 'little');
};

function f(j, x, y, z) {
  if (j <= 15)
    return x ^ y ^ z;
  else if (j <= 31)
    return (x & y) | ((~x) & z);
  else if (j <= 47)
    return (x | (~y)) ^ z;
  else if (j <= 63)
    return (x & z) | (y & (~z));
  else
    return x ^ (y | (~z));
}

function K(j) {
  if (j <= 15)
    return 0x00000000;
  else if (j <= 31)
    return 0x5a827999;
  else if (j <= 47)
    return 0x6ed9eba1;
  else if (j <= 63)
    return 0x8f1bbcdc;
  else
    return 0xa953fd4e;
}

function Kh(j) {
  if (j <= 15)
    return 0x50a28be6;
  else if (j <= 31)
    return 0x5c4dd124;
  else if (j <= 47)
    return 0x6d703ef3;
  else if (j <= 63)
    return 0x7a6d76e9;
  else
    return 0x00000000;
}

var r = [
  0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,
  7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8,
  3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12,
  1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2,
  4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13
];

var rh = [
  5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12,
  6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2,
  15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13,
  8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14,
  12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11
];

var s = [
  11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8,
  7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12,
  11, 13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5,
  11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12,
  9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6
];

var sh = [
  8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6,
  9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11,
  9, 7, 15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5,
  15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8,
  8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11
];


/***/ }),

/***/ "./node_modules/.1.1.7@hash.js/lib/hash/sha.js":
/*!*****************************************************!*\
  !*** ./node_modules/.1.1.7@hash.js/lib/hash/sha.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.sha1 = __webpack_require__(/*! ./sha/1 */ "./node_modules/.1.1.7@hash.js/lib/hash/sha/1.js");
exports.sha224 = __webpack_require__(/*! ./sha/224 */ "./node_modules/.1.1.7@hash.js/lib/hash/sha/224.js");
exports.sha256 = __webpack_require__(/*! ./sha/256 */ "./node_modules/.1.1.7@hash.js/lib/hash/sha/256.js");
exports.sha384 = __webpack_require__(/*! ./sha/384 */ "./node_modules/.1.1.7@hash.js/lib/hash/sha/384.js");
exports.sha512 = __webpack_require__(/*! ./sha/512 */ "./node_modules/.1.1.7@hash.js/lib/hash/sha/512.js");


/***/ }),

/***/ "./node_modules/.1.1.7@hash.js/lib/hash/sha/1.js":
/*!*******************************************************!*\
  !*** ./node_modules/.1.1.7@hash.js/lib/hash/sha/1.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(/*! ../utils */ "./node_modules/.1.1.7@hash.js/lib/hash/utils.js");
var common = __webpack_require__(/*! ../common */ "./node_modules/.1.1.7@hash.js/lib/hash/common.js");
var shaCommon = __webpack_require__(/*! ./common */ "./node_modules/.1.1.7@hash.js/lib/hash/sha/common.js");

var rotl32 = utils.rotl32;
var sum32 = utils.sum32;
var sum32_5 = utils.sum32_5;
var ft_1 = shaCommon.ft_1;
var BlockHash = common.BlockHash;

var sha1_K = [
  0x5A827999, 0x6ED9EBA1,
  0x8F1BBCDC, 0xCA62C1D6
];

function SHA1() {
  if (!(this instanceof SHA1))
    return new SHA1();

  BlockHash.call(this);
  this.h = [
    0x67452301, 0xefcdab89, 0x98badcfe,
    0x10325476, 0xc3d2e1f0 ];
  this.W = new Array(80);
}

utils.inherits(SHA1, BlockHash);
module.exports = SHA1;

SHA1.blockSize = 512;
SHA1.outSize = 160;
SHA1.hmacStrength = 80;
SHA1.padLength = 64;

SHA1.prototype._update = function _update(msg, start) {
  var W = this.W;

  for (var i = 0; i < 16; i++)
    W[i] = msg[start + i];

  for(; i < W.length; i++)
    W[i] = rotl32(W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16], 1);

  var a = this.h[0];
  var b = this.h[1];
  var c = this.h[2];
  var d = this.h[3];
  var e = this.h[4];

  for (i = 0; i < W.length; i++) {
    var s = ~~(i / 20);
    var t = sum32_5(rotl32(a, 5), ft_1(s, b, c, d), e, W[i], sha1_K[s]);
    e = d;
    d = c;
    c = rotl32(b, 30);
    b = a;
    a = t;
  }

  this.h[0] = sum32(this.h[0], a);
  this.h[1] = sum32(this.h[1], b);
  this.h[2] = sum32(this.h[2], c);
  this.h[3] = sum32(this.h[3], d);
  this.h[4] = sum32(this.h[4], e);
};

SHA1.prototype._digest = function digest(enc) {
  if (enc === 'hex')
    return utils.toHex32(this.h, 'big');
  else
    return utils.split32(this.h, 'big');
};


/***/ }),

/***/ "./node_modules/.1.1.7@hash.js/lib/hash/sha/224.js":
/*!*********************************************************!*\
  !*** ./node_modules/.1.1.7@hash.js/lib/hash/sha/224.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(/*! ../utils */ "./node_modules/.1.1.7@hash.js/lib/hash/utils.js");
var SHA256 = __webpack_require__(/*! ./256 */ "./node_modules/.1.1.7@hash.js/lib/hash/sha/256.js");

function SHA224() {
  if (!(this instanceof SHA224))
    return new SHA224();

  SHA256.call(this);
  this.h = [
    0xc1059ed8, 0x367cd507, 0x3070dd17, 0xf70e5939,
    0xffc00b31, 0x68581511, 0x64f98fa7, 0xbefa4fa4 ];
}
utils.inherits(SHA224, SHA256);
module.exports = SHA224;

SHA224.blockSize = 512;
SHA224.outSize = 224;
SHA224.hmacStrength = 192;
SHA224.padLength = 64;

SHA224.prototype._digest = function digest(enc) {
  // Just truncate output
  if (enc === 'hex')
    return utils.toHex32(this.h.slice(0, 7), 'big');
  else
    return utils.split32(this.h.slice(0, 7), 'big');
};



/***/ }),

/***/ "./node_modules/.1.1.7@hash.js/lib/hash/sha/256.js":
/*!*********************************************************!*\
  !*** ./node_modules/.1.1.7@hash.js/lib/hash/sha/256.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(/*! ../utils */ "./node_modules/.1.1.7@hash.js/lib/hash/utils.js");
var common = __webpack_require__(/*! ../common */ "./node_modules/.1.1.7@hash.js/lib/hash/common.js");
var shaCommon = __webpack_require__(/*! ./common */ "./node_modules/.1.1.7@hash.js/lib/hash/sha/common.js");
var assert = __webpack_require__(/*! minimalistic-assert */ "./node_modules/.1.0.1@minimalistic-assert/index.js");

var sum32 = utils.sum32;
var sum32_4 = utils.sum32_4;
var sum32_5 = utils.sum32_5;
var ch32 = shaCommon.ch32;
var maj32 = shaCommon.maj32;
var s0_256 = shaCommon.s0_256;
var s1_256 = shaCommon.s1_256;
var g0_256 = shaCommon.g0_256;
var g1_256 = shaCommon.g1_256;

var BlockHash = common.BlockHash;

var sha256_K = [
  0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5,
  0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,
  0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3,
  0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,
  0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc,
  0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,
  0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7,
  0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,
  0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13,
  0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,
  0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3,
  0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,
  0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5,
  0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,
  0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208,
  0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2
];

function SHA256() {
  if (!(this instanceof SHA256))
    return new SHA256();

  BlockHash.call(this);
  this.h = [
    0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a,
    0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19
  ];
  this.k = sha256_K;
  this.W = new Array(64);
}
utils.inherits(SHA256, BlockHash);
module.exports = SHA256;

SHA256.blockSize = 512;
SHA256.outSize = 256;
SHA256.hmacStrength = 192;
SHA256.padLength = 64;

SHA256.prototype._update = function _update(msg, start) {
  var W = this.W;

  for (var i = 0; i < 16; i++)
    W[i] = msg[start + i];
  for (; i < W.length; i++)
    W[i] = sum32_4(g1_256(W[i - 2]), W[i - 7], g0_256(W[i - 15]), W[i - 16]);

  var a = this.h[0];
  var b = this.h[1];
  var c = this.h[2];
  var d = this.h[3];
  var e = this.h[4];
  var f = this.h[5];
  var g = this.h[6];
  var h = this.h[7];

  assert(this.k.length === W.length);
  for (i = 0; i < W.length; i++) {
    var T1 = sum32_5(h, s1_256(e), ch32(e, f, g), this.k[i], W[i]);
    var T2 = sum32(s0_256(a), maj32(a, b, c));
    h = g;
    g = f;
    f = e;
    e = sum32(d, T1);
    d = c;
    c = b;
    b = a;
    a = sum32(T1, T2);
  }

  this.h[0] = sum32(this.h[0], a);
  this.h[1] = sum32(this.h[1], b);
  this.h[2] = sum32(this.h[2], c);
  this.h[3] = sum32(this.h[3], d);
  this.h[4] = sum32(this.h[4], e);
  this.h[5] = sum32(this.h[5], f);
  this.h[6] = sum32(this.h[6], g);
  this.h[7] = sum32(this.h[7], h);
};

SHA256.prototype._digest = function digest(enc) {
  if (enc === 'hex')
    return utils.toHex32(this.h, 'big');
  else
    return utils.split32(this.h, 'big');
};


/***/ }),

/***/ "./node_modules/.1.1.7@hash.js/lib/hash/sha/384.js":
/*!*********************************************************!*\
  !*** ./node_modules/.1.1.7@hash.js/lib/hash/sha/384.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(/*! ../utils */ "./node_modules/.1.1.7@hash.js/lib/hash/utils.js");

var SHA512 = __webpack_require__(/*! ./512 */ "./node_modules/.1.1.7@hash.js/lib/hash/sha/512.js");

function SHA384() {
  if (!(this instanceof SHA384))
    return new SHA384();

  SHA512.call(this);
  this.h = [
    0xcbbb9d5d, 0xc1059ed8,
    0x629a292a, 0x367cd507,
    0x9159015a, 0x3070dd17,
    0x152fecd8, 0xf70e5939,
    0x67332667, 0xffc00b31,
    0x8eb44a87, 0x68581511,
    0xdb0c2e0d, 0x64f98fa7,
    0x47b5481d, 0xbefa4fa4 ];
}
utils.inherits(SHA384, SHA512);
module.exports = SHA384;

SHA384.blockSize = 1024;
SHA384.outSize = 384;
SHA384.hmacStrength = 192;
SHA384.padLength = 128;

SHA384.prototype._digest = function digest(enc) {
  if (enc === 'hex')
    return utils.toHex32(this.h.slice(0, 12), 'big');
  else
    return utils.split32(this.h.slice(0, 12), 'big');
};


/***/ }),

/***/ "./node_modules/.1.1.7@hash.js/lib/hash/sha/512.js":
/*!*********************************************************!*\
  !*** ./node_modules/.1.1.7@hash.js/lib/hash/sha/512.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(/*! ../utils */ "./node_modules/.1.1.7@hash.js/lib/hash/utils.js");
var common = __webpack_require__(/*! ../common */ "./node_modules/.1.1.7@hash.js/lib/hash/common.js");
var assert = __webpack_require__(/*! minimalistic-assert */ "./node_modules/.1.0.1@minimalistic-assert/index.js");

var rotr64_hi = utils.rotr64_hi;
var rotr64_lo = utils.rotr64_lo;
var shr64_hi = utils.shr64_hi;
var shr64_lo = utils.shr64_lo;
var sum64 = utils.sum64;
var sum64_hi = utils.sum64_hi;
var sum64_lo = utils.sum64_lo;
var sum64_4_hi = utils.sum64_4_hi;
var sum64_4_lo = utils.sum64_4_lo;
var sum64_5_hi = utils.sum64_5_hi;
var sum64_5_lo = utils.sum64_5_lo;

var BlockHash = common.BlockHash;

var sha512_K = [
  0x428a2f98, 0xd728ae22, 0x71374491, 0x23ef65cd,
  0xb5c0fbcf, 0xec4d3b2f, 0xe9b5dba5, 0x8189dbbc,
  0x3956c25b, 0xf348b538, 0x59f111f1, 0xb605d019,
  0x923f82a4, 0xaf194f9b, 0xab1c5ed5, 0xda6d8118,
  0xd807aa98, 0xa3030242, 0x12835b01, 0x45706fbe,
  0x243185be, 0x4ee4b28c, 0x550c7dc3, 0xd5ffb4e2,
  0x72be5d74, 0xf27b896f, 0x80deb1fe, 0x3b1696b1,
  0x9bdc06a7, 0x25c71235, 0xc19bf174, 0xcf692694,
  0xe49b69c1, 0x9ef14ad2, 0xefbe4786, 0x384f25e3,
  0x0fc19dc6, 0x8b8cd5b5, 0x240ca1cc, 0x77ac9c65,
  0x2de92c6f, 0x592b0275, 0x4a7484aa, 0x6ea6e483,
  0x5cb0a9dc, 0xbd41fbd4, 0x76f988da, 0x831153b5,
  0x983e5152, 0xee66dfab, 0xa831c66d, 0x2db43210,
  0xb00327c8, 0x98fb213f, 0xbf597fc7, 0xbeef0ee4,
  0xc6e00bf3, 0x3da88fc2, 0xd5a79147, 0x930aa725,
  0x06ca6351, 0xe003826f, 0x14292967, 0x0a0e6e70,
  0x27b70a85, 0x46d22ffc, 0x2e1b2138, 0x5c26c926,
  0x4d2c6dfc, 0x5ac42aed, 0x53380d13, 0x9d95b3df,
  0x650a7354, 0x8baf63de, 0x766a0abb, 0x3c77b2a8,
  0x81c2c92e, 0x47edaee6, 0x92722c85, 0x1482353b,
  0xa2bfe8a1, 0x4cf10364, 0xa81a664b, 0xbc423001,
  0xc24b8b70, 0xd0f89791, 0xc76c51a3, 0x0654be30,
  0xd192e819, 0xd6ef5218, 0xd6990624, 0x5565a910,
  0xf40e3585, 0x5771202a, 0x106aa070, 0x32bbd1b8,
  0x19a4c116, 0xb8d2d0c8, 0x1e376c08, 0x5141ab53,
  0x2748774c, 0xdf8eeb99, 0x34b0bcb5, 0xe19b48a8,
  0x391c0cb3, 0xc5c95a63, 0x4ed8aa4a, 0xe3418acb,
  0x5b9cca4f, 0x7763e373, 0x682e6ff3, 0xd6b2b8a3,
  0x748f82ee, 0x5defb2fc, 0x78a5636f, 0x43172f60,
  0x84c87814, 0xa1f0ab72, 0x8cc70208, 0x1a6439ec,
  0x90befffa, 0x23631e28, 0xa4506ceb, 0xde82bde9,
  0xbef9a3f7, 0xb2c67915, 0xc67178f2, 0xe372532b,
  0xca273ece, 0xea26619c, 0xd186b8c7, 0x21c0c207,
  0xeada7dd6, 0xcde0eb1e, 0xf57d4f7f, 0xee6ed178,
  0x06f067aa, 0x72176fba, 0x0a637dc5, 0xa2c898a6,
  0x113f9804, 0xbef90dae, 0x1b710b35, 0x131c471b,
  0x28db77f5, 0x23047d84, 0x32caab7b, 0x40c72493,
  0x3c9ebe0a, 0x15c9bebc, 0x431d67c4, 0x9c100d4c,
  0x4cc5d4be, 0xcb3e42b6, 0x597f299c, 0xfc657e2a,
  0x5fcb6fab, 0x3ad6faec, 0x6c44198c, 0x4a475817
];

function SHA512() {
  if (!(this instanceof SHA512))
    return new SHA512();

  BlockHash.call(this);
  this.h = [
    0x6a09e667, 0xf3bcc908,
    0xbb67ae85, 0x84caa73b,
    0x3c6ef372, 0xfe94f82b,
    0xa54ff53a, 0x5f1d36f1,
    0x510e527f, 0xade682d1,
    0x9b05688c, 0x2b3e6c1f,
    0x1f83d9ab, 0xfb41bd6b,
    0x5be0cd19, 0x137e2179 ];
  this.k = sha512_K;
  this.W = new Array(160);
}
utils.inherits(SHA512, BlockHash);
module.exports = SHA512;

SHA512.blockSize = 1024;
SHA512.outSize = 512;
SHA512.hmacStrength = 192;
SHA512.padLength = 128;

SHA512.prototype._prepareBlock = function _prepareBlock(msg, start) {
  var W = this.W;

  // 32 x 32bit words
  for (var i = 0; i < 32; i++)
    W[i] = msg[start + i];
  for (; i < W.length; i += 2) {
    var c0_hi = g1_512_hi(W[i - 4], W[i - 3]);  // i - 2
    var c0_lo = g1_512_lo(W[i - 4], W[i - 3]);
    var c1_hi = W[i - 14];  // i - 7
    var c1_lo = W[i - 13];
    var c2_hi = g0_512_hi(W[i - 30], W[i - 29]);  // i - 15
    var c2_lo = g0_512_lo(W[i - 30], W[i - 29]);
    var c3_hi = W[i - 32];  // i - 16
    var c3_lo = W[i - 31];

    W[i] = sum64_4_hi(
      c0_hi, c0_lo,
      c1_hi, c1_lo,
      c2_hi, c2_lo,
      c3_hi, c3_lo);
    W[i + 1] = sum64_4_lo(
      c0_hi, c0_lo,
      c1_hi, c1_lo,
      c2_hi, c2_lo,
      c3_hi, c3_lo);
  }
};

SHA512.prototype._update = function _update(msg, start) {
  this._prepareBlock(msg, start);

  var W = this.W;

  var ah = this.h[0];
  var al = this.h[1];
  var bh = this.h[2];
  var bl = this.h[3];
  var ch = this.h[4];
  var cl = this.h[5];
  var dh = this.h[6];
  var dl = this.h[7];
  var eh = this.h[8];
  var el = this.h[9];
  var fh = this.h[10];
  var fl = this.h[11];
  var gh = this.h[12];
  var gl = this.h[13];
  var hh = this.h[14];
  var hl = this.h[15];

  assert(this.k.length === W.length);
  for (var i = 0; i < W.length; i += 2) {
    var c0_hi = hh;
    var c0_lo = hl;
    var c1_hi = s1_512_hi(eh, el);
    var c1_lo = s1_512_lo(eh, el);
    var c2_hi = ch64_hi(eh, el, fh, fl, gh, gl);
    var c2_lo = ch64_lo(eh, el, fh, fl, gh, gl);
    var c3_hi = this.k[i];
    var c3_lo = this.k[i + 1];
    var c4_hi = W[i];
    var c4_lo = W[i + 1];

    var T1_hi = sum64_5_hi(
      c0_hi, c0_lo,
      c1_hi, c1_lo,
      c2_hi, c2_lo,
      c3_hi, c3_lo,
      c4_hi, c4_lo);
    var T1_lo = sum64_5_lo(
      c0_hi, c0_lo,
      c1_hi, c1_lo,
      c2_hi, c2_lo,
      c3_hi, c3_lo,
      c4_hi, c4_lo);

    c0_hi = s0_512_hi(ah, al);
    c0_lo = s0_512_lo(ah, al);
    c1_hi = maj64_hi(ah, al, bh, bl, ch, cl);
    c1_lo = maj64_lo(ah, al, bh, bl, ch, cl);

    var T2_hi = sum64_hi(c0_hi, c0_lo, c1_hi, c1_lo);
    var T2_lo = sum64_lo(c0_hi, c0_lo, c1_hi, c1_lo);

    hh = gh;
    hl = gl;

    gh = fh;
    gl = fl;

    fh = eh;
    fl = el;

    eh = sum64_hi(dh, dl, T1_hi, T1_lo);
    el = sum64_lo(dl, dl, T1_hi, T1_lo);

    dh = ch;
    dl = cl;

    ch = bh;
    cl = bl;

    bh = ah;
    bl = al;

    ah = sum64_hi(T1_hi, T1_lo, T2_hi, T2_lo);
    al = sum64_lo(T1_hi, T1_lo, T2_hi, T2_lo);
  }

  sum64(this.h, 0, ah, al);
  sum64(this.h, 2, bh, bl);
  sum64(this.h, 4, ch, cl);
  sum64(this.h, 6, dh, dl);
  sum64(this.h, 8, eh, el);
  sum64(this.h, 10, fh, fl);
  sum64(this.h, 12, gh, gl);
  sum64(this.h, 14, hh, hl);
};

SHA512.prototype._digest = function digest(enc) {
  if (enc === 'hex')
    return utils.toHex32(this.h, 'big');
  else
    return utils.split32(this.h, 'big');
};

function ch64_hi(xh, xl, yh, yl, zh) {
  var r = (xh & yh) ^ ((~xh) & zh);
  if (r < 0)
    r += 0x100000000;
  return r;
}

function ch64_lo(xh, xl, yh, yl, zh, zl) {
  var r = (xl & yl) ^ ((~xl) & zl);
  if (r < 0)
    r += 0x100000000;
  return r;
}

function maj64_hi(xh, xl, yh, yl, zh) {
  var r = (xh & yh) ^ (xh & zh) ^ (yh & zh);
  if (r < 0)
    r += 0x100000000;
  return r;
}

function maj64_lo(xh, xl, yh, yl, zh, zl) {
  var r = (xl & yl) ^ (xl & zl) ^ (yl & zl);
  if (r < 0)
    r += 0x100000000;
  return r;
}

function s0_512_hi(xh, xl) {
  var c0_hi = rotr64_hi(xh, xl, 28);
  var c1_hi = rotr64_hi(xl, xh, 2);  // 34
  var c2_hi = rotr64_hi(xl, xh, 7);  // 39

  var r = c0_hi ^ c1_hi ^ c2_hi;
  if (r < 0)
    r += 0x100000000;
  return r;
}

function s0_512_lo(xh, xl) {
  var c0_lo = rotr64_lo(xh, xl, 28);
  var c1_lo = rotr64_lo(xl, xh, 2);  // 34
  var c2_lo = rotr64_lo(xl, xh, 7);  // 39

  var r = c0_lo ^ c1_lo ^ c2_lo;
  if (r < 0)
    r += 0x100000000;
  return r;
}

function s1_512_hi(xh, xl) {
  var c0_hi = rotr64_hi(xh, xl, 14);
  var c1_hi = rotr64_hi(xh, xl, 18);
  var c2_hi = rotr64_hi(xl, xh, 9);  // 41

  var r = c0_hi ^ c1_hi ^ c2_hi;
  if (r < 0)
    r += 0x100000000;
  return r;
}

function s1_512_lo(xh, xl) {
  var c0_lo = rotr64_lo(xh, xl, 14);
  var c1_lo = rotr64_lo(xh, xl, 18);
  var c2_lo = rotr64_lo(xl, xh, 9);  // 41

  var r = c0_lo ^ c1_lo ^ c2_lo;
  if (r < 0)
    r += 0x100000000;
  return r;
}

function g0_512_hi(xh, xl) {
  var c0_hi = rotr64_hi(xh, xl, 1);
  var c1_hi = rotr64_hi(xh, xl, 8);
  var c2_hi = shr64_hi(xh, xl, 7);

  var r = c0_hi ^ c1_hi ^ c2_hi;
  if (r < 0)
    r += 0x100000000;
  return r;
}

function g0_512_lo(xh, xl) {
  var c0_lo = rotr64_lo(xh, xl, 1);
  var c1_lo = rotr64_lo(xh, xl, 8);
  var c2_lo = shr64_lo(xh, xl, 7);

  var r = c0_lo ^ c1_lo ^ c2_lo;
  if (r < 0)
    r += 0x100000000;
  return r;
}

function g1_512_hi(xh, xl) {
  var c0_hi = rotr64_hi(xh, xl, 19);
  var c1_hi = rotr64_hi(xl, xh, 29);  // 61
  var c2_hi = shr64_hi(xh, xl, 6);

  var r = c0_hi ^ c1_hi ^ c2_hi;
  if (r < 0)
    r += 0x100000000;
  return r;
}

function g1_512_lo(xh, xl) {
  var c0_lo = rotr64_lo(xh, xl, 19);
  var c1_lo = rotr64_lo(xl, xh, 29);  // 61
  var c2_lo = shr64_lo(xh, xl, 6);

  var r = c0_lo ^ c1_lo ^ c2_lo;
  if (r < 0)
    r += 0x100000000;
  return r;
}


/***/ }),

/***/ "./node_modules/.1.1.7@hash.js/lib/hash/sha/common.js":
/*!************************************************************!*\
  !*** ./node_modules/.1.1.7@hash.js/lib/hash/sha/common.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(/*! ../utils */ "./node_modules/.1.1.7@hash.js/lib/hash/utils.js");
var rotr32 = utils.rotr32;

function ft_1(s, x, y, z) {
  if (s === 0)
    return ch32(x, y, z);
  if (s === 1 || s === 3)
    return p32(x, y, z);
  if (s === 2)
    return maj32(x, y, z);
}
exports.ft_1 = ft_1;

function ch32(x, y, z) {
  return (x & y) ^ ((~x) & z);
}
exports.ch32 = ch32;

function maj32(x, y, z) {
  return (x & y) ^ (x & z) ^ (y & z);
}
exports.maj32 = maj32;

function p32(x, y, z) {
  return x ^ y ^ z;
}
exports.p32 = p32;

function s0_256(x) {
  return rotr32(x, 2) ^ rotr32(x, 13) ^ rotr32(x, 22);
}
exports.s0_256 = s0_256;

function s1_256(x) {
  return rotr32(x, 6) ^ rotr32(x, 11) ^ rotr32(x, 25);
}
exports.s1_256 = s1_256;

function g0_256(x) {
  return rotr32(x, 7) ^ rotr32(x, 18) ^ (x >>> 3);
}
exports.g0_256 = g0_256;

function g1_256(x) {
  return rotr32(x, 17) ^ rotr32(x, 19) ^ (x >>> 10);
}
exports.g1_256 = g1_256;


/***/ }),

/***/ "./node_modules/.1.1.7@hash.js/lib/hash/utils.js":
/*!*******************************************************!*\
  !*** ./node_modules/.1.1.7@hash.js/lib/hash/utils.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var assert = __webpack_require__(/*! minimalistic-assert */ "./node_modules/.1.0.1@minimalistic-assert/index.js");
var inherits = __webpack_require__(/*! inherits */ "./node_modules/.2.0.3@inherits/inherits_browser.js");

exports.inherits = inherits;

function isSurrogatePair(msg, i) {
  if ((msg.charCodeAt(i) & 0xFC00) !== 0xD800) {
    return false;
  }
  if (i < 0 || i + 1 >= msg.length) {
    return false;
  }
  return (msg.charCodeAt(i + 1) & 0xFC00) === 0xDC00;
}

function toArray(msg, enc) {
  if (Array.isArray(msg))
    return msg.slice();
  if (!msg)
    return [];
  var res = [];
  if (typeof msg === 'string') {
    if (!enc) {
      // Inspired by stringToUtf8ByteArray() in closure-library by Google
      // https://github.com/google/closure-library/blob/8598d87242af59aac233270742c8984e2b2bdbe0/closure/goog/crypt/crypt.js#L117-L143
      // Apache License 2.0
      // https://github.com/google/closure-library/blob/master/LICENSE
      var p = 0;
      for (var i = 0; i < msg.length; i++) {
        var c = msg.charCodeAt(i);
        if (c < 128) {
          res[p++] = c;
        } else if (c < 2048) {
          res[p++] = (c >> 6) | 192;
          res[p++] = (c & 63) | 128;
        } else if (isSurrogatePair(msg, i)) {
          c = 0x10000 + ((c & 0x03FF) << 10) + (msg.charCodeAt(++i) & 0x03FF);
          res[p++] = (c >> 18) | 240;
          res[p++] = ((c >> 12) & 63) | 128;
          res[p++] = ((c >> 6) & 63) | 128;
          res[p++] = (c & 63) | 128;
        } else {
          res[p++] = (c >> 12) | 224;
          res[p++] = ((c >> 6) & 63) | 128;
          res[p++] = (c & 63) | 128;
        }
      }
    } else if (enc === 'hex') {
      msg = msg.replace(/[^a-z0-9]+/ig, '');
      if (msg.length % 2 !== 0)
        msg = '0' + msg;
      for (i = 0; i < msg.length; i += 2)
        res.push(parseInt(msg[i] + msg[i + 1], 16));
    }
  } else {
    for (i = 0; i < msg.length; i++)
      res[i] = msg[i] | 0;
  }
  return res;
}
exports.toArray = toArray;

function toHex(msg) {
  var res = '';
  for (var i = 0; i < msg.length; i++)
    res += zero2(msg[i].toString(16));
  return res;
}
exports.toHex = toHex;

function htonl(w) {
  var res = (w >>> 24) |
            ((w >>> 8) & 0xff00) |
            ((w << 8) & 0xff0000) |
            ((w & 0xff) << 24);
  return res >>> 0;
}
exports.htonl = htonl;

function toHex32(msg, endian) {
  var res = '';
  for (var i = 0; i < msg.length; i++) {
    var w = msg[i];
    if (endian === 'little')
      w = htonl(w);
    res += zero8(w.toString(16));
  }
  return res;
}
exports.toHex32 = toHex32;

function zero2(word) {
  if (word.length === 1)
    return '0' + word;
  else
    return word;
}
exports.zero2 = zero2;

function zero8(word) {
  if (word.length === 7)
    return '0' + word;
  else if (word.length === 6)
    return '00' + word;
  else if (word.length === 5)
    return '000' + word;
  else if (word.length === 4)
    return '0000' + word;
  else if (word.length === 3)
    return '00000' + word;
  else if (word.length === 2)
    return '000000' + word;
  else if (word.length === 1)
    return '0000000' + word;
  else
    return word;
}
exports.zero8 = zero8;

function join32(msg, start, end, endian) {
  var len = end - start;
  assert(len % 4 === 0);
  var res = new Array(len / 4);
  for (var i = 0, k = start; i < res.length; i++, k += 4) {
    var w;
    if (endian === 'big')
      w = (msg[k] << 24) | (msg[k + 1] << 16) | (msg[k + 2] << 8) | msg[k + 3];
    else
      w = (msg[k + 3] << 24) | (msg[k + 2] << 16) | (msg[k + 1] << 8) | msg[k];
    res[i] = w >>> 0;
  }
  return res;
}
exports.join32 = join32;

function split32(msg, endian) {
  var res = new Array(msg.length * 4);
  for (var i = 0, k = 0; i < msg.length; i++, k += 4) {
    var m = msg[i];
    if (endian === 'big') {
      res[k] = m >>> 24;
      res[k + 1] = (m >>> 16) & 0xff;
      res[k + 2] = (m >>> 8) & 0xff;
      res[k + 3] = m & 0xff;
    } else {
      res[k + 3] = m >>> 24;
      res[k + 2] = (m >>> 16) & 0xff;
      res[k + 1] = (m >>> 8) & 0xff;
      res[k] = m & 0xff;
    }
  }
  return res;
}
exports.split32 = split32;

function rotr32(w, b) {
  return (w >>> b) | (w << (32 - b));
}
exports.rotr32 = rotr32;

function rotl32(w, b) {
  return (w << b) | (w >>> (32 - b));
}
exports.rotl32 = rotl32;

function sum32(a, b) {
  return (a + b) >>> 0;
}
exports.sum32 = sum32;

function sum32_3(a, b, c) {
  return (a + b + c) >>> 0;
}
exports.sum32_3 = sum32_3;

function sum32_4(a, b, c, d) {
  return (a + b + c + d) >>> 0;
}
exports.sum32_4 = sum32_4;

function sum32_5(a, b, c, d, e) {
  return (a + b + c + d + e) >>> 0;
}
exports.sum32_5 = sum32_5;

function sum64(buf, pos, ah, al) {
  var bh = buf[pos];
  var bl = buf[pos + 1];

  var lo = (al + bl) >>> 0;
  var hi = (lo < al ? 1 : 0) + ah + bh;
  buf[pos] = hi >>> 0;
  buf[pos + 1] = lo;
}
exports.sum64 = sum64;

function sum64_hi(ah, al, bh, bl) {
  var lo = (al + bl) >>> 0;
  var hi = (lo < al ? 1 : 0) + ah + bh;
  return hi >>> 0;
}
exports.sum64_hi = sum64_hi;

function sum64_lo(ah, al, bh, bl) {
  var lo = al + bl;
  return lo >>> 0;
}
exports.sum64_lo = sum64_lo;

function sum64_4_hi(ah, al, bh, bl, ch, cl, dh, dl) {
  var carry = 0;
  var lo = al;
  lo = (lo + bl) >>> 0;
  carry += lo < al ? 1 : 0;
  lo = (lo + cl) >>> 0;
  carry += lo < cl ? 1 : 0;
  lo = (lo + dl) >>> 0;
  carry += lo < dl ? 1 : 0;

  var hi = ah + bh + ch + dh + carry;
  return hi >>> 0;
}
exports.sum64_4_hi = sum64_4_hi;

function sum64_4_lo(ah, al, bh, bl, ch, cl, dh, dl) {
  var lo = al + bl + cl + dl;
  return lo >>> 0;
}
exports.sum64_4_lo = sum64_4_lo;

function sum64_5_hi(ah, al, bh, bl, ch, cl, dh, dl, eh, el) {
  var carry = 0;
  var lo = al;
  lo = (lo + bl) >>> 0;
  carry += lo < al ? 1 : 0;
  lo = (lo + cl) >>> 0;
  carry += lo < cl ? 1 : 0;
  lo = (lo + dl) >>> 0;
  carry += lo < dl ? 1 : 0;
  lo = (lo + el) >>> 0;
  carry += lo < el ? 1 : 0;

  var hi = ah + bh + ch + dh + eh + carry;
  return hi >>> 0;
}
exports.sum64_5_hi = sum64_5_hi;

function sum64_5_lo(ah, al, bh, bl, ch, cl, dh, dl, eh, el) {
  var lo = al + bl + cl + dl + el;

  return lo >>> 0;
}
exports.sum64_5_lo = sum64_5_lo;

function rotr64_hi(ah, al, num) {
  var r = (al << (32 - num)) | (ah >>> num);
  return r >>> 0;
}
exports.rotr64_hi = rotr64_hi;

function rotr64_lo(ah, al, num) {
  var r = (ah << (32 - num)) | (al >>> num);
  return r >>> 0;
}
exports.rotr64_lo = rotr64_lo;

function shr64_hi(ah, al, num) {
  return ah >>> num;
}
exports.shr64_hi = shr64_hi;

function shr64_lo(ah, al, num) {
  var r = (ah << (32 - num)) | (al >>> num);
  return r >>> 0;
}
exports.shr64_lo = shr64_lo;


/***/ }),

/***/ "./node_modules/.1.2.0@browserify-aes/aes.js":
/*!***************************************************!*\
  !*** ./node_modules/.1.2.0@browserify-aes/aes.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// based on the aes implimentation in triple sec
// https://github.com/keybase/triplesec
// which is in turn based on the one from crypto-js
// https://code.google.com/p/crypto-js/

var Buffer = __webpack_require__(/*! safe-buffer */ "./node_modules/.5.1.2@safe-buffer/index.js").Buffer

function asUInt32Array (buf) {
  if (!Buffer.isBuffer(buf)) buf = Buffer.from(buf)

  var len = (buf.length / 4) | 0
  var out = new Array(len)

  for (var i = 0; i < len; i++) {
    out[i] = buf.readUInt32BE(i * 4)
  }

  return out
}

function scrubVec (v) {
  for (var i = 0; i < v.length; v++) {
    v[i] = 0
  }
}

function cryptBlock (M, keySchedule, SUB_MIX, SBOX, nRounds) {
  var SUB_MIX0 = SUB_MIX[0]
  var SUB_MIX1 = SUB_MIX[1]
  var SUB_MIX2 = SUB_MIX[2]
  var SUB_MIX3 = SUB_MIX[3]

  var s0 = M[0] ^ keySchedule[0]
  var s1 = M[1] ^ keySchedule[1]
  var s2 = M[2] ^ keySchedule[2]
  var s3 = M[3] ^ keySchedule[3]
  var t0, t1, t2, t3
  var ksRow = 4

  for (var round = 1; round < nRounds; round++) {
    t0 = SUB_MIX0[s0 >>> 24] ^ SUB_MIX1[(s1 >>> 16) & 0xff] ^ SUB_MIX2[(s2 >>> 8) & 0xff] ^ SUB_MIX3[s3 & 0xff] ^ keySchedule[ksRow++]
    t1 = SUB_MIX0[s1 >>> 24] ^ SUB_MIX1[(s2 >>> 16) & 0xff] ^ SUB_MIX2[(s3 >>> 8) & 0xff] ^ SUB_MIX3[s0 & 0xff] ^ keySchedule[ksRow++]
    t2 = SUB_MIX0[s2 >>> 24] ^ SUB_MIX1[(s3 >>> 16) & 0xff] ^ SUB_MIX2[(s0 >>> 8) & 0xff] ^ SUB_MIX3[s1 & 0xff] ^ keySchedule[ksRow++]
    t3 = SUB_MIX0[s3 >>> 24] ^ SUB_MIX1[(s0 >>> 16) & 0xff] ^ SUB_MIX2[(s1 >>> 8) & 0xff] ^ SUB_MIX3[s2 & 0xff] ^ keySchedule[ksRow++]
    s0 = t0
    s1 = t1
    s2 = t2
    s3 = t3
  }

  t0 = ((SBOX[s0 >>> 24] << 24) | (SBOX[(s1 >>> 16) & 0xff] << 16) | (SBOX[(s2 >>> 8) & 0xff] << 8) | SBOX[s3 & 0xff]) ^ keySchedule[ksRow++]
  t1 = ((SBOX[s1 >>> 24] << 24) | (SBOX[(s2 >>> 16) & 0xff] << 16) | (SBOX[(s3 >>> 8) & 0xff] << 8) | SBOX[s0 & 0xff]) ^ keySchedule[ksRow++]
  t2 = ((SBOX[s2 >>> 24] << 24) | (SBOX[(s3 >>> 16) & 0xff] << 16) | (SBOX[(s0 >>> 8) & 0xff] << 8) | SBOX[s1 & 0xff]) ^ keySchedule[ksRow++]
  t3 = ((SBOX[s3 >>> 24] << 24) | (SBOX[(s0 >>> 16) & 0xff] << 16) | (SBOX[(s1 >>> 8) & 0xff] << 8) | SBOX[s2 & 0xff]) ^ keySchedule[ksRow++]
  t0 = t0 >>> 0
  t1 = t1 >>> 0
  t2 = t2 >>> 0
  t3 = t3 >>> 0

  return [t0, t1, t2, t3]
}

// AES constants
var RCON = [0x00, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36]
var G = (function () {
  // Compute double table
  var d = new Array(256)
  for (var j = 0; j < 256; j++) {
    if (j < 128) {
      d[j] = j << 1
    } else {
      d[j] = (j << 1) ^ 0x11b
    }
  }

  var SBOX = []
  var INV_SBOX = []
  var SUB_MIX = [[], [], [], []]
  var INV_SUB_MIX = [[], [], [], []]

  // Walk GF(2^8)
  var x = 0
  var xi = 0
  for (var i = 0; i < 256; ++i) {
    // Compute sbox
    var sx = xi ^ (xi << 1) ^ (xi << 2) ^ (xi << 3) ^ (xi << 4)
    sx = (sx >>> 8) ^ (sx & 0xff) ^ 0x63
    SBOX[x] = sx
    INV_SBOX[sx] = x

    // Compute multiplication
    var x2 = d[x]
    var x4 = d[x2]
    var x8 = d[x4]

    // Compute sub bytes, mix columns tables
    var t = (d[sx] * 0x101) ^ (sx * 0x1010100)
    SUB_MIX[0][x] = (t << 24) | (t >>> 8)
    SUB_MIX[1][x] = (t << 16) | (t >>> 16)
    SUB_MIX[2][x] = (t << 8) | (t >>> 24)
    SUB_MIX[3][x] = t

    // Compute inv sub bytes, inv mix columns tables
    t = (x8 * 0x1010101) ^ (x4 * 0x10001) ^ (x2 * 0x101) ^ (x * 0x1010100)
    INV_SUB_MIX[0][sx] = (t << 24) | (t >>> 8)
    INV_SUB_MIX[1][sx] = (t << 16) | (t >>> 16)
    INV_SUB_MIX[2][sx] = (t << 8) | (t >>> 24)
    INV_SUB_MIX[3][sx] = t

    if (x === 0) {
      x = xi = 1
    } else {
      x = x2 ^ d[d[d[x8 ^ x2]]]
      xi ^= d[d[xi]]
    }
  }

  return {
    SBOX: SBOX,
    INV_SBOX: INV_SBOX,
    SUB_MIX: SUB_MIX,
    INV_SUB_MIX: INV_SUB_MIX
  }
})()

function AES (key) {
  this._key = asUInt32Array(key)
  this._reset()
}

AES.blockSize = 4 * 4
AES.keySize = 256 / 8
AES.prototype.blockSize = AES.blockSize
AES.prototype.keySize = AES.keySize
AES.prototype._reset = function () {
  var keyWords = this._key
  var keySize = keyWords.length
  var nRounds = keySize + 6
  var ksRows = (nRounds + 1) * 4

  var keySchedule = []
  for (var k = 0; k < keySize; k++) {
    keySchedule[k] = keyWords[k]
  }

  for (k = keySize; k < ksRows; k++) {
    var t = keySchedule[k - 1]

    if (k % keySize === 0) {
      t = (t << 8) | (t >>> 24)
      t =
        (G.SBOX[t >>> 24] << 24) |
        (G.SBOX[(t >>> 16) & 0xff] << 16) |
        (G.SBOX[(t >>> 8) & 0xff] << 8) |
        (G.SBOX[t & 0xff])

      t ^= RCON[(k / keySize) | 0] << 24
    } else if (keySize > 6 && k % keySize === 4) {
      t =
        (G.SBOX[t >>> 24] << 24) |
        (G.SBOX[(t >>> 16) & 0xff] << 16) |
        (G.SBOX[(t >>> 8) & 0xff] << 8) |
        (G.SBOX[t & 0xff])
    }

    keySchedule[k] = keySchedule[k - keySize] ^ t
  }

  var invKeySchedule = []
  for (var ik = 0; ik < ksRows; ik++) {
    var ksR = ksRows - ik
    var tt = keySchedule[ksR - (ik % 4 ? 0 : 4)]

    if (ik < 4 || ksR <= 4) {
      invKeySchedule[ik] = tt
    } else {
      invKeySchedule[ik] =
        G.INV_SUB_MIX[0][G.SBOX[tt >>> 24]] ^
        G.INV_SUB_MIX[1][G.SBOX[(tt >>> 16) & 0xff]] ^
        G.INV_SUB_MIX[2][G.SBOX[(tt >>> 8) & 0xff]] ^
        G.INV_SUB_MIX[3][G.SBOX[tt & 0xff]]
    }
  }

  this._nRounds = nRounds
  this._keySchedule = keySchedule
  this._invKeySchedule = invKeySchedule
}

AES.prototype.encryptBlockRaw = function (M) {
  M = asUInt32Array(M)
  return cryptBlock(M, this._keySchedule, G.SUB_MIX, G.SBOX, this._nRounds)
}

AES.prototype.encryptBlock = function (M) {
  var out = this.encryptBlockRaw(M)
  var buf = Buffer.allocUnsafe(16)
  buf.writeUInt32BE(out[0], 0)
  buf.writeUInt32BE(out[1], 4)
  buf.writeUInt32BE(out[2], 8)
  buf.writeUInt32BE(out[3], 12)
  return buf
}

AES.prototype.decryptBlock = function (M) {
  M = asUInt32Array(M)

  // swap
  var m1 = M[1]
  M[1] = M[3]
  M[3] = m1

  var out = cryptBlock(M, this._invKeySchedule, G.INV_SUB_MIX, G.INV_SBOX, this._nRounds)
  var buf = Buffer.allocUnsafe(16)
  buf.writeUInt32BE(out[0], 0)
  buf.writeUInt32BE(out[3], 4)
  buf.writeUInt32BE(out[2], 8)
  buf.writeUInt32BE(out[1], 12)
  return buf
}

AES.prototype.scrub = function () {
  scrubVec(this._keySchedule)
  scrubVec(this._invKeySchedule)
  scrubVec(this._key)
}

module.exports.AES = AES


/***/ }),

/***/ "./node_modules/.1.2.0@browserify-aes/authCipher.js":
/*!**********************************************************!*\
  !*** ./node_modules/.1.2.0@browserify-aes/authCipher.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var aes = __webpack_require__(/*! ./aes */ "./node_modules/.1.2.0@browserify-aes/aes.js")
var Buffer = __webpack_require__(/*! safe-buffer */ "./node_modules/.5.1.2@safe-buffer/index.js").Buffer
var Transform = __webpack_require__(/*! cipher-base */ "./node_modules/.1.0.4@cipher-base/index.js")
var inherits = __webpack_require__(/*! inherits */ "./node_modules/.2.0.3@inherits/inherits_browser.js")
var GHASH = __webpack_require__(/*! ./ghash */ "./node_modules/.1.2.0@browserify-aes/ghash.js")
var xor = __webpack_require__(/*! buffer-xor */ "./node_modules/.1.0.3@buffer-xor/index.js")
var incr32 = __webpack_require__(/*! ./incr32 */ "./node_modules/.1.2.0@browserify-aes/incr32.js")

function xorTest (a, b) {
  var out = 0
  if (a.length !== b.length) out++

  var len = Math.min(a.length, b.length)
  for (var i = 0; i < len; ++i) {
    out += (a[i] ^ b[i])
  }

  return out
}

function calcIv (self, iv, ck) {
  if (iv.length === 12) {
    self._finID = Buffer.concat([iv, Buffer.from([0, 0, 0, 1])])
    return Buffer.concat([iv, Buffer.from([0, 0, 0, 2])])
  }
  var ghash = new GHASH(ck)
  var len = iv.length
  var toPad = len % 16
  ghash.update(iv)
  if (toPad) {
    toPad = 16 - toPad
    ghash.update(Buffer.alloc(toPad, 0))
  }
  ghash.update(Buffer.alloc(8, 0))
  var ivBits = len * 8
  var tail = Buffer.alloc(8)
  tail.writeUIntBE(ivBits, 0, 8)
  ghash.update(tail)
  self._finID = ghash.state
  var out = Buffer.from(self._finID)
  incr32(out)
  return out
}
function StreamCipher (mode, key, iv, decrypt) {
  Transform.call(this)

  var h = Buffer.alloc(4, 0)

  this._cipher = new aes.AES(key)
  var ck = this._cipher.encryptBlock(h)
  this._ghash = new GHASH(ck)
  iv = calcIv(this, iv, ck)

  this._prev = Buffer.from(iv)
  this._cache = Buffer.allocUnsafe(0)
  this._secCache = Buffer.allocUnsafe(0)
  this._decrypt = decrypt
  this._alen = 0
  this._len = 0
  this._mode = mode

  this._authTag = null
  this._called = false
}

inherits(StreamCipher, Transform)

StreamCipher.prototype._update = function (chunk) {
  if (!this._called && this._alen) {
    var rump = 16 - (this._alen % 16)
    if (rump < 16) {
      rump = Buffer.alloc(rump, 0)
      this._ghash.update(rump)
    }
  }

  this._called = true
  var out = this._mode.encrypt(this, chunk)
  if (this._decrypt) {
    this._ghash.update(chunk)
  } else {
    this._ghash.update(out)
  }
  this._len += chunk.length
  return out
}

StreamCipher.prototype._final = function () {
  if (this._decrypt && !this._authTag) throw new Error('Unsupported state or unable to authenticate data')

  var tag = xor(this._ghash.final(this._alen * 8, this._len * 8), this._cipher.encryptBlock(this._finID))
  if (this._decrypt && xorTest(tag, this._authTag)) throw new Error('Unsupported state or unable to authenticate data')

  this._authTag = tag
  this._cipher.scrub()
}

StreamCipher.prototype.getAuthTag = function getAuthTag () {
  if (this._decrypt || !Buffer.isBuffer(this._authTag)) throw new Error('Attempting to get auth tag in unsupported state')

  return this._authTag
}

StreamCipher.prototype.setAuthTag = function setAuthTag (tag) {
  if (!this._decrypt) throw new Error('Attempting to set auth tag in unsupported state')

  this._authTag = tag
}

StreamCipher.prototype.setAAD = function setAAD (buf) {
  if (this._called) throw new Error('Attempting to set AAD in unsupported state')

  this._ghash.update(buf)
  this._alen += buf.length
}

module.exports = StreamCipher


/***/ }),

/***/ "./node_modules/.1.2.0@browserify-aes/browser.js":
/*!*******************************************************!*\
  !*** ./node_modules/.1.2.0@browserify-aes/browser.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var ciphers = __webpack_require__(/*! ./encrypter */ "./node_modules/.1.2.0@browserify-aes/encrypter.js")
var deciphers = __webpack_require__(/*! ./decrypter */ "./node_modules/.1.2.0@browserify-aes/decrypter.js")
var modes = __webpack_require__(/*! ./modes/list.json */ "./node_modules/.1.2.0@browserify-aes/modes/list.json")

function getCiphers () {
  return Object.keys(modes)
}

exports.createCipher = exports.Cipher = ciphers.createCipher
exports.createCipheriv = exports.Cipheriv = ciphers.createCipheriv
exports.createDecipher = exports.Decipher = deciphers.createDecipher
exports.createDecipheriv = exports.Decipheriv = deciphers.createDecipheriv
exports.listCiphers = exports.getCiphers = getCiphers


/***/ }),

/***/ "./node_modules/.1.2.0@browserify-aes/decrypter.js":
/*!*********************************************************!*\
  !*** ./node_modules/.1.2.0@browserify-aes/decrypter.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var AuthCipher = __webpack_require__(/*! ./authCipher */ "./node_modules/.1.2.0@browserify-aes/authCipher.js")
var Buffer = __webpack_require__(/*! safe-buffer */ "./node_modules/.5.1.2@safe-buffer/index.js").Buffer
var MODES = __webpack_require__(/*! ./modes */ "./node_modules/.1.2.0@browserify-aes/modes/index.js")
var StreamCipher = __webpack_require__(/*! ./streamCipher */ "./node_modules/.1.2.0@browserify-aes/streamCipher.js")
var Transform = __webpack_require__(/*! cipher-base */ "./node_modules/.1.0.4@cipher-base/index.js")
var aes = __webpack_require__(/*! ./aes */ "./node_modules/.1.2.0@browserify-aes/aes.js")
var ebtk = __webpack_require__(/*! evp_bytestokey */ "./node_modules/.1.0.3@evp_bytestokey/index.js")
var inherits = __webpack_require__(/*! inherits */ "./node_modules/.2.0.3@inherits/inherits_browser.js")

function Decipher (mode, key, iv) {
  Transform.call(this)

  this._cache = new Splitter()
  this._last = void 0
  this._cipher = new aes.AES(key)
  this._prev = Buffer.from(iv)
  this._mode = mode
  this._autopadding = true
}

inherits(Decipher, Transform)

Decipher.prototype._update = function (data) {
  this._cache.add(data)
  var chunk
  var thing
  var out = []
  while ((chunk = this._cache.get(this._autopadding))) {
    thing = this._mode.decrypt(this, chunk)
    out.push(thing)
  }
  return Buffer.concat(out)
}

Decipher.prototype._final = function () {
  var chunk = this._cache.flush()
  if (this._autopadding) {
    return unpad(this._mode.decrypt(this, chunk))
  } else if (chunk) {
    throw new Error('data not multiple of block length')
  }
}

Decipher.prototype.setAutoPadding = function (setTo) {
  this._autopadding = !!setTo
  return this
}

function Splitter () {
  this.cache = Buffer.allocUnsafe(0)
}

Splitter.prototype.add = function (data) {
  this.cache = Buffer.concat([this.cache, data])
}

Splitter.prototype.get = function (autoPadding) {
  var out
  if (autoPadding) {
    if (this.cache.length > 16) {
      out = this.cache.slice(0, 16)
      this.cache = this.cache.slice(16)
      return out
    }
  } else {
    if (this.cache.length >= 16) {
      out = this.cache.slice(0, 16)
      this.cache = this.cache.slice(16)
      return out
    }
  }

  return null
}

Splitter.prototype.flush = function () {
  if (this.cache.length) return this.cache
}

function unpad (last) {
  var padded = last[15]
  if (padded < 1 || padded > 16) {
    throw new Error('unable to decrypt data')
  }
  var i = -1
  while (++i < padded) {
    if (last[(i + (16 - padded))] !== padded) {
      throw new Error('unable to decrypt data')
    }
  }
  if (padded === 16) return

  return last.slice(0, 16 - padded)
}

function createDecipheriv (suite, password, iv) {
  var config = MODES[suite.toLowerCase()]
  if (!config) throw new TypeError('invalid suite type')

  if (typeof iv === 'string') iv = Buffer.from(iv)
  if (config.mode !== 'GCM' && iv.length !== config.iv) throw new TypeError('invalid iv length ' + iv.length)

  if (typeof password === 'string') password = Buffer.from(password)
  if (password.length !== config.key / 8) throw new TypeError('invalid key length ' + password.length)

  if (config.type === 'stream') {
    return new StreamCipher(config.module, password, iv, true)
  } else if (config.type === 'auth') {
    return new AuthCipher(config.module, password, iv, true)
  }

  return new Decipher(config.module, password, iv)
}

function createDecipher (suite, password) {
  var config = MODES[suite.toLowerCase()]
  if (!config) throw new TypeError('invalid suite type')

  var keys = ebtk(password, false, config.key, config.iv)
  return createDecipheriv(suite, keys.key, keys.iv)
}

exports.createDecipher = createDecipher
exports.createDecipheriv = createDecipheriv


/***/ }),

/***/ "./node_modules/.1.2.0@browserify-aes/encrypter.js":
/*!*********************************************************!*\
  !*** ./node_modules/.1.2.0@browserify-aes/encrypter.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var MODES = __webpack_require__(/*! ./modes */ "./node_modules/.1.2.0@browserify-aes/modes/index.js")
var AuthCipher = __webpack_require__(/*! ./authCipher */ "./node_modules/.1.2.0@browserify-aes/authCipher.js")
var Buffer = __webpack_require__(/*! safe-buffer */ "./node_modules/.5.1.2@safe-buffer/index.js").Buffer
var StreamCipher = __webpack_require__(/*! ./streamCipher */ "./node_modules/.1.2.0@browserify-aes/streamCipher.js")
var Transform = __webpack_require__(/*! cipher-base */ "./node_modules/.1.0.4@cipher-base/index.js")
var aes = __webpack_require__(/*! ./aes */ "./node_modules/.1.2.0@browserify-aes/aes.js")
var ebtk = __webpack_require__(/*! evp_bytestokey */ "./node_modules/.1.0.3@evp_bytestokey/index.js")
var inherits = __webpack_require__(/*! inherits */ "./node_modules/.2.0.3@inherits/inherits_browser.js")

function Cipher (mode, key, iv) {
  Transform.call(this)

  this._cache = new Splitter()
  this._cipher = new aes.AES(key)
  this._prev = Buffer.from(iv)
  this._mode = mode
  this._autopadding = true
}

inherits(Cipher, Transform)

Cipher.prototype._update = function (data) {
  this._cache.add(data)
  var chunk
  var thing
  var out = []

  while ((chunk = this._cache.get())) {
    thing = this._mode.encrypt(this, chunk)
    out.push(thing)
  }

  return Buffer.concat(out)
}

var PADDING = Buffer.alloc(16, 0x10)

Cipher.prototype._final = function () {
  var chunk = this._cache.flush()
  if (this._autopadding) {
    chunk = this._mode.encrypt(this, chunk)
    this._cipher.scrub()
    return chunk
  }

  if (!chunk.equals(PADDING)) {
    this._cipher.scrub()
    throw new Error('data not multiple of block length')
  }
}

Cipher.prototype.setAutoPadding = function (setTo) {
  this._autopadding = !!setTo
  return this
}

function Splitter () {
  this.cache = Buffer.allocUnsafe(0)
}

Splitter.prototype.add = function (data) {
  this.cache = Buffer.concat([this.cache, data])
}

Splitter.prototype.get = function () {
  if (this.cache.length > 15) {
    var out = this.cache.slice(0, 16)
    this.cache = this.cache.slice(16)
    return out
  }
  return null
}

Splitter.prototype.flush = function () {
  var len = 16 - this.cache.length
  var padBuff = Buffer.allocUnsafe(len)

  var i = -1
  while (++i < len) {
    padBuff.writeUInt8(len, i)
  }

  return Buffer.concat([this.cache, padBuff])
}

function createCipheriv (suite, password, iv) {
  var config = MODES[suite.toLowerCase()]
  if (!config) throw new TypeError('invalid suite type')

  if (typeof password === 'string') password = Buffer.from(password)
  if (password.length !== config.key / 8) throw new TypeError('invalid key length ' + password.length)

  if (typeof iv === 'string') iv = Buffer.from(iv)
  if (config.mode !== 'GCM' && iv.length !== config.iv) throw new TypeError('invalid iv length ' + iv.length)

  if (config.type === 'stream') {
    return new StreamCipher(config.module, password, iv)
  } else if (config.type === 'auth') {
    return new AuthCipher(config.module, password, iv)
  }

  return new Cipher(config.module, password, iv)
}

function createCipher (suite, password) {
  var config = MODES[suite.toLowerCase()]
  if (!config) throw new TypeError('invalid suite type')

  var keys = ebtk(password, false, config.key, config.iv)
  return createCipheriv(suite, keys.key, keys.iv)
}

exports.createCipheriv = createCipheriv
exports.createCipher = createCipher


/***/ }),

/***/ "./node_modules/.1.2.0@browserify-aes/ghash.js":
/*!*****************************************************!*\
  !*** ./node_modules/.1.2.0@browserify-aes/ghash.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var Buffer = __webpack_require__(/*! safe-buffer */ "./node_modules/.5.1.2@safe-buffer/index.js").Buffer
var ZEROES = Buffer.alloc(16, 0)

function toArray (buf) {
  return [
    buf.readUInt32BE(0),
    buf.readUInt32BE(4),
    buf.readUInt32BE(8),
    buf.readUInt32BE(12)
  ]
}

function fromArray (out) {
  var buf = Buffer.allocUnsafe(16)
  buf.writeUInt32BE(out[0] >>> 0, 0)
  buf.writeUInt32BE(out[1] >>> 0, 4)
  buf.writeUInt32BE(out[2] >>> 0, 8)
  buf.writeUInt32BE(out[3] >>> 0, 12)
  return buf
}

function GHASH (key) {
  this.h = key
  this.state = Buffer.alloc(16, 0)
  this.cache = Buffer.allocUnsafe(0)
}

// from http://bitwiseshiftleft.github.io/sjcl/doc/symbols/src/core_gcm.js.html
// by Juho Vähä-Herttua
GHASH.prototype.ghash = function (block) {
  var i = -1
  while (++i < block.length) {
    this.state[i] ^= block[i]
  }
  this._multiply()
}

GHASH.prototype._multiply = function () {
  var Vi = toArray(this.h)
  var Zi = [0, 0, 0, 0]
  var j, xi, lsbVi
  var i = -1
  while (++i < 128) {
    xi = (this.state[~~(i / 8)] & (1 << (7 - (i % 8)))) !== 0
    if (xi) {
      // Z_i+1 = Z_i ^ V_i
      Zi[0] ^= Vi[0]
      Zi[1] ^= Vi[1]
      Zi[2] ^= Vi[2]
      Zi[3] ^= Vi[3]
    }

    // Store the value of LSB(V_i)
    lsbVi = (Vi[3] & 1) !== 0

    // V_i+1 = V_i >> 1
    for (j = 3; j > 0; j--) {
      Vi[j] = (Vi[j] >>> 1) | ((Vi[j - 1] & 1) << 31)
    }
    Vi[0] = Vi[0] >>> 1

    // If LSB(V_i) is 1, V_i+1 = (V_i >> 1) ^ R
    if (lsbVi) {
      Vi[0] = Vi[0] ^ (0xe1 << 24)
    }
  }
  this.state = fromArray(Zi)
}

GHASH.prototype.update = function (buf) {
  this.cache = Buffer.concat([this.cache, buf])
  var chunk
  while (this.cache.length >= 16) {
    chunk = this.cache.slice(0, 16)
    this.cache = this.cache.slice(16)
    this.ghash(chunk)
  }
}

GHASH.prototype.final = function (abl, bl) {
  if (this.cache.length) {
    this.ghash(Buffer.concat([this.cache, ZEROES], 16))
  }

  this.ghash(fromArray([0, abl, 0, bl]))
  return this.state
}

module.exports = GHASH


/***/ }),

/***/ "./node_modules/.1.2.0@browserify-aes/incr32.js":
/*!******************************************************!*\
  !*** ./node_modules/.1.2.0@browserify-aes/incr32.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function incr32 (iv) {
  var len = iv.length
  var item
  while (len--) {
    item = iv.readUInt8(len)
    if (item === 255) {
      iv.writeUInt8(0, len)
    } else {
      item++
      iv.writeUInt8(item, len)
      break
    }
  }
}
module.exports = incr32


/***/ }),

/***/ "./node_modules/.1.2.0@browserify-aes/modes/cbc.js":
/*!*********************************************************!*\
  !*** ./node_modules/.1.2.0@browserify-aes/modes/cbc.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var xor = __webpack_require__(/*! buffer-xor */ "./node_modules/.1.0.3@buffer-xor/index.js")

exports.encrypt = function (self, block) {
  var data = xor(block, self._prev)

  self._prev = self._cipher.encryptBlock(data)
  return self._prev
}

exports.decrypt = function (self, block) {
  var pad = self._prev

  self._prev = block
  var out = self._cipher.decryptBlock(block)

  return xor(out, pad)
}


/***/ }),

/***/ "./node_modules/.1.2.0@browserify-aes/modes/cfb.js":
/*!*********************************************************!*\
  !*** ./node_modules/.1.2.0@browserify-aes/modes/cfb.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var Buffer = __webpack_require__(/*! safe-buffer */ "./node_modules/.5.1.2@safe-buffer/index.js").Buffer
var xor = __webpack_require__(/*! buffer-xor */ "./node_modules/.1.0.3@buffer-xor/index.js")

function encryptStart (self, data, decrypt) {
  var len = data.length
  var out = xor(data, self._cache)
  self._cache = self._cache.slice(len)
  self._prev = Buffer.concat([self._prev, decrypt ? data : out])
  return out
}

exports.encrypt = function (self, data, decrypt) {
  var out = Buffer.allocUnsafe(0)
  var len

  while (data.length) {
    if (self._cache.length === 0) {
      self._cache = self._cipher.encryptBlock(self._prev)
      self._prev = Buffer.allocUnsafe(0)
    }

    if (self._cache.length <= data.length) {
      len = self._cache.length
      out = Buffer.concat([out, encryptStart(self, data.slice(0, len), decrypt)])
      data = data.slice(len)
    } else {
      out = Buffer.concat([out, encryptStart(self, data, decrypt)])
      break
    }
  }

  return out
}


/***/ }),

/***/ "./node_modules/.1.2.0@browserify-aes/modes/cfb1.js":
/*!**********************************************************!*\
  !*** ./node_modules/.1.2.0@browserify-aes/modes/cfb1.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var Buffer = __webpack_require__(/*! safe-buffer */ "./node_modules/.5.1.2@safe-buffer/index.js").Buffer

function encryptByte (self, byteParam, decrypt) {
  var pad
  var i = -1
  var len = 8
  var out = 0
  var bit, value
  while (++i < len) {
    pad = self._cipher.encryptBlock(self._prev)
    bit = (byteParam & (1 << (7 - i))) ? 0x80 : 0
    value = pad[0] ^ bit
    out += ((value & 0x80) >> (i % 8))
    self._prev = shiftIn(self._prev, decrypt ? bit : value)
  }
  return out
}

function shiftIn (buffer, value) {
  var len = buffer.length
  var i = -1
  var out = Buffer.allocUnsafe(buffer.length)
  buffer = Buffer.concat([buffer, Buffer.from([value])])

  while (++i < len) {
    out[i] = buffer[i] << 1 | buffer[i + 1] >> (7)
  }

  return out
}

exports.encrypt = function (self, chunk, decrypt) {
  var len = chunk.length
  var out = Buffer.allocUnsafe(len)
  var i = -1

  while (++i < len) {
    out[i] = encryptByte(self, chunk[i], decrypt)
  }

  return out
}


/***/ }),

/***/ "./node_modules/.1.2.0@browserify-aes/modes/cfb8.js":
/*!**********************************************************!*\
  !*** ./node_modules/.1.2.0@browserify-aes/modes/cfb8.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var Buffer = __webpack_require__(/*! safe-buffer */ "./node_modules/.5.1.2@safe-buffer/index.js").Buffer

function encryptByte (self, byteParam, decrypt) {
  var pad = self._cipher.encryptBlock(self._prev)
  var out = pad[0] ^ byteParam

  self._prev = Buffer.concat([
    self._prev.slice(1),
    Buffer.from([decrypt ? byteParam : out])
  ])

  return out
}

exports.encrypt = function (self, chunk, decrypt) {
  var len = chunk.length
  var out = Buffer.allocUnsafe(len)
  var i = -1

  while (++i < len) {
    out[i] = encryptByte(self, chunk[i], decrypt)
  }

  return out
}


/***/ }),

/***/ "./node_modules/.1.2.0@browserify-aes/modes/ctr.js":
/*!*********************************************************!*\
  !*** ./node_modules/.1.2.0@browserify-aes/modes/ctr.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var xor = __webpack_require__(/*! buffer-xor */ "./node_modules/.1.0.3@buffer-xor/index.js")
var Buffer = __webpack_require__(/*! safe-buffer */ "./node_modules/.5.1.2@safe-buffer/index.js").Buffer
var incr32 = __webpack_require__(/*! ../incr32 */ "./node_modules/.1.2.0@browserify-aes/incr32.js")

function getBlock (self) {
  var out = self._cipher.encryptBlockRaw(self._prev)
  incr32(self._prev)
  return out
}

var blockSize = 16
exports.encrypt = function (self, chunk) {
  var chunkNum = Math.ceil(chunk.length / blockSize)
  var start = self._cache.length
  self._cache = Buffer.concat([
    self._cache,
    Buffer.allocUnsafe(chunkNum * blockSize)
  ])
  for (var i = 0; i < chunkNum; i++) {
    var out = getBlock(self)
    var offset = start + i * blockSize
    self._cache.writeUInt32BE(out[0], offset + 0)
    self._cache.writeUInt32BE(out[1], offset + 4)
    self._cache.writeUInt32BE(out[2], offset + 8)
    self._cache.writeUInt32BE(out[3], offset + 12)
  }
  var pad = self._cache.slice(0, chunk.length)
  self._cache = self._cache.slice(chunk.length)
  return xor(chunk, pad)
}


/***/ }),

/***/ "./node_modules/.1.2.0@browserify-aes/modes/ecb.js":
/*!*********************************************************!*\
  !*** ./node_modules/.1.2.0@browserify-aes/modes/ecb.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

exports.encrypt = function (self, block) {
  return self._cipher.encryptBlock(block)
}

exports.decrypt = function (self, block) {
  return self._cipher.decryptBlock(block)
}


/***/ }),

/***/ "./node_modules/.1.2.0@browserify-aes/modes/index.js":
/*!***********************************************************!*\
  !*** ./node_modules/.1.2.0@browserify-aes/modes/index.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var modeModules = {
  ECB: __webpack_require__(/*! ./ecb */ "./node_modules/.1.2.0@browserify-aes/modes/ecb.js"),
  CBC: __webpack_require__(/*! ./cbc */ "./node_modules/.1.2.0@browserify-aes/modes/cbc.js"),
  CFB: __webpack_require__(/*! ./cfb */ "./node_modules/.1.2.0@browserify-aes/modes/cfb.js"),
  CFB8: __webpack_require__(/*! ./cfb8 */ "./node_modules/.1.2.0@browserify-aes/modes/cfb8.js"),
  CFB1: __webpack_require__(/*! ./cfb1 */ "./node_modules/.1.2.0@browserify-aes/modes/cfb1.js"),
  OFB: __webpack_require__(/*! ./ofb */ "./node_modules/.1.2.0@browserify-aes/modes/ofb.js"),
  CTR: __webpack_require__(/*! ./ctr */ "./node_modules/.1.2.0@browserify-aes/modes/ctr.js"),
  GCM: __webpack_require__(/*! ./ctr */ "./node_modules/.1.2.0@browserify-aes/modes/ctr.js")
}

var modes = __webpack_require__(/*! ./list.json */ "./node_modules/.1.2.0@browserify-aes/modes/list.json")

for (var key in modes) {
  modes[key].module = modeModules[modes[key].mode]
}

module.exports = modes


/***/ }),

/***/ "./node_modules/.1.2.0@browserify-aes/modes/list.json":
/*!************************************************************!*\
  !*** ./node_modules/.1.2.0@browserify-aes/modes/list.json ***!
  \************************************************************/
/*! exports provided: aes-128-ecb, aes-192-ecb, aes-256-ecb, aes-128-cbc, aes-192-cbc, aes-256-cbc, aes128, aes192, aes256, aes-128-cfb, aes-192-cfb, aes-256-cfb, aes-128-cfb8, aes-192-cfb8, aes-256-cfb8, aes-128-cfb1, aes-192-cfb1, aes-256-cfb1, aes-128-ofb, aes-192-ofb, aes-256-ofb, aes-128-ctr, aes-192-ctr, aes-256-ctr, aes-128-gcm, aes-192-gcm, aes-256-gcm, default */
/***/ (function(module) {

module.exports = {"aes-128-ecb":{"cipher":"AES","key":128,"iv":0,"mode":"ECB","type":"block"},"aes-192-ecb":{"cipher":"AES","key":192,"iv":0,"mode":"ECB","type":"block"},"aes-256-ecb":{"cipher":"AES","key":256,"iv":0,"mode":"ECB","type":"block"},"aes-128-cbc":{"cipher":"AES","key":128,"iv":16,"mode":"CBC","type":"block"},"aes-192-cbc":{"cipher":"AES","key":192,"iv":16,"mode":"CBC","type":"block"},"aes-256-cbc":{"cipher":"AES","key":256,"iv":16,"mode":"CBC","type":"block"},"aes128":{"cipher":"AES","key":128,"iv":16,"mode":"CBC","type":"block"},"aes192":{"cipher":"AES","key":192,"iv":16,"mode":"CBC","type":"block"},"aes256":{"cipher":"AES","key":256,"iv":16,"mode":"CBC","type":"block"},"aes-128-cfb":{"cipher":"AES","key":128,"iv":16,"mode":"CFB","type":"stream"},"aes-192-cfb":{"cipher":"AES","key":192,"iv":16,"mode":"CFB","type":"stream"},"aes-256-cfb":{"cipher":"AES","key":256,"iv":16,"mode":"CFB","type":"stream"},"aes-128-cfb8":{"cipher":"AES","key":128,"iv":16,"mode":"CFB8","type":"stream"},"aes-192-cfb8":{"cipher":"AES","key":192,"iv":16,"mode":"CFB8","type":"stream"},"aes-256-cfb8":{"cipher":"AES","key":256,"iv":16,"mode":"CFB8","type":"stream"},"aes-128-cfb1":{"cipher":"AES","key":128,"iv":16,"mode":"CFB1","type":"stream"},"aes-192-cfb1":{"cipher":"AES","key":192,"iv":16,"mode":"CFB1","type":"stream"},"aes-256-cfb1":{"cipher":"AES","key":256,"iv":16,"mode":"CFB1","type":"stream"},"aes-128-ofb":{"cipher":"AES","key":128,"iv":16,"mode":"OFB","type":"stream"},"aes-192-ofb":{"cipher":"AES","key":192,"iv":16,"mode":"OFB","type":"stream"},"aes-256-ofb":{"cipher":"AES","key":256,"iv":16,"mode":"OFB","type":"stream"},"aes-128-ctr":{"cipher":"AES","key":128,"iv":16,"mode":"CTR","type":"stream"},"aes-192-ctr":{"cipher":"AES","key":192,"iv":16,"mode":"CTR","type":"stream"},"aes-256-ctr":{"cipher":"AES","key":256,"iv":16,"mode":"CTR","type":"stream"},"aes-128-gcm":{"cipher":"AES","key":128,"iv":12,"mode":"GCM","type":"auth"},"aes-192-gcm":{"cipher":"AES","key":192,"iv":12,"mode":"GCM","type":"auth"},"aes-256-gcm":{"cipher":"AES","key":256,"iv":12,"mode":"GCM","type":"auth"}};

/***/ }),

/***/ "./node_modules/.1.2.0@browserify-aes/modes/ofb.js":
/*!*********************************************************!*\
  !*** ./node_modules/.1.2.0@browserify-aes/modes/ofb.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var xor = __webpack_require__(/*! buffer-xor */ "./node_modules/.1.0.3@buffer-xor/index.js")

function getBlock (self) {
  self._prev = self._cipher.encryptBlock(self._prev)
  return self._prev
}

exports.encrypt = function (self, chunk) {
  while (self._cache.length < chunk.length) {
    self._cache = Buffer.concat([self._cache, getBlock(self)])
  }

  var pad = self._cache.slice(0, chunk.length)
  self._cache = self._cache.slice(chunk.length)
  return xor(chunk, pad)
}


/***/ }),

/***/ "./node_modules/.1.2.0@browserify-aes/streamCipher.js":
/*!************************************************************!*\
  !*** ./node_modules/.1.2.0@browserify-aes/streamCipher.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var aes = __webpack_require__(/*! ./aes */ "./node_modules/.1.2.0@browserify-aes/aes.js")
var Buffer = __webpack_require__(/*! safe-buffer */ "./node_modules/.5.1.2@safe-buffer/index.js").Buffer
var Transform = __webpack_require__(/*! cipher-base */ "./node_modules/.1.0.4@cipher-base/index.js")
var inherits = __webpack_require__(/*! inherits */ "./node_modules/.2.0.3@inherits/inherits_browser.js")

function StreamCipher (mode, key, iv, decrypt) {
  Transform.call(this)

  this._cipher = new aes.AES(key)
  this._prev = Buffer.from(iv)
  this._cache = Buffer.allocUnsafe(0)
  this._secCache = Buffer.allocUnsafe(0)
  this._decrypt = decrypt
  this._mode = mode
}

inherits(StreamCipher, Transform)

StreamCipher.prototype._update = function (chunk) {
  return this._mode.encrypt(this, chunk, this._decrypt)
}

StreamCipher.prototype._final = function () {
  this._cipher.scrub()
}

module.exports = StreamCipher


/***/ }),

/***/ "./node_modules/.1.2.0@create-hash/browser.js":
/*!****************************************************!*\
  !*** ./node_modules/.1.2.0@create-hash/browser.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var inherits = __webpack_require__(/*! inherits */ "./node_modules/.2.0.3@inherits/inherits_browser.js")
var MD5 = __webpack_require__(/*! md5.js */ "./node_modules/.1.3.5@md5.js/index.js")
var RIPEMD160 = __webpack_require__(/*! ripemd160 */ "./node_modules/.2.0.2@ripemd160/index.js")
var sha = __webpack_require__(/*! sha.js */ "./node_modules/.2.4.11@sha.js/index.js")
var Base = __webpack_require__(/*! cipher-base */ "./node_modules/.1.0.4@cipher-base/index.js")

function Hash (hash) {
  Base.call(this, 'digest')

  this._hash = hash
}

inherits(Hash, Base)

Hash.prototype._update = function (data) {
  this._hash.update(data)
}

Hash.prototype._final = function () {
  return this._hash.digest()
}

module.exports = function createHash (alg) {
  alg = alg.toLowerCase()
  if (alg === 'md5') return new MD5()
  if (alg === 'rmd160' || alg === 'ripemd160') return new RIPEMD160()

  return new Hash(sha(alg))
}


/***/ }),

/***/ "./node_modules/.1.2.0@create-hash/md5.js":
/*!************************************************!*\
  !*** ./node_modules/.1.2.0@create-hash/md5.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var MD5 = __webpack_require__(/*! md5.js */ "./node_modules/.1.3.5@md5.js/index.js")

module.exports = function (buffer) {
  return new MD5().update(buffer).digest()
}


/***/ }),

/***/ "./node_modules/.1.2.0@string_decoder/lib/string_decoder.js":
/*!******************************************************************!*\
  !*** ./node_modules/.1.2.0@string_decoder/lib/string_decoder.js ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.



/*<replacement>*/

var Buffer = __webpack_require__(/*! safe-buffer */ "./node_modules/.5.1.2@safe-buffer/index.js").Buffer;
/*</replacement>*/

var isEncoding = Buffer.isEncoding || function (encoding) {
  encoding = '' + encoding;
  switch (encoding && encoding.toLowerCase()) {
    case 'hex':case 'utf8':case 'utf-8':case 'ascii':case 'binary':case 'base64':case 'ucs2':case 'ucs-2':case 'utf16le':case 'utf-16le':case 'raw':
      return true;
    default:
      return false;
  }
};

function _normalizeEncoding(enc) {
  if (!enc) return 'utf8';
  var retried;
  while (true) {
    switch (enc) {
      case 'utf8':
      case 'utf-8':
        return 'utf8';
      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return 'utf16le';
      case 'latin1':
      case 'binary':
        return 'latin1';
      case 'base64':
      case 'ascii':
      case 'hex':
        return enc;
      default:
        if (retried) return; // undefined
        enc = ('' + enc).toLowerCase();
        retried = true;
    }
  }
};

// Do not cache `Buffer.isEncoding` when checking encoding names as some
// modules monkey-patch it to support additional encodings
function normalizeEncoding(enc) {
  var nenc = _normalizeEncoding(enc);
  if (typeof nenc !== 'string' && (Buffer.isEncoding === isEncoding || !isEncoding(enc))) throw new Error('Unknown encoding: ' + enc);
  return nenc || enc;
}

// StringDecoder provides an interface for efficiently splitting a series of
// buffers into a series of JS strings without breaking apart multi-byte
// characters.
exports.StringDecoder = StringDecoder;
function StringDecoder(encoding) {
  this.encoding = normalizeEncoding(encoding);
  var nb;
  switch (this.encoding) {
    case 'utf16le':
      this.text = utf16Text;
      this.end = utf16End;
      nb = 4;
      break;
    case 'utf8':
      this.fillLast = utf8FillLast;
      nb = 4;
      break;
    case 'base64':
      this.text = base64Text;
      this.end = base64End;
      nb = 3;
      break;
    default:
      this.write = simpleWrite;
      this.end = simpleEnd;
      return;
  }
  this.lastNeed = 0;
  this.lastTotal = 0;
  this.lastChar = Buffer.allocUnsafe(nb);
}

StringDecoder.prototype.write = function (buf) {
  if (buf.length === 0) return '';
  var r;
  var i;
  if (this.lastNeed) {
    r = this.fillLast(buf);
    if (r === undefined) return '';
    i = this.lastNeed;
    this.lastNeed = 0;
  } else {
    i = 0;
  }
  if (i < buf.length) return r ? r + this.text(buf, i) : this.text(buf, i);
  return r || '';
};

StringDecoder.prototype.end = utf8End;

// Returns only complete characters in a Buffer
StringDecoder.prototype.text = utf8Text;

// Attempts to complete a partial non-UTF-8 character using bytes from a Buffer
StringDecoder.prototype.fillLast = function (buf) {
  if (this.lastNeed <= buf.length) {
    buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, this.lastNeed);
    return this.lastChar.toString(this.encoding, 0, this.lastTotal);
  }
  buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, buf.length);
  this.lastNeed -= buf.length;
};

// Checks the type of a UTF-8 byte, whether it's ASCII, a leading byte, or a
// continuation byte. If an invalid byte is detected, -2 is returned.
function utf8CheckByte(byte) {
  if (byte <= 0x7F) return 0;else if (byte >> 5 === 0x06) return 2;else if (byte >> 4 === 0x0E) return 3;else if (byte >> 3 === 0x1E) return 4;
  return byte >> 6 === 0x02 ? -1 : -2;
}

// Checks at most 3 bytes at the end of a Buffer in order to detect an
// incomplete multi-byte UTF-8 character. The total number of bytes (2, 3, or 4)
// needed to complete the UTF-8 character (if applicable) are returned.
function utf8CheckIncomplete(self, buf, i) {
  var j = buf.length - 1;
  if (j < i) return 0;
  var nb = utf8CheckByte(buf[j]);
  if (nb >= 0) {
    if (nb > 0) self.lastNeed = nb - 1;
    return nb;
  }
  if (--j < i || nb === -2) return 0;
  nb = utf8CheckByte(buf[j]);
  if (nb >= 0) {
    if (nb > 0) self.lastNeed = nb - 2;
    return nb;
  }
  if (--j < i || nb === -2) return 0;
  nb = utf8CheckByte(buf[j]);
  if (nb >= 0) {
    if (nb > 0) {
      if (nb === 2) nb = 0;else self.lastNeed = nb - 3;
    }
    return nb;
  }
  return 0;
}

// Validates as many continuation bytes for a multi-byte UTF-8 character as
// needed or are available. If we see a non-continuation byte where we expect
// one, we "replace" the validated continuation bytes we've seen so far with
// a single UTF-8 replacement character ('\ufffd'), to match v8's UTF-8 decoding
// behavior. The continuation byte check is included three times in the case
// where all of the continuation bytes for a character exist in the same buffer.
// It is also done this way as a slight performance increase instead of using a
// loop.
function utf8CheckExtraBytes(self, buf, p) {
  if ((buf[0] & 0xC0) !== 0x80) {
    self.lastNeed = 0;
    return '\ufffd';
  }
  if (self.lastNeed > 1 && buf.length > 1) {
    if ((buf[1] & 0xC0) !== 0x80) {
      self.lastNeed = 1;
      return '\ufffd';
    }
    if (self.lastNeed > 2 && buf.length > 2) {
      if ((buf[2] & 0xC0) !== 0x80) {
        self.lastNeed = 2;
        return '\ufffd';
      }
    }
  }
}

// Attempts to complete a multi-byte UTF-8 character using bytes from a Buffer.
function utf8FillLast(buf) {
  var p = this.lastTotal - this.lastNeed;
  var r = utf8CheckExtraBytes(this, buf, p);
  if (r !== undefined) return r;
  if (this.lastNeed <= buf.length) {
    buf.copy(this.lastChar, p, 0, this.lastNeed);
    return this.lastChar.toString(this.encoding, 0, this.lastTotal);
  }
  buf.copy(this.lastChar, p, 0, buf.length);
  this.lastNeed -= buf.length;
}

// Returns all complete UTF-8 characters in a Buffer. If the Buffer ended on a
// partial character, the character's bytes are buffered until the required
// number of bytes are available.
function utf8Text(buf, i) {
  var total = utf8CheckIncomplete(this, buf, i);
  if (!this.lastNeed) return buf.toString('utf8', i);
  this.lastTotal = total;
  var end = buf.length - (total - this.lastNeed);
  buf.copy(this.lastChar, 0, end);
  return buf.toString('utf8', i, end);
}

// For UTF-8, a replacement character is added when ending on a partial
// character.
function utf8End(buf) {
  var r = buf && buf.length ? this.write(buf) : '';
  if (this.lastNeed) return r + '\ufffd';
  return r;
}

// UTF-16LE typically needs two bytes per character, but even if we have an even
// number of bytes available, we need to check if we end on a leading/high
// surrogate. In that case, we need to wait for the next two bytes in order to
// decode the last character properly.
function utf16Text(buf, i) {
  if ((buf.length - i) % 2 === 0) {
    var r = buf.toString('utf16le', i);
    if (r) {
      var c = r.charCodeAt(r.length - 1);
      if (c >= 0xD800 && c <= 0xDBFF) {
        this.lastNeed = 2;
        this.lastTotal = 4;
        this.lastChar[0] = buf[buf.length - 2];
        this.lastChar[1] = buf[buf.length - 1];
        return r.slice(0, -1);
      }
    }
    return r;
  }
  this.lastNeed = 1;
  this.lastTotal = 2;
  this.lastChar[0] = buf[buf.length - 1];
  return buf.toString('utf16le', i, buf.length - 1);
}

// For UTF-16LE we do not explicitly append special replacement characters if we
// end on a partial character, we simply let v8 handle that.
function utf16End(buf) {
  var r = buf && buf.length ? this.write(buf) : '';
  if (this.lastNeed) {
    var end = this.lastTotal - this.lastNeed;
    return r + this.lastChar.toString('utf16le', 0, end);
  }
  return r;
}

function base64Text(buf, i) {
  var n = (buf.length - i) % 3;
  if (n === 0) return buf.toString('base64', i);
  this.lastNeed = 3 - n;
  this.lastTotal = 3;
  if (n === 1) {
    this.lastChar[0] = buf[buf.length - 1];
  } else {
    this.lastChar[0] = buf[buf.length - 2];
    this.lastChar[1] = buf[buf.length - 1];
  }
  return buf.toString('base64', i, buf.length - n);
}

function base64End(buf) {
  var r = buf && buf.length ? this.write(buf) : '';
  if (this.lastNeed) return r + this.lastChar.toString('base64', 0, 3 - this.lastNeed);
  return r;
}

// Pass bytes on through for single-byte encodings (e.g. ascii, latin1, hex)
function simpleWrite(buf) {
  return buf.toString(this.encoding);
}

function simpleEnd(buf) {
  return buf && buf.length ? this.write(buf) : '';
}

/***/ }),

/***/ "./node_modules/.1.3.0@base64-js/index.js":
/*!************************************************!*\
  !*** ./node_modules/.1.3.0@base64-js/index.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.byteLength = byteLength
exports.toByteArray = toByteArray
exports.fromByteArray = fromByteArray

var lookup = []
var revLookup = []
var Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array

var code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
for (var i = 0, len = code.length; i < len; ++i) {
  lookup[i] = code[i]
  revLookup[code.charCodeAt(i)] = i
}

// Support decoding URL-safe base64 strings, as Node.js does.
// See: https://en.wikipedia.org/wiki/Base64#URL_applications
revLookup['-'.charCodeAt(0)] = 62
revLookup['_'.charCodeAt(0)] = 63

function getLens (b64) {
  var len = b64.length

  if (len % 4 > 0) {
    throw new Error('Invalid string. Length must be a multiple of 4')
  }

  // Trim off extra bytes after placeholder bytes are found
  // See: https://github.com/beatgammit/base64-js/issues/42
  var validLen = b64.indexOf('=')
  if (validLen === -1) validLen = len

  var placeHoldersLen = validLen === len
    ? 0
    : 4 - (validLen % 4)

  return [validLen, placeHoldersLen]
}

// base64 is 4/3 + up to two characters of the original data
function byteLength (b64) {
  var lens = getLens(b64)
  var validLen = lens[0]
  var placeHoldersLen = lens[1]
  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen
}

function _byteLength (b64, validLen, placeHoldersLen) {
  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen
}

function toByteArray (b64) {
  var tmp
  var lens = getLens(b64)
  var validLen = lens[0]
  var placeHoldersLen = lens[1]

  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))

  var curByte = 0

  // if there are placeholders, only get up to the last complete 4 chars
  var len = placeHoldersLen > 0
    ? validLen - 4
    : validLen

  for (var i = 0; i < len; i += 4) {
    tmp =
      (revLookup[b64.charCodeAt(i)] << 18) |
      (revLookup[b64.charCodeAt(i + 1)] << 12) |
      (revLookup[b64.charCodeAt(i + 2)] << 6) |
      revLookup[b64.charCodeAt(i + 3)]
    arr[curByte++] = (tmp >> 16) & 0xFF
    arr[curByte++] = (tmp >> 8) & 0xFF
    arr[curByte++] = tmp & 0xFF
  }

  if (placeHoldersLen === 2) {
    tmp =
      (revLookup[b64.charCodeAt(i)] << 2) |
      (revLookup[b64.charCodeAt(i + 1)] >> 4)
    arr[curByte++] = tmp & 0xFF
  }

  if (placeHoldersLen === 1) {
    tmp =
      (revLookup[b64.charCodeAt(i)] << 10) |
      (revLookup[b64.charCodeAt(i + 1)] << 4) |
      (revLookup[b64.charCodeAt(i + 2)] >> 2)
    arr[curByte++] = (tmp >> 8) & 0xFF
    arr[curByte++] = tmp & 0xFF
  }

  return arr
}

function tripletToBase64 (num) {
  return lookup[num >> 18 & 0x3F] +
    lookup[num >> 12 & 0x3F] +
    lookup[num >> 6 & 0x3F] +
    lookup[num & 0x3F]
}

function encodeChunk (uint8, start, end) {
  var tmp
  var output = []
  for (var i = start; i < end; i += 3) {
    tmp =
      ((uint8[i] << 16) & 0xFF0000) +
      ((uint8[i + 1] << 8) & 0xFF00) +
      (uint8[i + 2] & 0xFF)
    output.push(tripletToBase64(tmp))
  }
  return output.join('')
}

function fromByteArray (uint8) {
  var tmp
  var len = uint8.length
  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes
  var parts = []
  var maxChunkLength = 16383 // must be multiple of 3

  // go through the array every three bytes, we'll deal with trailing stuff later
  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {
    parts.push(encodeChunk(
      uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)
    ))
  }

  // pad the end with zeros, but make sure to not forget the extra bytes
  if (extraBytes === 1) {
    tmp = uint8[len - 1]
    parts.push(
      lookup[tmp >> 2] +
      lookup[(tmp << 4) & 0x3F] +
      '=='
    )
  } else if (extraBytes === 2) {
    tmp = (uint8[len - 2] << 8) + uint8[len - 1]
    parts.push(
      lookup[tmp >> 10] +
      lookup[(tmp >> 4) & 0x3F] +
      lookup[(tmp << 2) & 0x3F] +
      '='
    )
  }

  return parts.join('')
}


/***/ }),

/***/ "./node_modules/.1.3.5@md5.js/index.js":
/*!*********************************************!*\
  !*** ./node_modules/.1.3.5@md5.js/index.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var inherits = __webpack_require__(/*! inherits */ "./node_modules/.2.0.3@inherits/inherits_browser.js")
var HashBase = __webpack_require__(/*! hash-base */ "./node_modules/.3.0.4@hash-base/index.js")
var Buffer = __webpack_require__(/*! safe-buffer */ "./node_modules/.5.1.2@safe-buffer/index.js").Buffer

var ARRAY16 = new Array(16)

function MD5 () {
  HashBase.call(this, 64)

  // state
  this._a = 0x67452301
  this._b = 0xefcdab89
  this._c = 0x98badcfe
  this._d = 0x10325476
}

inherits(MD5, HashBase)

MD5.prototype._update = function () {
  var M = ARRAY16
  for (var i = 0; i < 16; ++i) M[i] = this._block.readInt32LE(i * 4)

  var a = this._a
  var b = this._b
  var c = this._c
  var d = this._d

  a = fnF(a, b, c, d, M[0], 0xd76aa478, 7)
  d = fnF(d, a, b, c, M[1], 0xe8c7b756, 12)
  c = fnF(c, d, a, b, M[2], 0x242070db, 17)
  b = fnF(b, c, d, a, M[3], 0xc1bdceee, 22)
  a = fnF(a, b, c, d, M[4], 0xf57c0faf, 7)
  d = fnF(d, a, b, c, M[5], 0x4787c62a, 12)
  c = fnF(c, d, a, b, M[6], 0xa8304613, 17)
  b = fnF(b, c, d, a, M[7], 0xfd469501, 22)
  a = fnF(a, b, c, d, M[8], 0x698098d8, 7)
  d = fnF(d, a, b, c, M[9], 0x8b44f7af, 12)
  c = fnF(c, d, a, b, M[10], 0xffff5bb1, 17)
  b = fnF(b, c, d, a, M[11], 0x895cd7be, 22)
  a = fnF(a, b, c, d, M[12], 0x6b901122, 7)
  d = fnF(d, a, b, c, M[13], 0xfd987193, 12)
  c = fnF(c, d, a, b, M[14], 0xa679438e, 17)
  b = fnF(b, c, d, a, M[15], 0x49b40821, 22)

  a = fnG(a, b, c, d, M[1], 0xf61e2562, 5)
  d = fnG(d, a, b, c, M[6], 0xc040b340, 9)
  c = fnG(c, d, a, b, M[11], 0x265e5a51, 14)
  b = fnG(b, c, d, a, M[0], 0xe9b6c7aa, 20)
  a = fnG(a, b, c, d, M[5], 0xd62f105d, 5)
  d = fnG(d, a, b, c, M[10], 0x02441453, 9)
  c = fnG(c, d, a, b, M[15], 0xd8a1e681, 14)
  b = fnG(b, c, d, a, M[4], 0xe7d3fbc8, 20)
  a = fnG(a, b, c, d, M[9], 0x21e1cde6, 5)
  d = fnG(d, a, b, c, M[14], 0xc33707d6, 9)
  c = fnG(c, d, a, b, M[3], 0xf4d50d87, 14)
  b = fnG(b, c, d, a, M[8], 0x455a14ed, 20)
  a = fnG(a, b, c, d, M[13], 0xa9e3e905, 5)
  d = fnG(d, a, b, c, M[2], 0xfcefa3f8, 9)
  c = fnG(c, d, a, b, M[7], 0x676f02d9, 14)
  b = fnG(b, c, d, a, M[12], 0x8d2a4c8a, 20)

  a = fnH(a, b, c, d, M[5], 0xfffa3942, 4)
  d = fnH(d, a, b, c, M[8], 0x8771f681, 11)
  c = fnH(c, d, a, b, M[11], 0x6d9d6122, 16)
  b = fnH(b, c, d, a, M[14], 0xfde5380c, 23)
  a = fnH(a, b, c, d, M[1], 0xa4beea44, 4)
  d = fnH(d, a, b, c, M[4], 0x4bdecfa9, 11)
  c = fnH(c, d, a, b, M[7], 0xf6bb4b60, 16)
  b = fnH(b, c, d, a, M[10], 0xbebfbc70, 23)
  a = fnH(a, b, c, d, M[13], 0x289b7ec6, 4)
  d = fnH(d, a, b, c, M[0], 0xeaa127fa, 11)
  c = fnH(c, d, a, b, M[3], 0xd4ef3085, 16)
  b = fnH(b, c, d, a, M[6], 0x04881d05, 23)
  a = fnH(a, b, c, d, M[9], 0xd9d4d039, 4)
  d = fnH(d, a, b, c, M[12], 0xe6db99e5, 11)
  c = fnH(c, d, a, b, M[15], 0x1fa27cf8, 16)
  b = fnH(b, c, d, a, M[2], 0xc4ac5665, 23)

  a = fnI(a, b, c, d, M[0], 0xf4292244, 6)
  d = fnI(d, a, b, c, M[7], 0x432aff97, 10)
  c = fnI(c, d, a, b, M[14], 0xab9423a7, 15)
  b = fnI(b, c, d, a, M[5], 0xfc93a039, 21)
  a = fnI(a, b, c, d, M[12], 0x655b59c3, 6)
  d = fnI(d, a, b, c, M[3], 0x8f0ccc92, 10)
  c = fnI(c, d, a, b, M[10], 0xffeff47d, 15)
  b = fnI(b, c, d, a, M[1], 0x85845dd1, 21)
  a = fnI(a, b, c, d, M[8], 0x6fa87e4f, 6)
  d = fnI(d, a, b, c, M[15], 0xfe2ce6e0, 10)
  c = fnI(c, d, a, b, M[6], 0xa3014314, 15)
  b = fnI(b, c, d, a, M[13], 0x4e0811a1, 21)
  a = fnI(a, b, c, d, M[4], 0xf7537e82, 6)
  d = fnI(d, a, b, c, M[11], 0xbd3af235, 10)
  c = fnI(c, d, a, b, M[2], 0x2ad7d2bb, 15)
  b = fnI(b, c, d, a, M[9], 0xeb86d391, 21)

  this._a = (this._a + a) | 0
  this._b = (this._b + b) | 0
  this._c = (this._c + c) | 0
  this._d = (this._d + d) | 0
}

MD5.prototype._digest = function () {
  // create padding and handle blocks
  this._block[this._blockOffset++] = 0x80
  if (this._blockOffset > 56) {
    this._block.fill(0, this._blockOffset, 64)
    this._update()
    this._blockOffset = 0
  }

  this._block.fill(0, this._blockOffset, 56)
  this._block.writeUInt32LE(this._length[0], 56)
  this._block.writeUInt32LE(this._length[1], 60)
  this._update()

  // produce result
  var buffer = Buffer.allocUnsafe(16)
  buffer.writeInt32LE(this._a, 0)
  buffer.writeInt32LE(this._b, 4)
  buffer.writeInt32LE(this._c, 8)
  buffer.writeInt32LE(this._d, 12)
  return buffer
}

function rotl (x, n) {
  return (x << n) | (x >>> (32 - n))
}

function fnF (a, b, c, d, m, k, s) {
  return (rotl((a + ((b & c) | ((~b) & d)) + m + k) | 0, s) + b) | 0
}

function fnG (a, b, c, d, m, k, s) {
  return (rotl((a + ((b & d) | (c & (~d))) + m + k) | 0, s) + b) | 0
}

function fnH (a, b, c, d, m, k, s) {
  return (rotl((a + (b ^ c ^ d) + m + k) | 0, s) + b) | 0
}

function fnI (a, b, c, d, m, k, s) {
  return (rotl((a + ((c ^ (b | (~d)))) + m + k) | 0, s) + b) | 0
}

module.exports = MD5


/***/ }),

/***/ "./node_modules/.2.0.0@process-nextick-args/index.js":
/*!***********************************************************!*\
  !*** ./node_modules/.2.0.0@process-nextick-args/index.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


if (!process.version ||
    process.version.indexOf('v0.') === 0 ||
    process.version.indexOf('v1.') === 0 && process.version.indexOf('v1.8.') !== 0) {
  module.exports = { nextTick: nextTick };
} else {
  module.exports = process
}

function nextTick(fn, arg1, arg2, arg3) {
  if (typeof fn !== 'function') {
    throw new TypeError('"callback" argument must be a function');
  }
  var len = arguments.length;
  var args, i;
  switch (len) {
  case 0:
  case 1:
    return process.nextTick(fn);
  case 2:
    return process.nextTick(function afterTickOne() {
      fn.call(null, arg1);
    });
  case 3:
    return process.nextTick(function afterTickTwo() {
      fn.call(null, arg1, arg2);
    });
  case 4:
    return process.nextTick(function afterTickThree() {
      fn.call(null, arg1, arg2, arg3);
    });
  default:
    args = new Array(len - 1);
    i = 0;
    while (i < args.length) {
      args[i++] = arguments[i];
    }
    return process.nextTick(function afterTick() {
      fn.apply(null, args);
    });
  }
}



/***/ }),

/***/ "./node_modules/.2.0.2@ripemd160/index.js":
/*!************************************************!*\
  !*** ./node_modules/.2.0.2@ripemd160/index.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Buffer = __webpack_require__(/*! buffer */ "./node_modules/.4.9.1@buffer/index.js").Buffer
var inherits = __webpack_require__(/*! inherits */ "./node_modules/.2.0.3@inherits/inherits_browser.js")
var HashBase = __webpack_require__(/*! hash-base */ "./node_modules/.3.0.4@hash-base/index.js")

var ARRAY16 = new Array(16)

var zl = [
  0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,
  7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8,
  3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12,
  1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2,
  4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13
]

var zr = [
  5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12,
  6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2,
  15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13,
  8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14,
  12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11
]

var sl = [
  11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8,
  7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12,
  11, 13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5,
  11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12,
  9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6
]

var sr = [
  8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6,
  9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11,
  9, 7, 15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5,
  15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8,
  8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11
]

var hl = [0x00000000, 0x5a827999, 0x6ed9eba1, 0x8f1bbcdc, 0xa953fd4e]
var hr = [0x50a28be6, 0x5c4dd124, 0x6d703ef3, 0x7a6d76e9, 0x00000000]

function RIPEMD160 () {
  HashBase.call(this, 64)

  // state
  this._a = 0x67452301
  this._b = 0xefcdab89
  this._c = 0x98badcfe
  this._d = 0x10325476
  this._e = 0xc3d2e1f0
}

inherits(RIPEMD160, HashBase)

RIPEMD160.prototype._update = function () {
  var words = ARRAY16
  for (var j = 0; j < 16; ++j) words[j] = this._block.readInt32LE(j * 4)

  var al = this._a | 0
  var bl = this._b | 0
  var cl = this._c | 0
  var dl = this._d | 0
  var el = this._e | 0

  var ar = this._a | 0
  var br = this._b | 0
  var cr = this._c | 0
  var dr = this._d | 0
  var er = this._e | 0

  // computation
  for (var i = 0; i < 80; i += 1) {
    var tl
    var tr
    if (i < 16) {
      tl = fn1(al, bl, cl, dl, el, words[zl[i]], hl[0], sl[i])
      tr = fn5(ar, br, cr, dr, er, words[zr[i]], hr[0], sr[i])
    } else if (i < 32) {
      tl = fn2(al, bl, cl, dl, el, words[zl[i]], hl[1], sl[i])
      tr = fn4(ar, br, cr, dr, er, words[zr[i]], hr[1], sr[i])
    } else if (i < 48) {
      tl = fn3(al, bl, cl, dl, el, words[zl[i]], hl[2], sl[i])
      tr = fn3(ar, br, cr, dr, er, words[zr[i]], hr[2], sr[i])
    } else if (i < 64) {
      tl = fn4(al, bl, cl, dl, el, words[zl[i]], hl[3], sl[i])
      tr = fn2(ar, br, cr, dr, er, words[zr[i]], hr[3], sr[i])
    } else { // if (i<80) {
      tl = fn5(al, bl, cl, dl, el, words[zl[i]], hl[4], sl[i])
      tr = fn1(ar, br, cr, dr, er, words[zr[i]], hr[4], sr[i])
    }

    al = el
    el = dl
    dl = rotl(cl, 10)
    cl = bl
    bl = tl

    ar = er
    er = dr
    dr = rotl(cr, 10)
    cr = br
    br = tr
  }

  // update state
  var t = (this._b + cl + dr) | 0
  this._b = (this._c + dl + er) | 0
  this._c = (this._d + el + ar) | 0
  this._d = (this._e + al + br) | 0
  this._e = (this._a + bl + cr) | 0
  this._a = t
}

RIPEMD160.prototype._digest = function () {
  // create padding and handle blocks
  this._block[this._blockOffset++] = 0x80
  if (this._blockOffset > 56) {
    this._block.fill(0, this._blockOffset, 64)
    this._update()
    this._blockOffset = 0
  }

  this._block.fill(0, this._blockOffset, 56)
  this._block.writeUInt32LE(this._length[0], 56)
  this._block.writeUInt32LE(this._length[1], 60)
  this._update()

  // produce result
  var buffer = Buffer.alloc ? Buffer.alloc(20) : new Buffer(20)
  buffer.writeInt32LE(this._a, 0)
  buffer.writeInt32LE(this._b, 4)
  buffer.writeInt32LE(this._c, 8)
  buffer.writeInt32LE(this._d, 12)
  buffer.writeInt32LE(this._e, 16)
  return buffer
}

function rotl (x, n) {
  return (x << n) | (x >>> (32 - n))
}

function fn1 (a, b, c, d, e, m, k, s) {
  return (rotl((a + (b ^ c ^ d) + m + k) | 0, s) + e) | 0
}

function fn2 (a, b, c, d, e, m, k, s) {
  return (rotl((a + ((b & c) | ((~b) & d)) + m + k) | 0, s) + e) | 0
}

function fn3 (a, b, c, d, e, m, k, s) {
  return (rotl((a + ((b | (~c)) ^ d) + m + k) | 0, s) + e) | 0
}

function fn4 (a, b, c, d, e, m, k, s) {
  return (rotl((a + ((b & d) | (c & (~d))) + m + k) | 0, s) + e) | 0
}

function fn5 (a, b, c, d, e, m, k, s) {
  return (rotl((a + (b ^ (c | (~d))) + m + k) | 0, s) + e) | 0
}

module.exports = RIPEMD160


/***/ }),

/***/ "./node_modules/.2.0.2@stream-browserify/index.js":
/*!********************************************************!*\
  !*** ./node_modules/.2.0.2@stream-browserify/index.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

module.exports = Stream;

var EE = __webpack_require__(/*! events */ "./node_modules/.3.0.0@events/events.js").EventEmitter;
var inherits = __webpack_require__(/*! inherits */ "./node_modules/.2.0.3@inherits/inherits_browser.js");

inherits(Stream, EE);
Stream.Readable = __webpack_require__(/*! readable-stream/readable.js */ "./node_modules/.2.3.6@readable-stream/readable-browser.js");
Stream.Writable = __webpack_require__(/*! readable-stream/writable.js */ "./node_modules/.2.3.6@readable-stream/writable-browser.js");
Stream.Duplex = __webpack_require__(/*! readable-stream/duplex.js */ "./node_modules/.2.3.6@readable-stream/duplex-browser.js");
Stream.Transform = __webpack_require__(/*! readable-stream/transform.js */ "./node_modules/.2.3.6@readable-stream/transform.js");
Stream.PassThrough = __webpack_require__(/*! readable-stream/passthrough.js */ "./node_modules/.2.3.6@readable-stream/passthrough.js");

// Backwards-compat with node 0.4.x
Stream.Stream = Stream;



// old-style streams.  Note that the pipe method (the only relevant
// part of this class) is overridden in the Readable class.

function Stream() {
  EE.call(this);
}

Stream.prototype.pipe = function(dest, options) {
  var source = this;

  function ondata(chunk) {
    if (dest.writable) {
      if (false === dest.write(chunk) && source.pause) {
        source.pause();
      }
    }
  }

  source.on('data', ondata);

  function ondrain() {
    if (source.readable && source.resume) {
      source.resume();
    }
  }

  dest.on('drain', ondrain);

  // If the 'end' option is not supplied, dest.end() will be called when
  // source gets the 'end' or 'close' events.  Only dest.end() once.
  if (!dest._isStdio && (!options || options.end !== false)) {
    source.on('end', onend);
    source.on('close', onclose);
  }

  var didOnEnd = false;
  function onend() {
    if (didOnEnd) return;
    didOnEnd = true;

    dest.end();
  }


  function onclose() {
    if (didOnEnd) return;
    didOnEnd = true;

    if (typeof dest.destroy === 'function') dest.destroy();
  }

  // don't leave dangling pipes when there are errors.
  function onerror(er) {
    cleanup();
    if (EE.listenerCount(this, 'error') === 0) {
      throw er; // Unhandled stream error in pipe.
    }
  }

  source.on('error', onerror);
  dest.on('error', onerror);

  // remove all the event listeners that were added.
  function cleanup() {
    source.removeListener('data', ondata);
    dest.removeListener('drain', ondrain);

    source.removeListener('end', onend);
    source.removeListener('close', onclose);

    source.removeListener('error', onerror);
    dest.removeListener('error', onerror);

    source.removeListener('end', cleanup);
    source.removeListener('close', cleanup);

    dest.removeListener('close', cleanup);
  }

  source.on('end', cleanup);
  source.on('close', cleanup);

  dest.on('close', cleanup);

  dest.emit('pipe', source);

  // Allow for unix-like usage: A.pipe(B).pipe(C)
  return dest;
};


/***/ }),

/***/ "./node_modules/.2.0.3@inherits/inherits_browser.js":
/*!**********************************************************!*\
  !*** ./node_modules/.2.0.3@inherits/inherits_browser.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

if (typeof Object.create === 'function') {
  // implementation from standard node.js 'util' module
  module.exports = function inherits(ctor, superCtor) {
    ctor.super_ = superCtor
    ctor.prototype = Object.create(superCtor.prototype, {
      constructor: {
        value: ctor,
        enumerable: false,
        writable: true,
        configurable: true
      }
    });
  };
} else {
  // old school shim for old browsers
  module.exports = function inherits(ctor, superCtor) {
    ctor.super_ = superCtor
    var TempCtor = function () {}
    TempCtor.prototype = superCtor.prototype
    ctor.prototype = new TempCtor()
    ctor.prototype.constructor = ctor
  }
}


/***/ }),

/***/ "./node_modules/.2.1.0@randombytes/browser.js":
/*!****************************************************!*\
  !*** ./node_modules/.2.1.0@randombytes/browser.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(global) {

// limit of Crypto.getRandomValues()
// https://developer.mozilla.org/en-US/docs/Web/API/Crypto/getRandomValues
var MAX_BYTES = 65536

// Node supports requesting up to this number of bytes
// https://github.com/nodejs/node/blob/master/lib/internal/crypto/random.js#L48
var MAX_UINT32 = 4294967295

function oldBrowser () {
  throw new Error('Secure random number generation is not supported by this browser.\nUse Chrome, Firefox or Internet Explorer 11')
}

var Buffer = __webpack_require__(/*! safe-buffer */ "./node_modules/.5.1.2@safe-buffer/index.js").Buffer
var crypto = global.crypto || global.msCrypto

if (crypto && crypto.getRandomValues) {
  module.exports = randomBytes
} else {
  module.exports = oldBrowser
}

function randomBytes (size, cb) {
  // phantomjs needs to throw
  if (size > MAX_UINT32) throw new RangeError('requested too many random bytes')

  var bytes = Buffer.allocUnsafe(size)

  if (size > 0) {  // getRandomValues fails on IE if size == 0
    if (size > MAX_BYTES) { // this is the max bytes crypto.getRandomValues
      // can do at once see https://developer.mozilla.org/en-US/docs/Web/API/window.crypto.getRandomValues
      for (var generated = 0; generated < size; generated += MAX_BYTES) {
        // buffer.slice automatically checks if the end is past the end of
        // the buffer so we don't have to here
        crypto.getRandomValues(bytes.slice(generated, generated + MAX_BYTES))
      }
    } else {
      crypto.getRandomValues(bytes)
    }
  }

  if (typeof cb === 'function') {
    return process.nextTick(function () {
      cb(null, bytes)
    })
  }

  return bytes
}

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../.4.31.0@webpack/buildin/global.js */ "./node_modules/.4.31.0@webpack/buildin/global.js")))

/***/ }),

/***/ "./node_modules/.2.3.6@readable-stream/duplex-browser.js":
/*!***************************************************************!*\
  !*** ./node_modules/.2.3.6@readable-stream/duplex-browser.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(/*! ./lib/_stream_duplex.js */ "./node_modules/.2.3.6@readable-stream/lib/_stream_duplex.js");


/***/ }),

/***/ "./node_modules/.2.3.6@readable-stream/lib/_stream_duplex.js":
/*!*******************************************************************!*\
  !*** ./node_modules/.2.3.6@readable-stream/lib/_stream_duplex.js ***!
  \*******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

// a duplex stream is just a stream that is both readable and writable.
// Since JS doesn't have multiple prototypal inheritance, this class
// prototypally inherits from Readable, and then parasitically from
// Writable.



/*<replacement>*/

var pna = __webpack_require__(/*! process-nextick-args */ "./node_modules/.2.0.0@process-nextick-args/index.js");
/*</replacement>*/

/*<replacement>*/
var objectKeys = Object.keys || function (obj) {
  var keys = [];
  for (var key in obj) {
    keys.push(key);
  }return keys;
};
/*</replacement>*/

module.exports = Duplex;

/*<replacement>*/
var util = __webpack_require__(/*! core-util-is */ "./node_modules/.1.0.2@core-util-is/lib/util.js");
util.inherits = __webpack_require__(/*! inherits */ "./node_modules/.2.0.3@inherits/inherits_browser.js");
/*</replacement>*/

var Readable = __webpack_require__(/*! ./_stream_readable */ "./node_modules/.2.3.6@readable-stream/lib/_stream_readable.js");
var Writable = __webpack_require__(/*! ./_stream_writable */ "./node_modules/.2.3.6@readable-stream/lib/_stream_writable.js");

util.inherits(Duplex, Readable);

{
  // avoid scope creep, the keys array can then be collected
  var keys = objectKeys(Writable.prototype);
  for (var v = 0; v < keys.length; v++) {
    var method = keys[v];
    if (!Duplex.prototype[method]) Duplex.prototype[method] = Writable.prototype[method];
  }
}

function Duplex(options) {
  if (!(this instanceof Duplex)) return new Duplex(options);

  Readable.call(this, options);
  Writable.call(this, options);

  if (options && options.readable === false) this.readable = false;

  if (options && options.writable === false) this.writable = false;

  this.allowHalfOpen = true;
  if (options && options.allowHalfOpen === false) this.allowHalfOpen = false;

  this.once('end', onend);
}

Object.defineProperty(Duplex.prototype, 'writableHighWaterMark', {
  // making it explicit this property is not enumerable
  // because otherwise some prototype manipulation in
  // userland will fail
  enumerable: false,
  get: function () {
    return this._writableState.highWaterMark;
  }
});

// the no-half-open enforcer
function onend() {
  // if we allow half-open state, or if the writable side ended,
  // then we're ok.
  if (this.allowHalfOpen || this._writableState.ended) return;

  // no more data can be written.
  // But allow more writes to happen in this tick.
  pna.nextTick(onEndNT, this);
}

function onEndNT(self) {
  self.end();
}

Object.defineProperty(Duplex.prototype, 'destroyed', {
  get: function () {
    if (this._readableState === undefined || this._writableState === undefined) {
      return false;
    }
    return this._readableState.destroyed && this._writableState.destroyed;
  },
  set: function (value) {
    // we ignore the value if the stream
    // has not been initialized yet
    if (this._readableState === undefined || this._writableState === undefined) {
      return;
    }

    // backward compatibility, the user is explicitly
    // managing destroyed
    this._readableState.destroyed = value;
    this._writableState.destroyed = value;
  }
});

Duplex.prototype._destroy = function (err, cb) {
  this.push(null);
  this.end();

  pna.nextTick(cb, err);
};

/***/ }),

/***/ "./node_modules/.2.3.6@readable-stream/lib/_stream_passthrough.js":
/*!************************************************************************!*\
  !*** ./node_modules/.2.3.6@readable-stream/lib/_stream_passthrough.js ***!
  \************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

// a passthrough stream.
// basically just the most minimal sort of Transform stream.
// Every written chunk gets output as-is.



module.exports = PassThrough;

var Transform = __webpack_require__(/*! ./_stream_transform */ "./node_modules/.2.3.6@readable-stream/lib/_stream_transform.js");

/*<replacement>*/
var util = __webpack_require__(/*! core-util-is */ "./node_modules/.1.0.2@core-util-is/lib/util.js");
util.inherits = __webpack_require__(/*! inherits */ "./node_modules/.2.0.3@inherits/inherits_browser.js");
/*</replacement>*/

util.inherits(PassThrough, Transform);

function PassThrough(options) {
  if (!(this instanceof PassThrough)) return new PassThrough(options);

  Transform.call(this, options);
}

PassThrough.prototype._transform = function (chunk, encoding, cb) {
  cb(null, chunk);
};

/***/ }),

/***/ "./node_modules/.2.3.6@readable-stream/lib/_stream_readable.js":
/*!*********************************************************************!*\
  !*** ./node_modules/.2.3.6@readable-stream/lib/_stream_readable.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(global) {// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.



/*<replacement>*/

var pna = __webpack_require__(/*! process-nextick-args */ "./node_modules/.2.0.0@process-nextick-args/index.js");
/*</replacement>*/

module.exports = Readable;

/*<replacement>*/
var isArray = __webpack_require__(/*! isarray */ "./node_modules/.1.0.0@isarray/index.js");
/*</replacement>*/

/*<replacement>*/
var Duplex;
/*</replacement>*/

Readable.ReadableState = ReadableState;

/*<replacement>*/
var EE = __webpack_require__(/*! events */ "./node_modules/.3.0.0@events/events.js").EventEmitter;

var EElistenerCount = function (emitter, type) {
  return emitter.listeners(type).length;
};
/*</replacement>*/

/*<replacement>*/
var Stream = __webpack_require__(/*! ./internal/streams/stream */ "./node_modules/.2.3.6@readable-stream/lib/internal/streams/stream-browser.js");
/*</replacement>*/

/*<replacement>*/

var Buffer = __webpack_require__(/*! safe-buffer */ "./node_modules/.5.1.2@safe-buffer/index.js").Buffer;
var OurUint8Array = global.Uint8Array || function () {};
function _uint8ArrayToBuffer(chunk) {
  return Buffer.from(chunk);
}
function _isUint8Array(obj) {
  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;
}

/*</replacement>*/

/*<replacement>*/
var util = __webpack_require__(/*! core-util-is */ "./node_modules/.1.0.2@core-util-is/lib/util.js");
util.inherits = __webpack_require__(/*! inherits */ "./node_modules/.2.0.3@inherits/inherits_browser.js");
/*</replacement>*/

/*<replacement>*/
var debugUtil = __webpack_require__(/*! util */ 0);
var debug = void 0;
if (debugUtil && debugUtil.debuglog) {
  debug = debugUtil.debuglog('stream');
} else {
  debug = function () {};
}
/*</replacement>*/

var BufferList = __webpack_require__(/*! ./internal/streams/BufferList */ "./node_modules/.2.3.6@readable-stream/lib/internal/streams/BufferList.js");
var destroyImpl = __webpack_require__(/*! ./internal/streams/destroy */ "./node_modules/.2.3.6@readable-stream/lib/internal/streams/destroy.js");
var StringDecoder;

util.inherits(Readable, Stream);

var kProxyEvents = ['error', 'close', 'destroy', 'pause', 'resume'];

function prependListener(emitter, event, fn) {
  // Sadly this is not cacheable as some libraries bundle their own
  // event emitter implementation with them.
  if (typeof emitter.prependListener === 'function') return emitter.prependListener(event, fn);

  // This is a hack to make sure that our error handler is attached before any
  // userland ones.  NEVER DO THIS. This is here only because this code needs
  // to continue to work with older versions of Node.js that do not include
  // the prependListener() method. The goal is to eventually remove this hack.
  if (!emitter._events || !emitter._events[event]) emitter.on(event, fn);else if (isArray(emitter._events[event])) emitter._events[event].unshift(fn);else emitter._events[event] = [fn, emitter._events[event]];
}

function ReadableState(options, stream) {
  Duplex = Duplex || __webpack_require__(/*! ./_stream_duplex */ "./node_modules/.2.3.6@readable-stream/lib/_stream_duplex.js");

  options = options || {};

  // Duplex streams are both readable and writable, but share
  // the same options object.
  // However, some cases require setting options to different
  // values for the readable and the writable sides of the duplex stream.
  // These options can be provided separately as readableXXX and writableXXX.
  var isDuplex = stream instanceof Duplex;

  // object stream flag. Used to make read(n) ignore n and to
  // make all the buffer merging and length checks go away
  this.objectMode = !!options.objectMode;

  if (isDuplex) this.objectMode = this.objectMode || !!options.readableObjectMode;

  // the point at which it stops calling _read() to fill the buffer
  // Note: 0 is a valid value, means "don't call _read preemptively ever"
  var hwm = options.highWaterMark;
  var readableHwm = options.readableHighWaterMark;
  var defaultHwm = this.objectMode ? 16 : 16 * 1024;

  if (hwm || hwm === 0) this.highWaterMark = hwm;else if (isDuplex && (readableHwm || readableHwm === 0)) this.highWaterMark = readableHwm;else this.highWaterMark = defaultHwm;

  // cast to ints.
  this.highWaterMark = Math.floor(this.highWaterMark);

  // A linked list is used to store data chunks instead of an array because the
  // linked list can remove elements from the beginning faster than
  // array.shift()
  this.buffer = new BufferList();
  this.length = 0;
  this.pipes = null;
  this.pipesCount = 0;
  this.flowing = null;
  this.ended = false;
  this.endEmitted = false;
  this.reading = false;

  // a flag to be able to tell if the event 'readable'/'data' is emitted
  // immediately, or on a later tick.  We set this to true at first, because
  // any actions that shouldn't happen until "later" should generally also
  // not happen before the first read call.
  this.sync = true;

  // whenever we return null, then we set a flag to say
  // that we're awaiting a 'readable' event emission.
  this.needReadable = false;
  this.emittedReadable = false;
  this.readableListening = false;
  this.resumeScheduled = false;

  // has it been destroyed
  this.destroyed = false;

  // Crypto is kind of old and crusty.  Historically, its default string
  // encoding is 'binary' so we have to make this configurable.
  // Everything else in the universe uses 'utf8', though.
  this.defaultEncoding = options.defaultEncoding || 'utf8';

  // the number of writers that are awaiting a drain event in .pipe()s
  this.awaitDrain = 0;

  // if true, a maybeReadMore has been scheduled
  this.readingMore = false;

  this.decoder = null;
  this.encoding = null;
  if (options.encoding) {
    if (!StringDecoder) StringDecoder = __webpack_require__(/*! string_decoder/ */ "./node_modules/.1.2.0@string_decoder/lib/string_decoder.js").StringDecoder;
    this.decoder = new StringDecoder(options.encoding);
    this.encoding = options.encoding;
  }
}

function Readable(options) {
  Duplex = Duplex || __webpack_require__(/*! ./_stream_duplex */ "./node_modules/.2.3.6@readable-stream/lib/_stream_duplex.js");

  if (!(this instanceof Readable)) return new Readable(options);

  this._readableState = new ReadableState(options, this);

  // legacy
  this.readable = true;

  if (options) {
    if (typeof options.read === 'function') this._read = options.read;

    if (typeof options.destroy === 'function') this._destroy = options.destroy;
  }

  Stream.call(this);
}

Object.defineProperty(Readable.prototype, 'destroyed', {
  get: function () {
    if (this._readableState === undefined) {
      return false;
    }
    return this._readableState.destroyed;
  },
  set: function (value) {
    // we ignore the value if the stream
    // has not been initialized yet
    if (!this._readableState) {
      return;
    }

    // backward compatibility, the user is explicitly
    // managing destroyed
    this._readableState.destroyed = value;
  }
});

Readable.prototype.destroy = destroyImpl.destroy;
Readable.prototype._undestroy = destroyImpl.undestroy;
Readable.prototype._destroy = function (err, cb) {
  this.push(null);
  cb(err);
};

// Manually shove something into the read() buffer.
// This returns true if the highWaterMark has not been hit yet,
// similar to how Writable.write() returns true if you should
// write() some more.
Readable.prototype.push = function (chunk, encoding) {
  var state = this._readableState;
  var skipChunkCheck;

  if (!state.objectMode) {
    if (typeof chunk === 'string') {
      encoding = encoding || state.defaultEncoding;
      if (encoding !== state.encoding) {
        chunk = Buffer.from(chunk, encoding);
        encoding = '';
      }
      skipChunkCheck = true;
    }
  } else {
    skipChunkCheck = true;
  }

  return readableAddChunk(this, chunk, encoding, false, skipChunkCheck);
};

// Unshift should *always* be something directly out of read()
Readable.prototype.unshift = function (chunk) {
  return readableAddChunk(this, chunk, null, true, false);
};

function readableAddChunk(stream, chunk, encoding, addToFront, skipChunkCheck) {
  var state = stream._readableState;
  if (chunk === null) {
    state.reading = false;
    onEofChunk(stream, state);
  } else {
    var er;
    if (!skipChunkCheck) er = chunkInvalid(state, chunk);
    if (er) {
      stream.emit('error', er);
    } else if (state.objectMode || chunk && chunk.length > 0) {
      if (typeof chunk !== 'string' && !state.objectMode && Object.getPrototypeOf(chunk) !== Buffer.prototype) {
        chunk = _uint8ArrayToBuffer(chunk);
      }

      if (addToFront) {
        if (state.endEmitted) stream.emit('error', new Error('stream.unshift() after end event'));else addChunk(stream, state, chunk, true);
      } else if (state.ended) {
        stream.emit('error', new Error('stream.push() after EOF'));
      } else {
        state.reading = false;
        if (state.decoder && !encoding) {
          chunk = state.decoder.write(chunk);
          if (state.objectMode || chunk.length !== 0) addChunk(stream, state, chunk, false);else maybeReadMore(stream, state);
        } else {
          addChunk(stream, state, chunk, false);
        }
      }
    } else if (!addToFront) {
      state.reading = false;
    }
  }

  return needMoreData(state);
}

function addChunk(stream, state, chunk, addToFront) {
  if (state.flowing && state.length === 0 && !state.sync) {
    stream.emit('data', chunk);
    stream.read(0);
  } else {
    // update the buffer info.
    state.length += state.objectMode ? 1 : chunk.length;
    if (addToFront) state.buffer.unshift(chunk);else state.buffer.push(chunk);

    if (state.needReadable) emitReadable(stream);
  }
  maybeReadMore(stream, state);
}

function chunkInvalid(state, chunk) {
  var er;
  if (!_isUint8Array(chunk) && typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {
    er = new TypeError('Invalid non-string/buffer chunk');
  }
  return er;
}

// if it's past the high water mark, we can push in some more.
// Also, if we have no data yet, we can stand some
// more bytes.  This is to work around cases where hwm=0,
// such as the repl.  Also, if the push() triggered a
// readable event, and the user called read(largeNumber) such that
// needReadable was set, then we ought to push more, so that another
// 'readable' event will be triggered.
function needMoreData(state) {
  return !state.ended && (state.needReadable || state.length < state.highWaterMark || state.length === 0);
}

Readable.prototype.isPaused = function () {
  return this._readableState.flowing === false;
};

// backwards compatibility.
Readable.prototype.setEncoding = function (enc) {
  if (!StringDecoder) StringDecoder = __webpack_require__(/*! string_decoder/ */ "./node_modules/.1.2.0@string_decoder/lib/string_decoder.js").StringDecoder;
  this._readableState.decoder = new StringDecoder(enc);
  this._readableState.encoding = enc;
  return this;
};

// Don't raise the hwm > 8MB
var MAX_HWM = 0x800000;
function computeNewHighWaterMark(n) {
  if (n >= MAX_HWM) {
    n = MAX_HWM;
  } else {
    // Get the next highest power of 2 to prevent increasing hwm excessively in
    // tiny amounts
    n--;
    n |= n >>> 1;
    n |= n >>> 2;
    n |= n >>> 4;
    n |= n >>> 8;
    n |= n >>> 16;
    n++;
  }
  return n;
}

// This function is designed to be inlinable, so please take care when making
// changes to the function body.
function howMuchToRead(n, state) {
  if (n <= 0 || state.length === 0 && state.ended) return 0;
  if (state.objectMode) return 1;
  if (n !== n) {
    // Only flow one buffer at a time
    if (state.flowing && state.length) return state.buffer.head.data.length;else return state.length;
  }
  // If we're asking for more than the current hwm, then raise the hwm.
  if (n > state.highWaterMark) state.highWaterMark = computeNewHighWaterMark(n);
  if (n <= state.length) return n;
  // Don't have enough
  if (!state.ended) {
    state.needReadable = true;
    return 0;
  }
  return state.length;
}

// you can override either this method, or the async _read(n) below.
Readable.prototype.read = function (n) {
  debug('read', n);
  n = parseInt(n, 10);
  var state = this._readableState;
  var nOrig = n;

  if (n !== 0) state.emittedReadable = false;

  // if we're doing read(0) to trigger a readable event, but we
  // already have a bunch of data in the buffer, then just trigger
  // the 'readable' event and move on.
  if (n === 0 && state.needReadable && (state.length >= state.highWaterMark || state.ended)) {
    debug('read: emitReadable', state.length, state.ended);
    if (state.length === 0 && state.ended) endReadable(this);else emitReadable(this);
    return null;
  }

  n = howMuchToRead(n, state);

  // if we've ended, and we're now clear, then finish it up.
  if (n === 0 && state.ended) {
    if (state.length === 0) endReadable(this);
    return null;
  }

  // All the actual chunk generation logic needs to be
  // *below* the call to _read.  The reason is that in certain
  // synthetic stream cases, such as passthrough streams, _read
  // may be a completely synchronous operation which may change
  // the state of the read buffer, providing enough data when
  // before there was *not* enough.
  //
  // So, the steps are:
  // 1. Figure out what the state of things will be after we do
  // a read from the buffer.
  //
  // 2. If that resulting state will trigger a _read, then call _read.
  // Note that this may be asynchronous, or synchronous.  Yes, it is
  // deeply ugly to write APIs this way, but that still doesn't mean
  // that the Readable class should behave improperly, as streams are
  // designed to be sync/async agnostic.
  // Take note if the _read call is sync or async (ie, if the read call
  // has returned yet), so that we know whether or not it's safe to emit
  // 'readable' etc.
  //
  // 3. Actually pull the requested chunks out of the buffer and return.

  // if we need a readable event, then we need to do some reading.
  var doRead = state.needReadable;
  debug('need readable', doRead);

  // if we currently have less than the highWaterMark, then also read some
  if (state.length === 0 || state.length - n < state.highWaterMark) {
    doRead = true;
    debug('length less than watermark', doRead);
  }

  // however, if we've ended, then there's no point, and if we're already
  // reading, then it's unnecessary.
  if (state.ended || state.reading) {
    doRead = false;
    debug('reading or ended', doRead);
  } else if (doRead) {
    debug('do read');
    state.reading = true;
    state.sync = true;
    // if the length is currently zero, then we *need* a readable event.
    if (state.length === 0) state.needReadable = true;
    // call internal read method
    this._read(state.highWaterMark);
    state.sync = false;
    // If _read pushed data synchronously, then `reading` will be false,
    // and we need to re-evaluate how much data we can return to the user.
    if (!state.reading) n = howMuchToRead(nOrig, state);
  }

  var ret;
  if (n > 0) ret = fromList(n, state);else ret = null;

  if (ret === null) {
    state.needReadable = true;
    n = 0;
  } else {
    state.length -= n;
  }

  if (state.length === 0) {
    // If we have nothing in the buffer, then we want to know
    // as soon as we *do* get something into the buffer.
    if (!state.ended) state.needReadable = true;

    // If we tried to read() past the EOF, then emit end on the next tick.
    if (nOrig !== n && state.ended) endReadable(this);
  }

  if (ret !== null) this.emit('data', ret);

  return ret;
};

function onEofChunk(stream, state) {
  if (state.ended) return;
  if (state.decoder) {
    var chunk = state.decoder.end();
    if (chunk && chunk.length) {
      state.buffer.push(chunk);
      state.length += state.objectMode ? 1 : chunk.length;
    }
  }
  state.ended = true;

  // emit 'readable' now to make sure it gets picked up.
  emitReadable(stream);
}

// Don't emit readable right away in sync mode, because this can trigger
// another read() call => stack overflow.  This way, it might trigger
// a nextTick recursion warning, but that's not so bad.
function emitReadable(stream) {
  var state = stream._readableState;
  state.needReadable = false;
  if (!state.emittedReadable) {
    debug('emitReadable', state.flowing);
    state.emittedReadable = true;
    if (state.sync) pna.nextTick(emitReadable_, stream);else emitReadable_(stream);
  }
}

function emitReadable_(stream) {
  debug('emit readable');
  stream.emit('readable');
  flow(stream);
}

// at this point, the user has presumably seen the 'readable' event,
// and called read() to consume some data.  that may have triggered
// in turn another _read(n) call, in which case reading = true if
// it's in progress.
// However, if we're not ended, or reading, and the length < hwm,
// then go ahead and try to read some more preemptively.
function maybeReadMore(stream, state) {
  if (!state.readingMore) {
    state.readingMore = true;
    pna.nextTick(maybeReadMore_, stream, state);
  }
}

function maybeReadMore_(stream, state) {
  var len = state.length;
  while (!state.reading && !state.flowing && !state.ended && state.length < state.highWaterMark) {
    debug('maybeReadMore read 0');
    stream.read(0);
    if (len === state.length)
      // didn't get any data, stop spinning.
      break;else len = state.length;
  }
  state.readingMore = false;
}

// abstract method.  to be overridden in specific implementation classes.
// call cb(er, data) where data is <= n in length.
// for virtual (non-string, non-buffer) streams, "length" is somewhat
// arbitrary, and perhaps not very meaningful.
Readable.prototype._read = function (n) {
  this.emit('error', new Error('_read() is not implemented'));
};

Readable.prototype.pipe = function (dest, pipeOpts) {
  var src = this;
  var state = this._readableState;

  switch (state.pipesCount) {
    case 0:
      state.pipes = dest;
      break;
    case 1:
      state.pipes = [state.pipes, dest];
      break;
    default:
      state.pipes.push(dest);
      break;
  }
  state.pipesCount += 1;
  debug('pipe count=%d opts=%j', state.pipesCount, pipeOpts);

  var doEnd = (!pipeOpts || pipeOpts.end !== false) && dest !== process.stdout && dest !== process.stderr;

  var endFn = doEnd ? onend : unpipe;
  if (state.endEmitted) pna.nextTick(endFn);else src.once('end', endFn);

  dest.on('unpipe', onunpipe);
  function onunpipe(readable, unpipeInfo) {
    debug('onunpipe');
    if (readable === src) {
      if (unpipeInfo && unpipeInfo.hasUnpiped === false) {
        unpipeInfo.hasUnpiped = true;
        cleanup();
      }
    }
  }

  function onend() {
    debug('onend');
    dest.end();
  }

  // when the dest drains, it reduces the awaitDrain counter
  // on the source.  This would be more elegant with a .once()
  // handler in flow(), but adding and removing repeatedly is
  // too slow.
  var ondrain = pipeOnDrain(src);
  dest.on('drain', ondrain);

  var cleanedUp = false;
  function cleanup() {
    debug('cleanup');
    // cleanup event handlers once the pipe is broken
    dest.removeListener('close', onclose);
    dest.removeListener('finish', onfinish);
    dest.removeListener('drain', ondrain);
    dest.removeListener('error', onerror);
    dest.removeListener('unpipe', onunpipe);
    src.removeListener('end', onend);
    src.removeListener('end', unpipe);
    src.removeListener('data', ondata);

    cleanedUp = true;

    // if the reader is waiting for a drain event from this
    // specific writer, then it would cause it to never start
    // flowing again.
    // So, if this is awaiting a drain, then we just call it now.
    // If we don't know, then assume that we are waiting for one.
    if (state.awaitDrain && (!dest._writableState || dest._writableState.needDrain)) ondrain();
  }

  // If the user pushes more data while we're writing to dest then we'll end up
  // in ondata again. However, we only want to increase awaitDrain once because
  // dest will only emit one 'drain' event for the multiple writes.
  // => Introduce a guard on increasing awaitDrain.
  var increasedAwaitDrain = false;
  src.on('data', ondata);
  function ondata(chunk) {
    debug('ondata');
    increasedAwaitDrain = false;
    var ret = dest.write(chunk);
    if (false === ret && !increasedAwaitDrain) {
      // If the user unpiped during `dest.write()`, it is possible
      // to get stuck in a permanently paused state if that write
      // also returned false.
      // => Check whether `dest` is still a piping destination.
      if ((state.pipesCount === 1 && state.pipes === dest || state.pipesCount > 1 && indexOf(state.pipes, dest) !== -1) && !cleanedUp) {
        debug('false write response, pause', src._readableState.awaitDrain);
        src._readableState.awaitDrain++;
        increasedAwaitDrain = true;
      }
      src.pause();
    }
  }

  // if the dest has an error, then stop piping into it.
  // however, don't suppress the throwing behavior for this.
  function onerror(er) {
    debug('onerror', er);
    unpipe();
    dest.removeListener('error', onerror);
    if (EElistenerCount(dest, 'error') === 0) dest.emit('error', er);
  }

  // Make sure our error handler is attached before userland ones.
  prependListener(dest, 'error', onerror);

  // Both close and finish should trigger unpipe, but only once.
  function onclose() {
    dest.removeListener('finish', onfinish);
    unpipe();
  }
  dest.once('close', onclose);
  function onfinish() {
    debug('onfinish');
    dest.removeListener('close', onclose);
    unpipe();
  }
  dest.once('finish', onfinish);

  function unpipe() {
    debug('unpipe');
    src.unpipe(dest);
  }

  // tell the dest that it's being piped to
  dest.emit('pipe', src);

  // start the flow if it hasn't been started already.
  if (!state.flowing) {
    debug('pipe resume');
    src.resume();
  }

  return dest;
};

function pipeOnDrain(src) {
  return function () {
    var state = src._readableState;
    debug('pipeOnDrain', state.awaitDrain);
    if (state.awaitDrain) state.awaitDrain--;
    if (state.awaitDrain === 0 && EElistenerCount(src, 'data')) {
      state.flowing = true;
      flow(src);
    }
  };
}

Readable.prototype.unpipe = function (dest) {
  var state = this._readableState;
  var unpipeInfo = { hasUnpiped: false };

  // if we're not piping anywhere, then do nothing.
  if (state.pipesCount === 0) return this;

  // just one destination.  most common case.
  if (state.pipesCount === 1) {
    // passed in one, but it's not the right one.
    if (dest && dest !== state.pipes) return this;

    if (!dest) dest = state.pipes;

    // got a match.
    state.pipes = null;
    state.pipesCount = 0;
    state.flowing = false;
    if (dest) dest.emit('unpipe', this, unpipeInfo);
    return this;
  }

  // slow case. multiple pipe destinations.

  if (!dest) {
    // remove all.
    var dests = state.pipes;
    var len = state.pipesCount;
    state.pipes = null;
    state.pipesCount = 0;
    state.flowing = false;

    for (var i = 0; i < len; i++) {
      dests[i].emit('unpipe', this, unpipeInfo);
    }return this;
  }

  // try to find the right one.
  var index = indexOf(state.pipes, dest);
  if (index === -1) return this;

  state.pipes.splice(index, 1);
  state.pipesCount -= 1;
  if (state.pipesCount === 1) state.pipes = state.pipes[0];

  dest.emit('unpipe', this, unpipeInfo);

  return this;
};

// set up data events if they are asked for
// Ensure readable listeners eventually get something
Readable.prototype.on = function (ev, fn) {
  var res = Stream.prototype.on.call(this, ev, fn);

  if (ev === 'data') {
    // Start flowing on next tick if stream isn't explicitly paused
    if (this._readableState.flowing !== false) this.resume();
  } else if (ev === 'readable') {
    var state = this._readableState;
    if (!state.endEmitted && !state.readableListening) {
      state.readableListening = state.needReadable = true;
      state.emittedReadable = false;
      if (!state.reading) {
        pna.nextTick(nReadingNextTick, this);
      } else if (state.length) {
        emitReadable(this);
      }
    }
  }

  return res;
};
Readable.prototype.addListener = Readable.prototype.on;

function nReadingNextTick(self) {
  debug('readable nexttick read 0');
  self.read(0);
}

// pause() and resume() are remnants of the legacy readable stream API
// If the user uses them, then switch into old mode.
Readable.prototype.resume = function () {
  var state = this._readableState;
  if (!state.flowing) {
    debug('resume');
    state.flowing = true;
    resume(this, state);
  }
  return this;
};

function resume(stream, state) {
  if (!state.resumeScheduled) {
    state.resumeScheduled = true;
    pna.nextTick(resume_, stream, state);
  }
}

function resume_(stream, state) {
  if (!state.reading) {
    debug('resume read 0');
    stream.read(0);
  }

  state.resumeScheduled = false;
  state.awaitDrain = 0;
  stream.emit('resume');
  flow(stream);
  if (state.flowing && !state.reading) stream.read(0);
}

Readable.prototype.pause = function () {
  debug('call pause flowing=%j', this._readableState.flowing);
  if (false !== this._readableState.flowing) {
    debug('pause');
    this._readableState.flowing = false;
    this.emit('pause');
  }
  return this;
};

function flow(stream) {
  var state = stream._readableState;
  debug('flow', state.flowing);
  while (state.flowing && stream.read() !== null) {}
}

// wrap an old-style stream as the async data source.
// This is *not* part of the readable stream interface.
// It is an ugly unfortunate mess of history.
Readable.prototype.wrap = function (stream) {
  var _this = this;

  var state = this._readableState;
  var paused = false;

  stream.on('end', function () {
    debug('wrapped end');
    if (state.decoder && !state.ended) {
      var chunk = state.decoder.end();
      if (chunk && chunk.length) _this.push(chunk);
    }

    _this.push(null);
  });

  stream.on('data', function (chunk) {
    debug('wrapped data');
    if (state.decoder) chunk = state.decoder.write(chunk);

    // don't skip over falsy values in objectMode
    if (state.objectMode && (chunk === null || chunk === undefined)) return;else if (!state.objectMode && (!chunk || !chunk.length)) return;

    var ret = _this.push(chunk);
    if (!ret) {
      paused = true;
      stream.pause();
    }
  });

  // proxy all the other methods.
  // important when wrapping filters and duplexes.
  for (var i in stream) {
    if (this[i] === undefined && typeof stream[i] === 'function') {
      this[i] = function (method) {
        return function () {
          return stream[method].apply(stream, arguments);
        };
      }(i);
    }
  }

  // proxy certain important events.
  for (var n = 0; n < kProxyEvents.length; n++) {
    stream.on(kProxyEvents[n], this.emit.bind(this, kProxyEvents[n]));
  }

  // when we try to consume some more bytes, simply unpause the
  // underlying stream.
  this._read = function (n) {
    debug('wrapped _read', n);
    if (paused) {
      paused = false;
      stream.resume();
    }
  };

  return this;
};

Object.defineProperty(Readable.prototype, 'readableHighWaterMark', {
  // making it explicit this property is not enumerable
  // because otherwise some prototype manipulation in
  // userland will fail
  enumerable: false,
  get: function () {
    return this._readableState.highWaterMark;
  }
});

// exposed for testing purposes only.
Readable._fromList = fromList;

// Pluck off n bytes from an array of buffers.
// Length is the combined lengths of all the buffers in the list.
// This function is designed to be inlinable, so please take care when making
// changes to the function body.
function fromList(n, state) {
  // nothing buffered
  if (state.length === 0) return null;

  var ret;
  if (state.objectMode) ret = state.buffer.shift();else if (!n || n >= state.length) {
    // read it all, truncate the list
    if (state.decoder) ret = state.buffer.join('');else if (state.buffer.length === 1) ret = state.buffer.head.data;else ret = state.buffer.concat(state.length);
    state.buffer.clear();
  } else {
    // read part of list
    ret = fromListPartial(n, state.buffer, state.decoder);
  }

  return ret;
}

// Extracts only enough buffered data to satisfy the amount requested.
// This function is designed to be inlinable, so please take care when making
// changes to the function body.
function fromListPartial(n, list, hasStrings) {
  var ret;
  if (n < list.head.data.length) {
    // slice is the same for buffers and strings
    ret = list.head.data.slice(0, n);
    list.head.data = list.head.data.slice(n);
  } else if (n === list.head.data.length) {
    // first chunk is a perfect match
    ret = list.shift();
  } else {
    // result spans more than one buffer
    ret = hasStrings ? copyFromBufferString(n, list) : copyFromBuffer(n, list);
  }
  return ret;
}

// Copies a specified amount of characters from the list of buffered data
// chunks.
// This function is designed to be inlinable, so please take care when making
// changes to the function body.
function copyFromBufferString(n, list) {
  var p = list.head;
  var c = 1;
  var ret = p.data;
  n -= ret.length;
  while (p = p.next) {
    var str = p.data;
    var nb = n > str.length ? str.length : n;
    if (nb === str.length) ret += str;else ret += str.slice(0, n);
    n -= nb;
    if (n === 0) {
      if (nb === str.length) {
        ++c;
        if (p.next) list.head = p.next;else list.head = list.tail = null;
      } else {
        list.head = p;
        p.data = str.slice(nb);
      }
      break;
    }
    ++c;
  }
  list.length -= c;
  return ret;
}

// Copies a specified amount of bytes from the list of buffered data chunks.
// This function is designed to be inlinable, so please take care when making
// changes to the function body.
function copyFromBuffer(n, list) {
  var ret = Buffer.allocUnsafe(n);
  var p = list.head;
  var c = 1;
  p.data.copy(ret);
  n -= p.data.length;
  while (p = p.next) {
    var buf = p.data;
    var nb = n > buf.length ? buf.length : n;
    buf.copy(ret, ret.length - n, 0, nb);
    n -= nb;
    if (n === 0) {
      if (nb === buf.length) {
        ++c;
        if (p.next) list.head = p.next;else list.head = list.tail = null;
      } else {
        list.head = p;
        p.data = buf.slice(nb);
      }
      break;
    }
    ++c;
  }
  list.length -= c;
  return ret;
}

function endReadable(stream) {
  var state = stream._readableState;

  // If we get here before consuming all the bytes, then that is a
  // bug in node.  Should never happen.
  if (state.length > 0) throw new Error('"endReadable()" called on non-empty stream');

  if (!state.endEmitted) {
    state.ended = true;
    pna.nextTick(endReadableNT, state, stream);
  }
}

function endReadableNT(state, stream) {
  // Check that we didn't get one last unshift.
  if (!state.endEmitted && state.length === 0) {
    state.endEmitted = true;
    stream.readable = false;
    stream.emit('end');
  }
}

function indexOf(xs, x) {
  for (var i = 0, l = xs.length; i < l; i++) {
    if (xs[i] === x) return i;
  }
  return -1;
}
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../.4.31.0@webpack/buildin/global.js */ "./node_modules/.4.31.0@webpack/buildin/global.js")))

/***/ }),

/***/ "./node_modules/.2.3.6@readable-stream/lib/_stream_transform.js":
/*!**********************************************************************!*\
  !*** ./node_modules/.2.3.6@readable-stream/lib/_stream_transform.js ***!
  \**********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

// a transform stream is a readable/writable stream where you do
// something with the data.  Sometimes it's called a "filter",
// but that's not a great name for it, since that implies a thing where
// some bits pass through, and others are simply ignored.  (That would
// be a valid example of a transform, of course.)
//
// While the output is causally related to the input, it's not a
// necessarily symmetric or synchronous transformation.  For example,
// a zlib stream might take multiple plain-text writes(), and then
// emit a single compressed chunk some time in the future.
//
// Here's how this works:
//
// The Transform stream has all the aspects of the readable and writable
// stream classes.  When you write(chunk), that calls _write(chunk,cb)
// internally, and returns false if there's a lot of pending writes
// buffered up.  When you call read(), that calls _read(n) until
// there's enough pending readable data buffered up.
//
// In a transform stream, the written data is placed in a buffer.  When
// _read(n) is called, it transforms the queued up data, calling the
// buffered _write cb's as it consumes chunks.  If consuming a single
// written chunk would result in multiple output chunks, then the first
// outputted bit calls the readcb, and subsequent chunks just go into
// the read buffer, and will cause it to emit 'readable' if necessary.
//
// This way, back-pressure is actually determined by the reading side,
// since _read has to be called to start processing a new chunk.  However,
// a pathological inflate type of transform can cause excessive buffering
// here.  For example, imagine a stream where every byte of input is
// interpreted as an integer from 0-255, and then results in that many
// bytes of output.  Writing the 4 bytes {ff,ff,ff,ff} would result in
// 1kb of data being output.  In this case, you could write a very small
// amount of input, and end up with a very large amount of output.  In
// such a pathological inflating mechanism, there'd be no way to tell
// the system to stop doing the transform.  A single 4MB write could
// cause the system to run out of memory.
//
// However, even in such a pathological case, only a single written chunk
// would be consumed, and then the rest would wait (un-transformed) until
// the results of the previous transformed chunk were consumed.



module.exports = Transform;

var Duplex = __webpack_require__(/*! ./_stream_duplex */ "./node_modules/.2.3.6@readable-stream/lib/_stream_duplex.js");

/*<replacement>*/
var util = __webpack_require__(/*! core-util-is */ "./node_modules/.1.0.2@core-util-is/lib/util.js");
util.inherits = __webpack_require__(/*! inherits */ "./node_modules/.2.0.3@inherits/inherits_browser.js");
/*</replacement>*/

util.inherits(Transform, Duplex);

function afterTransform(er, data) {
  var ts = this._transformState;
  ts.transforming = false;

  var cb = ts.writecb;

  if (!cb) {
    return this.emit('error', new Error('write callback called multiple times'));
  }

  ts.writechunk = null;
  ts.writecb = null;

  if (data != null) // single equals check for both `null` and `undefined`
    this.push(data);

  cb(er);

  var rs = this._readableState;
  rs.reading = false;
  if (rs.needReadable || rs.length < rs.highWaterMark) {
    this._read(rs.highWaterMark);
  }
}

function Transform(options) {
  if (!(this instanceof Transform)) return new Transform(options);

  Duplex.call(this, options);

  this._transformState = {
    afterTransform: afterTransform.bind(this),
    needTransform: false,
    transforming: false,
    writecb: null,
    writechunk: null,
    writeencoding: null
  };

  // start out asking for a readable event once data is transformed.
  this._readableState.needReadable = true;

  // we have implemented the _read method, and done the other things
  // that Readable wants before the first _read call, so unset the
  // sync guard flag.
  this._readableState.sync = false;

  if (options) {
    if (typeof options.transform === 'function') this._transform = options.transform;

    if (typeof options.flush === 'function') this._flush = options.flush;
  }

  // When the writable side finishes, then flush out anything remaining.
  this.on('prefinish', prefinish);
}

function prefinish() {
  var _this = this;

  if (typeof this._flush === 'function') {
    this._flush(function (er, data) {
      done(_this, er, data);
    });
  } else {
    done(this, null, null);
  }
}

Transform.prototype.push = function (chunk, encoding) {
  this._transformState.needTransform = false;
  return Duplex.prototype.push.call(this, chunk, encoding);
};

// This is the part where you do stuff!
// override this function in implementation classes.
// 'chunk' is an input chunk.
//
// Call `push(newChunk)` to pass along transformed output
// to the readable side.  You may call 'push' zero or more times.
//
// Call `cb(err)` when you are done with this chunk.  If you pass
// an error, then that'll put the hurt on the whole operation.  If you
// never call cb(), then you'll never get another chunk.
Transform.prototype._transform = function (chunk, encoding, cb) {
  throw new Error('_transform() is not implemented');
};

Transform.prototype._write = function (chunk, encoding, cb) {
  var ts = this._transformState;
  ts.writecb = cb;
  ts.writechunk = chunk;
  ts.writeencoding = encoding;
  if (!ts.transforming) {
    var rs = this._readableState;
    if (ts.needTransform || rs.needReadable || rs.length < rs.highWaterMark) this._read(rs.highWaterMark);
  }
};

// Doesn't matter what the args are here.
// _transform does all the work.
// That we got here means that the readable side wants more data.
Transform.prototype._read = function (n) {
  var ts = this._transformState;

  if (ts.writechunk !== null && ts.writecb && !ts.transforming) {
    ts.transforming = true;
    this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform);
  } else {
    // mark that we need a transform, so that any data that comes in
    // will get processed, now that we've asked for it.
    ts.needTransform = true;
  }
};

Transform.prototype._destroy = function (err, cb) {
  var _this2 = this;

  Duplex.prototype._destroy.call(this, err, function (err2) {
    cb(err2);
    _this2.emit('close');
  });
};

function done(stream, er, data) {
  if (er) return stream.emit('error', er);

  if (data != null) // single equals check for both `null` and `undefined`
    stream.push(data);

  // if there's nothing in the write buffer, then that means
  // that nothing more will ever be provided
  if (stream._writableState.length) throw new Error('Calling transform done when ws.length != 0');

  if (stream._transformState.transforming) throw new Error('Calling transform done when still transforming');

  return stream.push(null);
}

/***/ }),

/***/ "./node_modules/.2.3.6@readable-stream/lib/_stream_writable.js":
/*!*********************************************************************!*\
  !*** ./node_modules/.2.3.6@readable-stream/lib/_stream_writable.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(global) {// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

// A bit simpler than readable streams.
// Implement an async ._write(chunk, encoding, cb), and it'll handle all
// the drain event emission and buffering.



/*<replacement>*/

var pna = __webpack_require__(/*! process-nextick-args */ "./node_modules/.2.0.0@process-nextick-args/index.js");
/*</replacement>*/

module.exports = Writable;

/* <replacement> */
function WriteReq(chunk, encoding, cb) {
  this.chunk = chunk;
  this.encoding = encoding;
  this.callback = cb;
  this.next = null;
}

// It seems a linked list but it is not
// there will be only 2 of these for each stream
function CorkedRequest(state) {
  var _this = this;

  this.next = null;
  this.entry = null;
  this.finish = function () {
    onCorkedFinish(_this, state);
  };
}
/* </replacement> */

/*<replacement>*/
var asyncWrite = !process.browser && ['v0.10', 'v0.9.'].indexOf(process.version.slice(0, 5)) > -1 ? setImmediate : pna.nextTick;
/*</replacement>*/

/*<replacement>*/
var Duplex;
/*</replacement>*/

Writable.WritableState = WritableState;

/*<replacement>*/
var util = __webpack_require__(/*! core-util-is */ "./node_modules/.1.0.2@core-util-is/lib/util.js");
util.inherits = __webpack_require__(/*! inherits */ "./node_modules/.2.0.3@inherits/inherits_browser.js");
/*</replacement>*/

/*<replacement>*/
var internalUtil = {
  deprecate: __webpack_require__(/*! util-deprecate */ "./node_modules/.1.0.2@util-deprecate/browser.js")
};
/*</replacement>*/

/*<replacement>*/
var Stream = __webpack_require__(/*! ./internal/streams/stream */ "./node_modules/.2.3.6@readable-stream/lib/internal/streams/stream-browser.js");
/*</replacement>*/

/*<replacement>*/

var Buffer = __webpack_require__(/*! safe-buffer */ "./node_modules/.5.1.2@safe-buffer/index.js").Buffer;
var OurUint8Array = global.Uint8Array || function () {};
function _uint8ArrayToBuffer(chunk) {
  return Buffer.from(chunk);
}
function _isUint8Array(obj) {
  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;
}

/*</replacement>*/

var destroyImpl = __webpack_require__(/*! ./internal/streams/destroy */ "./node_modules/.2.3.6@readable-stream/lib/internal/streams/destroy.js");

util.inherits(Writable, Stream);

function nop() {}

function WritableState(options, stream) {
  Duplex = Duplex || __webpack_require__(/*! ./_stream_duplex */ "./node_modules/.2.3.6@readable-stream/lib/_stream_duplex.js");

  options = options || {};

  // Duplex streams are both readable and writable, but share
  // the same options object.
  // However, some cases require setting options to different
  // values for the readable and the writable sides of the duplex stream.
  // These options can be provided separately as readableXXX and writableXXX.
  var isDuplex = stream instanceof Duplex;

  // object stream flag to indicate whether or not this stream
  // contains buffers or objects.
  this.objectMode = !!options.objectMode;

  if (isDuplex) this.objectMode = this.objectMode || !!options.writableObjectMode;

  // the point at which write() starts returning false
  // Note: 0 is a valid value, means that we always return false if
  // the entire buffer is not flushed immediately on write()
  var hwm = options.highWaterMark;
  var writableHwm = options.writableHighWaterMark;
  var defaultHwm = this.objectMode ? 16 : 16 * 1024;

  if (hwm || hwm === 0) this.highWaterMark = hwm;else if (isDuplex && (writableHwm || writableHwm === 0)) this.highWaterMark = writableHwm;else this.highWaterMark = defaultHwm;

  // cast to ints.
  this.highWaterMark = Math.floor(this.highWaterMark);

  // if _final has been called
  this.finalCalled = false;

  // drain event flag.
  this.needDrain = false;
  // at the start of calling end()
  this.ending = false;
  // when end() has been called, and returned
  this.ended = false;
  // when 'finish' is emitted
  this.finished = false;

  // has it been destroyed
  this.destroyed = false;

  // should we decode strings into buffers before passing to _write?
  // this is here so that some node-core streams can optimize string
  // handling at a lower level.
  var noDecode = options.decodeStrings === false;
  this.decodeStrings = !noDecode;

  // Crypto is kind of old and crusty.  Historically, its default string
  // encoding is 'binary' so we have to make this configurable.
  // Everything else in the universe uses 'utf8', though.
  this.defaultEncoding = options.defaultEncoding || 'utf8';

  // not an actual buffer we keep track of, but a measurement
  // of how much we're waiting to get pushed to some underlying
  // socket or file.
  this.length = 0;

  // a flag to see when we're in the middle of a write.
  this.writing = false;

  // when true all writes will be buffered until .uncork() call
  this.corked = 0;

  // a flag to be able to tell if the onwrite cb is called immediately,
  // or on a later tick.  We set this to true at first, because any
  // actions that shouldn't happen until "later" should generally also
  // not happen before the first write call.
  this.sync = true;

  // a flag to know if we're processing previously buffered items, which
  // may call the _write() callback in the same tick, so that we don't
  // end up in an overlapped onwrite situation.
  this.bufferProcessing = false;

  // the callback that's passed to _write(chunk,cb)
  this.onwrite = function (er) {
    onwrite(stream, er);
  };

  // the callback that the user supplies to write(chunk,encoding,cb)
  this.writecb = null;

  // the amount that is being written when _write is called.
  this.writelen = 0;

  this.bufferedRequest = null;
  this.lastBufferedRequest = null;

  // number of pending user-supplied write callbacks
  // this must be 0 before 'finish' can be emitted
  this.pendingcb = 0;

  // emit prefinish if the only thing we're waiting for is _write cbs
  // This is relevant for synchronous Transform streams
  this.prefinished = false;

  // True if the error was already emitted and should not be thrown again
  this.errorEmitted = false;

  // count buffered requests
  this.bufferedRequestCount = 0;

  // allocate the first CorkedRequest, there is always
  // one allocated and free to use, and we maintain at most two
  this.corkedRequestsFree = new CorkedRequest(this);
}

WritableState.prototype.getBuffer = function getBuffer() {
  var current = this.bufferedRequest;
  var out = [];
  while (current) {
    out.push(current);
    current = current.next;
  }
  return out;
};

(function () {
  try {
    Object.defineProperty(WritableState.prototype, 'buffer', {
      get: internalUtil.deprecate(function () {
        return this.getBuffer();
      }, '_writableState.buffer is deprecated. Use _writableState.getBuffer ' + 'instead.', 'DEP0003')
    });
  } catch (_) {}
})();

// Test _writableState for inheritance to account for Duplex streams,
// whose prototype chain only points to Readable.
var realHasInstance;
if (typeof Symbol === 'function' && Symbol.hasInstance && typeof Function.prototype[Symbol.hasInstance] === 'function') {
  realHasInstance = Function.prototype[Symbol.hasInstance];
  Object.defineProperty(Writable, Symbol.hasInstance, {
    value: function (object) {
      if (realHasInstance.call(this, object)) return true;
      if (this !== Writable) return false;

      return object && object._writableState instanceof WritableState;
    }
  });
} else {
  realHasInstance = function (object) {
    return object instanceof this;
  };
}

function Writable(options) {
  Duplex = Duplex || __webpack_require__(/*! ./_stream_duplex */ "./node_modules/.2.3.6@readable-stream/lib/_stream_duplex.js");

  // Writable ctor is applied to Duplexes, too.
  // `realHasInstance` is necessary because using plain `instanceof`
  // would return false, as no `_writableState` property is attached.

  // Trying to use the custom `instanceof` for Writable here will also break the
  // Node.js LazyTransform implementation, which has a non-trivial getter for
  // `_writableState` that would lead to infinite recursion.
  if (!realHasInstance.call(Writable, this) && !(this instanceof Duplex)) {
    return new Writable(options);
  }

  this._writableState = new WritableState(options, this);

  // legacy.
  this.writable = true;

  if (options) {
    if (typeof options.write === 'function') this._write = options.write;

    if (typeof options.writev === 'function') this._writev = options.writev;

    if (typeof options.destroy === 'function') this._destroy = options.destroy;

    if (typeof options.final === 'function') this._final = options.final;
  }

  Stream.call(this);
}

// Otherwise people can pipe Writable streams, which is just wrong.
Writable.prototype.pipe = function () {
  this.emit('error', new Error('Cannot pipe, not readable'));
};

function writeAfterEnd(stream, cb) {
  var er = new Error('write after end');
  // TODO: defer error events consistently everywhere, not just the cb
  stream.emit('error', er);
  pna.nextTick(cb, er);
}

// Checks that a user-supplied chunk is valid, especially for the particular
// mode the stream is in. Currently this means that `null` is never accepted
// and undefined/non-string values are only allowed in object mode.
function validChunk(stream, state, chunk, cb) {
  var valid = true;
  var er = false;

  if (chunk === null) {
    er = new TypeError('May not write null values to stream');
  } else if (typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {
    er = new TypeError('Invalid non-string/buffer chunk');
  }
  if (er) {
    stream.emit('error', er);
    pna.nextTick(cb, er);
    valid = false;
  }
  return valid;
}

Writable.prototype.write = function (chunk, encoding, cb) {
  var state = this._writableState;
  var ret = false;
  var isBuf = !state.objectMode && _isUint8Array(chunk);

  if (isBuf && !Buffer.isBuffer(chunk)) {
    chunk = _uint8ArrayToBuffer(chunk);
  }

  if (typeof encoding === 'function') {
    cb = encoding;
    encoding = null;
  }

  if (isBuf) encoding = 'buffer';else if (!encoding) encoding = state.defaultEncoding;

  if (typeof cb !== 'function') cb = nop;

  if (state.ended) writeAfterEnd(this, cb);else if (isBuf || validChunk(this, state, chunk, cb)) {
    state.pendingcb++;
    ret = writeOrBuffer(this, state, isBuf, chunk, encoding, cb);
  }

  return ret;
};

Writable.prototype.cork = function () {
  var state = this._writableState;

  state.corked++;
};

Writable.prototype.uncork = function () {
  var state = this._writableState;

  if (state.corked) {
    state.corked--;

    if (!state.writing && !state.corked && !state.finished && !state.bufferProcessing && state.bufferedRequest) clearBuffer(this, state);
  }
};

Writable.prototype.setDefaultEncoding = function setDefaultEncoding(encoding) {
  // node::ParseEncoding() requires lower case.
  if (typeof encoding === 'string') encoding = encoding.toLowerCase();
  if (!(['hex', 'utf8', 'utf-8', 'ascii', 'binary', 'base64', 'ucs2', 'ucs-2', 'utf16le', 'utf-16le', 'raw'].indexOf((encoding + '').toLowerCase()) > -1)) throw new TypeError('Unknown encoding: ' + encoding);
  this._writableState.defaultEncoding = encoding;
  return this;
};

function decodeChunk(state, chunk, encoding) {
  if (!state.objectMode && state.decodeStrings !== false && typeof chunk === 'string') {
    chunk = Buffer.from(chunk, encoding);
  }
  return chunk;
}

Object.defineProperty(Writable.prototype, 'writableHighWaterMark', {
  // making it explicit this property is not enumerable
  // because otherwise some prototype manipulation in
  // userland will fail
  enumerable: false,
  get: function () {
    return this._writableState.highWaterMark;
  }
});

// if we're already writing something, then just put this
// in the queue, and wait our turn.  Otherwise, call _write
// If we return false, then we need a drain event, so set that flag.
function writeOrBuffer(stream, state, isBuf, chunk, encoding, cb) {
  if (!isBuf) {
    var newChunk = decodeChunk(state, chunk, encoding);
    if (chunk !== newChunk) {
      isBuf = true;
      encoding = 'buffer';
      chunk = newChunk;
    }
  }
  var len = state.objectMode ? 1 : chunk.length;

  state.length += len;

  var ret = state.length < state.highWaterMark;
  // we must ensure that previous needDrain will not be reset to false.
  if (!ret) state.needDrain = true;

  if (state.writing || state.corked) {
    var last = state.lastBufferedRequest;
    state.lastBufferedRequest = {
      chunk: chunk,
      encoding: encoding,
      isBuf: isBuf,
      callback: cb,
      next: null
    };
    if (last) {
      last.next = state.lastBufferedRequest;
    } else {
      state.bufferedRequest = state.lastBufferedRequest;
    }
    state.bufferedRequestCount += 1;
  } else {
    doWrite(stream, state, false, len, chunk, encoding, cb);
  }

  return ret;
}

function doWrite(stream, state, writev, len, chunk, encoding, cb) {
  state.writelen = len;
  state.writecb = cb;
  state.writing = true;
  state.sync = true;
  if (writev) stream._writev(chunk, state.onwrite);else stream._write(chunk, encoding, state.onwrite);
  state.sync = false;
}

function onwriteError(stream, state, sync, er, cb) {
  --state.pendingcb;

  if (sync) {
    // defer the callback if we are being called synchronously
    // to avoid piling up things on the stack
    pna.nextTick(cb, er);
    // this can emit finish, and it will always happen
    // after error
    pna.nextTick(finishMaybe, stream, state);
    stream._writableState.errorEmitted = true;
    stream.emit('error', er);
  } else {
    // the caller expect this to happen before if
    // it is async
    cb(er);
    stream._writableState.errorEmitted = true;
    stream.emit('error', er);
    // this can emit finish, but finish must
    // always follow error
    finishMaybe(stream, state);
  }
}

function onwriteStateUpdate(state) {
  state.writing = false;
  state.writecb = null;
  state.length -= state.writelen;
  state.writelen = 0;
}

function onwrite(stream, er) {
  var state = stream._writableState;
  var sync = state.sync;
  var cb = state.writecb;

  onwriteStateUpdate(state);

  if (er) onwriteError(stream, state, sync, er, cb);else {
    // Check if we're actually ready to finish, but don't emit yet
    var finished = needFinish(state);

    if (!finished && !state.corked && !state.bufferProcessing && state.bufferedRequest) {
      clearBuffer(stream, state);
    }

    if (sync) {
      /*<replacement>*/
      asyncWrite(afterWrite, stream, state, finished, cb);
      /*</replacement>*/
    } else {
      afterWrite(stream, state, finished, cb);
    }
  }
}

function afterWrite(stream, state, finished, cb) {
  if (!finished) onwriteDrain(stream, state);
  state.pendingcb--;
  cb();
  finishMaybe(stream, state);
}

// Must force callback to be called on nextTick, so that we don't
// emit 'drain' before the write() consumer gets the 'false' return
// value, and has a chance to attach a 'drain' listener.
function onwriteDrain(stream, state) {
  if (state.length === 0 && state.needDrain) {
    state.needDrain = false;
    stream.emit('drain');
  }
}

// if there's something in the buffer waiting, then process it
function clearBuffer(stream, state) {
  state.bufferProcessing = true;
  var entry = state.bufferedRequest;

  if (stream._writev && entry && entry.next) {
    // Fast case, write everything using _writev()
    var l = state.bufferedRequestCount;
    var buffer = new Array(l);
    var holder = state.corkedRequestsFree;
    holder.entry = entry;

    var count = 0;
    var allBuffers = true;
    while (entry) {
      buffer[count] = entry;
      if (!entry.isBuf) allBuffers = false;
      entry = entry.next;
      count += 1;
    }
    buffer.allBuffers = allBuffers;

    doWrite(stream, state, true, state.length, buffer, '', holder.finish);

    // doWrite is almost always async, defer these to save a bit of time
    // as the hot path ends with doWrite
    state.pendingcb++;
    state.lastBufferedRequest = null;
    if (holder.next) {
      state.corkedRequestsFree = holder.next;
      holder.next = null;
    } else {
      state.corkedRequestsFree = new CorkedRequest(state);
    }
    state.bufferedRequestCount = 0;
  } else {
    // Slow case, write chunks one-by-one
    while (entry) {
      var chunk = entry.chunk;
      var encoding = entry.encoding;
      var cb = entry.callback;
      var len = state.objectMode ? 1 : chunk.length;

      doWrite(stream, state, false, len, chunk, encoding, cb);
      entry = entry.next;
      state.bufferedRequestCount--;
      // if we didn't call the onwrite immediately, then
      // it means that we need to wait until it does.
      // also, that means that the chunk and cb are currently
      // being processed, so move the buffer counter past them.
      if (state.writing) {
        break;
      }
    }

    if (entry === null) state.lastBufferedRequest = null;
  }

  state.bufferedRequest = entry;
  state.bufferProcessing = false;
}

Writable.prototype._write = function (chunk, encoding, cb) {
  cb(new Error('_write() is not implemented'));
};

Writable.prototype._writev = null;

Writable.prototype.end = function (chunk, encoding, cb) {
  var state = this._writableState;

  if (typeof chunk === 'function') {
    cb = chunk;
    chunk = null;
    encoding = null;
  } else if (typeof encoding === 'function') {
    cb = encoding;
    encoding = null;
  }

  if (chunk !== null && chunk !== undefined) this.write(chunk, encoding);

  // .end() fully uncorks
  if (state.corked) {
    state.corked = 1;
    this.uncork();
  }

  // ignore unnecessary end() calls.
  if (!state.ending && !state.finished) endWritable(this, state, cb);
};

function needFinish(state) {
  return state.ending && state.length === 0 && state.bufferedRequest === null && !state.finished && !state.writing;
}
function callFinal(stream, state) {
  stream._final(function (err) {
    state.pendingcb--;
    if (err) {
      stream.emit('error', err);
    }
    state.prefinished = true;
    stream.emit('prefinish');
    finishMaybe(stream, state);
  });
}
function prefinish(stream, state) {
  if (!state.prefinished && !state.finalCalled) {
    if (typeof stream._final === 'function') {
      state.pendingcb++;
      state.finalCalled = true;
      pna.nextTick(callFinal, stream, state);
    } else {
      state.prefinished = true;
      stream.emit('prefinish');
    }
  }
}

function finishMaybe(stream, state) {
  var need = needFinish(state);
  if (need) {
    prefinish(stream, state);
    if (state.pendingcb === 0) {
      state.finished = true;
      stream.emit('finish');
    }
  }
  return need;
}

function endWritable(stream, state, cb) {
  state.ending = true;
  finishMaybe(stream, state);
  if (cb) {
    if (state.finished) pna.nextTick(cb);else stream.once('finish', cb);
  }
  state.ended = true;
  stream.writable = false;
}

function onCorkedFinish(corkReq, state, err) {
  var entry = corkReq.entry;
  corkReq.entry = null;
  while (entry) {
    var cb = entry.callback;
    state.pendingcb--;
    cb(err);
    entry = entry.next;
  }
  if (state.corkedRequestsFree) {
    state.corkedRequestsFree.next = corkReq;
  } else {
    state.corkedRequestsFree = corkReq;
  }
}

Object.defineProperty(Writable.prototype, 'destroyed', {
  get: function () {
    if (this._writableState === undefined) {
      return false;
    }
    return this._writableState.destroyed;
  },
  set: function (value) {
    // we ignore the value if the stream
    // has not been initialized yet
    if (!this._writableState) {
      return;
    }

    // backward compatibility, the user is explicitly
    // managing destroyed
    this._writableState.destroyed = value;
  }
});

Writable.prototype.destroy = destroyImpl.destroy;
Writable.prototype._undestroy = destroyImpl.undestroy;
Writable.prototype._destroy = function (err, cb) {
  this.end();
  cb(err);
};
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../.4.31.0@webpack/buildin/global.js */ "./node_modules/.4.31.0@webpack/buildin/global.js")))

/***/ }),

/***/ "./node_modules/.2.3.6@readable-stream/lib/internal/streams/BufferList.js":
/*!********************************************************************************!*\
  !*** ./node_modules/.2.3.6@readable-stream/lib/internal/streams/BufferList.js ***!
  \********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var Buffer = __webpack_require__(/*! safe-buffer */ "./node_modules/.5.1.2@safe-buffer/index.js").Buffer;
var util = __webpack_require__(/*! util */ 1);

function copyBuffer(src, target, offset) {
  src.copy(target, offset);
}

module.exports = function () {
  function BufferList() {
    _classCallCheck(this, BufferList);

    this.head = null;
    this.tail = null;
    this.length = 0;
  }

  BufferList.prototype.push = function push(v) {
    var entry = { data: v, next: null };
    if (this.length > 0) this.tail.next = entry;else this.head = entry;
    this.tail = entry;
    ++this.length;
  };

  BufferList.prototype.unshift = function unshift(v) {
    var entry = { data: v, next: this.head };
    if (this.length === 0) this.tail = entry;
    this.head = entry;
    ++this.length;
  };

  BufferList.prototype.shift = function shift() {
    if (this.length === 0) return;
    var ret = this.head.data;
    if (this.length === 1) this.head = this.tail = null;else this.head = this.head.next;
    --this.length;
    return ret;
  };

  BufferList.prototype.clear = function clear() {
    this.head = this.tail = null;
    this.length = 0;
  };

  BufferList.prototype.join = function join(s) {
    if (this.length === 0) return '';
    var p = this.head;
    var ret = '' + p.data;
    while (p = p.next) {
      ret += s + p.data;
    }return ret;
  };

  BufferList.prototype.concat = function concat(n) {
    if (this.length === 0) return Buffer.alloc(0);
    if (this.length === 1) return this.head.data;
    var ret = Buffer.allocUnsafe(n >>> 0);
    var p = this.head;
    var i = 0;
    while (p) {
      copyBuffer(p.data, ret, i);
      i += p.data.length;
      p = p.next;
    }
    return ret;
  };

  return BufferList;
}();

if (util && util.inspect && util.inspect.custom) {
  module.exports.prototype[util.inspect.custom] = function () {
    var obj = util.inspect({ length: this.length });
    return this.constructor.name + ' ' + obj;
  };
}

/***/ }),

/***/ "./node_modules/.2.3.6@readable-stream/lib/internal/streams/destroy.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/.2.3.6@readable-stream/lib/internal/streams/destroy.js ***!
  \*****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/*<replacement>*/

var pna = __webpack_require__(/*! process-nextick-args */ "./node_modules/.2.0.0@process-nextick-args/index.js");
/*</replacement>*/

// undocumented cb() API, needed for core, not for public API
function destroy(err, cb) {
  var _this = this;

  var readableDestroyed = this._readableState && this._readableState.destroyed;
  var writableDestroyed = this._writableState && this._writableState.destroyed;

  if (readableDestroyed || writableDestroyed) {
    if (cb) {
      cb(err);
    } else if (err && (!this._writableState || !this._writableState.errorEmitted)) {
      pna.nextTick(emitErrorNT, this, err);
    }
    return this;
  }

  // we set destroyed to true before firing error callbacks in order
  // to make it re-entrance safe in case destroy() is called within callbacks

  if (this._readableState) {
    this._readableState.destroyed = true;
  }

  // if this is a duplex stream mark the writable part as destroyed as well
  if (this._writableState) {
    this._writableState.destroyed = true;
  }

  this._destroy(err || null, function (err) {
    if (!cb && err) {
      pna.nextTick(emitErrorNT, _this, err);
      if (_this._writableState) {
        _this._writableState.errorEmitted = true;
      }
    } else if (cb) {
      cb(err);
    }
  });

  return this;
}

function undestroy() {
  if (this._readableState) {
    this._readableState.destroyed = false;
    this._readableState.reading = false;
    this._readableState.ended = false;
    this._readableState.endEmitted = false;
  }

  if (this._writableState) {
    this._writableState.destroyed = false;
    this._writableState.ended = false;
    this._writableState.ending = false;
    this._writableState.finished = false;
    this._writableState.errorEmitted = false;
  }
}

function emitErrorNT(self, err) {
  self.emit('error', err);
}

module.exports = {
  destroy: destroy,
  undestroy: undestroy
};

/***/ }),

/***/ "./node_modules/.2.3.6@readable-stream/lib/internal/streams/stream-browser.js":
/*!************************************************************************************!*\
  !*** ./node_modules/.2.3.6@readable-stream/lib/internal/streams/stream-browser.js ***!
  \************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(/*! events */ "./node_modules/.3.0.0@events/events.js").EventEmitter;


/***/ }),

/***/ "./node_modules/.2.3.6@readable-stream/passthrough.js":
/*!************************************************************!*\
  !*** ./node_modules/.2.3.6@readable-stream/passthrough.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(/*! ./readable */ "./node_modules/.2.3.6@readable-stream/readable-browser.js").PassThrough


/***/ }),

/***/ "./node_modules/.2.3.6@readable-stream/readable-browser.js":
/*!*****************************************************************!*\
  !*** ./node_modules/.2.3.6@readable-stream/readable-browser.js ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(/*! ./lib/_stream_readable.js */ "./node_modules/.2.3.6@readable-stream/lib/_stream_readable.js");
exports.Stream = exports;
exports.Readable = exports;
exports.Writable = __webpack_require__(/*! ./lib/_stream_writable.js */ "./node_modules/.2.3.6@readable-stream/lib/_stream_writable.js");
exports.Duplex = __webpack_require__(/*! ./lib/_stream_duplex.js */ "./node_modules/.2.3.6@readable-stream/lib/_stream_duplex.js");
exports.Transform = __webpack_require__(/*! ./lib/_stream_transform.js */ "./node_modules/.2.3.6@readable-stream/lib/_stream_transform.js");
exports.PassThrough = __webpack_require__(/*! ./lib/_stream_passthrough.js */ "./node_modules/.2.3.6@readable-stream/lib/_stream_passthrough.js");


/***/ }),

/***/ "./node_modules/.2.3.6@readable-stream/transform.js":
/*!**********************************************************!*\
  !*** ./node_modules/.2.3.6@readable-stream/transform.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(/*! ./readable */ "./node_modules/.2.3.6@readable-stream/readable-browser.js").Transform


/***/ }),

/***/ "./node_modules/.2.3.6@readable-stream/writable-browser.js":
/*!*****************************************************************!*\
  !*** ./node_modules/.2.3.6@readable-stream/writable-browser.js ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(/*! ./lib/_stream_writable.js */ "./node_modules/.2.3.6@readable-stream/lib/_stream_writable.js");


/***/ }),

/***/ "./node_modules/.2.4.11@sha.js/hash.js":
/*!*********************************************!*\
  !*** ./node_modules/.2.4.11@sha.js/hash.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var Buffer = __webpack_require__(/*! safe-buffer */ "./node_modules/.5.1.2@safe-buffer/index.js").Buffer

// prototype class for hash functions
function Hash (blockSize, finalSize) {
  this._block = Buffer.alloc(blockSize)
  this._finalSize = finalSize
  this._blockSize = blockSize
  this._len = 0
}

Hash.prototype.update = function (data, enc) {
  if (typeof data === 'string') {
    enc = enc || 'utf8'
    data = Buffer.from(data, enc)
  }

  var block = this._block
  var blockSize = this._blockSize
  var length = data.length
  var accum = this._len

  for (var offset = 0; offset < length;) {
    var assigned = accum % blockSize
    var remainder = Math.min(length - offset, blockSize - assigned)

    for (var i = 0; i < remainder; i++) {
      block[assigned + i] = data[offset + i]
    }

    accum += remainder
    offset += remainder

    if ((accum % blockSize) === 0) {
      this._update(block)
    }
  }

  this._len += length
  return this
}

Hash.prototype.digest = function (enc) {
  var rem = this._len % this._blockSize

  this._block[rem] = 0x80

  // zero (rem + 1) trailing bits, where (rem + 1) is the smallest
  // non-negative solution to the equation (length + 1 + (rem + 1)) === finalSize mod blockSize
  this._block.fill(0, rem + 1)

  if (rem >= this._finalSize) {
    this._update(this._block)
    this._block.fill(0)
  }

  var bits = this._len * 8

  // uint32
  if (bits <= 0xffffffff) {
    this._block.writeUInt32BE(bits, this._blockSize - 4)

  // uint64
  } else {
    var lowBits = (bits & 0xffffffff) >>> 0
    var highBits = (bits - lowBits) / 0x100000000

    this._block.writeUInt32BE(highBits, this._blockSize - 8)
    this._block.writeUInt32BE(lowBits, this._blockSize - 4)
  }

  this._update(this._block)
  var hash = this._hash()

  return enc ? hash.toString(enc) : hash
}

Hash.prototype._update = function () {
  throw new Error('_update must be implemented by subclass')
}

module.exports = Hash


/***/ }),

/***/ "./node_modules/.2.4.11@sha.js/index.js":
/*!**********************************************!*\
  !*** ./node_modules/.2.4.11@sha.js/index.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var exports = module.exports = function SHA (algorithm) {
  algorithm = algorithm.toLowerCase()

  var Algorithm = exports[algorithm]
  if (!Algorithm) throw new Error(algorithm + ' is not supported (we accept pull requests)')

  return new Algorithm()
}

exports.sha = __webpack_require__(/*! ./sha */ "./node_modules/.2.4.11@sha.js/sha.js")
exports.sha1 = __webpack_require__(/*! ./sha1 */ "./node_modules/.2.4.11@sha.js/sha1.js")
exports.sha224 = __webpack_require__(/*! ./sha224 */ "./node_modules/.2.4.11@sha.js/sha224.js")
exports.sha256 = __webpack_require__(/*! ./sha256 */ "./node_modules/.2.4.11@sha.js/sha256.js")
exports.sha384 = __webpack_require__(/*! ./sha384 */ "./node_modules/.2.4.11@sha.js/sha384.js")
exports.sha512 = __webpack_require__(/*! ./sha512 */ "./node_modules/.2.4.11@sha.js/sha512.js")


/***/ }),

/***/ "./node_modules/.2.4.11@sha.js/sha.js":
/*!********************************************!*\
  !*** ./node_modules/.2.4.11@sha.js/sha.js ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/*
 * A JavaScript implementation of the Secure Hash Algorithm, SHA-0, as defined
 * in FIPS PUB 180-1
 * This source code is derived from sha1.js of the same repository.
 * The difference between SHA-0 and SHA-1 is just a bitwise rotate left
 * operation was added.
 */

var inherits = __webpack_require__(/*! inherits */ "./node_modules/.2.0.3@inherits/inherits_browser.js")
var Hash = __webpack_require__(/*! ./hash */ "./node_modules/.2.4.11@sha.js/hash.js")
var Buffer = __webpack_require__(/*! safe-buffer */ "./node_modules/.5.1.2@safe-buffer/index.js").Buffer

var K = [
  0x5a827999, 0x6ed9eba1, 0x8f1bbcdc | 0, 0xca62c1d6 | 0
]

var W = new Array(80)

function Sha () {
  this.init()
  this._w = W

  Hash.call(this, 64, 56)
}

inherits(Sha, Hash)

Sha.prototype.init = function () {
  this._a = 0x67452301
  this._b = 0xefcdab89
  this._c = 0x98badcfe
  this._d = 0x10325476
  this._e = 0xc3d2e1f0

  return this
}

function rotl5 (num) {
  return (num << 5) | (num >>> 27)
}

function rotl30 (num) {
  return (num << 30) | (num >>> 2)
}

function ft (s, b, c, d) {
  if (s === 0) return (b & c) | ((~b) & d)
  if (s === 2) return (b & c) | (b & d) | (c & d)
  return b ^ c ^ d
}

Sha.prototype._update = function (M) {
  var W = this._w

  var a = this._a | 0
  var b = this._b | 0
  var c = this._c | 0
  var d = this._d | 0
  var e = this._e | 0

  for (var i = 0; i < 16; ++i) W[i] = M.readInt32BE(i * 4)
  for (; i < 80; ++i) W[i] = W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16]

  for (var j = 0; j < 80; ++j) {
    var s = ~~(j / 20)
    var t = (rotl5(a) + ft(s, b, c, d) + e + W[j] + K[s]) | 0

    e = d
    d = c
    c = rotl30(b)
    b = a
    a = t
  }

  this._a = (a + this._a) | 0
  this._b = (b + this._b) | 0
  this._c = (c + this._c) | 0
  this._d = (d + this._d) | 0
  this._e = (e + this._e) | 0
}

Sha.prototype._hash = function () {
  var H = Buffer.allocUnsafe(20)

  H.writeInt32BE(this._a | 0, 0)
  H.writeInt32BE(this._b | 0, 4)
  H.writeInt32BE(this._c | 0, 8)
  H.writeInt32BE(this._d | 0, 12)
  H.writeInt32BE(this._e | 0, 16)

  return H
}

module.exports = Sha


/***/ }),

/***/ "./node_modules/.2.4.11@sha.js/sha1.js":
/*!*********************************************!*\
  !*** ./node_modules/.2.4.11@sha.js/sha1.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/*
 * A JavaScript implementation of the Secure Hash Algorithm, SHA-1, as defined
 * in FIPS PUB 180-1
 * Version 2.1a Copyright Paul Johnston 2000 - 2002.
 * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet
 * Distributed under the BSD License
 * See http://pajhome.org.uk/crypt/md5 for details.
 */

var inherits = __webpack_require__(/*! inherits */ "./node_modules/.2.0.3@inherits/inherits_browser.js")
var Hash = __webpack_require__(/*! ./hash */ "./node_modules/.2.4.11@sha.js/hash.js")
var Buffer = __webpack_require__(/*! safe-buffer */ "./node_modules/.5.1.2@safe-buffer/index.js").Buffer

var K = [
  0x5a827999, 0x6ed9eba1, 0x8f1bbcdc | 0, 0xca62c1d6 | 0
]

var W = new Array(80)

function Sha1 () {
  this.init()
  this._w = W

  Hash.call(this, 64, 56)
}

inherits(Sha1, Hash)

Sha1.prototype.init = function () {
  this._a = 0x67452301
  this._b = 0xefcdab89
  this._c = 0x98badcfe
  this._d = 0x10325476
  this._e = 0xc3d2e1f0

  return this
}

function rotl1 (num) {
  return (num << 1) | (num >>> 31)
}

function rotl5 (num) {
  return (num << 5) | (num >>> 27)
}

function rotl30 (num) {
  return (num << 30) | (num >>> 2)
}

function ft (s, b, c, d) {
  if (s === 0) return (b & c) | ((~b) & d)
  if (s === 2) return (b & c) | (b & d) | (c & d)
  return b ^ c ^ d
}

Sha1.prototype._update = function (M) {
  var W = this._w

  var a = this._a | 0
  var b = this._b | 0
  var c = this._c | 0
  var d = this._d | 0
  var e = this._e | 0

  for (var i = 0; i < 16; ++i) W[i] = M.readInt32BE(i * 4)
  for (; i < 80; ++i) W[i] = rotl1(W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16])

  for (var j = 0; j < 80; ++j) {
    var s = ~~(j / 20)
    var t = (rotl5(a) + ft(s, b, c, d) + e + W[j] + K[s]) | 0

    e = d
    d = c
    c = rotl30(b)
    b = a
    a = t
  }

  this._a = (a + this._a) | 0
  this._b = (b + this._b) | 0
  this._c = (c + this._c) | 0
  this._d = (d + this._d) | 0
  this._e = (e + this._e) | 0
}

Sha1.prototype._hash = function () {
  var H = Buffer.allocUnsafe(20)

  H.writeInt32BE(this._a | 0, 0)
  H.writeInt32BE(this._b | 0, 4)
  H.writeInt32BE(this._c | 0, 8)
  H.writeInt32BE(this._d | 0, 12)
  H.writeInt32BE(this._e | 0, 16)

  return H
}

module.exports = Sha1


/***/ }),

/***/ "./node_modules/.2.4.11@sha.js/sha224.js":
/*!***********************************************!*\
  !*** ./node_modules/.2.4.11@sha.js/sha224.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/**
 * A JavaScript implementation of the Secure Hash Algorithm, SHA-256, as defined
 * in FIPS 180-2
 * Version 2.2-beta Copyright Angel Marin, Paul Johnston 2000 - 2009.
 * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet
 *
 */

var inherits = __webpack_require__(/*! inherits */ "./node_modules/.2.0.3@inherits/inherits_browser.js")
var Sha256 = __webpack_require__(/*! ./sha256 */ "./node_modules/.2.4.11@sha.js/sha256.js")
var Hash = __webpack_require__(/*! ./hash */ "./node_modules/.2.4.11@sha.js/hash.js")
var Buffer = __webpack_require__(/*! safe-buffer */ "./node_modules/.5.1.2@safe-buffer/index.js").Buffer

var W = new Array(64)

function Sha224 () {
  this.init()

  this._w = W // new Array(64)

  Hash.call(this, 64, 56)
}

inherits(Sha224, Sha256)

Sha224.prototype.init = function () {
  this._a = 0xc1059ed8
  this._b = 0x367cd507
  this._c = 0x3070dd17
  this._d = 0xf70e5939
  this._e = 0xffc00b31
  this._f = 0x68581511
  this._g = 0x64f98fa7
  this._h = 0xbefa4fa4

  return this
}

Sha224.prototype._hash = function () {
  var H = Buffer.allocUnsafe(28)

  H.writeInt32BE(this._a, 0)
  H.writeInt32BE(this._b, 4)
  H.writeInt32BE(this._c, 8)
  H.writeInt32BE(this._d, 12)
  H.writeInt32BE(this._e, 16)
  H.writeInt32BE(this._f, 20)
  H.writeInt32BE(this._g, 24)

  return H
}

module.exports = Sha224


/***/ }),

/***/ "./node_modules/.2.4.11@sha.js/sha256.js":
/*!***********************************************!*\
  !*** ./node_modules/.2.4.11@sha.js/sha256.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/**
 * A JavaScript implementation of the Secure Hash Algorithm, SHA-256, as defined
 * in FIPS 180-2
 * Version 2.2-beta Copyright Angel Marin, Paul Johnston 2000 - 2009.
 * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet
 *
 */

var inherits = __webpack_require__(/*! inherits */ "./node_modules/.2.0.3@inherits/inherits_browser.js")
var Hash = __webpack_require__(/*! ./hash */ "./node_modules/.2.4.11@sha.js/hash.js")
var Buffer = __webpack_require__(/*! safe-buffer */ "./node_modules/.5.1.2@safe-buffer/index.js").Buffer

var K = [
  0x428A2F98, 0x71374491, 0xB5C0FBCF, 0xE9B5DBA5,
  0x3956C25B, 0x59F111F1, 0x923F82A4, 0xAB1C5ED5,
  0xD807AA98, 0x12835B01, 0x243185BE, 0x550C7DC3,
  0x72BE5D74, 0x80DEB1FE, 0x9BDC06A7, 0xC19BF174,
  0xE49B69C1, 0xEFBE4786, 0x0FC19DC6, 0x240CA1CC,
  0x2DE92C6F, 0x4A7484AA, 0x5CB0A9DC, 0x76F988DA,
  0x983E5152, 0xA831C66D, 0xB00327C8, 0xBF597FC7,
  0xC6E00BF3, 0xD5A79147, 0x06CA6351, 0x14292967,
  0x27B70A85, 0x2E1B2138, 0x4D2C6DFC, 0x53380D13,
  0x650A7354, 0x766A0ABB, 0x81C2C92E, 0x92722C85,
  0xA2BFE8A1, 0xA81A664B, 0xC24B8B70, 0xC76C51A3,
  0xD192E819, 0xD6990624, 0xF40E3585, 0x106AA070,
  0x19A4C116, 0x1E376C08, 0x2748774C, 0x34B0BCB5,
  0x391C0CB3, 0x4ED8AA4A, 0x5B9CCA4F, 0x682E6FF3,
  0x748F82EE, 0x78A5636F, 0x84C87814, 0x8CC70208,
  0x90BEFFFA, 0xA4506CEB, 0xBEF9A3F7, 0xC67178F2
]

var W = new Array(64)

function Sha256 () {
  this.init()

  this._w = W // new Array(64)

  Hash.call(this, 64, 56)
}

inherits(Sha256, Hash)

Sha256.prototype.init = function () {
  this._a = 0x6a09e667
  this._b = 0xbb67ae85
  this._c = 0x3c6ef372
  this._d = 0xa54ff53a
  this._e = 0x510e527f
  this._f = 0x9b05688c
  this._g = 0x1f83d9ab
  this._h = 0x5be0cd19

  return this
}

function ch (x, y, z) {
  return z ^ (x & (y ^ z))
}

function maj (x, y, z) {
  return (x & y) | (z & (x | y))
}

function sigma0 (x) {
  return (x >>> 2 | x << 30) ^ (x >>> 13 | x << 19) ^ (x >>> 22 | x << 10)
}

function sigma1 (x) {
  return (x >>> 6 | x << 26) ^ (x >>> 11 | x << 21) ^ (x >>> 25 | x << 7)
}

function gamma0 (x) {
  return (x >>> 7 | x << 25) ^ (x >>> 18 | x << 14) ^ (x >>> 3)
}

function gamma1 (x) {
  return (x >>> 17 | x << 15) ^ (x >>> 19 | x << 13) ^ (x >>> 10)
}

Sha256.prototype._update = function (M) {
  var W = this._w

  var a = this._a | 0
  var b = this._b | 0
  var c = this._c | 0
  var d = this._d | 0
  var e = this._e | 0
  var f = this._f | 0
  var g = this._g | 0
  var h = this._h | 0

  for (var i = 0; i < 16; ++i) W[i] = M.readInt32BE(i * 4)
  for (; i < 64; ++i) W[i] = (gamma1(W[i - 2]) + W[i - 7] + gamma0(W[i - 15]) + W[i - 16]) | 0

  for (var j = 0; j < 64; ++j) {
    var T1 = (h + sigma1(e) + ch(e, f, g) + K[j] + W[j]) | 0
    var T2 = (sigma0(a) + maj(a, b, c)) | 0

    h = g
    g = f
    f = e
    e = (d + T1) | 0
    d = c
    c = b
    b = a
    a = (T1 + T2) | 0
  }

  this._a = (a + this._a) | 0
  this._b = (b + this._b) | 0
  this._c = (c + this._c) | 0
  this._d = (d + this._d) | 0
  this._e = (e + this._e) | 0
  this._f = (f + this._f) | 0
  this._g = (g + this._g) | 0
  this._h = (h + this._h) | 0
}

Sha256.prototype._hash = function () {
  var H = Buffer.allocUnsafe(32)

  H.writeInt32BE(this._a, 0)
  H.writeInt32BE(this._b, 4)
  H.writeInt32BE(this._c, 8)
  H.writeInt32BE(this._d, 12)
  H.writeInt32BE(this._e, 16)
  H.writeInt32BE(this._f, 20)
  H.writeInt32BE(this._g, 24)
  H.writeInt32BE(this._h, 28)

  return H
}

module.exports = Sha256


/***/ }),

/***/ "./node_modules/.2.4.11@sha.js/sha384.js":
/*!***********************************************!*\
  !*** ./node_modules/.2.4.11@sha.js/sha384.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var inherits = __webpack_require__(/*! inherits */ "./node_modules/.2.0.3@inherits/inherits_browser.js")
var SHA512 = __webpack_require__(/*! ./sha512 */ "./node_modules/.2.4.11@sha.js/sha512.js")
var Hash = __webpack_require__(/*! ./hash */ "./node_modules/.2.4.11@sha.js/hash.js")
var Buffer = __webpack_require__(/*! safe-buffer */ "./node_modules/.5.1.2@safe-buffer/index.js").Buffer

var W = new Array(160)

function Sha384 () {
  this.init()
  this._w = W

  Hash.call(this, 128, 112)
}

inherits(Sha384, SHA512)

Sha384.prototype.init = function () {
  this._ah = 0xcbbb9d5d
  this._bh = 0x629a292a
  this._ch = 0x9159015a
  this._dh = 0x152fecd8
  this._eh = 0x67332667
  this._fh = 0x8eb44a87
  this._gh = 0xdb0c2e0d
  this._hh = 0x47b5481d

  this._al = 0xc1059ed8
  this._bl = 0x367cd507
  this._cl = 0x3070dd17
  this._dl = 0xf70e5939
  this._el = 0xffc00b31
  this._fl = 0x68581511
  this._gl = 0x64f98fa7
  this._hl = 0xbefa4fa4

  return this
}

Sha384.prototype._hash = function () {
  var H = Buffer.allocUnsafe(48)

  function writeInt64BE (h, l, offset) {
    H.writeInt32BE(h, offset)
    H.writeInt32BE(l, offset + 4)
  }

  writeInt64BE(this._ah, this._al, 0)
  writeInt64BE(this._bh, this._bl, 8)
  writeInt64BE(this._ch, this._cl, 16)
  writeInt64BE(this._dh, this._dl, 24)
  writeInt64BE(this._eh, this._el, 32)
  writeInt64BE(this._fh, this._fl, 40)

  return H
}

module.exports = Sha384


/***/ }),

/***/ "./node_modules/.2.4.11@sha.js/sha512.js":
/*!***********************************************!*\
  !*** ./node_modules/.2.4.11@sha.js/sha512.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var inherits = __webpack_require__(/*! inherits */ "./node_modules/.2.0.3@inherits/inherits_browser.js")
var Hash = __webpack_require__(/*! ./hash */ "./node_modules/.2.4.11@sha.js/hash.js")
var Buffer = __webpack_require__(/*! safe-buffer */ "./node_modules/.5.1.2@safe-buffer/index.js").Buffer

var K = [
  0x428a2f98, 0xd728ae22, 0x71374491, 0x23ef65cd,
  0xb5c0fbcf, 0xec4d3b2f, 0xe9b5dba5, 0x8189dbbc,
  0x3956c25b, 0xf348b538, 0x59f111f1, 0xb605d019,
  0x923f82a4, 0xaf194f9b, 0xab1c5ed5, 0xda6d8118,
  0xd807aa98, 0xa3030242, 0x12835b01, 0x45706fbe,
  0x243185be, 0x4ee4b28c, 0x550c7dc3, 0xd5ffb4e2,
  0x72be5d74, 0xf27b896f, 0x80deb1fe, 0x3b1696b1,
  0x9bdc06a7, 0x25c71235, 0xc19bf174, 0xcf692694,
  0xe49b69c1, 0x9ef14ad2, 0xefbe4786, 0x384f25e3,
  0x0fc19dc6, 0x8b8cd5b5, 0x240ca1cc, 0x77ac9c65,
  0x2de92c6f, 0x592b0275, 0x4a7484aa, 0x6ea6e483,
  0x5cb0a9dc, 0xbd41fbd4, 0x76f988da, 0x831153b5,
  0x983e5152, 0xee66dfab, 0xa831c66d, 0x2db43210,
  0xb00327c8, 0x98fb213f, 0xbf597fc7, 0xbeef0ee4,
  0xc6e00bf3, 0x3da88fc2, 0xd5a79147, 0x930aa725,
  0x06ca6351, 0xe003826f, 0x14292967, 0x0a0e6e70,
  0x27b70a85, 0x46d22ffc, 0x2e1b2138, 0x5c26c926,
  0x4d2c6dfc, 0x5ac42aed, 0x53380d13, 0x9d95b3df,
  0x650a7354, 0x8baf63de, 0x766a0abb, 0x3c77b2a8,
  0x81c2c92e, 0x47edaee6, 0x92722c85, 0x1482353b,
  0xa2bfe8a1, 0x4cf10364, 0xa81a664b, 0xbc423001,
  0xc24b8b70, 0xd0f89791, 0xc76c51a3, 0x0654be30,
  0xd192e819, 0xd6ef5218, 0xd6990624, 0x5565a910,
  0xf40e3585, 0x5771202a, 0x106aa070, 0x32bbd1b8,
  0x19a4c116, 0xb8d2d0c8, 0x1e376c08, 0x5141ab53,
  0x2748774c, 0xdf8eeb99, 0x34b0bcb5, 0xe19b48a8,
  0x391c0cb3, 0xc5c95a63, 0x4ed8aa4a, 0xe3418acb,
  0x5b9cca4f, 0x7763e373, 0x682e6ff3, 0xd6b2b8a3,
  0x748f82ee, 0x5defb2fc, 0x78a5636f, 0x43172f60,
  0x84c87814, 0xa1f0ab72, 0x8cc70208, 0x1a6439ec,
  0x90befffa, 0x23631e28, 0xa4506ceb, 0xde82bde9,
  0xbef9a3f7, 0xb2c67915, 0xc67178f2, 0xe372532b,
  0xca273ece, 0xea26619c, 0xd186b8c7, 0x21c0c207,
  0xeada7dd6, 0xcde0eb1e, 0xf57d4f7f, 0xee6ed178,
  0x06f067aa, 0x72176fba, 0x0a637dc5, 0xa2c898a6,
  0x113f9804, 0xbef90dae, 0x1b710b35, 0x131c471b,
  0x28db77f5, 0x23047d84, 0x32caab7b, 0x40c72493,
  0x3c9ebe0a, 0x15c9bebc, 0x431d67c4, 0x9c100d4c,
  0x4cc5d4be, 0xcb3e42b6, 0x597f299c, 0xfc657e2a,
  0x5fcb6fab, 0x3ad6faec, 0x6c44198c, 0x4a475817
]

var W = new Array(160)

function Sha512 () {
  this.init()
  this._w = W

  Hash.call(this, 128, 112)
}

inherits(Sha512, Hash)

Sha512.prototype.init = function () {
  this._ah = 0x6a09e667
  this._bh = 0xbb67ae85
  this._ch = 0x3c6ef372
  this._dh = 0xa54ff53a
  this._eh = 0x510e527f
  this._fh = 0x9b05688c
  this._gh = 0x1f83d9ab
  this._hh = 0x5be0cd19

  this._al = 0xf3bcc908
  this._bl = 0x84caa73b
  this._cl = 0xfe94f82b
  this._dl = 0x5f1d36f1
  this._el = 0xade682d1
  this._fl = 0x2b3e6c1f
  this._gl = 0xfb41bd6b
  this._hl = 0x137e2179

  return this
}

function Ch (x, y, z) {
  return z ^ (x & (y ^ z))
}

function maj (x, y, z) {
  return (x & y) | (z & (x | y))
}

function sigma0 (x, xl) {
  return (x >>> 28 | xl << 4) ^ (xl >>> 2 | x << 30) ^ (xl >>> 7 | x << 25)
}

function sigma1 (x, xl) {
  return (x >>> 14 | xl << 18) ^ (x >>> 18 | xl << 14) ^ (xl >>> 9 | x << 23)
}

function Gamma0 (x, xl) {
  return (x >>> 1 | xl << 31) ^ (x >>> 8 | xl << 24) ^ (x >>> 7)
}

function Gamma0l (x, xl) {
  return (x >>> 1 | xl << 31) ^ (x >>> 8 | xl << 24) ^ (x >>> 7 | xl << 25)
}

function Gamma1 (x, xl) {
  return (x >>> 19 | xl << 13) ^ (xl >>> 29 | x << 3) ^ (x >>> 6)
}

function Gamma1l (x, xl) {
  return (x >>> 19 | xl << 13) ^ (xl >>> 29 | x << 3) ^ (x >>> 6 | xl << 26)
}

function getCarry (a, b) {
  return (a >>> 0) < (b >>> 0) ? 1 : 0
}

Sha512.prototype._update = function (M) {
  var W = this._w

  var ah = this._ah | 0
  var bh = this._bh | 0
  var ch = this._ch | 0
  var dh = this._dh | 0
  var eh = this._eh | 0
  var fh = this._fh | 0
  var gh = this._gh | 0
  var hh = this._hh | 0

  var al = this._al | 0
  var bl = this._bl | 0
  var cl = this._cl | 0
  var dl = this._dl | 0
  var el = this._el | 0
  var fl = this._fl | 0
  var gl = this._gl | 0
  var hl = this._hl | 0

  for (var i = 0; i < 32; i += 2) {
    W[i] = M.readInt32BE(i * 4)
    W[i + 1] = M.readInt32BE(i * 4 + 4)
  }
  for (; i < 160; i += 2) {
    var xh = W[i - 15 * 2]
    var xl = W[i - 15 * 2 + 1]
    var gamma0 = Gamma0(xh, xl)
    var gamma0l = Gamma0l(xl, xh)

    xh = W[i - 2 * 2]
    xl = W[i - 2 * 2 + 1]
    var gamma1 = Gamma1(xh, xl)
    var gamma1l = Gamma1l(xl, xh)

    // W[i] = gamma0 + W[i - 7] + gamma1 + W[i - 16]
    var Wi7h = W[i - 7 * 2]
    var Wi7l = W[i - 7 * 2 + 1]

    var Wi16h = W[i - 16 * 2]
    var Wi16l = W[i - 16 * 2 + 1]

    var Wil = (gamma0l + Wi7l) | 0
    var Wih = (gamma0 + Wi7h + getCarry(Wil, gamma0l)) | 0
    Wil = (Wil + gamma1l) | 0
    Wih = (Wih + gamma1 + getCarry(Wil, gamma1l)) | 0
    Wil = (Wil + Wi16l) | 0
    Wih = (Wih + Wi16h + getCarry(Wil, Wi16l)) | 0

    W[i] = Wih
    W[i + 1] = Wil
  }

  for (var j = 0; j < 160; j += 2) {
    Wih = W[j]
    Wil = W[j + 1]

    var majh = maj(ah, bh, ch)
    var majl = maj(al, bl, cl)

    var sigma0h = sigma0(ah, al)
    var sigma0l = sigma0(al, ah)
    var sigma1h = sigma1(eh, el)
    var sigma1l = sigma1(el, eh)

    // t1 = h + sigma1 + ch + K[j] + W[j]
    var Kih = K[j]
    var Kil = K[j + 1]

    var chh = Ch(eh, fh, gh)
    var chl = Ch(el, fl, gl)

    var t1l = (hl + sigma1l) | 0
    var t1h = (hh + sigma1h + getCarry(t1l, hl)) | 0
    t1l = (t1l + chl) | 0
    t1h = (t1h + chh + getCarry(t1l, chl)) | 0
    t1l = (t1l + Kil) | 0
    t1h = (t1h + Kih + getCarry(t1l, Kil)) | 0
    t1l = (t1l + Wil) | 0
    t1h = (t1h + Wih + getCarry(t1l, Wil)) | 0

    // t2 = sigma0 + maj
    var t2l = (sigma0l + majl) | 0
    var t2h = (sigma0h + majh + getCarry(t2l, sigma0l)) | 0

    hh = gh
    hl = gl
    gh = fh
    gl = fl
    fh = eh
    fl = el
    el = (dl + t1l) | 0
    eh = (dh + t1h + getCarry(el, dl)) | 0
    dh = ch
    dl = cl
    ch = bh
    cl = bl
    bh = ah
    bl = al
    al = (t1l + t2l) | 0
    ah = (t1h + t2h + getCarry(al, t1l)) | 0
  }

  this._al = (this._al + al) | 0
  this._bl = (this._bl + bl) | 0
  this._cl = (this._cl + cl) | 0
  this._dl = (this._dl + dl) | 0
  this._el = (this._el + el) | 0
  this._fl = (this._fl + fl) | 0
  this._gl = (this._gl + gl) | 0
  this._hl = (this._hl + hl) | 0

  this._ah = (this._ah + ah + getCarry(this._al, al)) | 0
  this._bh = (this._bh + bh + getCarry(this._bl, bl)) | 0
  this._ch = (this._ch + ch + getCarry(this._cl, cl)) | 0
  this._dh = (this._dh + dh + getCarry(this._dl, dl)) | 0
  this._eh = (this._eh + eh + getCarry(this._el, el)) | 0
  this._fh = (this._fh + fh + getCarry(this._fl, fl)) | 0
  this._gh = (this._gh + gh + getCarry(this._gl, gl)) | 0
  this._hh = (this._hh + hh + getCarry(this._hl, hl)) | 0
}

Sha512.prototype._hash = function () {
  var H = Buffer.allocUnsafe(64)

  function writeInt64BE (h, l, offset) {
    H.writeInt32BE(h, offset)
    H.writeInt32BE(l, offset + 4)
  }

  writeInt64BE(this._ah, this._al, 0)
  writeInt64BE(this._bh, this._bl, 8)
  writeInt64BE(this._ch, this._cl, 16)
  writeInt64BE(this._dh, this._dl, 24)
  writeInt64BE(this._eh, this._el, 32)
  writeInt64BE(this._fh, this._fl, 40)
  writeInt64BE(this._gh, this._gl, 48)
  writeInt64BE(this._hh, this._hl, 56)

  return H
}

module.exports = Sha512


/***/ }),

/***/ "./node_modules/.3.0.0@events/events.js":
/*!**********************************************!*\
  !*** ./node_modules/.3.0.0@events/events.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.



var R = typeof Reflect === 'object' ? Reflect : null
var ReflectApply = R && typeof R.apply === 'function'
  ? R.apply
  : function ReflectApply(target, receiver, args) {
    return Function.prototype.apply.call(target, receiver, args);
  }

var ReflectOwnKeys
if (R && typeof R.ownKeys === 'function') {
  ReflectOwnKeys = R.ownKeys
} else if (Object.getOwnPropertySymbols) {
  ReflectOwnKeys = function ReflectOwnKeys(target) {
    return Object.getOwnPropertyNames(target)
      .concat(Object.getOwnPropertySymbols(target));
  };
} else {
  ReflectOwnKeys = function ReflectOwnKeys(target) {
    return Object.getOwnPropertyNames(target);
  };
}

function ProcessEmitWarning(warning) {
  if (console && console.warn) console.warn(warning);
}

var NumberIsNaN = Number.isNaN || function NumberIsNaN(value) {
  return value !== value;
}

function EventEmitter() {
  EventEmitter.init.call(this);
}
module.exports = EventEmitter;

// Backwards-compat with node 0.10.x
EventEmitter.EventEmitter = EventEmitter;

EventEmitter.prototype._events = undefined;
EventEmitter.prototype._eventsCount = 0;
EventEmitter.prototype._maxListeners = undefined;

// By default EventEmitters will print a warning if more than 10 listeners are
// added to it. This is a useful default which helps finding memory leaks.
var defaultMaxListeners = 10;

Object.defineProperty(EventEmitter, 'defaultMaxListeners', {
  enumerable: true,
  get: function() {
    return defaultMaxListeners;
  },
  set: function(arg) {
    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {
      throw new RangeError('The value of "defaultMaxListeners" is out of range. It must be a non-negative number. Received ' + arg + '.');
    }
    defaultMaxListeners = arg;
  }
});

EventEmitter.init = function() {

  if (this._events === undefined ||
      this._events === Object.getPrototypeOf(this)._events) {
    this._events = Object.create(null);
    this._eventsCount = 0;
  }

  this._maxListeners = this._maxListeners || undefined;
};

// Obviously not all Emitters should be limited to 10. This function allows
// that to be increased. Set to zero for unlimited.
EventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {
  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {
    throw new RangeError('The value of "n" is out of range. It must be a non-negative number. Received ' + n + '.');
  }
  this._maxListeners = n;
  return this;
};

function $getMaxListeners(that) {
  if (that._maxListeners === undefined)
    return EventEmitter.defaultMaxListeners;
  return that._maxListeners;
}

EventEmitter.prototype.getMaxListeners = function getMaxListeners() {
  return $getMaxListeners(this);
};

EventEmitter.prototype.emit = function emit(type) {
  var args = [];
  for (var i = 1; i < arguments.length; i++) args.push(arguments[i]);
  var doError = (type === 'error');

  var events = this._events;
  if (events !== undefined)
    doError = (doError && events.error === undefined);
  else if (!doError)
    return false;

  // If there is no 'error' event listener then throw.
  if (doError) {
    var er;
    if (args.length > 0)
      er = args[0];
    if (er instanceof Error) {
      // Note: The comments on the `throw` lines are intentional, they show
      // up in Node's output if this results in an unhandled exception.
      throw er; // Unhandled 'error' event
    }
    // At least give some kind of context to the user
    var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));
    err.context = er;
    throw err; // Unhandled 'error' event
  }

  var handler = events[type];

  if (handler === undefined)
    return false;

  if (typeof handler === 'function') {
    ReflectApply(handler, this, args);
  } else {
    var len = handler.length;
    var listeners = arrayClone(handler, len);
    for (var i = 0; i < len; ++i)
      ReflectApply(listeners[i], this, args);
  }

  return true;
};

function _addListener(target, type, listener, prepend) {
  var m;
  var events;
  var existing;

  if (typeof listener !== 'function') {
    throw new TypeError('The "listener" argument must be of type Function. Received type ' + typeof listener);
  }

  events = target._events;
  if (events === undefined) {
    events = target._events = Object.create(null);
    target._eventsCount = 0;
  } else {
    // To avoid recursion in the case that type === "newListener"! Before
    // adding it to the listeners, first emit "newListener".
    if (events.newListener !== undefined) {
      target.emit('newListener', type,
                  listener.listener ? listener.listener : listener);

      // Re-assign `events` because a newListener handler could have caused the
      // this._events to be assigned to a new object
      events = target._events;
    }
    existing = events[type];
  }

  if (existing === undefined) {
    // Optimize the case of one listener. Don't need the extra array object.
    existing = events[type] = listener;
    ++target._eventsCount;
  } else {
    if (typeof existing === 'function') {
      // Adding the second element, need to change to array.
      existing = events[type] =
        prepend ? [listener, existing] : [existing, listener];
      // If we've already got an array, just append.
    } else if (prepend) {
      existing.unshift(listener);
    } else {
      existing.push(listener);
    }

    // Check for listener leak
    m = $getMaxListeners(target);
    if (m > 0 && existing.length > m && !existing.warned) {
      existing.warned = true;
      // No error code for this since it is a Warning
      // eslint-disable-next-line no-restricted-syntax
      var w = new Error('Possible EventEmitter memory leak detected. ' +
                          existing.length + ' ' + String(type) + ' listeners ' +
                          'added. Use emitter.setMaxListeners() to ' +
                          'increase limit');
      w.name = 'MaxListenersExceededWarning';
      w.emitter = target;
      w.type = type;
      w.count = existing.length;
      ProcessEmitWarning(w);
    }
  }

  return target;
}

EventEmitter.prototype.addListener = function addListener(type, listener) {
  return _addListener(this, type, listener, false);
};

EventEmitter.prototype.on = EventEmitter.prototype.addListener;

EventEmitter.prototype.prependListener =
    function prependListener(type, listener) {
      return _addListener(this, type, listener, true);
    };

function onceWrapper() {
  var args = [];
  for (var i = 0; i < arguments.length; i++) args.push(arguments[i]);
  if (!this.fired) {
    this.target.removeListener(this.type, this.wrapFn);
    this.fired = true;
    ReflectApply(this.listener, this.target, args);
  }
}

function _onceWrap(target, type, listener) {
  var state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };
  var wrapped = onceWrapper.bind(state);
  wrapped.listener = listener;
  state.wrapFn = wrapped;
  return wrapped;
}

EventEmitter.prototype.once = function once(type, listener) {
  if (typeof listener !== 'function') {
    throw new TypeError('The "listener" argument must be of type Function. Received type ' + typeof listener);
  }
  this.on(type, _onceWrap(this, type, listener));
  return this;
};

EventEmitter.prototype.prependOnceListener =
    function prependOnceListener(type, listener) {
      if (typeof listener !== 'function') {
        throw new TypeError('The "listener" argument must be of type Function. Received type ' + typeof listener);
      }
      this.prependListener(type, _onceWrap(this, type, listener));
      return this;
    };

// Emits a 'removeListener' event if and only if the listener was removed.
EventEmitter.prototype.removeListener =
    function removeListener(type, listener) {
      var list, events, position, i, originalListener;

      if (typeof listener !== 'function') {
        throw new TypeError('The "listener" argument must be of type Function. Received type ' + typeof listener);
      }

      events = this._events;
      if (events === undefined)
        return this;

      list = events[type];
      if (list === undefined)
        return this;

      if (list === listener || list.listener === listener) {
        if (--this._eventsCount === 0)
          this._events = Object.create(null);
        else {
          delete events[type];
          if (events.removeListener)
            this.emit('removeListener', type, list.listener || listener);
        }
      } else if (typeof list !== 'function') {
        position = -1;

        for (i = list.length - 1; i >= 0; i--) {
          if (list[i] === listener || list[i].listener === listener) {
            originalListener = list[i].listener;
            position = i;
            break;
          }
        }

        if (position < 0)
          return this;

        if (position === 0)
          list.shift();
        else {
          spliceOne(list, position);
        }

        if (list.length === 1)
          events[type] = list[0];

        if (events.removeListener !== undefined)
          this.emit('removeListener', type, originalListener || listener);
      }

      return this;
    };

EventEmitter.prototype.off = EventEmitter.prototype.removeListener;

EventEmitter.prototype.removeAllListeners =
    function removeAllListeners(type) {
      var listeners, events, i;

      events = this._events;
      if (events === undefined)
        return this;

      // not listening for removeListener, no need to emit
      if (events.removeListener === undefined) {
        if (arguments.length === 0) {
          this._events = Object.create(null);
          this._eventsCount = 0;
        } else if (events[type] !== undefined) {
          if (--this._eventsCount === 0)
            this._events = Object.create(null);
          else
            delete events[type];
        }
        return this;
      }

      // emit removeListener for all listeners on all events
      if (arguments.length === 0) {
        var keys = Object.keys(events);
        var key;
        for (i = 0; i < keys.length; ++i) {
          key = keys[i];
          if (key === 'removeListener') continue;
          this.removeAllListeners(key);
        }
        this.removeAllListeners('removeListener');
        this._events = Object.create(null);
        this._eventsCount = 0;
        return this;
      }

      listeners = events[type];

      if (typeof listeners === 'function') {
        this.removeListener(type, listeners);
      } else if (listeners !== undefined) {
        // LIFO order
        for (i = listeners.length - 1; i >= 0; i--) {
          this.removeListener(type, listeners[i]);
        }
      }

      return this;
    };

function _listeners(target, type, unwrap) {
  var events = target._events;

  if (events === undefined)
    return [];

  var evlistener = events[type];
  if (evlistener === undefined)
    return [];

  if (typeof evlistener === 'function')
    return unwrap ? [evlistener.listener || evlistener] : [evlistener];

  return unwrap ?
    unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);
}

EventEmitter.prototype.listeners = function listeners(type) {
  return _listeners(this, type, true);
};

EventEmitter.prototype.rawListeners = function rawListeners(type) {
  return _listeners(this, type, false);
};

EventEmitter.listenerCount = function(emitter, type) {
  if (typeof emitter.listenerCount === 'function') {
    return emitter.listenerCount(type);
  } else {
    return listenerCount.call(emitter, type);
  }
};

EventEmitter.prototype.listenerCount = listenerCount;
function listenerCount(type) {
  var events = this._events;

  if (events !== undefined) {
    var evlistener = events[type];

    if (typeof evlistener === 'function') {
      return 1;
    } else if (evlistener !== undefined) {
      return evlistener.length;
    }
  }

  return 0;
}

EventEmitter.prototype.eventNames = function eventNames() {
  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];
};

function arrayClone(arr, n) {
  var copy = new Array(n);
  for (var i = 0; i < n; ++i)
    copy[i] = arr[i];
  return copy;
}

function spliceOne(list, index) {
  for (; index + 1 < list.length; index++)
    list[index] = list[index + 1];
  list.pop();
}

function unwrapListeners(arr) {
  var ret = new Array(arr.length);
  for (var i = 0; i < ret.length; ++i) {
    ret[i] = arr[i].listener || arr[i];
  }
  return ret;
}


/***/ }),

/***/ "./node_modules/.3.0.17@pbkdf2/browser.js":
/*!************************************************!*\
  !*** ./node_modules/.3.0.17@pbkdf2/browser.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

exports.pbkdf2 = __webpack_require__(/*! ./lib/async */ "./node_modules/.3.0.17@pbkdf2/lib/async.js")
exports.pbkdf2Sync = __webpack_require__(/*! ./lib/sync */ "./node_modules/.3.0.17@pbkdf2/lib/sync-browser.js")


/***/ }),

/***/ "./node_modules/.3.0.17@pbkdf2/lib/async.js":
/*!**************************************************!*\
  !*** ./node_modules/.3.0.17@pbkdf2/lib/async.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(global) {var checkParameters = __webpack_require__(/*! ./precondition */ "./node_modules/.3.0.17@pbkdf2/lib/precondition.js")
var defaultEncoding = __webpack_require__(/*! ./default-encoding */ "./node_modules/.3.0.17@pbkdf2/lib/default-encoding.js")
var sync = __webpack_require__(/*! ./sync */ "./node_modules/.3.0.17@pbkdf2/lib/sync-browser.js")
var Buffer = __webpack_require__(/*! safe-buffer */ "./node_modules/.5.1.2@safe-buffer/index.js").Buffer

var ZERO_BUF
var subtle = global.crypto && global.crypto.subtle
var toBrowser = {
  'sha': 'SHA-1',
  'sha-1': 'SHA-1',
  'sha1': 'SHA-1',
  'sha256': 'SHA-256',
  'sha-256': 'SHA-256',
  'sha384': 'SHA-384',
  'sha-384': 'SHA-384',
  'sha-512': 'SHA-512',
  'sha512': 'SHA-512'
}
var checks = []
function checkNative (algo) {
  if (global.process && !global.process.browser) {
    return Promise.resolve(false)
  }
  if (!subtle || !subtle.importKey || !subtle.deriveBits) {
    return Promise.resolve(false)
  }
  if (checks[algo] !== undefined) {
    return checks[algo]
  }
  ZERO_BUF = ZERO_BUF || Buffer.alloc(8)
  var prom = browserPbkdf2(ZERO_BUF, ZERO_BUF, 10, 128, algo)
    .then(function () {
      return true
    }).catch(function () {
      return false
    })
  checks[algo] = prom
  return prom
}

function browserPbkdf2 (password, salt, iterations, length, algo) {
  return subtle.importKey(
    'raw', password, {name: 'PBKDF2'}, false, ['deriveBits']
  ).then(function (key) {
    return subtle.deriveBits({
      name: 'PBKDF2',
      salt: salt,
      iterations: iterations,
      hash: {
        name: algo
      }
    }, key, length << 3)
  }).then(function (res) {
    return Buffer.from(res)
  })
}

function resolvePromise (promise, callback) {
  promise.then(function (out) {
    process.nextTick(function () {
      callback(null, out)
    })
  }, function (e) {
    process.nextTick(function () {
      callback(e)
    })
  })
}
module.exports = function (password, salt, iterations, keylen, digest, callback) {
  if (typeof digest === 'function') {
    callback = digest
    digest = undefined
  }

  digest = digest || 'sha1'
  var algo = toBrowser[digest.toLowerCase()]

  if (!algo || typeof global.Promise !== 'function') {
    return process.nextTick(function () {
      var out
      try {
        out = sync(password, salt, iterations, keylen, digest)
      } catch (e) {
        return callback(e)
      }
      callback(null, out)
    })
  }

  checkParameters(password, salt, iterations, keylen)
  if (typeof callback !== 'function') throw new Error('No callback provided to pbkdf2')
  if (!Buffer.isBuffer(password)) password = Buffer.from(password, defaultEncoding)
  if (!Buffer.isBuffer(salt)) salt = Buffer.from(salt, defaultEncoding)

  resolvePromise(checkNative(algo).then(function (resp) {
    if (resp) return browserPbkdf2(password, salt, iterations, keylen, algo)

    return sync(password, salt, iterations, keylen, digest)
  }), callback)
}

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../.4.31.0@webpack/buildin/global.js */ "./node_modules/.4.31.0@webpack/buildin/global.js")))

/***/ }),

/***/ "./node_modules/.3.0.17@pbkdf2/lib/default-encoding.js":
/*!*************************************************************!*\
  !*** ./node_modules/.3.0.17@pbkdf2/lib/default-encoding.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

var defaultEncoding
/* istanbul ignore next */
if (process.browser) {
  defaultEncoding = 'utf-8'
} else {
  var pVersionMajor = parseInt(process.version.split('.')[0].slice(1), 10)

  defaultEncoding = pVersionMajor >= 6 ? 'utf-8' : 'binary'
}
module.exports = defaultEncoding


/***/ }),

/***/ "./node_modules/.3.0.17@pbkdf2/lib/precondition.js":
/*!*********************************************************!*\
  !*** ./node_modules/.3.0.17@pbkdf2/lib/precondition.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

var MAX_ALLOC = Math.pow(2, 30) - 1 // default in iojs

function checkBuffer (buf, name) {
  if (typeof buf !== 'string' && !Buffer.isBuffer(buf)) {
    throw new TypeError(name + ' must be a buffer or string')
  }
}

module.exports = function (password, salt, iterations, keylen) {
  checkBuffer(password, 'Password')
  checkBuffer(salt, 'Salt')

  if (typeof iterations !== 'number') {
    throw new TypeError('Iterations not a number')
  }

  if (iterations < 0) {
    throw new TypeError('Bad iterations')
  }

  if (typeof keylen !== 'number') {
    throw new TypeError('Key length not a number')
  }

  if (keylen < 0 || keylen > MAX_ALLOC || keylen !== keylen) { /* eslint no-self-compare: 0 */
    throw new TypeError('Bad key length')
  }
}


/***/ }),

/***/ "./node_modules/.3.0.17@pbkdf2/lib/sync-browser.js":
/*!*********************************************************!*\
  !*** ./node_modules/.3.0.17@pbkdf2/lib/sync-browser.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var md5 = __webpack_require__(/*! create-hash/md5 */ "./node_modules/.1.2.0@create-hash/md5.js")
var RIPEMD160 = __webpack_require__(/*! ripemd160 */ "./node_modules/.2.0.2@ripemd160/index.js")
var sha = __webpack_require__(/*! sha.js */ "./node_modules/.2.4.11@sha.js/index.js")

var checkParameters = __webpack_require__(/*! ./precondition */ "./node_modules/.3.0.17@pbkdf2/lib/precondition.js")
var defaultEncoding = __webpack_require__(/*! ./default-encoding */ "./node_modules/.3.0.17@pbkdf2/lib/default-encoding.js")
var Buffer = __webpack_require__(/*! safe-buffer */ "./node_modules/.5.1.2@safe-buffer/index.js").Buffer
var ZEROS = Buffer.alloc(128)
var sizes = {
  md5: 16,
  sha1: 20,
  sha224: 28,
  sha256: 32,
  sha384: 48,
  sha512: 64,
  rmd160: 20,
  ripemd160: 20
}

function Hmac (alg, key, saltLen) {
  var hash = getDigest(alg)
  var blocksize = (alg === 'sha512' || alg === 'sha384') ? 128 : 64

  if (key.length > blocksize) {
    key = hash(key)
  } else if (key.length < blocksize) {
    key = Buffer.concat([key, ZEROS], blocksize)
  }

  var ipad = Buffer.allocUnsafe(blocksize + sizes[alg])
  var opad = Buffer.allocUnsafe(blocksize + sizes[alg])
  for (var i = 0; i < blocksize; i++) {
    ipad[i] = key[i] ^ 0x36
    opad[i] = key[i] ^ 0x5C
  }

  var ipad1 = Buffer.allocUnsafe(blocksize + saltLen + 4)
  ipad.copy(ipad1, 0, 0, blocksize)
  this.ipad1 = ipad1
  this.ipad2 = ipad
  this.opad = opad
  this.alg = alg
  this.blocksize = blocksize
  this.hash = hash
  this.size = sizes[alg]
}

Hmac.prototype.run = function (data, ipad) {
  data.copy(ipad, this.blocksize)
  var h = this.hash(ipad)
  h.copy(this.opad, this.blocksize)
  return this.hash(this.opad)
}

function getDigest (alg) {
  function shaFunc (data) {
    return sha(alg).update(data).digest()
  }
  function rmd160Func (data) {
    return new RIPEMD160().update(data).digest()
  }

  if (alg === 'rmd160' || alg === 'ripemd160') return rmd160Func
  if (alg === 'md5') return md5
  return shaFunc
}

function pbkdf2 (password, salt, iterations, keylen, digest) {
  checkParameters(password, salt, iterations, keylen)

  if (!Buffer.isBuffer(password)) password = Buffer.from(password, defaultEncoding)
  if (!Buffer.isBuffer(salt)) salt = Buffer.from(salt, defaultEncoding)

  digest = digest || 'sha1'

  var hmac = new Hmac(digest, password, salt.length)

  var DK = Buffer.allocUnsafe(keylen)
  var block1 = Buffer.allocUnsafe(salt.length + 4)
  salt.copy(block1, 0, 0, salt.length)

  var destPos = 0
  var hLen = sizes[digest]
  var l = Math.ceil(keylen / hLen)

  for (var i = 1; i <= l; i++) {
    block1.writeUInt32BE(i, salt.length)

    var T = hmac.run(block1, hmac.ipad1)
    var U = T

    for (var j = 1; j < iterations; j++) {
      U = hmac.run(U, hmac.ipad2)
      for (var k = 0; k < hLen; k++) T[k] ^= U[k]
    }

    T.copy(DK, destPos)
    destPos += hLen
  }

  return DK
}

module.exports = pbkdf2


/***/ }),

/***/ "./node_modules/.3.0.4@hash-base/index.js":
/*!************************************************!*\
  !*** ./node_modules/.3.0.4@hash-base/index.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Buffer = __webpack_require__(/*! safe-buffer */ "./node_modules/.5.1.2@safe-buffer/index.js").Buffer
var Transform = __webpack_require__(/*! stream */ "./node_modules/.2.0.2@stream-browserify/index.js").Transform
var inherits = __webpack_require__(/*! inherits */ "./node_modules/.2.0.3@inherits/inherits_browser.js")

function throwIfNotStringOrBuffer (val, prefix) {
  if (!Buffer.isBuffer(val) && typeof val !== 'string') {
    throw new TypeError(prefix + ' must be a string or a buffer')
  }
}

function HashBase (blockSize) {
  Transform.call(this)

  this._block = Buffer.allocUnsafe(blockSize)
  this._blockSize = blockSize
  this._blockOffset = 0
  this._length = [0, 0, 0, 0]

  this._finalized = false
}

inherits(HashBase, Transform)

HashBase.prototype._transform = function (chunk, encoding, callback) {
  var error = null
  try {
    this.update(chunk, encoding)
  } catch (err) {
    error = err
  }

  callback(error)
}

HashBase.prototype._flush = function (callback) {
  var error = null
  try {
    this.push(this.digest())
  } catch (err) {
    error = err
  }

  callback(error)
}

HashBase.prototype.update = function (data, encoding) {
  throwIfNotStringOrBuffer(data, 'Data')
  if (this._finalized) throw new Error('Digest already called')
  if (!Buffer.isBuffer(data)) data = Buffer.from(data, encoding)

  // consume data
  var block = this._block
  var offset = 0
  while (this._blockOffset + data.length - offset >= this._blockSize) {
    for (var i = this._blockOffset; i < this._blockSize;) block[i++] = data[offset++]
    this._update()
    this._blockOffset = 0
  }
  while (offset < data.length) block[this._blockOffset++] = data[offset++]

  // update length
  for (var j = 0, carry = data.length * 8; carry > 0; ++j) {
    this._length[j] += carry
    carry = (this._length[j] / 0x0100000000) | 0
    if (carry > 0) this._length[j] -= 0x0100000000 * carry
  }

  return this
}

HashBase.prototype._update = function () {
  throw new Error('_update is not implemented')
}

HashBase.prototype.digest = function (encoding) {
  if (this._finalized) throw new Error('Digest already called')
  this._finalized = true

  var digest = this._digest()
  if (encoding !== undefined) digest = digest.toString(encoding)

  // reset state
  this._block.fill(0)
  this._blockOffset = 0
  for (var i = 0; i < 4; ++i) this._length[i] = 0

  return digest
}

HashBase.prototype._digest = function () {
  throw new Error('_digest is not implemented')
}

module.exports = HashBase


/***/ }),

/***/ "./node_modules/.3.12.0@crypto-browserify/index.js":
/*!*********************************************************!*\
  !*** ./node_modules/.3.12.0@crypto-browserify/index.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.randomBytes = exports.rng = exports.pseudoRandomBytes = exports.prng = __webpack_require__(/*! randombytes */ "./node_modules/.2.1.0@randombytes/browser.js")
exports.createHash = exports.Hash = __webpack_require__(/*! create-hash */ "./node_modules/.1.2.0@create-hash/browser.js")
exports.createHmac = exports.Hmac = __webpack_require__(/*! create-hmac */ "./node_modules/.1.1.7@create-hmac/browser.js")

var algos = __webpack_require__(/*! browserify-sign/algos */ "./node_modules/.4.0.4@browserify-sign/algos.js")
var algoKeys = Object.keys(algos)
var hashes = ['sha1', 'sha224', 'sha256', 'sha384', 'sha512', 'md5', 'rmd160'].concat(algoKeys)
exports.getHashes = function () {
  return hashes
}

var p = __webpack_require__(/*! pbkdf2 */ "./node_modules/.3.0.17@pbkdf2/browser.js")
exports.pbkdf2 = p.pbkdf2
exports.pbkdf2Sync = p.pbkdf2Sync

var aes = __webpack_require__(/*! browserify-cipher */ "./node_modules/.1.0.1@browserify-cipher/browser.js")

exports.Cipher = aes.Cipher
exports.createCipher = aes.createCipher
exports.Cipheriv = aes.Cipheriv
exports.createCipheriv = aes.createCipheriv
exports.Decipher = aes.Decipher
exports.createDecipher = aes.createDecipher
exports.Decipheriv = aes.Decipheriv
exports.createDecipheriv = aes.createDecipheriv
exports.getCiphers = aes.getCiphers
exports.listCiphers = aes.listCiphers

var dh = __webpack_require__(/*! diffie-hellman */ "./node_modules/.5.0.3@diffie-hellman/browser.js")

exports.DiffieHellmanGroup = dh.DiffieHellmanGroup
exports.createDiffieHellmanGroup = dh.createDiffieHellmanGroup
exports.getDiffieHellman = dh.getDiffieHellman
exports.createDiffieHellman = dh.createDiffieHellman
exports.DiffieHellman = dh.DiffieHellman

var sign = __webpack_require__(/*! browserify-sign */ "./node_modules/.4.0.4@browserify-sign/browser/index.js")

exports.createSign = sign.createSign
exports.Sign = sign.Sign
exports.createVerify = sign.createVerify
exports.Verify = sign.Verify

exports.createECDH = __webpack_require__(/*! create-ecdh */ "./node_modules/.4.0.3@create-ecdh/browser.js")

var publicEncrypt = __webpack_require__(/*! public-encrypt */ "./node_modules/.4.0.3@public-encrypt/browser.js")

exports.publicEncrypt = publicEncrypt.publicEncrypt
exports.privateEncrypt = publicEncrypt.privateEncrypt
exports.publicDecrypt = publicEncrypt.publicDecrypt
exports.privateDecrypt = publicEncrypt.privateDecrypt

// the least I can do is make error messages for the rest of the node.js/crypto api.
// ;[
//   'createCredentials'
// ].forEach(function (name) {
//   exports[name] = function () {
//     throw new Error([
//       'sorry, ' + name + ' is not implemented yet',
//       'we accept pull requests',
//       'https://github.com/crypto-browserify/crypto-browserify'
//     ].join('\n'))
//   }
// })

var rf = __webpack_require__(/*! randomfill */ "./node_modules/.1.0.4@randomfill/browser.js")

exports.randomFill = rf.randomFill
exports.randomFillSync = rf.randomFillSync

exports.createCredentials = function () {
  throw new Error([
    'sorry, createCredentials is not implemented yet',
    'we accept pull requests',
    'https://github.com/crypto-browserify/crypto-browserify'
  ].join('\n'))
}

exports.constants = {
  'DH_CHECK_P_NOT_SAFE_PRIME': 2,
  'DH_CHECK_P_NOT_PRIME': 1,
  'DH_UNABLE_TO_CHECK_GENERATOR': 4,
  'DH_NOT_SUITABLE_GENERATOR': 8,
  'NPN_ENABLED': 1,
  'ALPN_ENABLED': 1,
  'RSA_PKCS1_PADDING': 1,
  'RSA_SSLV23_PADDING': 2,
  'RSA_NO_PADDING': 3,
  'RSA_PKCS1_OAEP_PADDING': 4,
  'RSA_X931_PADDING': 5,
  'RSA_PKCS1_PSS_PADDING': 6,
  'POINT_CONVERSION_COMPRESSED': 2,
  'POINT_CONVERSION_UNCOMPRESSED': 4,
  'POINT_CONVERSION_HYBRID': 6
}


/***/ }),

/***/ "./node_modules/.4.0.1@browserify-rsa/index.js":
/*!*****************************************************!*\
  !*** ./node_modules/.4.0.1@browserify-rsa/index.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var bn = __webpack_require__(/*! bn.js */ "./node_modules/.4.11.8@bn.js/lib/bn.js");
var randomBytes = __webpack_require__(/*! randombytes */ "./node_modules/.2.1.0@randombytes/browser.js");
module.exports = crt;
function blind(priv) {
  var r = getr(priv);
  var blinder = r.toRed(bn.mont(priv.modulus))
  .redPow(new bn(priv.publicExponent)).fromRed();
  return {
    blinder: blinder,
    unblinder:r.invm(priv.modulus)
  };
}
function crt(msg, priv) {
  var blinds = blind(priv);
  var len = priv.modulus.byteLength();
  var mod = bn.mont(priv.modulus);
  var blinded = new bn(msg).mul(blinds.blinder).umod(priv.modulus);
  var c1 = blinded.toRed(bn.mont(priv.prime1));
  var c2 = blinded.toRed(bn.mont(priv.prime2));
  var qinv = priv.coefficient;
  var p = priv.prime1;
  var q = priv.prime2;
  var m1 = c1.redPow(priv.exponent1);
  var m2 = c2.redPow(priv.exponent2);
  m1 = m1.fromRed();
  m2 = m2.fromRed();
  var h = m1.isub(m2).imul(qinv).umod(p);
  h.imul(q);
  m2.iadd(h);
  return new Buffer(m2.imul(blinds.unblinder).umod(priv.modulus).toArray(false, len));
}
crt.getr = getr;
function getr(priv) {
  var len = priv.modulus.byteLength();
  var r = new bn(randomBytes(len));
  while (r.cmp(priv.modulus) >=  0 || !r.umod(priv.prime1) || !r.umod(priv.prime2)) {
    r = new bn(randomBytes(len));
  }
  return r;
}


/***/ }),

/***/ "./node_modules/.4.0.1@miller-rabin/lib/mr.js":
/*!****************************************************!*\
  !*** ./node_modules/.4.0.1@miller-rabin/lib/mr.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var bn = __webpack_require__(/*! bn.js */ "./node_modules/.4.11.8@bn.js/lib/bn.js");
var brorand = __webpack_require__(/*! brorand */ "./node_modules/.1.1.0@brorand/index.js");

function MillerRabin(rand) {
  this.rand = rand || new brorand.Rand();
}
module.exports = MillerRabin;

MillerRabin.create = function create(rand) {
  return new MillerRabin(rand);
};

MillerRabin.prototype._randbelow = function _randbelow(n) {
  var len = n.bitLength();
  var min_bytes = Math.ceil(len / 8);

  // Generage random bytes until a number less than n is found.
  // This ensures that 0..n-1 have an equal probability of being selected.
  do
    var a = new bn(this.rand.generate(min_bytes));
  while (a.cmp(n) >= 0);

  return a;
};

MillerRabin.prototype._randrange = function _randrange(start, stop) {
  // Generate a random number greater than or equal to start and less than stop.
  var size = stop.sub(start);
  return start.add(this._randbelow(size));
};

MillerRabin.prototype.test = function test(n, k, cb) {
  var len = n.bitLength();
  var red = bn.mont(n);
  var rone = new bn(1).toRed(red);

  if (!k)
    k = Math.max(1, (len / 48) | 0);

  // Find d and s, (n - 1) = (2 ^ s) * d;
  var n1 = n.subn(1);
  for (var s = 0; !n1.testn(s); s++) {}
  var d = n.shrn(s);

  var rn1 = n1.toRed(red);

  var prime = true;
  for (; k > 0; k--) {
    var a = this._randrange(new bn(2), n1);
    if (cb)
      cb(a);

    var x = a.toRed(red).redPow(d);
    if (x.cmp(rone) === 0 || x.cmp(rn1) === 0)
      continue;

    for (var i = 1; i < s; i++) {
      x = x.redSqr();

      if (x.cmp(rone) === 0)
        return false;
      if (x.cmp(rn1) === 0)
        break;
    }

    if (i === s)
      return false;
  }

  return prime;
};

MillerRabin.prototype.getDivisor = function getDivisor(n, k) {
  var len = n.bitLength();
  var red = bn.mont(n);
  var rone = new bn(1).toRed(red);

  if (!k)
    k = Math.max(1, (len / 48) | 0);

  // Find d and s, (n - 1) = (2 ^ s) * d;
  var n1 = n.subn(1);
  for (var s = 0; !n1.testn(s); s++) {}
  var d = n.shrn(s);

  var rn1 = n1.toRed(red);

  for (; k > 0; k--) {
    var a = this._randrange(new bn(2), n1);

    var g = n.gcd(a);
    if (g.cmpn(1) !== 0)
      return g;

    var x = a.toRed(red).redPow(d);
    if (x.cmp(rone) === 0 || x.cmp(rn1) === 0)
      continue;

    for (var i = 1; i < s; i++) {
      x = x.redSqr();

      if (x.cmp(rone) === 0)
        return x.fromRed().subn(1).gcd(n);
      if (x.cmp(rn1) === 0)
        break;
    }

    if (i === s) {
      x = x.redSqr();
      return x.fromRed().subn(1).gcd(n);
    }
  }

  return false;
};


/***/ }),

/***/ "./node_modules/.4.0.3@create-ecdh/browser.js":
/*!****************************************************!*\
  !*** ./node_modules/.4.0.3@create-ecdh/browser.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var elliptic = __webpack_require__(/*! elliptic */ "./node_modules/.6.4.1@elliptic/lib/elliptic.js")
var BN = __webpack_require__(/*! bn.js */ "./node_modules/.4.11.8@bn.js/lib/bn.js")

module.exports = function createECDH (curve) {
  return new ECDH(curve)
}

var aliases = {
  secp256k1: {
    name: 'secp256k1',
    byteLength: 32
  },
  secp224r1: {
    name: 'p224',
    byteLength: 28
  },
  prime256v1: {
    name: 'p256',
    byteLength: 32
  },
  prime192v1: {
    name: 'p192',
    byteLength: 24
  },
  ed25519: {
    name: 'ed25519',
    byteLength: 32
  },
  secp384r1: {
    name: 'p384',
    byteLength: 48
  },
  secp521r1: {
    name: 'p521',
    byteLength: 66
  }
}

aliases.p224 = aliases.secp224r1
aliases.p256 = aliases.secp256r1 = aliases.prime256v1
aliases.p192 = aliases.secp192r1 = aliases.prime192v1
aliases.p384 = aliases.secp384r1
aliases.p521 = aliases.secp521r1

function ECDH (curve) {
  this.curveType = aliases[curve]
  if (!this.curveType) {
    this.curveType = {
      name: curve
    }
  }
  this.curve = new elliptic.ec(this.curveType.name) // eslint-disable-line new-cap
  this.keys = void 0
}

ECDH.prototype.generateKeys = function (enc, format) {
  this.keys = this.curve.genKeyPair()
  return this.getPublicKey(enc, format)
}

ECDH.prototype.computeSecret = function (other, inenc, enc) {
  inenc = inenc || 'utf8'
  if (!Buffer.isBuffer(other)) {
    other = new Buffer(other, inenc)
  }
  var otherPub = this.curve.keyFromPublic(other).getPublic()
  var out = otherPub.mul(this.keys.getPrivate()).getX()
  return formatReturnValue(out, enc, this.curveType.byteLength)
}

ECDH.prototype.getPublicKey = function (enc, format) {
  var key = this.keys.getPublic(format === 'compressed', true)
  if (format === 'hybrid') {
    if (key[key.length - 1] % 2) {
      key[0] = 7
    } else {
      key[0] = 6
    }
  }
  return formatReturnValue(key, enc)
}

ECDH.prototype.getPrivateKey = function (enc) {
  return formatReturnValue(this.keys.getPrivate(), enc)
}

ECDH.prototype.setPublicKey = function (pub, enc) {
  enc = enc || 'utf8'
  if (!Buffer.isBuffer(pub)) {
    pub = new Buffer(pub, enc)
  }
  this.keys._importPublic(pub)
  return this
}

ECDH.prototype.setPrivateKey = function (priv, enc) {
  enc = enc || 'utf8'
  if (!Buffer.isBuffer(priv)) {
    priv = new Buffer(priv, enc)
  }

  var _priv = new BN(priv)
  _priv = _priv.toString(16)
  this.keys = this.curve.genKeyPair()
  this.keys._importPrivate(_priv)
  return this
}

function formatReturnValue (bn, enc, len) {
  if (!Array.isArray(bn)) {
    bn = bn.toArray()
  }
  var buf = new Buffer(bn)
  if (len && buf.length < len) {
    var zeros = new Buffer(len - buf.length)
    zeros.fill(0)
    buf = Buffer.concat([zeros, buf])
  }
  if (!enc) {
    return buf
  } else {
    return buf.toString(enc)
  }
}


/***/ }),

/***/ "./node_modules/.4.0.3@public-encrypt/browser.js":
/*!*******************************************************!*\
  !*** ./node_modules/.4.0.3@public-encrypt/browser.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

exports.publicEncrypt = __webpack_require__(/*! ./publicEncrypt */ "./node_modules/.4.0.3@public-encrypt/publicEncrypt.js")
exports.privateDecrypt = __webpack_require__(/*! ./privateDecrypt */ "./node_modules/.4.0.3@public-encrypt/privateDecrypt.js")

exports.privateEncrypt = function privateEncrypt (key, buf) {
  return exports.publicEncrypt(key, buf, true)
}

exports.publicDecrypt = function publicDecrypt (key, buf) {
  return exports.privateDecrypt(key, buf, true)
}


/***/ }),

/***/ "./node_modules/.4.0.3@public-encrypt/mgf.js":
/*!***************************************************!*\
  !*** ./node_modules/.4.0.3@public-encrypt/mgf.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var createHash = __webpack_require__(/*! create-hash */ "./node_modules/.1.2.0@create-hash/browser.js")
var Buffer = __webpack_require__(/*! safe-buffer */ "./node_modules/.5.1.2@safe-buffer/index.js").Buffer

module.exports = function (seed, len) {
  var t = Buffer.alloc(0)
  var i = 0
  var c
  while (t.length < len) {
    c = i2ops(i++)
    t = Buffer.concat([t, createHash('sha1').update(seed).update(c).digest()])
  }
  return t.slice(0, len)
}

function i2ops (c) {
  var out = Buffer.allocUnsafe(4)
  out.writeUInt32BE(c, 0)
  return out
}


/***/ }),

/***/ "./node_modules/.4.0.3@public-encrypt/privateDecrypt.js":
/*!**************************************************************!*\
  !*** ./node_modules/.4.0.3@public-encrypt/privateDecrypt.js ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var parseKeys = __webpack_require__(/*! parse-asn1 */ "./node_modules/.5.1.4@parse-asn1/index.js")
var mgf = __webpack_require__(/*! ./mgf */ "./node_modules/.4.0.3@public-encrypt/mgf.js")
var xor = __webpack_require__(/*! ./xor */ "./node_modules/.4.0.3@public-encrypt/xor.js")
var BN = __webpack_require__(/*! bn.js */ "./node_modules/.4.11.8@bn.js/lib/bn.js")
var crt = __webpack_require__(/*! browserify-rsa */ "./node_modules/.4.0.1@browserify-rsa/index.js")
var createHash = __webpack_require__(/*! create-hash */ "./node_modules/.1.2.0@create-hash/browser.js")
var withPublic = __webpack_require__(/*! ./withPublic */ "./node_modules/.4.0.3@public-encrypt/withPublic.js")
var Buffer = __webpack_require__(/*! safe-buffer */ "./node_modules/.5.1.2@safe-buffer/index.js").Buffer

module.exports = function privateDecrypt (privateKey, enc, reverse) {
  var padding
  if (privateKey.padding) {
    padding = privateKey.padding
  } else if (reverse) {
    padding = 1
  } else {
    padding = 4
  }

  var key = parseKeys(privateKey)
  var k = key.modulus.byteLength()
  if (enc.length > k || new BN(enc).cmp(key.modulus) >= 0) {
    throw new Error('decryption error')
  }
  var msg
  if (reverse) {
    msg = withPublic(new BN(enc), key)
  } else {
    msg = crt(enc, key)
  }
  var zBuffer = Buffer.alloc(k - msg.length)
  msg = Buffer.concat([zBuffer, msg], k)
  if (padding === 4) {
    return oaep(key, msg)
  } else if (padding === 1) {
    return pkcs1(key, msg, reverse)
  } else if (padding === 3) {
    return msg
  } else {
    throw new Error('unknown padding')
  }
}

function oaep (key, msg) {
  var k = key.modulus.byteLength()
  var iHash = createHash('sha1').update(Buffer.alloc(0)).digest()
  var hLen = iHash.length
  if (msg[0] !== 0) {
    throw new Error('decryption error')
  }
  var maskedSeed = msg.slice(1, hLen + 1)
  var maskedDb = msg.slice(hLen + 1)
  var seed = xor(maskedSeed, mgf(maskedDb, hLen))
  var db = xor(maskedDb, mgf(seed, k - hLen - 1))
  if (compare(iHash, db.slice(0, hLen))) {
    throw new Error('decryption error')
  }
  var i = hLen
  while (db[i] === 0) {
    i++
  }
  if (db[i++] !== 1) {
    throw new Error('decryption error')
  }
  return db.slice(i)
}

function pkcs1 (key, msg, reverse) {
  var p1 = msg.slice(0, 2)
  var i = 2
  var status = 0
  while (msg[i++] !== 0) {
    if (i >= msg.length) {
      status++
      break
    }
  }
  var ps = msg.slice(2, i - 1)

  if ((p1.toString('hex') !== '0002' && !reverse) || (p1.toString('hex') !== '0001' && reverse)) {
    status++
  }
  if (ps.length < 8) {
    status++
  }
  if (status) {
    throw new Error('decryption error')
  }
  return msg.slice(i)
}
function compare (a, b) {
  a = Buffer.from(a)
  b = Buffer.from(b)
  var dif = 0
  var len = a.length
  if (a.length !== b.length) {
    dif++
    len = Math.min(a.length, b.length)
  }
  var i = -1
  while (++i < len) {
    dif += (a[i] ^ b[i])
  }
  return dif
}


/***/ }),

/***/ "./node_modules/.4.0.3@public-encrypt/publicEncrypt.js":
/*!*************************************************************!*\
  !*** ./node_modules/.4.0.3@public-encrypt/publicEncrypt.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var parseKeys = __webpack_require__(/*! parse-asn1 */ "./node_modules/.5.1.4@parse-asn1/index.js")
var randomBytes = __webpack_require__(/*! randombytes */ "./node_modules/.2.1.0@randombytes/browser.js")
var createHash = __webpack_require__(/*! create-hash */ "./node_modules/.1.2.0@create-hash/browser.js")
var mgf = __webpack_require__(/*! ./mgf */ "./node_modules/.4.0.3@public-encrypt/mgf.js")
var xor = __webpack_require__(/*! ./xor */ "./node_modules/.4.0.3@public-encrypt/xor.js")
var BN = __webpack_require__(/*! bn.js */ "./node_modules/.4.11.8@bn.js/lib/bn.js")
var withPublic = __webpack_require__(/*! ./withPublic */ "./node_modules/.4.0.3@public-encrypt/withPublic.js")
var crt = __webpack_require__(/*! browserify-rsa */ "./node_modules/.4.0.1@browserify-rsa/index.js")
var Buffer = __webpack_require__(/*! safe-buffer */ "./node_modules/.5.1.2@safe-buffer/index.js").Buffer

module.exports = function publicEncrypt (publicKey, msg, reverse) {
  var padding
  if (publicKey.padding) {
    padding = publicKey.padding
  } else if (reverse) {
    padding = 1
  } else {
    padding = 4
  }
  var key = parseKeys(publicKey)
  var paddedMsg
  if (padding === 4) {
    paddedMsg = oaep(key, msg)
  } else if (padding === 1) {
    paddedMsg = pkcs1(key, msg, reverse)
  } else if (padding === 3) {
    paddedMsg = new BN(msg)
    if (paddedMsg.cmp(key.modulus) >= 0) {
      throw new Error('data too long for modulus')
    }
  } else {
    throw new Error('unknown padding')
  }
  if (reverse) {
    return crt(paddedMsg, key)
  } else {
    return withPublic(paddedMsg, key)
  }
}

function oaep (key, msg) {
  var k = key.modulus.byteLength()
  var mLen = msg.length
  var iHash = createHash('sha1').update(Buffer.alloc(0)).digest()
  var hLen = iHash.length
  var hLen2 = 2 * hLen
  if (mLen > k - hLen2 - 2) {
    throw new Error('message too long')
  }
  var ps = Buffer.alloc(k - mLen - hLen2 - 2)
  var dblen = k - hLen - 1
  var seed = randomBytes(hLen)
  var maskedDb = xor(Buffer.concat([iHash, ps, Buffer.alloc(1, 1), msg], dblen), mgf(seed, dblen))
  var maskedSeed = xor(seed, mgf(maskedDb, hLen))
  return new BN(Buffer.concat([Buffer.alloc(1), maskedSeed, maskedDb], k))
}
function pkcs1 (key, msg, reverse) {
  var mLen = msg.length
  var k = key.modulus.byteLength()
  if (mLen > k - 11) {
    throw new Error('message too long')
  }
  var ps
  if (reverse) {
    ps = Buffer.alloc(k - mLen - 3, 0xff)
  } else {
    ps = nonZero(k - mLen - 3)
  }
  return new BN(Buffer.concat([Buffer.from([0, reverse ? 1 : 2]), ps, Buffer.alloc(1), msg], k))
}
function nonZero (len) {
  var out = Buffer.allocUnsafe(len)
  var i = 0
  var cache = randomBytes(len * 2)
  var cur = 0
  var num
  while (i < len) {
    if (cur === cache.length) {
      cache = randomBytes(len * 2)
      cur = 0
    }
    num = cache[cur++]
    if (num) {
      out[i++] = num
    }
  }
  return out
}


/***/ }),

/***/ "./node_modules/.4.0.3@public-encrypt/withPublic.js":
/*!**********************************************************!*\
  !*** ./node_modules/.4.0.3@public-encrypt/withPublic.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var BN = __webpack_require__(/*! bn.js */ "./node_modules/.4.11.8@bn.js/lib/bn.js")
var Buffer = __webpack_require__(/*! safe-buffer */ "./node_modules/.5.1.2@safe-buffer/index.js").Buffer

function withPublic (paddedMsg, key) {
  return Buffer.from(paddedMsg
    .toRed(BN.mont(key.modulus))
    .redPow(new BN(key.publicExponent))
    .fromRed()
    .toArray())
}

module.exports = withPublic


/***/ }),

/***/ "./node_modules/.4.0.3@public-encrypt/xor.js":
/*!***************************************************!*\
  !*** ./node_modules/.4.0.3@public-encrypt/xor.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = function xor (a, b) {
  var len = a.length
  var i = -1
  while (++i < len) {
    a[i] ^= b[i]
  }
  return a
}


/***/ }),

/***/ "./node_modules/.4.0.4@browserify-sign/algos.js":
/*!******************************************************!*\
  !*** ./node_modules/.4.0.4@browserify-sign/algos.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(/*! ./browser/algorithms.json */ "./node_modules/.4.0.4@browserify-sign/browser/algorithms.json")


/***/ }),

/***/ "./node_modules/.4.0.4@browserify-sign/browser/algorithms.json":
/*!*********************************************************************!*\
  !*** ./node_modules/.4.0.4@browserify-sign/browser/algorithms.json ***!
  \*********************************************************************/
/*! exports provided: sha224WithRSAEncryption, RSA-SHA224, sha256WithRSAEncryption, RSA-SHA256, sha384WithRSAEncryption, RSA-SHA384, sha512WithRSAEncryption, RSA-SHA512, RSA-SHA1, ecdsa-with-SHA1, sha256, sha224, sha384, sha512, DSA-SHA, DSA-SHA1, DSA, DSA-WITH-SHA224, DSA-SHA224, DSA-WITH-SHA256, DSA-SHA256, DSA-WITH-SHA384, DSA-SHA384, DSA-WITH-SHA512, DSA-SHA512, DSA-RIPEMD160, ripemd160WithRSA, RSA-RIPEMD160, md5WithRSAEncryption, RSA-MD5, default */
/***/ (function(module) {

module.exports = {"sha224WithRSAEncryption":{"sign":"rsa","hash":"sha224","id":"302d300d06096086480165030402040500041c"},"RSA-SHA224":{"sign":"ecdsa/rsa","hash":"sha224","id":"302d300d06096086480165030402040500041c"},"sha256WithRSAEncryption":{"sign":"rsa","hash":"sha256","id":"3031300d060960864801650304020105000420"},"RSA-SHA256":{"sign":"ecdsa/rsa","hash":"sha256","id":"3031300d060960864801650304020105000420"},"sha384WithRSAEncryption":{"sign":"rsa","hash":"sha384","id":"3041300d060960864801650304020205000430"},"RSA-SHA384":{"sign":"ecdsa/rsa","hash":"sha384","id":"3041300d060960864801650304020205000430"},"sha512WithRSAEncryption":{"sign":"rsa","hash":"sha512","id":"3051300d060960864801650304020305000440"},"RSA-SHA512":{"sign":"ecdsa/rsa","hash":"sha512","id":"3051300d060960864801650304020305000440"},"RSA-SHA1":{"sign":"rsa","hash":"sha1","id":"3021300906052b0e03021a05000414"},"ecdsa-with-SHA1":{"sign":"ecdsa","hash":"sha1","id":""},"sha256":{"sign":"ecdsa","hash":"sha256","id":""},"sha224":{"sign":"ecdsa","hash":"sha224","id":""},"sha384":{"sign":"ecdsa","hash":"sha384","id":""},"sha512":{"sign":"ecdsa","hash":"sha512","id":""},"DSA-SHA":{"sign":"dsa","hash":"sha1","id":""},"DSA-SHA1":{"sign":"dsa","hash":"sha1","id":""},"DSA":{"sign":"dsa","hash":"sha1","id":""},"DSA-WITH-SHA224":{"sign":"dsa","hash":"sha224","id":""},"DSA-SHA224":{"sign":"dsa","hash":"sha224","id":""},"DSA-WITH-SHA256":{"sign":"dsa","hash":"sha256","id":""},"DSA-SHA256":{"sign":"dsa","hash":"sha256","id":""},"DSA-WITH-SHA384":{"sign":"dsa","hash":"sha384","id":""},"DSA-SHA384":{"sign":"dsa","hash":"sha384","id":""},"DSA-WITH-SHA512":{"sign":"dsa","hash":"sha512","id":""},"DSA-SHA512":{"sign":"dsa","hash":"sha512","id":""},"DSA-RIPEMD160":{"sign":"dsa","hash":"rmd160","id":""},"ripemd160WithRSA":{"sign":"rsa","hash":"rmd160","id":"3021300906052b2403020105000414"},"RSA-RIPEMD160":{"sign":"rsa","hash":"rmd160","id":"3021300906052b2403020105000414"},"md5WithRSAEncryption":{"sign":"rsa","hash":"md5","id":"3020300c06082a864886f70d020505000410"},"RSA-MD5":{"sign":"rsa","hash":"md5","id":"3020300c06082a864886f70d020505000410"}};

/***/ }),

/***/ "./node_modules/.4.0.4@browserify-sign/browser/curves.json":
/*!*****************************************************************!*\
  !*** ./node_modules/.4.0.4@browserify-sign/browser/curves.json ***!
  \*****************************************************************/
/*! exports provided: 1.3.132.0.10, 1.3.132.0.33, 1.2.840.10045.3.1.1, 1.2.840.10045.3.1.7, 1.3.132.0.34, 1.3.132.0.35, default */
/***/ (function(module) {

module.exports = {"1.3.132.0.10":"secp256k1","1.3.132.0.33":"p224","1.2.840.10045.3.1.1":"p192","1.2.840.10045.3.1.7":"p256","1.3.132.0.34":"p384","1.3.132.0.35":"p521"};

/***/ }),

/***/ "./node_modules/.4.0.4@browserify-sign/browser/index.js":
/*!**************************************************************!*\
  !*** ./node_modules/.4.0.4@browserify-sign/browser/index.js ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var createHash = __webpack_require__(/*! create-hash */ "./node_modules/.1.2.0@create-hash/browser.js")
var stream = __webpack_require__(/*! stream */ "./node_modules/.2.0.2@stream-browserify/index.js")
var inherits = __webpack_require__(/*! inherits */ "./node_modules/.2.0.3@inherits/inherits_browser.js")
var sign = __webpack_require__(/*! ./sign */ "./node_modules/.4.0.4@browserify-sign/browser/sign.js")
var verify = __webpack_require__(/*! ./verify */ "./node_modules/.4.0.4@browserify-sign/browser/verify.js")

var algorithms = __webpack_require__(/*! ./algorithms.json */ "./node_modules/.4.0.4@browserify-sign/browser/algorithms.json")
Object.keys(algorithms).forEach(function (key) {
  algorithms[key].id = new Buffer(algorithms[key].id, 'hex')
  algorithms[key.toLowerCase()] = algorithms[key]
})

function Sign (algorithm) {
  stream.Writable.call(this)

  var data = algorithms[algorithm]
  if (!data) throw new Error('Unknown message digest')

  this._hashType = data.hash
  this._hash = createHash(data.hash)
  this._tag = data.id
  this._signType = data.sign
}
inherits(Sign, stream.Writable)

Sign.prototype._write = function _write (data, _, done) {
  this._hash.update(data)
  done()
}

Sign.prototype.update = function update (data, enc) {
  if (typeof data === 'string') data = new Buffer(data, enc)

  this._hash.update(data)
  return this
}

Sign.prototype.sign = function signMethod (key, enc) {
  this.end()
  var hash = this._hash.digest()
  var sig = sign(hash, key, this._hashType, this._signType, this._tag)

  return enc ? sig.toString(enc) : sig
}

function Verify (algorithm) {
  stream.Writable.call(this)

  var data = algorithms[algorithm]
  if (!data) throw new Error('Unknown message digest')

  this._hash = createHash(data.hash)
  this._tag = data.id
  this._signType = data.sign
}
inherits(Verify, stream.Writable)

Verify.prototype._write = function _write (data, _, done) {
  this._hash.update(data)
  done()
}

Verify.prototype.update = function update (data, enc) {
  if (typeof data === 'string') data = new Buffer(data, enc)

  this._hash.update(data)
  return this
}

Verify.prototype.verify = function verifyMethod (key, sig, enc) {
  if (typeof sig === 'string') sig = new Buffer(sig, enc)

  this.end()
  var hash = this._hash.digest()
  return verify(sig, hash, key, this._signType, this._tag)
}

function createSign (algorithm) {
  return new Sign(algorithm)
}

function createVerify (algorithm) {
  return new Verify(algorithm)
}

module.exports = {
  Sign: createSign,
  Verify: createVerify,
  createSign: createSign,
  createVerify: createVerify
}


/***/ }),

/***/ "./node_modules/.4.0.4@browserify-sign/browser/sign.js":
/*!*************************************************************!*\
  !*** ./node_modules/.4.0.4@browserify-sign/browser/sign.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// much of this based on https://github.com/indutny/self-signed/blob/gh-pages/lib/rsa.js
var createHmac = __webpack_require__(/*! create-hmac */ "./node_modules/.1.1.7@create-hmac/browser.js")
var crt = __webpack_require__(/*! browserify-rsa */ "./node_modules/.4.0.1@browserify-rsa/index.js")
var EC = __webpack_require__(/*! elliptic */ "./node_modules/.6.4.1@elliptic/lib/elliptic.js").ec
var BN = __webpack_require__(/*! bn.js */ "./node_modules/.4.11.8@bn.js/lib/bn.js")
var parseKeys = __webpack_require__(/*! parse-asn1 */ "./node_modules/.5.1.4@parse-asn1/index.js")
var curves = __webpack_require__(/*! ./curves.json */ "./node_modules/.4.0.4@browserify-sign/browser/curves.json")

function sign (hash, key, hashType, signType, tag) {
  var priv = parseKeys(key)
  if (priv.curve) {
    // rsa keys can be interpreted as ecdsa ones in openssl
    if (signType !== 'ecdsa' && signType !== 'ecdsa/rsa') throw new Error('wrong private key type')
    return ecSign(hash, priv)
  } else if (priv.type === 'dsa') {
    if (signType !== 'dsa') throw new Error('wrong private key type')
    return dsaSign(hash, priv, hashType)
  } else {
    if (signType !== 'rsa' && signType !== 'ecdsa/rsa') throw new Error('wrong private key type')
  }
  hash = Buffer.concat([tag, hash])
  var len = priv.modulus.byteLength()
  var pad = [ 0, 1 ]
  while (hash.length + pad.length + 1 < len) pad.push(0xff)
  pad.push(0x00)
  var i = -1
  while (++i < hash.length) pad.push(hash[i])

  var out = crt(pad, priv)
  return out
}

function ecSign (hash, priv) {
  var curveId = curves[priv.curve.join('.')]
  if (!curveId) throw new Error('unknown curve ' + priv.curve.join('.'))

  var curve = new EC(curveId)
  var key = curve.keyFromPrivate(priv.privateKey)
  var out = key.sign(hash)

  return new Buffer(out.toDER())
}

function dsaSign (hash, priv, algo) {
  var x = priv.params.priv_key
  var p = priv.params.p
  var q = priv.params.q
  var g = priv.params.g
  var r = new BN(0)
  var k
  var H = bits2int(hash, q).mod(q)
  var s = false
  var kv = getKey(x, q, hash, algo)
  while (s === false) {
    k = makeKey(q, kv, algo)
    r = makeR(g, k, p, q)
    s = k.invm(q).imul(H.add(x.mul(r))).mod(q)
    if (s.cmpn(0) === 0) {
      s = false
      r = new BN(0)
    }
  }
  return toDER(r, s)
}

function toDER (r, s) {
  r = r.toArray()
  s = s.toArray()

  // Pad values
  if (r[0] & 0x80) r = [ 0 ].concat(r)
  if (s[0] & 0x80) s = [ 0 ].concat(s)

  var total = r.length + s.length + 4
  var res = [ 0x30, total, 0x02, r.length ]
  res = res.concat(r, [ 0x02, s.length ], s)
  return new Buffer(res)
}

function getKey (x, q, hash, algo) {
  x = new Buffer(x.toArray())
  if (x.length < q.byteLength()) {
    var zeros = new Buffer(q.byteLength() - x.length)
    zeros.fill(0)
    x = Buffer.concat([ zeros, x ])
  }
  var hlen = hash.length
  var hbits = bits2octets(hash, q)
  var v = new Buffer(hlen)
  v.fill(1)
  var k = new Buffer(hlen)
  k.fill(0)
  k = createHmac(algo, k).update(v).update(new Buffer([ 0 ])).update(x).update(hbits).digest()
  v = createHmac(algo, k).update(v).digest()
  k = createHmac(algo, k).update(v).update(new Buffer([ 1 ])).update(x).update(hbits).digest()
  v = createHmac(algo, k).update(v).digest()
  return { k: k, v: v }
}

function bits2int (obits, q) {
  var bits = new BN(obits)
  var shift = (obits.length << 3) - q.bitLength()
  if (shift > 0) bits.ishrn(shift)
  return bits
}

function bits2octets (bits, q) {
  bits = bits2int(bits, q)
  bits = bits.mod(q)
  var out = new Buffer(bits.toArray())
  if (out.length < q.byteLength()) {
    var zeros = new Buffer(q.byteLength() - out.length)
    zeros.fill(0)
    out = Buffer.concat([ zeros, out ])
  }
  return out
}

function makeKey (q, kv, algo) {
  var t
  var k

  do {
    t = new Buffer(0)

    while (t.length * 8 < q.bitLength()) {
      kv.v = createHmac(algo, kv.k).update(kv.v).digest()
      t = Buffer.concat([ t, kv.v ])
    }

    k = bits2int(t, q)
    kv.k = createHmac(algo, kv.k).update(kv.v).update(new Buffer([ 0 ])).digest()
    kv.v = createHmac(algo, kv.k).update(kv.v).digest()
  } while (k.cmp(q) !== -1)

  return k
}

function makeR (g, k, p, q) {
  return g.toRed(BN.mont(p)).redPow(k).fromRed().mod(q)
}

module.exports = sign
module.exports.getKey = getKey
module.exports.makeKey = makeKey


/***/ }),

/***/ "./node_modules/.4.0.4@browserify-sign/browser/verify.js":
/*!***************************************************************!*\
  !*** ./node_modules/.4.0.4@browserify-sign/browser/verify.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// much of this based on https://github.com/indutny/self-signed/blob/gh-pages/lib/rsa.js
var BN = __webpack_require__(/*! bn.js */ "./node_modules/.4.11.8@bn.js/lib/bn.js")
var EC = __webpack_require__(/*! elliptic */ "./node_modules/.6.4.1@elliptic/lib/elliptic.js").ec
var parseKeys = __webpack_require__(/*! parse-asn1 */ "./node_modules/.5.1.4@parse-asn1/index.js")
var curves = __webpack_require__(/*! ./curves.json */ "./node_modules/.4.0.4@browserify-sign/browser/curves.json")

function verify (sig, hash, key, signType, tag) {
  var pub = parseKeys(key)
  if (pub.type === 'ec') {
    // rsa keys can be interpreted as ecdsa ones in openssl
    if (signType !== 'ecdsa' && signType !== 'ecdsa/rsa') throw new Error('wrong public key type')
    return ecVerify(sig, hash, pub)
  } else if (pub.type === 'dsa') {
    if (signType !== 'dsa') throw new Error('wrong public key type')
    return dsaVerify(sig, hash, pub)
  } else {
    if (signType !== 'rsa' && signType !== 'ecdsa/rsa') throw new Error('wrong public key type')
  }
  hash = Buffer.concat([tag, hash])
  var len = pub.modulus.byteLength()
  var pad = [ 1 ]
  var padNum = 0
  while (hash.length + pad.length + 2 < len) {
    pad.push(0xff)
    padNum++
  }
  pad.push(0x00)
  var i = -1
  while (++i < hash.length) {
    pad.push(hash[i])
  }
  pad = new Buffer(pad)
  var red = BN.mont(pub.modulus)
  sig = new BN(sig).toRed(red)

  sig = sig.redPow(new BN(pub.publicExponent))
  sig = new Buffer(sig.fromRed().toArray())
  var out = padNum < 8 ? 1 : 0
  len = Math.min(sig.length, pad.length)
  if (sig.length !== pad.length) out = 1

  i = -1
  while (++i < len) out |= sig[i] ^ pad[i]
  return out === 0
}

function ecVerify (sig, hash, pub) {
  var curveId = curves[pub.data.algorithm.curve.join('.')]
  if (!curveId) throw new Error('unknown curve ' + pub.data.algorithm.curve.join('.'))

  var curve = new EC(curveId)
  var pubkey = pub.data.subjectPrivateKey.data

  return curve.verify(hash, sig, pubkey)
}

function dsaVerify (sig, hash, pub) {
  var p = pub.data.p
  var q = pub.data.q
  var g = pub.data.g
  var y = pub.data.pub_key
  var unpacked = parseKeys.signature.decode(sig, 'der')
  var s = unpacked.s
  var r = unpacked.r
  checkValue(s, q)
  checkValue(r, q)
  var montp = BN.mont(p)
  var w = s.invm(q)
  var v = g.toRed(montp)
    .redPow(new BN(hash).mul(w).mod(q))
    .fromRed()
    .mul(y.toRed(montp).redPow(r.mul(w).mod(q)).fromRed())
    .mod(p)
    .mod(q)
  return v.cmp(r) === 0
}

function checkValue (b, q) {
  if (b.cmpn(0) <= 0) throw new Error('invalid sig')
  if (b.cmp(q) >= q) throw new Error('invalid sig')
}

module.exports = verify


/***/ }),

/***/ "./node_modules/.4.10.1@asn1.js/lib/asn1.js":
/*!**************************************************!*\
  !*** ./node_modules/.4.10.1@asn1.js/lib/asn1.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var asn1 = exports;

asn1.bignum = __webpack_require__(/*! bn.js */ "./node_modules/.4.11.8@bn.js/lib/bn.js");

asn1.define = __webpack_require__(/*! ./asn1/api */ "./node_modules/.4.10.1@asn1.js/lib/asn1/api.js").define;
asn1.base = __webpack_require__(/*! ./asn1/base */ "./node_modules/.4.10.1@asn1.js/lib/asn1/base/index.js");
asn1.constants = __webpack_require__(/*! ./asn1/constants */ "./node_modules/.4.10.1@asn1.js/lib/asn1/constants/index.js");
asn1.decoders = __webpack_require__(/*! ./asn1/decoders */ "./node_modules/.4.10.1@asn1.js/lib/asn1/decoders/index.js");
asn1.encoders = __webpack_require__(/*! ./asn1/encoders */ "./node_modules/.4.10.1@asn1.js/lib/asn1/encoders/index.js");


/***/ }),

/***/ "./node_modules/.4.10.1@asn1.js/lib/asn1/api.js":
/*!******************************************************!*\
  !*** ./node_modules/.4.10.1@asn1.js/lib/asn1/api.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var asn1 = __webpack_require__(/*! ../asn1 */ "./node_modules/.4.10.1@asn1.js/lib/asn1.js");
var inherits = __webpack_require__(/*! inherits */ "./node_modules/.2.0.3@inherits/inherits_browser.js");

var api = exports;

api.define = function define(name, body) {
  return new Entity(name, body);
};

function Entity(name, body) {
  this.name = name;
  this.body = body;

  this.decoders = {};
  this.encoders = {};
};

Entity.prototype._createNamed = function createNamed(base) {
  var named;
  try {
    named = __webpack_require__(/*! vm */ "./node_modules/.0.0.4@vm-browserify/index.js").runInThisContext(
      '(function ' + this.name + '(entity) {\n' +
      '  this._initNamed(entity);\n' +
      '})'
    );
  } catch (e) {
    named = function (entity) {
      this._initNamed(entity);
    };
  }
  inherits(named, base);
  named.prototype._initNamed = function initnamed(entity) {
    base.call(this, entity);
  };

  return new named(this);
};

Entity.prototype._getDecoder = function _getDecoder(enc) {
  enc = enc || 'der';
  // Lazily create decoder
  if (!this.decoders.hasOwnProperty(enc))
    this.decoders[enc] = this._createNamed(asn1.decoders[enc]);
  return this.decoders[enc];
};

Entity.prototype.decode = function decode(data, enc, options) {
  return this._getDecoder(enc).decode(data, options);
};

Entity.prototype._getEncoder = function _getEncoder(enc) {
  enc = enc || 'der';
  // Lazily create encoder
  if (!this.encoders.hasOwnProperty(enc))
    this.encoders[enc] = this._createNamed(asn1.encoders[enc]);
  return this.encoders[enc];
};

Entity.prototype.encode = function encode(data, enc, /* internal */ reporter) {
  return this._getEncoder(enc).encode(data, reporter);
};


/***/ }),

/***/ "./node_modules/.4.10.1@asn1.js/lib/asn1/base/buffer.js":
/*!**************************************************************!*\
  !*** ./node_modules/.4.10.1@asn1.js/lib/asn1/base/buffer.js ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var inherits = __webpack_require__(/*! inherits */ "./node_modules/.2.0.3@inherits/inherits_browser.js");
var Reporter = __webpack_require__(/*! ../base */ "./node_modules/.4.10.1@asn1.js/lib/asn1/base/index.js").Reporter;
var Buffer = __webpack_require__(/*! buffer */ "./node_modules/.4.9.1@buffer/index.js").Buffer;

function DecoderBuffer(base, options) {
  Reporter.call(this, options);
  if (!Buffer.isBuffer(base)) {
    this.error('Input not Buffer');
    return;
  }

  this.base = base;
  this.offset = 0;
  this.length = base.length;
}
inherits(DecoderBuffer, Reporter);
exports.DecoderBuffer = DecoderBuffer;

DecoderBuffer.prototype.save = function save() {
  return { offset: this.offset, reporter: Reporter.prototype.save.call(this) };
};

DecoderBuffer.prototype.restore = function restore(save) {
  // Return skipped data
  var res = new DecoderBuffer(this.base);
  res.offset = save.offset;
  res.length = this.offset;

  this.offset = save.offset;
  Reporter.prototype.restore.call(this, save.reporter);

  return res;
};

DecoderBuffer.prototype.isEmpty = function isEmpty() {
  return this.offset === this.length;
};

DecoderBuffer.prototype.readUInt8 = function readUInt8(fail) {
  if (this.offset + 1 <= this.length)
    return this.base.readUInt8(this.offset++, true);
  else
    return this.error(fail || 'DecoderBuffer overrun');
}

DecoderBuffer.prototype.skip = function skip(bytes, fail) {
  if (!(this.offset + bytes <= this.length))
    return this.error(fail || 'DecoderBuffer overrun');

  var res = new DecoderBuffer(this.base);

  // Share reporter state
  res._reporterState = this._reporterState;

  res.offset = this.offset;
  res.length = this.offset + bytes;
  this.offset += bytes;
  return res;
}

DecoderBuffer.prototype.raw = function raw(save) {
  return this.base.slice(save ? save.offset : this.offset, this.length);
}

function EncoderBuffer(value, reporter) {
  if (Array.isArray(value)) {
    this.length = 0;
    this.value = value.map(function(item) {
      if (!(item instanceof EncoderBuffer))
        item = new EncoderBuffer(item, reporter);
      this.length += item.length;
      return item;
    }, this);
  } else if (typeof value === 'number') {
    if (!(0 <= value && value <= 0xff))
      return reporter.error('non-byte EncoderBuffer value');
    this.value = value;
    this.length = 1;
  } else if (typeof value === 'string') {
    this.value = value;
    this.length = Buffer.byteLength(value);
  } else if (Buffer.isBuffer(value)) {
    this.value = value;
    this.length = value.length;
  } else {
    return reporter.error('Unsupported type: ' + typeof value);
  }
}
exports.EncoderBuffer = EncoderBuffer;

EncoderBuffer.prototype.join = function join(out, offset) {
  if (!out)
    out = new Buffer(this.length);
  if (!offset)
    offset = 0;

  if (this.length === 0)
    return out;

  if (Array.isArray(this.value)) {
    this.value.forEach(function(item) {
      item.join(out, offset);
      offset += item.length;
    });
  } else {
    if (typeof this.value === 'number')
      out[offset] = this.value;
    else if (typeof this.value === 'string')
      out.write(this.value, offset);
    else if (Buffer.isBuffer(this.value))
      this.value.copy(out, offset);
    offset += this.length;
  }

  return out;
};


/***/ }),

/***/ "./node_modules/.4.10.1@asn1.js/lib/asn1/base/index.js":
/*!*************************************************************!*\
  !*** ./node_modules/.4.10.1@asn1.js/lib/asn1/base/index.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var base = exports;

base.Reporter = __webpack_require__(/*! ./reporter */ "./node_modules/.4.10.1@asn1.js/lib/asn1/base/reporter.js").Reporter;
base.DecoderBuffer = __webpack_require__(/*! ./buffer */ "./node_modules/.4.10.1@asn1.js/lib/asn1/base/buffer.js").DecoderBuffer;
base.EncoderBuffer = __webpack_require__(/*! ./buffer */ "./node_modules/.4.10.1@asn1.js/lib/asn1/base/buffer.js").EncoderBuffer;
base.Node = __webpack_require__(/*! ./node */ "./node_modules/.4.10.1@asn1.js/lib/asn1/base/node.js");


/***/ }),

/***/ "./node_modules/.4.10.1@asn1.js/lib/asn1/base/node.js":
/*!************************************************************!*\
  !*** ./node_modules/.4.10.1@asn1.js/lib/asn1/base/node.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var Reporter = __webpack_require__(/*! ../base */ "./node_modules/.4.10.1@asn1.js/lib/asn1/base/index.js").Reporter;
var EncoderBuffer = __webpack_require__(/*! ../base */ "./node_modules/.4.10.1@asn1.js/lib/asn1/base/index.js").EncoderBuffer;
var DecoderBuffer = __webpack_require__(/*! ../base */ "./node_modules/.4.10.1@asn1.js/lib/asn1/base/index.js").DecoderBuffer;
var assert = __webpack_require__(/*! minimalistic-assert */ "./node_modules/.1.0.1@minimalistic-assert/index.js");

// Supported tags
var tags = [
  'seq', 'seqof', 'set', 'setof', 'objid', 'bool',
  'gentime', 'utctime', 'null_', 'enum', 'int', 'objDesc',
  'bitstr', 'bmpstr', 'charstr', 'genstr', 'graphstr', 'ia5str', 'iso646str',
  'numstr', 'octstr', 'printstr', 't61str', 'unistr', 'utf8str', 'videostr'
];

// Public methods list
var methods = [
  'key', 'obj', 'use', 'optional', 'explicit', 'implicit', 'def', 'choice',
  'any', 'contains'
].concat(tags);

// Overrided methods list
var overrided = [
  '_peekTag', '_decodeTag', '_use',
  '_decodeStr', '_decodeObjid', '_decodeTime',
  '_decodeNull', '_decodeInt', '_decodeBool', '_decodeList',

  '_encodeComposite', '_encodeStr', '_encodeObjid', '_encodeTime',
  '_encodeNull', '_encodeInt', '_encodeBool'
];

function Node(enc, parent) {
  var state = {};
  this._baseState = state;

  state.enc = enc;

  state.parent = parent || null;
  state.children = null;

  // State
  state.tag = null;
  state.args = null;
  state.reverseArgs = null;
  state.choice = null;
  state.optional = false;
  state.any = false;
  state.obj = false;
  state.use = null;
  state.useDecoder = null;
  state.key = null;
  state['default'] = null;
  state.explicit = null;
  state.implicit = null;
  state.contains = null;

  // Should create new instance on each method
  if (!state.parent) {
    state.children = [];
    this._wrap();
  }
}
module.exports = Node;

var stateProps = [
  'enc', 'parent', 'children', 'tag', 'args', 'reverseArgs', 'choice',
  'optional', 'any', 'obj', 'use', 'alteredUse', 'key', 'default', 'explicit',
  'implicit', 'contains'
];

Node.prototype.clone = function clone() {
  var state = this._baseState;
  var cstate = {};
  stateProps.forEach(function(prop) {
    cstate[prop] = state[prop];
  });
  var res = new this.constructor(cstate.parent);
  res._baseState = cstate;
  return res;
};

Node.prototype._wrap = function wrap() {
  var state = this._baseState;
  methods.forEach(function(method) {
    this[method] = function _wrappedMethod() {
      var clone = new this.constructor(this);
      state.children.push(clone);
      return clone[method].apply(clone, arguments);
    };
  }, this);
};

Node.prototype._init = function init(body) {
  var state = this._baseState;

  assert(state.parent === null);
  body.call(this);

  // Filter children
  state.children = state.children.filter(function(child) {
    return child._baseState.parent === this;
  }, this);
  assert.equal(state.children.length, 1, 'Root node can have only one child');
};

Node.prototype._useArgs = function useArgs(args) {
  var state = this._baseState;

  // Filter children and args
  var children = args.filter(function(arg) {
    return arg instanceof this.constructor;
  }, this);
  args = args.filter(function(arg) {
    return !(arg instanceof this.constructor);
  }, this);

  if (children.length !== 0) {
    assert(state.children === null);
    state.children = children;

    // Replace parent to maintain backward link
    children.forEach(function(child) {
      child._baseState.parent = this;
    }, this);
  }
  if (args.length !== 0) {
    assert(state.args === null);
    state.args = args;
    state.reverseArgs = args.map(function(arg) {
      if (typeof arg !== 'object' || arg.constructor !== Object)
        return arg;

      var res = {};
      Object.keys(arg).forEach(function(key) {
        if (key == (key | 0))
          key |= 0;
        var value = arg[key];
        res[value] = key;
      });
      return res;
    });
  }
};

//
// Overrided methods
//

overrided.forEach(function(method) {
  Node.prototype[method] = function _overrided() {
    var state = this._baseState;
    throw new Error(method + ' not implemented for encoding: ' + state.enc);
  };
});

//
// Public methods
//

tags.forEach(function(tag) {
  Node.prototype[tag] = function _tagMethod() {
    var state = this._baseState;
    var args = Array.prototype.slice.call(arguments);

    assert(state.tag === null);
    state.tag = tag;

    this._useArgs(args);

    return this;
  };
});

Node.prototype.use = function use(item) {
  assert(item);
  var state = this._baseState;

  assert(state.use === null);
  state.use = item;

  return this;
};

Node.prototype.optional = function optional() {
  var state = this._baseState;

  state.optional = true;

  return this;
};

Node.prototype.def = function def(val) {
  var state = this._baseState;

  assert(state['default'] === null);
  state['default'] = val;
  state.optional = true;

  return this;
};

Node.prototype.explicit = function explicit(num) {
  var state = this._baseState;

  assert(state.explicit === null && state.implicit === null);
  state.explicit = num;

  return this;
};

Node.prototype.implicit = function implicit(num) {
  var state = this._baseState;

  assert(state.explicit === null && state.implicit === null);
  state.implicit = num;

  return this;
};

Node.prototype.obj = function obj() {
  var state = this._baseState;
  var args = Array.prototype.slice.call(arguments);

  state.obj = true;

  if (args.length !== 0)
    this._useArgs(args);

  return this;
};

Node.prototype.key = function key(newKey) {
  var state = this._baseState;

  assert(state.key === null);
  state.key = newKey;

  return this;
};

Node.prototype.any = function any() {
  var state = this._baseState;

  state.any = true;

  return this;
};

Node.prototype.choice = function choice(obj) {
  var state = this._baseState;

  assert(state.choice === null);
  state.choice = obj;
  this._useArgs(Object.keys(obj).map(function(key) {
    return obj[key];
  }));

  return this;
};

Node.prototype.contains = function contains(item) {
  var state = this._baseState;

  assert(state.use === null);
  state.contains = item;

  return this;
};

//
// Decoding
//

Node.prototype._decode = function decode(input, options) {
  var state = this._baseState;

  // Decode root node
  if (state.parent === null)
    return input.wrapResult(state.children[0]._decode(input, options));

  var result = state['default'];
  var present = true;

  var prevKey = null;
  if (state.key !== null)
    prevKey = input.enterKey(state.key);

  // Check if tag is there
  if (state.optional) {
    var tag = null;
    if (state.explicit !== null)
      tag = state.explicit;
    else if (state.implicit !== null)
      tag = state.implicit;
    else if (state.tag !== null)
      tag = state.tag;

    if (tag === null && !state.any) {
      // Trial and Error
      var save = input.save();
      try {
        if (state.choice === null)
          this._decodeGeneric(state.tag, input, options);
        else
          this._decodeChoice(input, options);
        present = true;
      } catch (e) {
        present = false;
      }
      input.restore(save);
    } else {
      present = this._peekTag(input, tag, state.any);

      if (input.isError(present))
        return present;
    }
  }

  // Push object on stack
  var prevObj;
  if (state.obj && present)
    prevObj = input.enterObject();

  if (present) {
    // Unwrap explicit values
    if (state.explicit !== null) {
      var explicit = this._decodeTag(input, state.explicit);
      if (input.isError(explicit))
        return explicit;
      input = explicit;
    }

    var start = input.offset;

    // Unwrap implicit and normal values
    if (state.use === null && state.choice === null) {
      if (state.any)
        var save = input.save();
      var body = this._decodeTag(
        input,
        state.implicit !== null ? state.implicit : state.tag,
        state.any
      );
      if (input.isError(body))
        return body;

      if (state.any)
        result = input.raw(save);
      else
        input = body;
    }

    if (options && options.track && state.tag !== null)
      options.track(input.path(), start, input.length, 'tagged');

    if (options && options.track && state.tag !== null)
      options.track(input.path(), input.offset, input.length, 'content');

    // Select proper method for tag
    if (state.any)
      result = result;
    else if (state.choice === null)
      result = this._decodeGeneric(state.tag, input, options);
    else
      result = this._decodeChoice(input, options);

    if (input.isError(result))
      return result;

    // Decode children
    if (!state.any && state.choice === null && state.children !== null) {
      state.children.forEach(function decodeChildren(child) {
        // NOTE: We are ignoring errors here, to let parser continue with other
        // parts of encoded data
        child._decode(input, options);
      });
    }

    // Decode contained/encoded by schema, only in bit or octet strings
    if (state.contains && (state.tag === 'octstr' || state.tag === 'bitstr')) {
      var data = new DecoderBuffer(result);
      result = this._getUse(state.contains, input._reporterState.obj)
          ._decode(data, options);
    }
  }

  // Pop object
  if (state.obj && present)
    result = input.leaveObject(prevObj);

  // Set key
  if (state.key !== null && (result !== null || present === true))
    input.leaveKey(prevKey, state.key, result);
  else if (prevKey !== null)
    input.exitKey(prevKey);

  return result;
};

Node.prototype._decodeGeneric = function decodeGeneric(tag, input, options) {
  var state = this._baseState;

  if (tag === 'seq' || tag === 'set')
    return null;
  if (tag === 'seqof' || tag === 'setof')
    return this._decodeList(input, tag, state.args[0], options);
  else if (/str$/.test(tag))
    return this._decodeStr(input, tag, options);
  else if (tag === 'objid' && state.args)
    return this._decodeObjid(input, state.args[0], state.args[1], options);
  else if (tag === 'objid')
    return this._decodeObjid(input, null, null, options);
  else if (tag === 'gentime' || tag === 'utctime')
    return this._decodeTime(input, tag, options);
  else if (tag === 'null_')
    return this._decodeNull(input, options);
  else if (tag === 'bool')
    return this._decodeBool(input, options);
  else if (tag === 'objDesc')
    return this._decodeStr(input, tag, options);
  else if (tag === 'int' || tag === 'enum')
    return this._decodeInt(input, state.args && state.args[0], options);

  if (state.use !== null) {
    return this._getUse(state.use, input._reporterState.obj)
        ._decode(input, options);
  } else {
    return input.error('unknown tag: ' + tag);
  }
};

Node.prototype._getUse = function _getUse(entity, obj) {

  var state = this._baseState;
  // Create altered use decoder if implicit is set
  state.useDecoder = this._use(entity, obj);
  assert(state.useDecoder._baseState.parent === null);
  state.useDecoder = state.useDecoder._baseState.children[0];
  if (state.implicit !== state.useDecoder._baseState.implicit) {
    state.useDecoder = state.useDecoder.clone();
    state.useDecoder._baseState.implicit = state.implicit;
  }
  return state.useDecoder;
};

Node.prototype._decodeChoice = function decodeChoice(input, options) {
  var state = this._baseState;
  var result = null;
  var match = false;

  Object.keys(state.choice).some(function(key) {
    var save = input.save();
    var node = state.choice[key];
    try {
      var value = node._decode(input, options);
      if (input.isError(value))
        return false;

      result = { type: key, value: value };
      match = true;
    } catch (e) {
      input.restore(save);
      return false;
    }
    return true;
  }, this);

  if (!match)
    return input.error('Choice not matched');

  return result;
};

//
// Encoding
//

Node.prototype._createEncoderBuffer = function createEncoderBuffer(data) {
  return new EncoderBuffer(data, this.reporter);
};

Node.prototype._encode = function encode(data, reporter, parent) {
  var state = this._baseState;
  if (state['default'] !== null && state['default'] === data)
    return;

  var result = this._encodeValue(data, reporter, parent);
  if (result === undefined)
    return;

  if (this._skipDefault(result, reporter, parent))
    return;

  return result;
};

Node.prototype._encodeValue = function encode(data, reporter, parent) {
  var state = this._baseState;

  // Decode root node
  if (state.parent === null)
    return state.children[0]._encode(data, reporter || new Reporter());

  var result = null;

  // Set reporter to share it with a child class
  this.reporter = reporter;

  // Check if data is there
  if (state.optional && data === undefined) {
    if (state['default'] !== null)
      data = state['default']
    else
      return;
  }

  // Encode children first
  var content = null;
  var primitive = false;
  if (state.any) {
    // Anything that was given is translated to buffer
    result = this._createEncoderBuffer(data);
  } else if (state.choice) {
    result = this._encodeChoice(data, reporter);
  } else if (state.contains) {
    content = this._getUse(state.contains, parent)._encode(data, reporter);
    primitive = true;
  } else if (state.children) {
    content = state.children.map(function(child) {
      if (child._baseState.tag === 'null_')
        return child._encode(null, reporter, data);

      if (child._baseState.key === null)
        return reporter.error('Child should have a key');
      var prevKey = reporter.enterKey(child._baseState.key);

      if (typeof data !== 'object')
        return reporter.error('Child expected, but input is not object');

      var res = child._encode(data[child._baseState.key], reporter, data);
      reporter.leaveKey(prevKey);

      return res;
    }, this).filter(function(child) {
      return child;
    });
    content = this._createEncoderBuffer(content);
  } else {
    if (state.tag === 'seqof' || state.tag === 'setof') {
      // TODO(indutny): this should be thrown on DSL level
      if (!(state.args && state.args.length === 1))
        return reporter.error('Too many args for : ' + state.tag);

      if (!Array.isArray(data))
        return reporter.error('seqof/setof, but data is not Array');

      var child = this.clone();
      child._baseState.implicit = null;
      content = this._createEncoderBuffer(data.map(function(item) {
        var state = this._baseState;

        return this._getUse(state.args[0], data)._encode(item, reporter);
      }, child));
    } else if (state.use !== null) {
      result = this._getUse(state.use, parent)._encode(data, reporter);
    } else {
      content = this._encodePrimitive(state.tag, data);
      primitive = true;
    }
  }

  // Encode data itself
  var result;
  if (!state.any && state.choice === null) {
    var tag = state.implicit !== null ? state.implicit : state.tag;
    var cls = state.implicit === null ? 'universal' : 'context';

    if (tag === null) {
      if (state.use === null)
        reporter.error('Tag could be omitted only for .use()');
    } else {
      if (state.use === null)
        result = this._encodeComposite(tag, primitive, cls, content);
    }
  }

  // Wrap in explicit
  if (state.explicit !== null)
    result = this._encodeComposite(state.explicit, false, 'context', result);

  return result;
};

Node.prototype._encodeChoice = function encodeChoice(data, reporter) {
  var state = this._baseState;

  var node = state.choice[data.type];
  if (!node) {
    assert(
        false,
        data.type + ' not found in ' +
            JSON.stringify(Object.keys(state.choice)));
  }
  return node._encode(data.value, reporter);
};

Node.prototype._encodePrimitive = function encodePrimitive(tag, data) {
  var state = this._baseState;

  if (/str$/.test(tag))
    return this._encodeStr(data, tag);
  else if (tag === 'objid' && state.args)
    return this._encodeObjid(data, state.reverseArgs[0], state.args[1]);
  else if (tag === 'objid')
    return this._encodeObjid(data, null, null);
  else if (tag === 'gentime' || tag === 'utctime')
    return this._encodeTime(data, tag);
  else if (tag === 'null_')
    return this._encodeNull();
  else if (tag === 'int' || tag === 'enum')
    return this._encodeInt(data, state.args && state.reverseArgs[0]);
  else if (tag === 'bool')
    return this._encodeBool(data);
  else if (tag === 'objDesc')
    return this._encodeStr(data, tag);
  else
    throw new Error('Unsupported tag: ' + tag);
};

Node.prototype._isNumstr = function isNumstr(str) {
  return /^[0-9 ]*$/.test(str);
};

Node.prototype._isPrintstr = function isPrintstr(str) {
  return /^[A-Za-z0-9 '\(\)\+,\-\.\/:=\?]*$/.test(str);
};


/***/ }),

/***/ "./node_modules/.4.10.1@asn1.js/lib/asn1/base/reporter.js":
/*!****************************************************************!*\
  !*** ./node_modules/.4.10.1@asn1.js/lib/asn1/base/reporter.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var inherits = __webpack_require__(/*! inherits */ "./node_modules/.2.0.3@inherits/inherits_browser.js");

function Reporter(options) {
  this._reporterState = {
    obj: null,
    path: [],
    options: options || {},
    errors: []
  };
}
exports.Reporter = Reporter;

Reporter.prototype.isError = function isError(obj) {
  return obj instanceof ReporterError;
};

Reporter.prototype.save = function save() {
  var state = this._reporterState;

  return { obj: state.obj, pathLen: state.path.length };
};

Reporter.prototype.restore = function restore(data) {
  var state = this._reporterState;

  state.obj = data.obj;
  state.path = state.path.slice(0, data.pathLen);
};

Reporter.prototype.enterKey = function enterKey(key) {
  return this._reporterState.path.push(key);
};

Reporter.prototype.exitKey = function exitKey(index) {
  var state = this._reporterState;

  state.path = state.path.slice(0, index - 1);
};

Reporter.prototype.leaveKey = function leaveKey(index, key, value) {
  var state = this._reporterState;

  this.exitKey(index);
  if (state.obj !== null)
    state.obj[key] = value;
};

Reporter.prototype.path = function path() {
  return this._reporterState.path.join('/');
};

Reporter.prototype.enterObject = function enterObject() {
  var state = this._reporterState;

  var prev = state.obj;
  state.obj = {};
  return prev;
};

Reporter.prototype.leaveObject = function leaveObject(prev) {
  var state = this._reporterState;

  var now = state.obj;
  state.obj = prev;
  return now;
};

Reporter.prototype.error = function error(msg) {
  var err;
  var state = this._reporterState;

  var inherited = msg instanceof ReporterError;
  if (inherited) {
    err = msg;
  } else {
    err = new ReporterError(state.path.map(function(elem) {
      return '[' + JSON.stringify(elem) + ']';
    }).join(''), msg.message || msg, msg.stack);
  }

  if (!state.options.partial)
    throw err;

  if (!inherited)
    state.errors.push(err);

  return err;
};

Reporter.prototype.wrapResult = function wrapResult(result) {
  var state = this._reporterState;
  if (!state.options.partial)
    return result;

  return {
    result: this.isError(result) ? null : result,
    errors: state.errors
  };
};

function ReporterError(path, msg) {
  this.path = path;
  this.rethrow(msg);
};
inherits(ReporterError, Error);

ReporterError.prototype.rethrow = function rethrow(msg) {
  this.message = msg + ' at: ' + (this.path || '(shallow)');
  if (Error.captureStackTrace)
    Error.captureStackTrace(this, ReporterError);

  if (!this.stack) {
    try {
      // IE only adds stack when thrown
      throw new Error(this.message);
    } catch (e) {
      this.stack = e.stack;
    }
  }
  return this;
};


/***/ }),

/***/ "./node_modules/.4.10.1@asn1.js/lib/asn1/constants/der.js":
/*!****************************************************************!*\
  !*** ./node_modules/.4.10.1@asn1.js/lib/asn1/constants/der.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var constants = __webpack_require__(/*! ../constants */ "./node_modules/.4.10.1@asn1.js/lib/asn1/constants/index.js");

exports.tagClass = {
  0: 'universal',
  1: 'application',
  2: 'context',
  3: 'private'
};
exports.tagClassByName = constants._reverse(exports.tagClass);

exports.tag = {
  0x00: 'end',
  0x01: 'bool',
  0x02: 'int',
  0x03: 'bitstr',
  0x04: 'octstr',
  0x05: 'null_',
  0x06: 'objid',
  0x07: 'objDesc',
  0x08: 'external',
  0x09: 'real',
  0x0a: 'enum',
  0x0b: 'embed',
  0x0c: 'utf8str',
  0x0d: 'relativeOid',
  0x10: 'seq',
  0x11: 'set',
  0x12: 'numstr',
  0x13: 'printstr',
  0x14: 't61str',
  0x15: 'videostr',
  0x16: 'ia5str',
  0x17: 'utctime',
  0x18: 'gentime',
  0x19: 'graphstr',
  0x1a: 'iso646str',
  0x1b: 'genstr',
  0x1c: 'unistr',
  0x1d: 'charstr',
  0x1e: 'bmpstr'
};
exports.tagByName = constants._reverse(exports.tag);


/***/ }),

/***/ "./node_modules/.4.10.1@asn1.js/lib/asn1/constants/index.js":
/*!******************************************************************!*\
  !*** ./node_modules/.4.10.1@asn1.js/lib/asn1/constants/index.js ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var constants = exports;

// Helper
constants._reverse = function reverse(map) {
  var res = {};

  Object.keys(map).forEach(function(key) {
    // Convert key to integer if it is stringified
    if ((key | 0) == key)
      key = key | 0;

    var value = map[key];
    res[value] = key;
  });

  return res;
};

constants.der = __webpack_require__(/*! ./der */ "./node_modules/.4.10.1@asn1.js/lib/asn1/constants/der.js");


/***/ }),

/***/ "./node_modules/.4.10.1@asn1.js/lib/asn1/decoders/der.js":
/*!***************************************************************!*\
  !*** ./node_modules/.4.10.1@asn1.js/lib/asn1/decoders/der.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var inherits = __webpack_require__(/*! inherits */ "./node_modules/.2.0.3@inherits/inherits_browser.js");

var asn1 = __webpack_require__(/*! ../../asn1 */ "./node_modules/.4.10.1@asn1.js/lib/asn1.js");
var base = asn1.base;
var bignum = asn1.bignum;

// Import DER constants
var der = asn1.constants.der;

function DERDecoder(entity) {
  this.enc = 'der';
  this.name = entity.name;
  this.entity = entity;

  // Construct base tree
  this.tree = new DERNode();
  this.tree._init(entity.body);
};
module.exports = DERDecoder;

DERDecoder.prototype.decode = function decode(data, options) {
  if (!(data instanceof base.DecoderBuffer))
    data = new base.DecoderBuffer(data, options);

  return this.tree._decode(data, options);
};

// Tree methods

function DERNode(parent) {
  base.Node.call(this, 'der', parent);
}
inherits(DERNode, base.Node);

DERNode.prototype._peekTag = function peekTag(buffer, tag, any) {
  if (buffer.isEmpty())
    return false;

  var state = buffer.save();
  var decodedTag = derDecodeTag(buffer, 'Failed to peek tag: "' + tag + '"');
  if (buffer.isError(decodedTag))
    return decodedTag;

  buffer.restore(state);

  return decodedTag.tag === tag || decodedTag.tagStr === tag ||
    (decodedTag.tagStr + 'of') === tag || any;
};

DERNode.prototype._decodeTag = function decodeTag(buffer, tag, any) {
  var decodedTag = derDecodeTag(buffer,
                                'Failed to decode tag of "' + tag + '"');
  if (buffer.isError(decodedTag))
    return decodedTag;

  var len = derDecodeLen(buffer,
                         decodedTag.primitive,
                         'Failed to get length of "' + tag + '"');

  // Failure
  if (buffer.isError(len))
    return len;

  if (!any &&
      decodedTag.tag !== tag &&
      decodedTag.tagStr !== tag &&
      decodedTag.tagStr + 'of' !== tag) {
    return buffer.error('Failed to match tag: "' + tag + '"');
  }

  if (decodedTag.primitive || len !== null)
    return buffer.skip(len, 'Failed to match body of: "' + tag + '"');

  // Indefinite length... find END tag
  var state = buffer.save();
  var res = this._skipUntilEnd(
      buffer,
      'Failed to skip indefinite length body: "' + this.tag + '"');
  if (buffer.isError(res))
    return res;

  len = buffer.offset - state.offset;
  buffer.restore(state);
  return buffer.skip(len, 'Failed to match body of: "' + tag + '"');
};

DERNode.prototype._skipUntilEnd = function skipUntilEnd(buffer, fail) {
  while (true) {
    var tag = derDecodeTag(buffer, fail);
    if (buffer.isError(tag))
      return tag;
    var len = derDecodeLen(buffer, tag.primitive, fail);
    if (buffer.isError(len))
      return len;

    var res;
    if (tag.primitive || len !== null)
      res = buffer.skip(len)
    else
      res = this._skipUntilEnd(buffer, fail);

    // Failure
    if (buffer.isError(res))
      return res;

    if (tag.tagStr === 'end')
      break;
  }
};

DERNode.prototype._decodeList = function decodeList(buffer, tag, decoder,
                                                    options) {
  var result = [];
  while (!buffer.isEmpty()) {
    var possibleEnd = this._peekTag(buffer, 'end');
    if (buffer.isError(possibleEnd))
      return possibleEnd;

    var res = decoder.decode(buffer, 'der', options);
    if (buffer.isError(res) && possibleEnd)
      break;
    result.push(res);
  }
  return result;
};

DERNode.prototype._decodeStr = function decodeStr(buffer, tag) {
  if (tag === 'bitstr') {
    var unused = buffer.readUInt8();
    if (buffer.isError(unused))
      return unused;
    return { unused: unused, data: buffer.raw() };
  } else if (tag === 'bmpstr') {
    var raw = buffer.raw();
    if (raw.length % 2 === 1)
      return buffer.error('Decoding of string type: bmpstr length mismatch');

    var str = '';
    for (var i = 0; i < raw.length / 2; i++) {
      str += String.fromCharCode(raw.readUInt16BE(i * 2));
    }
    return str;
  } else if (tag === 'numstr') {
    var numstr = buffer.raw().toString('ascii');
    if (!this._isNumstr(numstr)) {
      return buffer.error('Decoding of string type: ' +
                          'numstr unsupported characters');
    }
    return numstr;
  } else if (tag === 'octstr') {
    return buffer.raw();
  } else if (tag === 'objDesc') {
    return buffer.raw();
  } else if (tag === 'printstr') {
    var printstr = buffer.raw().toString('ascii');
    if (!this._isPrintstr(printstr)) {
      return buffer.error('Decoding of string type: ' +
                          'printstr unsupported characters');
    }
    return printstr;
  } else if (/str$/.test(tag)) {
    return buffer.raw().toString();
  } else {
    return buffer.error('Decoding of string type: ' + tag + ' unsupported');
  }
};

DERNode.prototype._decodeObjid = function decodeObjid(buffer, values, relative) {
  var result;
  var identifiers = [];
  var ident = 0;
  while (!buffer.isEmpty()) {
    var subident = buffer.readUInt8();
    ident <<= 7;
    ident |= subident & 0x7f;
    if ((subident & 0x80) === 0) {
      identifiers.push(ident);
      ident = 0;
    }
  }
  if (subident & 0x80)
    identifiers.push(ident);

  var first = (identifiers[0] / 40) | 0;
  var second = identifiers[0] % 40;

  if (relative)
    result = identifiers;
  else
    result = [first, second].concat(identifiers.slice(1));

  if (values) {
    var tmp = values[result.join(' ')];
    if (tmp === undefined)
      tmp = values[result.join('.')];
    if (tmp !== undefined)
      result = tmp;
  }

  return result;
};

DERNode.prototype._decodeTime = function decodeTime(buffer, tag) {
  var str = buffer.raw().toString();
  if (tag === 'gentime') {
    var year = str.slice(0, 4) | 0;
    var mon = str.slice(4, 6) | 0;
    var day = str.slice(6, 8) | 0;
    var hour = str.slice(8, 10) | 0;
    var min = str.slice(10, 12) | 0;
    var sec = str.slice(12, 14) | 0;
  } else if (tag === 'utctime') {
    var year = str.slice(0, 2) | 0;
    var mon = str.slice(2, 4) | 0;
    var day = str.slice(4, 6) | 0;
    var hour = str.slice(6, 8) | 0;
    var min = str.slice(8, 10) | 0;
    var sec = str.slice(10, 12) | 0;
    if (year < 70)
      year = 2000 + year;
    else
      year = 1900 + year;
  } else {
    return buffer.error('Decoding ' + tag + ' time is not supported yet');
  }

  return Date.UTC(year, mon - 1, day, hour, min, sec, 0);
};

DERNode.prototype._decodeNull = function decodeNull(buffer) {
  return null;
};

DERNode.prototype._decodeBool = function decodeBool(buffer) {
  var res = buffer.readUInt8();
  if (buffer.isError(res))
    return res;
  else
    return res !== 0;
};

DERNode.prototype._decodeInt = function decodeInt(buffer, values) {
  // Bigint, return as it is (assume big endian)
  var raw = buffer.raw();
  var res = new bignum(raw);

  if (values)
    res = values[res.toString(10)] || res;

  return res;
};

DERNode.prototype._use = function use(entity, obj) {
  if (typeof entity === 'function')
    entity = entity(obj);
  return entity._getDecoder('der').tree;
};

// Utility methods

function derDecodeTag(buf, fail) {
  var tag = buf.readUInt8(fail);
  if (buf.isError(tag))
    return tag;

  var cls = der.tagClass[tag >> 6];
  var primitive = (tag & 0x20) === 0;

  // Multi-octet tag - load
  if ((tag & 0x1f) === 0x1f) {
    var oct = tag;
    tag = 0;
    while ((oct & 0x80) === 0x80) {
      oct = buf.readUInt8(fail);
      if (buf.isError(oct))
        return oct;

      tag <<= 7;
      tag |= oct & 0x7f;
    }
  } else {
    tag &= 0x1f;
  }
  var tagStr = der.tag[tag];

  return {
    cls: cls,
    primitive: primitive,
    tag: tag,
    tagStr: tagStr
  };
}

function derDecodeLen(buf, primitive, fail) {
  var len = buf.readUInt8(fail);
  if (buf.isError(len))
    return len;

  // Indefinite form
  if (!primitive && len === 0x80)
    return null;

  // Definite form
  if ((len & 0x80) === 0) {
    // Short form
    return len;
  }

  // Long form
  var num = len & 0x7f;
  if (num > 4)
    return buf.error('length octect is too long');

  len = 0;
  for (var i = 0; i < num; i++) {
    len <<= 8;
    var j = buf.readUInt8(fail);
    if (buf.isError(j))
      return j;
    len |= j;
  }

  return len;
}


/***/ }),

/***/ "./node_modules/.4.10.1@asn1.js/lib/asn1/decoders/index.js":
/*!*****************************************************************!*\
  !*** ./node_modules/.4.10.1@asn1.js/lib/asn1/decoders/index.js ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var decoders = exports;

decoders.der = __webpack_require__(/*! ./der */ "./node_modules/.4.10.1@asn1.js/lib/asn1/decoders/der.js");
decoders.pem = __webpack_require__(/*! ./pem */ "./node_modules/.4.10.1@asn1.js/lib/asn1/decoders/pem.js");


/***/ }),

/***/ "./node_modules/.4.10.1@asn1.js/lib/asn1/decoders/pem.js":
/*!***************************************************************!*\
  !*** ./node_modules/.4.10.1@asn1.js/lib/asn1/decoders/pem.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var inherits = __webpack_require__(/*! inherits */ "./node_modules/.2.0.3@inherits/inherits_browser.js");
var Buffer = __webpack_require__(/*! buffer */ "./node_modules/.4.9.1@buffer/index.js").Buffer;

var DERDecoder = __webpack_require__(/*! ./der */ "./node_modules/.4.10.1@asn1.js/lib/asn1/decoders/der.js");

function PEMDecoder(entity) {
  DERDecoder.call(this, entity);
  this.enc = 'pem';
};
inherits(PEMDecoder, DERDecoder);
module.exports = PEMDecoder;

PEMDecoder.prototype.decode = function decode(data, options) {
  var lines = data.toString().split(/[\r\n]+/g);

  var label = options.label.toUpperCase();

  var re = /^-----(BEGIN|END) ([^-]+)-----$/;
  var start = -1;
  var end = -1;
  for (var i = 0; i < lines.length; i++) {
    var match = lines[i].match(re);
    if (match === null)
      continue;

    if (match[2] !== label)
      continue;

    if (start === -1) {
      if (match[1] !== 'BEGIN')
        break;
      start = i;
    } else {
      if (match[1] !== 'END')
        break;
      end = i;
      break;
    }
  }
  if (start === -1 || end === -1)
    throw new Error('PEM section not found for: ' + label);

  var base64 = lines.slice(start + 1, end).join('');
  // Remove excessive symbols
  base64.replace(/[^a-z0-9\+\/=]+/gi, '');

  var input = new Buffer(base64, 'base64');
  return DERDecoder.prototype.decode.call(this, input, options);
};


/***/ }),

/***/ "./node_modules/.4.10.1@asn1.js/lib/asn1/encoders/der.js":
/*!***************************************************************!*\
  !*** ./node_modules/.4.10.1@asn1.js/lib/asn1/encoders/der.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var inherits = __webpack_require__(/*! inherits */ "./node_modules/.2.0.3@inherits/inherits_browser.js");
var Buffer = __webpack_require__(/*! buffer */ "./node_modules/.4.9.1@buffer/index.js").Buffer;

var asn1 = __webpack_require__(/*! ../../asn1 */ "./node_modules/.4.10.1@asn1.js/lib/asn1.js");
var base = asn1.base;

// Import DER constants
var der = asn1.constants.der;

function DEREncoder(entity) {
  this.enc = 'der';
  this.name = entity.name;
  this.entity = entity;

  // Construct base tree
  this.tree = new DERNode();
  this.tree._init(entity.body);
};
module.exports = DEREncoder;

DEREncoder.prototype.encode = function encode(data, reporter) {
  return this.tree._encode(data, reporter).join();
};

// Tree methods

function DERNode(parent) {
  base.Node.call(this, 'der', parent);
}
inherits(DERNode, base.Node);

DERNode.prototype._encodeComposite = function encodeComposite(tag,
                                                              primitive,
                                                              cls,
                                                              content) {
  var encodedTag = encodeTag(tag, primitive, cls, this.reporter);

  // Short form
  if (content.length < 0x80) {
    var header = new Buffer(2);
    header[0] = encodedTag;
    header[1] = content.length;
    return this._createEncoderBuffer([ header, content ]);
  }

  // Long form
  // Count octets required to store length
  var lenOctets = 1;
  for (var i = content.length; i >= 0x100; i >>= 8)
    lenOctets++;

  var header = new Buffer(1 + 1 + lenOctets);
  header[0] = encodedTag;
  header[1] = 0x80 | lenOctets;

  for (var i = 1 + lenOctets, j = content.length; j > 0; i--, j >>= 8)
    header[i] = j & 0xff;

  return this._createEncoderBuffer([ header, content ]);
};

DERNode.prototype._encodeStr = function encodeStr(str, tag) {
  if (tag === 'bitstr') {
    return this._createEncoderBuffer([ str.unused | 0, str.data ]);
  } else if (tag === 'bmpstr') {
    var buf = new Buffer(str.length * 2);
    for (var i = 0; i < str.length; i++) {
      buf.writeUInt16BE(str.charCodeAt(i), i * 2);
    }
    return this._createEncoderBuffer(buf);
  } else if (tag === 'numstr') {
    if (!this._isNumstr(str)) {
      return this.reporter.error('Encoding of string type: numstr supports ' +
                                 'only digits and space');
    }
    return this._createEncoderBuffer(str);
  } else if (tag === 'printstr') {
    if (!this._isPrintstr(str)) {
      return this.reporter.error('Encoding of string type: printstr supports ' +
                                 'only latin upper and lower case letters, ' +
                                 'digits, space, apostrophe, left and rigth ' +
                                 'parenthesis, plus sign, comma, hyphen, ' +
                                 'dot, slash, colon, equal sign, ' +
                                 'question mark');
    }
    return this._createEncoderBuffer(str);
  } else if (/str$/.test(tag)) {
    return this._createEncoderBuffer(str);
  } else if (tag === 'objDesc') {
    return this._createEncoderBuffer(str);
  } else {
    return this.reporter.error('Encoding of string type: ' + tag +
                               ' unsupported');
  }
};

DERNode.prototype._encodeObjid = function encodeObjid(id, values, relative) {
  if (typeof id === 'string') {
    if (!values)
      return this.reporter.error('string objid given, but no values map found');
    if (!values.hasOwnProperty(id))
      return this.reporter.error('objid not found in values map');
    id = values[id].split(/[\s\.]+/g);
    for (var i = 0; i < id.length; i++)
      id[i] |= 0;
  } else if (Array.isArray(id)) {
    id = id.slice();
    for (var i = 0; i < id.length; i++)
      id[i] |= 0;
  }

  if (!Array.isArray(id)) {
    return this.reporter.error('objid() should be either array or string, ' +
                               'got: ' + JSON.stringify(id));
  }

  if (!relative) {
    if (id[1] >= 40)
      return this.reporter.error('Second objid identifier OOB');
    id.splice(0, 2, id[0] * 40 + id[1]);
  }

  // Count number of octets
  var size = 0;
  for (var i = 0; i < id.length; i++) {
    var ident = id[i];
    for (size++; ident >= 0x80; ident >>= 7)
      size++;
  }

  var objid = new Buffer(size);
  var offset = objid.length - 1;
  for (var i = id.length - 1; i >= 0; i--) {
    var ident = id[i];
    objid[offset--] = ident & 0x7f;
    while ((ident >>= 7) > 0)
      objid[offset--] = 0x80 | (ident & 0x7f);
  }

  return this._createEncoderBuffer(objid);
};

function two(num) {
  if (num < 10)
    return '0' + num;
  else
    return num;
}

DERNode.prototype._encodeTime = function encodeTime(time, tag) {
  var str;
  var date = new Date(time);

  if (tag === 'gentime') {
    str = [
      two(date.getFullYear()),
      two(date.getUTCMonth() + 1),
      two(date.getUTCDate()),
      two(date.getUTCHours()),
      two(date.getUTCMinutes()),
      two(date.getUTCSeconds()),
      'Z'
    ].join('');
  } else if (tag === 'utctime') {
    str = [
      two(date.getFullYear() % 100),
      two(date.getUTCMonth() + 1),
      two(date.getUTCDate()),
      two(date.getUTCHours()),
      two(date.getUTCMinutes()),
      two(date.getUTCSeconds()),
      'Z'
    ].join('');
  } else {
    this.reporter.error('Encoding ' + tag + ' time is not supported yet');
  }

  return this._encodeStr(str, 'octstr');
};

DERNode.prototype._encodeNull = function encodeNull() {
  return this._createEncoderBuffer('');
};

DERNode.prototype._encodeInt = function encodeInt(num, values) {
  if (typeof num === 'string') {
    if (!values)
      return this.reporter.error('String int or enum given, but no values map');
    if (!values.hasOwnProperty(num)) {
      return this.reporter.error('Values map doesn\'t contain: ' +
                                 JSON.stringify(num));
    }
    num = values[num];
  }

  // Bignum, assume big endian
  if (typeof num !== 'number' && !Buffer.isBuffer(num)) {
    var numArray = num.toArray();
    if (!num.sign && numArray[0] & 0x80) {
      numArray.unshift(0);
    }
    num = new Buffer(numArray);
  }

  if (Buffer.isBuffer(num)) {
    var size = num.length;
    if (num.length === 0)
      size++;

    var out = new Buffer(size);
    num.copy(out);
    if (num.length === 0)
      out[0] = 0
    return this._createEncoderBuffer(out);
  }

  if (num < 0x80)
    return this._createEncoderBuffer(num);

  if (num < 0x100)
    return this._createEncoderBuffer([0, num]);

  var size = 1;
  for (var i = num; i >= 0x100; i >>= 8)
    size++;

  var out = new Array(size);
  for (var i = out.length - 1; i >= 0; i--) {
    out[i] = num & 0xff;
    num >>= 8;
  }
  if(out[0] & 0x80) {
    out.unshift(0);
  }

  return this._createEncoderBuffer(new Buffer(out));
};

DERNode.prototype._encodeBool = function encodeBool(value) {
  return this._createEncoderBuffer(value ? 0xff : 0);
};

DERNode.prototype._use = function use(entity, obj) {
  if (typeof entity === 'function')
    entity = entity(obj);
  return entity._getEncoder('der').tree;
};

DERNode.prototype._skipDefault = function skipDefault(dataBuffer, reporter, parent) {
  var state = this._baseState;
  var i;
  if (state['default'] === null)
    return false;

  var data = dataBuffer.join();
  if (state.defaultBuffer === undefined)
    state.defaultBuffer = this._encodeValue(state['default'], reporter, parent).join();

  if (data.length !== state.defaultBuffer.length)
    return false;

  for (i=0; i < data.length; i++)
    if (data[i] !== state.defaultBuffer[i])
      return false;

  return true;
};

// Utility methods

function encodeTag(tag, primitive, cls, reporter) {
  var res;

  if (tag === 'seqof')
    tag = 'seq';
  else if (tag === 'setof')
    tag = 'set';

  if (der.tagByName.hasOwnProperty(tag))
    res = der.tagByName[tag];
  else if (typeof tag === 'number' && (tag | 0) === tag)
    res = tag;
  else
    return reporter.error('Unknown tag: ' + tag);

  if (res >= 0x1f)
    return reporter.error('Multi-octet tag encoding unsupported');

  if (!primitive)
    res |= 0x20;

  res |= (der.tagClassByName[cls || 'universal'] << 6);

  return res;
}


/***/ }),

/***/ "./node_modules/.4.10.1@asn1.js/lib/asn1/encoders/index.js":
/*!*****************************************************************!*\
  !*** ./node_modules/.4.10.1@asn1.js/lib/asn1/encoders/index.js ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var encoders = exports;

encoders.der = __webpack_require__(/*! ./der */ "./node_modules/.4.10.1@asn1.js/lib/asn1/encoders/der.js");
encoders.pem = __webpack_require__(/*! ./pem */ "./node_modules/.4.10.1@asn1.js/lib/asn1/encoders/pem.js");


/***/ }),

/***/ "./node_modules/.4.10.1@asn1.js/lib/asn1/encoders/pem.js":
/*!***************************************************************!*\
  !*** ./node_modules/.4.10.1@asn1.js/lib/asn1/encoders/pem.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var inherits = __webpack_require__(/*! inherits */ "./node_modules/.2.0.3@inherits/inherits_browser.js");

var DEREncoder = __webpack_require__(/*! ./der */ "./node_modules/.4.10.1@asn1.js/lib/asn1/encoders/der.js");

function PEMEncoder(entity) {
  DEREncoder.call(this, entity);
  this.enc = 'pem';
};
inherits(PEMEncoder, DEREncoder);
module.exports = PEMEncoder;

PEMEncoder.prototype.encode = function encode(data, options) {
  var buf = DEREncoder.prototype.encode.call(this, data);

  var p = buf.toString('base64');
  var out = [ '-----BEGIN ' + options.label + '-----' ];
  for (var i = 0; i < p.length; i += 64)
    out.push(p.slice(i, i + 64));
  out.push('-----END ' + options.label + '-----');
  return out.join('\n');
};


/***/ }),

/***/ "./node_modules/.4.11.8@bn.js/lib/bn.js":
/*!**********************************************!*\
  !*** ./node_modules/.4.11.8@bn.js/lib/bn.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(module) {(function (module, exports) {
  'use strict';

  // Utils
  function assert (val, msg) {
    if (!val) throw new Error(msg || 'Assertion failed');
  }

  // Could use `inherits` module, but don't want to move from single file
  // architecture yet.
  function inherits (ctor, superCtor) {
    ctor.super_ = superCtor;
    var TempCtor = function () {};
    TempCtor.prototype = superCtor.prototype;
    ctor.prototype = new TempCtor();
    ctor.prototype.constructor = ctor;
  }

  // BN

  function BN (number, base, endian) {
    if (BN.isBN(number)) {
      return number;
    }

    this.negative = 0;
    this.words = null;
    this.length = 0;

    // Reduction context
    this.red = null;

    if (number !== null) {
      if (base === 'le' || base === 'be') {
        endian = base;
        base = 10;
      }

      this._init(number || 0, base || 10, endian || 'be');
    }
  }
  if (typeof module === 'object') {
    module.exports = BN;
  } else {
    exports.BN = BN;
  }

  BN.BN = BN;
  BN.wordSize = 26;

  var Buffer;
  try {
    Buffer = __webpack_require__(/*! buffer */ 2).Buffer;
  } catch (e) {
  }

  BN.isBN = function isBN (num) {
    if (num instanceof BN) {
      return true;
    }

    return num !== null && typeof num === 'object' &&
      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);
  };

  BN.max = function max (left, right) {
    if (left.cmp(right) > 0) return left;
    return right;
  };

  BN.min = function min (left, right) {
    if (left.cmp(right) < 0) return left;
    return right;
  };

  BN.prototype._init = function init (number, base, endian) {
    if (typeof number === 'number') {
      return this._initNumber(number, base, endian);
    }

    if (typeof number === 'object') {
      return this._initArray(number, base, endian);
    }

    if (base === 'hex') {
      base = 16;
    }
    assert(base === (base | 0) && base >= 2 && base <= 36);

    number = number.toString().replace(/\s+/g, '');
    var start = 0;
    if (number[0] === '-') {
      start++;
    }

    if (base === 16) {
      this._parseHex(number, start);
    } else {
      this._parseBase(number, base, start);
    }

    if (number[0] === '-') {
      this.negative = 1;
    }

    this.strip();

    if (endian !== 'le') return;

    this._initArray(this.toArray(), base, endian);
  };

  BN.prototype._initNumber = function _initNumber (number, base, endian) {
    if (number < 0) {
      this.negative = 1;
      number = -number;
    }
    if (number < 0x4000000) {
      this.words = [ number & 0x3ffffff ];
      this.length = 1;
    } else if (number < 0x10000000000000) {
      this.words = [
        number & 0x3ffffff,
        (number / 0x4000000) & 0x3ffffff
      ];
      this.length = 2;
    } else {
      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)
      this.words = [
        number & 0x3ffffff,
        (number / 0x4000000) & 0x3ffffff,
        1
      ];
      this.length = 3;
    }

    if (endian !== 'le') return;

    // Reverse the bytes
    this._initArray(this.toArray(), base, endian);
  };

  BN.prototype._initArray = function _initArray (number, base, endian) {
    // Perhaps a Uint8Array
    assert(typeof number.length === 'number');
    if (number.length <= 0) {
      this.words = [ 0 ];
      this.length = 1;
      return this;
    }

    this.length = Math.ceil(number.length / 3);
    this.words = new Array(this.length);
    for (var i = 0; i < this.length; i++) {
      this.words[i] = 0;
    }

    var j, w;
    var off = 0;
    if (endian === 'be') {
      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {
        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);
        this.words[j] |= (w << off) & 0x3ffffff;
        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;
        off += 24;
        if (off >= 26) {
          off -= 26;
          j++;
        }
      }
    } else if (endian === 'le') {
      for (i = 0, j = 0; i < number.length; i += 3) {
        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);
        this.words[j] |= (w << off) & 0x3ffffff;
        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;
        off += 24;
        if (off >= 26) {
          off -= 26;
          j++;
        }
      }
    }
    return this.strip();
  };

  function parseHex (str, start, end) {
    var r = 0;
    var len = Math.min(str.length, end);
    for (var i = start; i < len; i++) {
      var c = str.charCodeAt(i) - 48;

      r <<= 4;

      // 'a' - 'f'
      if (c >= 49 && c <= 54) {
        r |= c - 49 + 0xa;

      // 'A' - 'F'
      } else if (c >= 17 && c <= 22) {
        r |= c - 17 + 0xa;

      // '0' - '9'
      } else {
        r |= c & 0xf;
      }
    }
    return r;
  }

  BN.prototype._parseHex = function _parseHex (number, start) {
    // Create possibly bigger array to ensure that it fits the number
    this.length = Math.ceil((number.length - start) / 6);
    this.words = new Array(this.length);
    for (var i = 0; i < this.length; i++) {
      this.words[i] = 0;
    }

    var j, w;
    // Scan 24-bit chunks and add them to the number
    var off = 0;
    for (i = number.length - 6, j = 0; i >= start; i -= 6) {
      w = parseHex(number, i, i + 6);
      this.words[j] |= (w << off) & 0x3ffffff;
      // NOTE: `0x3fffff` is intentional here, 26bits max shift + 24bit hex limb
      this.words[j + 1] |= w >>> (26 - off) & 0x3fffff;
      off += 24;
      if (off >= 26) {
        off -= 26;
        j++;
      }
    }
    if (i + 6 !== start) {
      w = parseHex(number, start, i + 6);
      this.words[j] |= (w << off) & 0x3ffffff;
      this.words[j + 1] |= w >>> (26 - off) & 0x3fffff;
    }
    this.strip();
  };

  function parseBase (str, start, end, mul) {
    var r = 0;
    var len = Math.min(str.length, end);
    for (var i = start; i < len; i++) {
      var c = str.charCodeAt(i) - 48;

      r *= mul;

      // 'a'
      if (c >= 49) {
        r += c - 49 + 0xa;

      // 'A'
      } else if (c >= 17) {
        r += c - 17 + 0xa;

      // '0' - '9'
      } else {
        r += c;
      }
    }
    return r;
  }

  BN.prototype._parseBase = function _parseBase (number, base, start) {
    // Initialize as zero
    this.words = [ 0 ];
    this.length = 1;

    // Find length of limb in base
    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {
      limbLen++;
    }
    limbLen--;
    limbPow = (limbPow / base) | 0;

    var total = number.length - start;
    var mod = total % limbLen;
    var end = Math.min(total, total - mod) + start;

    var word = 0;
    for (var i = start; i < end; i += limbLen) {
      word = parseBase(number, i, i + limbLen, base);

      this.imuln(limbPow);
      if (this.words[0] + word < 0x4000000) {
        this.words[0] += word;
      } else {
        this._iaddn(word);
      }
    }

    if (mod !== 0) {
      var pow = 1;
      word = parseBase(number, i, number.length, base);

      for (i = 0; i < mod; i++) {
        pow *= base;
      }

      this.imuln(pow);
      if (this.words[0] + word < 0x4000000) {
        this.words[0] += word;
      } else {
        this._iaddn(word);
      }
    }
  };

  BN.prototype.copy = function copy (dest) {
    dest.words = new Array(this.length);
    for (var i = 0; i < this.length; i++) {
      dest.words[i] = this.words[i];
    }
    dest.length = this.length;
    dest.negative = this.negative;
    dest.red = this.red;
  };

  BN.prototype.clone = function clone () {
    var r = new BN(null);
    this.copy(r);
    return r;
  };

  BN.prototype._expand = function _expand (size) {
    while (this.length < size) {
      this.words[this.length++] = 0;
    }
    return this;
  };

  // Remove leading `0` from `this`
  BN.prototype.strip = function strip () {
    while (this.length > 1 && this.words[this.length - 1] === 0) {
      this.length--;
    }
    return this._normSign();
  };

  BN.prototype._normSign = function _normSign () {
    // -0 = 0
    if (this.length === 1 && this.words[0] === 0) {
      this.negative = 0;
    }
    return this;
  };

  BN.prototype.inspect = function inspect () {
    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';
  };

  /*

  var zeros = [];
  var groupSizes = [];
  var groupBases = [];

  var s = '';
  var i = -1;
  while (++i < BN.wordSize) {
    zeros[i] = s;
    s += '0';
  }
  groupSizes[0] = 0;
  groupSizes[1] = 0;
  groupBases[0] = 0;
  groupBases[1] = 0;
  var base = 2 - 1;
  while (++base < 36 + 1) {
    var groupSize = 0;
    var groupBase = 1;
    while (groupBase < (1 << BN.wordSize) / base) {
      groupBase *= base;
      groupSize += 1;
    }
    groupSizes[base] = groupSize;
    groupBases[base] = groupBase;
  }

  */

  var zeros = [
    '',
    '0',
    '00',
    '000',
    '0000',
    '00000',
    '000000',
    '0000000',
    '00000000',
    '000000000',
    '0000000000',
    '00000000000',
    '000000000000',
    '0000000000000',
    '00000000000000',
    '000000000000000',
    '0000000000000000',
    '00000000000000000',
    '000000000000000000',
    '0000000000000000000',
    '00000000000000000000',
    '000000000000000000000',
    '0000000000000000000000',
    '00000000000000000000000',
    '000000000000000000000000',
    '0000000000000000000000000'
  ];

  var groupSizes = [
    0, 0,
    25, 16, 12, 11, 10, 9, 8,
    8, 7, 7, 7, 7, 6, 6,
    6, 6, 6, 6, 6, 5, 5,
    5, 5, 5, 5, 5, 5, 5,
    5, 5, 5, 5, 5, 5, 5
  ];

  var groupBases = [
    0, 0,
    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,
    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,
    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,
    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,
    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176
  ];

  BN.prototype.toString = function toString (base, padding) {
    base = base || 10;
    padding = padding | 0 || 1;

    var out;
    if (base === 16 || base === 'hex') {
      out = '';
      var off = 0;
      var carry = 0;
      for (var i = 0; i < this.length; i++) {
        var w = this.words[i];
        var word = (((w << off) | carry) & 0xffffff).toString(16);
        carry = (w >>> (24 - off)) & 0xffffff;
        if (carry !== 0 || i !== this.length - 1) {
          out = zeros[6 - word.length] + word + out;
        } else {
          out = word + out;
        }
        off += 2;
        if (off >= 26) {
          off -= 26;
          i--;
        }
      }
      if (carry !== 0) {
        out = carry.toString(16) + out;
      }
      while (out.length % padding !== 0) {
        out = '0' + out;
      }
      if (this.negative !== 0) {
        out = '-' + out;
      }
      return out;
    }

    if (base === (base | 0) && base >= 2 && base <= 36) {
      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));
      var groupSize = groupSizes[base];
      // var groupBase = Math.pow(base, groupSize);
      var groupBase = groupBases[base];
      out = '';
      var c = this.clone();
      c.negative = 0;
      while (!c.isZero()) {
        var r = c.modn(groupBase).toString(base);
        c = c.idivn(groupBase);

        if (!c.isZero()) {
          out = zeros[groupSize - r.length] + r + out;
        } else {
          out = r + out;
        }
      }
      if (this.isZero()) {
        out = '0' + out;
      }
      while (out.length % padding !== 0) {
        out = '0' + out;
      }
      if (this.negative !== 0) {
        out = '-' + out;
      }
      return out;
    }

    assert(false, 'Base should be between 2 and 36');
  };

  BN.prototype.toNumber = function toNumber () {
    var ret = this.words[0];
    if (this.length === 2) {
      ret += this.words[1] * 0x4000000;
    } else if (this.length === 3 && this.words[2] === 0x01) {
      // NOTE: at this stage it is known that the top bit is set
      ret += 0x10000000000000 + (this.words[1] * 0x4000000);
    } else if (this.length > 2) {
      assert(false, 'Number can only safely store up to 53 bits');
    }
    return (this.negative !== 0) ? -ret : ret;
  };

  BN.prototype.toJSON = function toJSON () {
    return this.toString(16);
  };

  BN.prototype.toBuffer = function toBuffer (endian, length) {
    assert(typeof Buffer !== 'undefined');
    return this.toArrayLike(Buffer, endian, length);
  };

  BN.prototype.toArray = function toArray (endian, length) {
    return this.toArrayLike(Array, endian, length);
  };

  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {
    var byteLength = this.byteLength();
    var reqLength = length || Math.max(1, byteLength);
    assert(byteLength <= reqLength, 'byte array longer than desired length');
    assert(reqLength > 0, 'Requested array length <= 0');

    this.strip();
    var littleEndian = endian === 'le';
    var res = new ArrayType(reqLength);

    var b, i;
    var q = this.clone();
    if (!littleEndian) {
      // Assume big-endian
      for (i = 0; i < reqLength - byteLength; i++) {
        res[i] = 0;
      }

      for (i = 0; !q.isZero(); i++) {
        b = q.andln(0xff);
        q.iushrn(8);

        res[reqLength - i - 1] = b;
      }
    } else {
      for (i = 0; !q.isZero(); i++) {
        b = q.andln(0xff);
        q.iushrn(8);

        res[i] = b;
      }

      for (; i < reqLength; i++) {
        res[i] = 0;
      }
    }

    return res;
  };

  if (Math.clz32) {
    BN.prototype._countBits = function _countBits (w) {
      return 32 - Math.clz32(w);
    };
  } else {
    BN.prototype._countBits = function _countBits (w) {
      var t = w;
      var r = 0;
      if (t >= 0x1000) {
        r += 13;
        t >>>= 13;
      }
      if (t >= 0x40) {
        r += 7;
        t >>>= 7;
      }
      if (t >= 0x8) {
        r += 4;
        t >>>= 4;
      }
      if (t >= 0x02) {
        r += 2;
        t >>>= 2;
      }
      return r + t;
    };
  }

  BN.prototype._zeroBits = function _zeroBits (w) {
    // Short-cut
    if (w === 0) return 26;

    var t = w;
    var r = 0;
    if ((t & 0x1fff) === 0) {
      r += 13;
      t >>>= 13;
    }
    if ((t & 0x7f) === 0) {
      r += 7;
      t >>>= 7;
    }
    if ((t & 0xf) === 0) {
      r += 4;
      t >>>= 4;
    }
    if ((t & 0x3) === 0) {
      r += 2;
      t >>>= 2;
    }
    if ((t & 0x1) === 0) {
      r++;
    }
    return r;
  };

  // Return number of used bits in a BN
  BN.prototype.bitLength = function bitLength () {
    var w = this.words[this.length - 1];
    var hi = this._countBits(w);
    return (this.length - 1) * 26 + hi;
  };

  function toBitArray (num) {
    var w = new Array(num.bitLength());

    for (var bit = 0; bit < w.length; bit++) {
      var off = (bit / 26) | 0;
      var wbit = bit % 26;

      w[bit] = (num.words[off] & (1 << wbit)) >>> wbit;
    }

    return w;
  }

  // Number of trailing zero bits
  BN.prototype.zeroBits = function zeroBits () {
    if (this.isZero()) return 0;

    var r = 0;
    for (var i = 0; i < this.length; i++) {
      var b = this._zeroBits(this.words[i]);
      r += b;
      if (b !== 26) break;
    }
    return r;
  };

  BN.prototype.byteLength = function byteLength () {
    return Math.ceil(this.bitLength() / 8);
  };

  BN.prototype.toTwos = function toTwos (width) {
    if (this.negative !== 0) {
      return this.abs().inotn(width).iaddn(1);
    }
    return this.clone();
  };

  BN.prototype.fromTwos = function fromTwos (width) {
    if (this.testn(width - 1)) {
      return this.notn(width).iaddn(1).ineg();
    }
    return this.clone();
  };

  BN.prototype.isNeg = function isNeg () {
    return this.negative !== 0;
  };

  // Return negative clone of `this`
  BN.prototype.neg = function neg () {
    return this.clone().ineg();
  };

  BN.prototype.ineg = function ineg () {
    if (!this.isZero()) {
      this.negative ^= 1;
    }

    return this;
  };

  // Or `num` with `this` in-place
  BN.prototype.iuor = function iuor (num) {
    while (this.length < num.length) {
      this.words[this.length++] = 0;
    }

    for (var i = 0; i < num.length; i++) {
      this.words[i] = this.words[i] | num.words[i];
    }

    return this.strip();
  };

  BN.prototype.ior = function ior (num) {
    assert((this.negative | num.negative) === 0);
    return this.iuor(num);
  };

  // Or `num` with `this`
  BN.prototype.or = function or (num) {
    if (this.length > num.length) return this.clone().ior(num);
    return num.clone().ior(this);
  };

  BN.prototype.uor = function uor (num) {
    if (this.length > num.length) return this.clone().iuor(num);
    return num.clone().iuor(this);
  };

  // And `num` with `this` in-place
  BN.prototype.iuand = function iuand (num) {
    // b = min-length(num, this)
    var b;
    if (this.length > num.length) {
      b = num;
    } else {
      b = this;
    }

    for (var i = 0; i < b.length; i++) {
      this.words[i] = this.words[i] & num.words[i];
    }

    this.length = b.length;

    return this.strip();
  };

  BN.prototype.iand = function iand (num) {
    assert((this.negative | num.negative) === 0);
    return this.iuand(num);
  };

  // And `num` with `this`
  BN.prototype.and = function and (num) {
    if (this.length > num.length) return this.clone().iand(num);
    return num.clone().iand(this);
  };

  BN.prototype.uand = function uand (num) {
    if (this.length > num.length) return this.clone().iuand(num);
    return num.clone().iuand(this);
  };

  // Xor `num` with `this` in-place
  BN.prototype.iuxor = function iuxor (num) {
    // a.length > b.length
    var a;
    var b;
    if (this.length > num.length) {
      a = this;
      b = num;
    } else {
      a = num;
      b = this;
    }

    for (var i = 0; i < b.length; i++) {
      this.words[i] = a.words[i] ^ b.words[i];
    }

    if (this !== a) {
      for (; i < a.length; i++) {
        this.words[i] = a.words[i];
      }
    }

    this.length = a.length;

    return this.strip();
  };

  BN.prototype.ixor = function ixor (num) {
    assert((this.negative | num.negative) === 0);
    return this.iuxor(num);
  };

  // Xor `num` with `this`
  BN.prototype.xor = function xor (num) {
    if (this.length > num.length) return this.clone().ixor(num);
    return num.clone().ixor(this);
  };

  BN.prototype.uxor = function uxor (num) {
    if (this.length > num.length) return this.clone().iuxor(num);
    return num.clone().iuxor(this);
  };

  // Not ``this`` with ``width`` bitwidth
  BN.prototype.inotn = function inotn (width) {
    assert(typeof width === 'number' && width >= 0);

    var bytesNeeded = Math.ceil(width / 26) | 0;
    var bitsLeft = width % 26;

    // Extend the buffer with leading zeroes
    this._expand(bytesNeeded);

    if (bitsLeft > 0) {
      bytesNeeded--;
    }

    // Handle complete words
    for (var i = 0; i < bytesNeeded; i++) {
      this.words[i] = ~this.words[i] & 0x3ffffff;
    }

    // Handle the residue
    if (bitsLeft > 0) {
      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));
    }

    // And remove leading zeroes
    return this.strip();
  };

  BN.prototype.notn = function notn (width) {
    return this.clone().inotn(width);
  };

  // Set `bit` of `this`
  BN.prototype.setn = function setn (bit, val) {
    assert(typeof bit === 'number' && bit >= 0);

    var off = (bit / 26) | 0;
    var wbit = bit % 26;

    this._expand(off + 1);

    if (val) {
      this.words[off] = this.words[off] | (1 << wbit);
    } else {
      this.words[off] = this.words[off] & ~(1 << wbit);
    }

    return this.strip();
  };

  // Add `num` to `this` in-place
  BN.prototype.iadd = function iadd (num) {
    var r;

    // negative + positive
    if (this.negative !== 0 && num.negative === 0) {
      this.negative = 0;
      r = this.isub(num);
      this.negative ^= 1;
      return this._normSign();

    // positive + negative
    } else if (this.negative === 0 && num.negative !== 0) {
      num.negative = 0;
      r = this.isub(num);
      num.negative = 1;
      return r._normSign();
    }

    // a.length > b.length
    var a, b;
    if (this.length > num.length) {
      a = this;
      b = num;
    } else {
      a = num;
      b = this;
    }

    var carry = 0;
    for (var i = 0; i < b.length; i++) {
      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;
      this.words[i] = r & 0x3ffffff;
      carry = r >>> 26;
    }
    for (; carry !== 0 && i < a.length; i++) {
      r = (a.words[i] | 0) + carry;
      this.words[i] = r & 0x3ffffff;
      carry = r >>> 26;
    }

    this.length = a.length;
    if (carry !== 0) {
      this.words[this.length] = carry;
      this.length++;
    // Copy the rest of the words
    } else if (a !== this) {
      for (; i < a.length; i++) {
        this.words[i] = a.words[i];
      }
    }

    return this;
  };

  // Add `num` to `this`
  BN.prototype.add = function add (num) {
    var res;
    if (num.negative !== 0 && this.negative === 0) {
      num.negative = 0;
      res = this.sub(num);
      num.negative ^= 1;
      return res;
    } else if (num.negative === 0 && this.negative !== 0) {
      this.negative = 0;
      res = num.sub(this);
      this.negative = 1;
      return res;
    }

    if (this.length > num.length) return this.clone().iadd(num);

    return num.clone().iadd(this);
  };

  // Subtract `num` from `this` in-place
  BN.prototype.isub = function isub (num) {
    // this - (-num) = this + num
    if (num.negative !== 0) {
      num.negative = 0;
      var r = this.iadd(num);
      num.negative = 1;
      return r._normSign();

    // -this - num = -(this + num)
    } else if (this.negative !== 0) {
      this.negative = 0;
      this.iadd(num);
      this.negative = 1;
      return this._normSign();
    }

    // At this point both numbers are positive
    var cmp = this.cmp(num);

    // Optimization - zeroify
    if (cmp === 0) {
      this.negative = 0;
      this.length = 1;
      this.words[0] = 0;
      return this;
    }

    // a > b
    var a, b;
    if (cmp > 0) {
      a = this;
      b = num;
    } else {
      a = num;
      b = this;
    }

    var carry = 0;
    for (var i = 0; i < b.length; i++) {
      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;
      carry = r >> 26;
      this.words[i] = r & 0x3ffffff;
    }
    for (; carry !== 0 && i < a.length; i++) {
      r = (a.words[i] | 0) + carry;
      carry = r >> 26;
      this.words[i] = r & 0x3ffffff;
    }

    // Copy rest of the words
    if (carry === 0 && i < a.length && a !== this) {
      for (; i < a.length; i++) {
        this.words[i] = a.words[i];
      }
    }

    this.length = Math.max(this.length, i);

    if (a !== this) {
      this.negative = 1;
    }

    return this.strip();
  };

  // Subtract `num` from `this`
  BN.prototype.sub = function sub (num) {
    return this.clone().isub(num);
  };

  function smallMulTo (self, num, out) {
    out.negative = num.negative ^ self.negative;
    var len = (self.length + num.length) | 0;
    out.length = len;
    len = (len - 1) | 0;

    // Peel one iteration (compiler can't do it, because of code complexity)
    var a = self.words[0] | 0;
    var b = num.words[0] | 0;
    var r = a * b;

    var lo = r & 0x3ffffff;
    var carry = (r / 0x4000000) | 0;
    out.words[0] = lo;

    for (var k = 1; k < len; k++) {
      // Sum all words with the same `i + j = k` and accumulate `ncarry`,
      // note that ncarry could be >= 0x3ffffff
      var ncarry = carry >>> 26;
      var rword = carry & 0x3ffffff;
      var maxJ = Math.min(k, num.length - 1);
      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {
        var i = (k - j) | 0;
        a = self.words[i] | 0;
        b = num.words[j] | 0;
        r = a * b + rword;
        ncarry += (r / 0x4000000) | 0;
        rword = r & 0x3ffffff;
      }
      out.words[k] = rword | 0;
      carry = ncarry | 0;
    }
    if (carry !== 0) {
      out.words[k] = carry | 0;
    } else {
      out.length--;
    }

    return out.strip();
  }

  // TODO(indutny): it may be reasonable to omit it for users who don't need
  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit
  // multiplication (like elliptic secp256k1).
  var comb10MulTo = function comb10MulTo (self, num, out) {
    var a = self.words;
    var b = num.words;
    var o = out.words;
    var c = 0;
    var lo;
    var mid;
    var hi;
    var a0 = a[0] | 0;
    var al0 = a0 & 0x1fff;
    var ah0 = a0 >>> 13;
    var a1 = a[1] | 0;
    var al1 = a1 & 0x1fff;
    var ah1 = a1 >>> 13;
    var a2 = a[2] | 0;
    var al2 = a2 & 0x1fff;
    var ah2 = a2 >>> 13;
    var a3 = a[3] | 0;
    var al3 = a3 & 0x1fff;
    var ah3 = a3 >>> 13;
    var a4 = a[4] | 0;
    var al4 = a4 & 0x1fff;
    var ah4 = a4 >>> 13;
    var a5 = a[5] | 0;
    var al5 = a5 & 0x1fff;
    var ah5 = a5 >>> 13;
    var a6 = a[6] | 0;
    var al6 = a6 & 0x1fff;
    var ah6 = a6 >>> 13;
    var a7 = a[7] | 0;
    var al7 = a7 & 0x1fff;
    var ah7 = a7 >>> 13;
    var a8 = a[8] | 0;
    var al8 = a8 & 0x1fff;
    var ah8 = a8 >>> 13;
    var a9 = a[9] | 0;
    var al9 = a9 & 0x1fff;
    var ah9 = a9 >>> 13;
    var b0 = b[0] | 0;
    var bl0 = b0 & 0x1fff;
    var bh0 = b0 >>> 13;
    var b1 = b[1] | 0;
    var bl1 = b1 & 0x1fff;
    var bh1 = b1 >>> 13;
    var b2 = b[2] | 0;
    var bl2 = b2 & 0x1fff;
    var bh2 = b2 >>> 13;
    var b3 = b[3] | 0;
    var bl3 = b3 & 0x1fff;
    var bh3 = b3 >>> 13;
    var b4 = b[4] | 0;
    var bl4 = b4 & 0x1fff;
    var bh4 = b4 >>> 13;
    var b5 = b[5] | 0;
    var bl5 = b5 & 0x1fff;
    var bh5 = b5 >>> 13;
    var b6 = b[6] | 0;
    var bl6 = b6 & 0x1fff;
    var bh6 = b6 >>> 13;
    var b7 = b[7] | 0;
    var bl7 = b7 & 0x1fff;
    var bh7 = b7 >>> 13;
    var b8 = b[8] | 0;
    var bl8 = b8 & 0x1fff;
    var bh8 = b8 >>> 13;
    var b9 = b[9] | 0;
    var bl9 = b9 & 0x1fff;
    var bh9 = b9 >>> 13;

    out.negative = self.negative ^ num.negative;
    out.length = 19;
    /* k = 0 */
    lo = Math.imul(al0, bl0);
    mid = Math.imul(al0, bh0);
    mid = (mid + Math.imul(ah0, bl0)) | 0;
    hi = Math.imul(ah0, bh0);
    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;
    w0 &= 0x3ffffff;
    /* k = 1 */
    lo = Math.imul(al1, bl0);
    mid = Math.imul(al1, bh0);
    mid = (mid + Math.imul(ah1, bl0)) | 0;
    hi = Math.imul(ah1, bh0);
    lo = (lo + Math.imul(al0, bl1)) | 0;
    mid = (mid + Math.imul(al0, bh1)) | 0;
    mid = (mid + Math.imul(ah0, bl1)) | 0;
    hi = (hi + Math.imul(ah0, bh1)) | 0;
    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;
    w1 &= 0x3ffffff;
    /* k = 2 */
    lo = Math.imul(al2, bl0);
    mid = Math.imul(al2, bh0);
    mid = (mid + Math.imul(ah2, bl0)) | 0;
    hi = Math.imul(ah2, bh0);
    lo = (lo + Math.imul(al1, bl1)) | 0;
    mid = (mid + Math.imul(al1, bh1)) | 0;
    mid = (mid + Math.imul(ah1, bl1)) | 0;
    hi = (hi + Math.imul(ah1, bh1)) | 0;
    lo = (lo + Math.imul(al0, bl2)) | 0;
    mid = (mid + Math.imul(al0, bh2)) | 0;
    mid = (mid + Math.imul(ah0, bl2)) | 0;
    hi = (hi + Math.imul(ah0, bh2)) | 0;
    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;
    w2 &= 0x3ffffff;
    /* k = 3 */
    lo = Math.imul(al3, bl0);
    mid = Math.imul(al3, bh0);
    mid = (mid + Math.imul(ah3, bl0)) | 0;
    hi = Math.imul(ah3, bh0);
    lo = (lo + Math.imul(al2, bl1)) | 0;
    mid = (mid + Math.imul(al2, bh1)) | 0;
    mid = (mid + Math.imul(ah2, bl1)) | 0;
    hi = (hi + Math.imul(ah2, bh1)) | 0;
    lo = (lo + Math.imul(al1, bl2)) | 0;
    mid = (mid + Math.imul(al1, bh2)) | 0;
    mid = (mid + Math.imul(ah1, bl2)) | 0;
    hi = (hi + Math.imul(ah1, bh2)) | 0;
    lo = (lo + Math.imul(al0, bl3)) | 0;
    mid = (mid + Math.imul(al0, bh3)) | 0;
    mid = (mid + Math.imul(ah0, bl3)) | 0;
    hi = (hi + Math.imul(ah0, bh3)) | 0;
    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;
    w3 &= 0x3ffffff;
    /* k = 4 */
    lo = Math.imul(al4, bl0);
    mid = Math.imul(al4, bh0);
    mid = (mid + Math.imul(ah4, bl0)) | 0;
    hi = Math.imul(ah4, bh0);
    lo = (lo + Math.imul(al3, bl1)) | 0;
    mid = (mid + Math.imul(al3, bh1)) | 0;
    mid = (mid + Math.imul(ah3, bl1)) | 0;
    hi = (hi + Math.imul(ah3, bh1)) | 0;
    lo = (lo + Math.imul(al2, bl2)) | 0;
    mid = (mid + Math.imul(al2, bh2)) | 0;
    mid = (mid + Math.imul(ah2, bl2)) | 0;
    hi = (hi + Math.imul(ah2, bh2)) | 0;
    lo = (lo + Math.imul(al1, bl3)) | 0;
    mid = (mid + Math.imul(al1, bh3)) | 0;
    mid = (mid + Math.imul(ah1, bl3)) | 0;
    hi = (hi + Math.imul(ah1, bh3)) | 0;
    lo = (lo + Math.imul(al0, bl4)) | 0;
    mid = (mid + Math.imul(al0, bh4)) | 0;
    mid = (mid + Math.imul(ah0, bl4)) | 0;
    hi = (hi + Math.imul(ah0, bh4)) | 0;
    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;
    w4 &= 0x3ffffff;
    /* k = 5 */
    lo = Math.imul(al5, bl0);
    mid = Math.imul(al5, bh0);
    mid = (mid + Math.imul(ah5, bl0)) | 0;
    hi = Math.imul(ah5, bh0);
    lo = (lo + Math.imul(al4, bl1)) | 0;
    mid = (mid + Math.imul(al4, bh1)) | 0;
    mid = (mid + Math.imul(ah4, bl1)) | 0;
    hi = (hi + Math.imul(ah4, bh1)) | 0;
    lo = (lo + Math.imul(al3, bl2)) | 0;
    mid = (mid + Math.imul(al3, bh2)) | 0;
    mid = (mid + Math.imul(ah3, bl2)) | 0;
    hi = (hi + Math.imul(ah3, bh2)) | 0;
    lo = (lo + Math.imul(al2, bl3)) | 0;
    mid = (mid + Math.imul(al2, bh3)) | 0;
    mid = (mid + Math.imul(ah2, bl3)) | 0;
    hi = (hi + Math.imul(ah2, bh3)) | 0;
    lo = (lo + Math.imul(al1, bl4)) | 0;
    mid = (mid + Math.imul(al1, bh4)) | 0;
    mid = (mid + Math.imul(ah1, bl4)) | 0;
    hi = (hi + Math.imul(ah1, bh4)) | 0;
    lo = (lo + Math.imul(al0, bl5)) | 0;
    mid = (mid + Math.imul(al0, bh5)) | 0;
    mid = (mid + Math.imul(ah0, bl5)) | 0;
    hi = (hi + Math.imul(ah0, bh5)) | 0;
    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;
    w5 &= 0x3ffffff;
    /* k = 6 */
    lo = Math.imul(al6, bl0);
    mid = Math.imul(al6, bh0);
    mid = (mid + Math.imul(ah6, bl0)) | 0;
    hi = Math.imul(ah6, bh0);
    lo = (lo + Math.imul(al5, bl1)) | 0;
    mid = (mid + Math.imul(al5, bh1)) | 0;
    mid = (mid + Math.imul(ah5, bl1)) | 0;
    hi = (hi + Math.imul(ah5, bh1)) | 0;
    lo = (lo + Math.imul(al4, bl2)) | 0;
    mid = (mid + Math.imul(al4, bh2)) | 0;
    mid = (mid + Math.imul(ah4, bl2)) | 0;
    hi = (hi + Math.imul(ah4, bh2)) | 0;
    lo = (lo + Math.imul(al3, bl3)) | 0;
    mid = (mid + Math.imul(al3, bh3)) | 0;
    mid = (mid + Math.imul(ah3, bl3)) | 0;
    hi = (hi + Math.imul(ah3, bh3)) | 0;
    lo = (lo + Math.imul(al2, bl4)) | 0;
    mid = (mid + Math.imul(al2, bh4)) | 0;
    mid = (mid + Math.imul(ah2, bl4)) | 0;
    hi = (hi + Math.imul(ah2, bh4)) | 0;
    lo = (lo + Math.imul(al1, bl5)) | 0;
    mid = (mid + Math.imul(al1, bh5)) | 0;
    mid = (mid + Math.imul(ah1, bl5)) | 0;
    hi = (hi + Math.imul(ah1, bh5)) | 0;
    lo = (lo + Math.imul(al0, bl6)) | 0;
    mid = (mid + Math.imul(al0, bh6)) | 0;
    mid = (mid + Math.imul(ah0, bl6)) | 0;
    hi = (hi + Math.imul(ah0, bh6)) | 0;
    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;
    w6 &= 0x3ffffff;
    /* k = 7 */
    lo = Math.imul(al7, bl0);
    mid = Math.imul(al7, bh0);
    mid = (mid + Math.imul(ah7, bl0)) | 0;
    hi = Math.imul(ah7, bh0);
    lo = (lo + Math.imul(al6, bl1)) | 0;
    mid = (mid + Math.imul(al6, bh1)) | 0;
    mid = (mid + Math.imul(ah6, bl1)) | 0;
    hi = (hi + Math.imul(ah6, bh1)) | 0;
    lo = (lo + Math.imul(al5, bl2)) | 0;
    mid = (mid + Math.imul(al5, bh2)) | 0;
    mid = (mid + Math.imul(ah5, bl2)) | 0;
    hi = (hi + Math.imul(ah5, bh2)) | 0;
    lo = (lo + Math.imul(al4, bl3)) | 0;
    mid = (mid + Math.imul(al4, bh3)) | 0;
    mid = (mid + Math.imul(ah4, bl3)) | 0;
    hi = (hi + Math.imul(ah4, bh3)) | 0;
    lo = (lo + Math.imul(al3, bl4)) | 0;
    mid = (mid + Math.imul(al3, bh4)) | 0;
    mid = (mid + Math.imul(ah3, bl4)) | 0;
    hi = (hi + Math.imul(ah3, bh4)) | 0;
    lo = (lo + Math.imul(al2, bl5)) | 0;
    mid = (mid + Math.imul(al2, bh5)) | 0;
    mid = (mid + Math.imul(ah2, bl5)) | 0;
    hi = (hi + Math.imul(ah2, bh5)) | 0;
    lo = (lo + Math.imul(al1, bl6)) | 0;
    mid = (mid + Math.imul(al1, bh6)) | 0;
    mid = (mid + Math.imul(ah1, bl6)) | 0;
    hi = (hi + Math.imul(ah1, bh6)) | 0;
    lo = (lo + Math.imul(al0, bl7)) | 0;
    mid = (mid + Math.imul(al0, bh7)) | 0;
    mid = (mid + Math.imul(ah0, bl7)) | 0;
    hi = (hi + Math.imul(ah0, bh7)) | 0;
    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;
    w7 &= 0x3ffffff;
    /* k = 8 */
    lo = Math.imul(al8, bl0);
    mid = Math.imul(al8, bh0);
    mid = (mid + Math.imul(ah8, bl0)) | 0;
    hi = Math.imul(ah8, bh0);
    lo = (lo + Math.imul(al7, bl1)) | 0;
    mid = (mid + Math.imul(al7, bh1)) | 0;
    mid = (mid + Math.imul(ah7, bl1)) | 0;
    hi = (hi + Math.imul(ah7, bh1)) | 0;
    lo = (lo + Math.imul(al6, bl2)) | 0;
    mid = (mid + Math.imul(al6, bh2)) | 0;
    mid = (mid + Math.imul(ah6, bl2)) | 0;
    hi = (hi + Math.imul(ah6, bh2)) | 0;
    lo = (lo + Math.imul(al5, bl3)) | 0;
    mid = (mid + Math.imul(al5, bh3)) | 0;
    mid = (mid + Math.imul(ah5, bl3)) | 0;
    hi = (hi + Math.imul(ah5, bh3)) | 0;
    lo = (lo + Math.imul(al4, bl4)) | 0;
    mid = (mid + Math.imul(al4, bh4)) | 0;
    mid = (mid + Math.imul(ah4, bl4)) | 0;
    hi = (hi + Math.imul(ah4, bh4)) | 0;
    lo = (lo + Math.imul(al3, bl5)) | 0;
    mid = (mid + Math.imul(al3, bh5)) | 0;
    mid = (mid + Math.imul(ah3, bl5)) | 0;
    hi = (hi + Math.imul(ah3, bh5)) | 0;
    lo = (lo + Math.imul(al2, bl6)) | 0;
    mid = (mid + Math.imul(al2, bh6)) | 0;
    mid = (mid + Math.imul(ah2, bl6)) | 0;
    hi = (hi + Math.imul(ah2, bh6)) | 0;
    lo = (lo + Math.imul(al1, bl7)) | 0;
    mid = (mid + Math.imul(al1, bh7)) | 0;
    mid = (mid + Math.imul(ah1, bl7)) | 0;
    hi = (hi + Math.imul(ah1, bh7)) | 0;
    lo = (lo + Math.imul(al0, bl8)) | 0;
    mid = (mid + Math.imul(al0, bh8)) | 0;
    mid = (mid + Math.imul(ah0, bl8)) | 0;
    hi = (hi + Math.imul(ah0, bh8)) | 0;
    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;
    w8 &= 0x3ffffff;
    /* k = 9 */
    lo = Math.imul(al9, bl0);
    mid = Math.imul(al9, bh0);
    mid = (mid + Math.imul(ah9, bl0)) | 0;
    hi = Math.imul(ah9, bh0);
    lo = (lo + Math.imul(al8, bl1)) | 0;
    mid = (mid + Math.imul(al8, bh1)) | 0;
    mid = (mid + Math.imul(ah8, bl1)) | 0;
    hi = (hi + Math.imul(ah8, bh1)) | 0;
    lo = (lo + Math.imul(al7, bl2)) | 0;
    mid = (mid + Math.imul(al7, bh2)) | 0;
    mid = (mid + Math.imul(ah7, bl2)) | 0;
    hi = (hi + Math.imul(ah7, bh2)) | 0;
    lo = (lo + Math.imul(al6, bl3)) | 0;
    mid = (mid + Math.imul(al6, bh3)) | 0;
    mid = (mid + Math.imul(ah6, bl3)) | 0;
    hi = (hi + Math.imul(ah6, bh3)) | 0;
    lo = (lo + Math.imul(al5, bl4)) | 0;
    mid = (mid + Math.imul(al5, bh4)) | 0;
    mid = (mid + Math.imul(ah5, bl4)) | 0;
    hi = (hi + Math.imul(ah5, bh4)) | 0;
    lo = (lo + Math.imul(al4, bl5)) | 0;
    mid = (mid + Math.imul(al4, bh5)) | 0;
    mid = (mid + Math.imul(ah4, bl5)) | 0;
    hi = (hi + Math.imul(ah4, bh5)) | 0;
    lo = (lo + Math.imul(al3, bl6)) | 0;
    mid = (mid + Math.imul(al3, bh6)) | 0;
    mid = (mid + Math.imul(ah3, bl6)) | 0;
    hi = (hi + Math.imul(ah3, bh6)) | 0;
    lo = (lo + Math.imul(al2, bl7)) | 0;
    mid = (mid + Math.imul(al2, bh7)) | 0;
    mid = (mid + Math.imul(ah2, bl7)) | 0;
    hi = (hi + Math.imul(ah2, bh7)) | 0;
    lo = (lo + Math.imul(al1, bl8)) | 0;
    mid = (mid + Math.imul(al1, bh8)) | 0;
    mid = (mid + Math.imul(ah1, bl8)) | 0;
    hi = (hi + Math.imul(ah1, bh8)) | 0;
    lo = (lo + Math.imul(al0, bl9)) | 0;
    mid = (mid + Math.imul(al0, bh9)) | 0;
    mid = (mid + Math.imul(ah0, bl9)) | 0;
    hi = (hi + Math.imul(ah0, bh9)) | 0;
    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;
    w9 &= 0x3ffffff;
    /* k = 10 */
    lo = Math.imul(al9, bl1);
    mid = Math.imul(al9, bh1);
    mid = (mid + Math.imul(ah9, bl1)) | 0;
    hi = Math.imul(ah9, bh1);
    lo = (lo + Math.imul(al8, bl2)) | 0;
    mid = (mid + Math.imul(al8, bh2)) | 0;
    mid = (mid + Math.imul(ah8, bl2)) | 0;
    hi = (hi + Math.imul(ah8, bh2)) | 0;
    lo = (lo + Math.imul(al7, bl3)) | 0;
    mid = (mid + Math.imul(al7, bh3)) | 0;
    mid = (mid + Math.imul(ah7, bl3)) | 0;
    hi = (hi + Math.imul(ah7, bh3)) | 0;
    lo = (lo + Math.imul(al6, bl4)) | 0;
    mid = (mid + Math.imul(al6, bh4)) | 0;
    mid = (mid + Math.imul(ah6, bl4)) | 0;
    hi = (hi + Math.imul(ah6, bh4)) | 0;
    lo = (lo + Math.imul(al5, bl5)) | 0;
    mid = (mid + Math.imul(al5, bh5)) | 0;
    mid = (mid + Math.imul(ah5, bl5)) | 0;
    hi = (hi + Math.imul(ah5, bh5)) | 0;
    lo = (lo + Math.imul(al4, bl6)) | 0;
    mid = (mid + Math.imul(al4, bh6)) | 0;
    mid = (mid + Math.imul(ah4, bl6)) | 0;
    hi = (hi + Math.imul(ah4, bh6)) | 0;
    lo = (lo + Math.imul(al3, bl7)) | 0;
    mid = (mid + Math.imul(al3, bh7)) | 0;
    mid = (mid + Math.imul(ah3, bl7)) | 0;
    hi = (hi + Math.imul(ah3, bh7)) | 0;
    lo = (lo + Math.imul(al2, bl8)) | 0;
    mid = (mid + Math.imul(al2, bh8)) | 0;
    mid = (mid + Math.imul(ah2, bl8)) | 0;
    hi = (hi + Math.imul(ah2, bh8)) | 0;
    lo = (lo + Math.imul(al1, bl9)) | 0;
    mid = (mid + Math.imul(al1, bh9)) | 0;
    mid = (mid + Math.imul(ah1, bl9)) | 0;
    hi = (hi + Math.imul(ah1, bh9)) | 0;
    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;
    w10 &= 0x3ffffff;
    /* k = 11 */
    lo = Math.imul(al9, bl2);
    mid = Math.imul(al9, bh2);
    mid = (mid + Math.imul(ah9, bl2)) | 0;
    hi = Math.imul(ah9, bh2);
    lo = (lo + Math.imul(al8, bl3)) | 0;
    mid = (mid + Math.imul(al8, bh3)) | 0;
    mid = (mid + Math.imul(ah8, bl3)) | 0;
    hi = (hi + Math.imul(ah8, bh3)) | 0;
    lo = (lo + Math.imul(al7, bl4)) | 0;
    mid = (mid + Math.imul(al7, bh4)) | 0;
    mid = (mid + Math.imul(ah7, bl4)) | 0;
    hi = (hi + Math.imul(ah7, bh4)) | 0;
    lo = (lo + Math.imul(al6, bl5)) | 0;
    mid = (mid + Math.imul(al6, bh5)) | 0;
    mid = (mid + Math.imul(ah6, bl5)) | 0;
    hi = (hi + Math.imul(ah6, bh5)) | 0;
    lo = (lo + Math.imul(al5, bl6)) | 0;
    mid = (mid + Math.imul(al5, bh6)) | 0;
    mid = (mid + Math.imul(ah5, bl6)) | 0;
    hi = (hi + Math.imul(ah5, bh6)) | 0;
    lo = (lo + Math.imul(al4, bl7)) | 0;
    mid = (mid + Math.imul(al4, bh7)) | 0;
    mid = (mid + Math.imul(ah4, bl7)) | 0;
    hi = (hi + Math.imul(ah4, bh7)) | 0;
    lo = (lo + Math.imul(al3, bl8)) | 0;
    mid = (mid + Math.imul(al3, bh8)) | 0;
    mid = (mid + Math.imul(ah3, bl8)) | 0;
    hi = (hi + Math.imul(ah3, bh8)) | 0;
    lo = (lo + Math.imul(al2, bl9)) | 0;
    mid = (mid + Math.imul(al2, bh9)) | 0;
    mid = (mid + Math.imul(ah2, bl9)) | 0;
    hi = (hi + Math.imul(ah2, bh9)) | 0;
    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;
    w11 &= 0x3ffffff;
    /* k = 12 */
    lo = Math.imul(al9, bl3);
    mid = Math.imul(al9, bh3);
    mid = (mid + Math.imul(ah9, bl3)) | 0;
    hi = Math.imul(ah9, bh3);
    lo = (lo + Math.imul(al8, bl4)) | 0;
    mid = (mid + Math.imul(al8, bh4)) | 0;
    mid = (mid + Math.imul(ah8, bl4)) | 0;
    hi = (hi + Math.imul(ah8, bh4)) | 0;
    lo = (lo + Math.imul(al7, bl5)) | 0;
    mid = (mid + Math.imul(al7, bh5)) | 0;
    mid = (mid + Math.imul(ah7, bl5)) | 0;
    hi = (hi + Math.imul(ah7, bh5)) | 0;
    lo = (lo + Math.imul(al6, bl6)) | 0;
    mid = (mid + Math.imul(al6, bh6)) | 0;
    mid = (mid + Math.imul(ah6, bl6)) | 0;
    hi = (hi + Math.imul(ah6, bh6)) | 0;
    lo = (lo + Math.imul(al5, bl7)) | 0;
    mid = (mid + Math.imul(al5, bh7)) | 0;
    mid = (mid + Math.imul(ah5, bl7)) | 0;
    hi = (hi + Math.imul(ah5, bh7)) | 0;
    lo = (lo + Math.imul(al4, bl8)) | 0;
    mid = (mid + Math.imul(al4, bh8)) | 0;
    mid = (mid + Math.imul(ah4, bl8)) | 0;
    hi = (hi + Math.imul(ah4, bh8)) | 0;
    lo = (lo + Math.imul(al3, bl9)) | 0;
    mid = (mid + Math.imul(al3, bh9)) | 0;
    mid = (mid + Math.imul(ah3, bl9)) | 0;
    hi = (hi + Math.imul(ah3, bh9)) | 0;
    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;
    w12 &= 0x3ffffff;
    /* k = 13 */
    lo = Math.imul(al9, bl4);
    mid = Math.imul(al9, bh4);
    mid = (mid + Math.imul(ah9, bl4)) | 0;
    hi = Math.imul(ah9, bh4);
    lo = (lo + Math.imul(al8, bl5)) | 0;
    mid = (mid + Math.imul(al8, bh5)) | 0;
    mid = (mid + Math.imul(ah8, bl5)) | 0;
    hi = (hi + Math.imul(ah8, bh5)) | 0;
    lo = (lo + Math.imul(al7, bl6)) | 0;
    mid = (mid + Math.imul(al7, bh6)) | 0;
    mid = (mid + Math.imul(ah7, bl6)) | 0;
    hi = (hi + Math.imul(ah7, bh6)) | 0;
    lo = (lo + Math.imul(al6, bl7)) | 0;
    mid = (mid + Math.imul(al6, bh7)) | 0;
    mid = (mid + Math.imul(ah6, bl7)) | 0;
    hi = (hi + Math.imul(ah6, bh7)) | 0;
    lo = (lo + Math.imul(al5, bl8)) | 0;
    mid = (mid + Math.imul(al5, bh8)) | 0;
    mid = (mid + Math.imul(ah5, bl8)) | 0;
    hi = (hi + Math.imul(ah5, bh8)) | 0;
    lo = (lo + Math.imul(al4, bl9)) | 0;
    mid = (mid + Math.imul(al4, bh9)) | 0;
    mid = (mid + Math.imul(ah4, bl9)) | 0;
    hi = (hi + Math.imul(ah4, bh9)) | 0;
    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;
    w13 &= 0x3ffffff;
    /* k = 14 */
    lo = Math.imul(al9, bl5);
    mid = Math.imul(al9, bh5);
    mid = (mid + Math.imul(ah9, bl5)) | 0;
    hi = Math.imul(ah9, bh5);
    lo = (lo + Math.imul(al8, bl6)) | 0;
    mid = (mid + Math.imul(al8, bh6)) | 0;
    mid = (mid + Math.imul(ah8, bl6)) | 0;
    hi = (hi + Math.imul(ah8, bh6)) | 0;
    lo = (lo + Math.imul(al7, bl7)) | 0;
    mid = (mid + Math.imul(al7, bh7)) | 0;
    mid = (mid + Math.imul(ah7, bl7)) | 0;
    hi = (hi + Math.imul(ah7, bh7)) | 0;
    lo = (lo + Math.imul(al6, bl8)) | 0;
    mid = (mid + Math.imul(al6, bh8)) | 0;
    mid = (mid + Math.imul(ah6, bl8)) | 0;
    hi = (hi + Math.imul(ah6, bh8)) | 0;
    lo = (lo + Math.imul(al5, bl9)) | 0;
    mid = (mid + Math.imul(al5, bh9)) | 0;
    mid = (mid + Math.imul(ah5, bl9)) | 0;
    hi = (hi + Math.imul(ah5, bh9)) | 0;
    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;
    w14 &= 0x3ffffff;
    /* k = 15 */
    lo = Math.imul(al9, bl6);
    mid = Math.imul(al9, bh6);
    mid = (mid + Math.imul(ah9, bl6)) | 0;
    hi = Math.imul(ah9, bh6);
    lo = (lo + Math.imul(al8, bl7)) | 0;
    mid = (mid + Math.imul(al8, bh7)) | 0;
    mid = (mid + Math.imul(ah8, bl7)) | 0;
    hi = (hi + Math.imul(ah8, bh7)) | 0;
    lo = (lo + Math.imul(al7, bl8)) | 0;
    mid = (mid + Math.imul(al7, bh8)) | 0;
    mid = (mid + Math.imul(ah7, bl8)) | 0;
    hi = (hi + Math.imul(ah7, bh8)) | 0;
    lo = (lo + Math.imul(al6, bl9)) | 0;
    mid = (mid + Math.imul(al6, bh9)) | 0;
    mid = (mid + Math.imul(ah6, bl9)) | 0;
    hi = (hi + Math.imul(ah6, bh9)) | 0;
    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;
    w15 &= 0x3ffffff;
    /* k = 16 */
    lo = Math.imul(al9, bl7);
    mid = Math.imul(al9, bh7);
    mid = (mid + Math.imul(ah9, bl7)) | 0;
    hi = Math.imul(ah9, bh7);
    lo = (lo + Math.imul(al8, bl8)) | 0;
    mid = (mid + Math.imul(al8, bh8)) | 0;
    mid = (mid + Math.imul(ah8, bl8)) | 0;
    hi = (hi + Math.imul(ah8, bh8)) | 0;
    lo = (lo + Math.imul(al7, bl9)) | 0;
    mid = (mid + Math.imul(al7, bh9)) | 0;
    mid = (mid + Math.imul(ah7, bl9)) | 0;
    hi = (hi + Math.imul(ah7, bh9)) | 0;
    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;
    w16 &= 0x3ffffff;
    /* k = 17 */
    lo = Math.imul(al9, bl8);
    mid = Math.imul(al9, bh8);
    mid = (mid + Math.imul(ah9, bl8)) | 0;
    hi = Math.imul(ah9, bh8);
    lo = (lo + Math.imul(al8, bl9)) | 0;
    mid = (mid + Math.imul(al8, bh9)) | 0;
    mid = (mid + Math.imul(ah8, bl9)) | 0;
    hi = (hi + Math.imul(ah8, bh9)) | 0;
    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;
    w17 &= 0x3ffffff;
    /* k = 18 */
    lo = Math.imul(al9, bl9);
    mid = Math.imul(al9, bh9);
    mid = (mid + Math.imul(ah9, bl9)) | 0;
    hi = Math.imul(ah9, bh9);
    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;
    w18 &= 0x3ffffff;
    o[0] = w0;
    o[1] = w1;
    o[2] = w2;
    o[3] = w3;
    o[4] = w4;
    o[5] = w5;
    o[6] = w6;
    o[7] = w7;
    o[8] = w8;
    o[9] = w9;
    o[10] = w10;
    o[11] = w11;
    o[12] = w12;
    o[13] = w13;
    o[14] = w14;
    o[15] = w15;
    o[16] = w16;
    o[17] = w17;
    o[18] = w18;
    if (c !== 0) {
      o[19] = c;
      out.length++;
    }
    return out;
  };

  // Polyfill comb
  if (!Math.imul) {
    comb10MulTo = smallMulTo;
  }

  function bigMulTo (self, num, out) {
    out.negative = num.negative ^ self.negative;
    out.length = self.length + num.length;

    var carry = 0;
    var hncarry = 0;
    for (var k = 0; k < out.length - 1; k++) {
      // Sum all words with the same `i + j = k` and accumulate `ncarry`,
      // note that ncarry could be >= 0x3ffffff
      var ncarry = hncarry;
      hncarry = 0;
      var rword = carry & 0x3ffffff;
      var maxJ = Math.min(k, num.length - 1);
      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {
        var i = k - j;
        var a = self.words[i] | 0;
        var b = num.words[j] | 0;
        var r = a * b;

        var lo = r & 0x3ffffff;
        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;
        lo = (lo + rword) | 0;
        rword = lo & 0x3ffffff;
        ncarry = (ncarry + (lo >>> 26)) | 0;

        hncarry += ncarry >>> 26;
        ncarry &= 0x3ffffff;
      }
      out.words[k] = rword;
      carry = ncarry;
      ncarry = hncarry;
    }
    if (carry !== 0) {
      out.words[k] = carry;
    } else {
      out.length--;
    }

    return out.strip();
  }

  function jumboMulTo (self, num, out) {
    var fftm = new FFTM();
    return fftm.mulp(self, num, out);
  }

  BN.prototype.mulTo = function mulTo (num, out) {
    var res;
    var len = this.length + num.length;
    if (this.length === 10 && num.length === 10) {
      res = comb10MulTo(this, num, out);
    } else if (len < 63) {
      res = smallMulTo(this, num, out);
    } else if (len < 1024) {
      res = bigMulTo(this, num, out);
    } else {
      res = jumboMulTo(this, num, out);
    }

    return res;
  };

  // Cooley-Tukey algorithm for FFT
  // slightly revisited to rely on looping instead of recursion

  function FFTM (x, y) {
    this.x = x;
    this.y = y;
  }

  FFTM.prototype.makeRBT = function makeRBT (N) {
    var t = new Array(N);
    var l = BN.prototype._countBits(N) - 1;
    for (var i = 0; i < N; i++) {
      t[i] = this.revBin(i, l, N);
    }

    return t;
  };

  // Returns binary-reversed representation of `x`
  FFTM.prototype.revBin = function revBin (x, l, N) {
    if (x === 0 || x === N - 1) return x;

    var rb = 0;
    for (var i = 0; i < l; i++) {
      rb |= (x & 1) << (l - i - 1);
      x >>= 1;
    }

    return rb;
  };

  // Performs "tweedling" phase, therefore 'emulating'
  // behaviour of the recursive algorithm
  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {
    for (var i = 0; i < N; i++) {
      rtws[i] = rws[rbt[i]];
      itws[i] = iws[rbt[i]];
    }
  };

  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {
    this.permute(rbt, rws, iws, rtws, itws, N);

    for (var s = 1; s < N; s <<= 1) {
      var l = s << 1;

      var rtwdf = Math.cos(2 * Math.PI / l);
      var itwdf = Math.sin(2 * Math.PI / l);

      for (var p = 0; p < N; p += l) {
        var rtwdf_ = rtwdf;
        var itwdf_ = itwdf;

        for (var j = 0; j < s; j++) {
          var re = rtws[p + j];
          var ie = itws[p + j];

          var ro = rtws[p + j + s];
          var io = itws[p + j + s];

          var rx = rtwdf_ * ro - itwdf_ * io;

          io = rtwdf_ * io + itwdf_ * ro;
          ro = rx;

          rtws[p + j] = re + ro;
          itws[p + j] = ie + io;

          rtws[p + j + s] = re - ro;
          itws[p + j + s] = ie - io;

          /* jshint maxdepth : false */
          if (j !== l) {
            rx = rtwdf * rtwdf_ - itwdf * itwdf_;

            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;
            rtwdf_ = rx;
          }
        }
      }
    }
  };

  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {
    var N = Math.max(m, n) | 1;
    var odd = N & 1;
    var i = 0;
    for (N = N / 2 | 0; N; N = N >>> 1) {
      i++;
    }

    return 1 << i + 1 + odd;
  };

  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {
    if (N <= 1) return;

    for (var i = 0; i < N / 2; i++) {
      var t = rws[i];

      rws[i] = rws[N - i - 1];
      rws[N - i - 1] = t;

      t = iws[i];

      iws[i] = -iws[N - i - 1];
      iws[N - i - 1] = -t;
    }
  };

  FFTM.prototype.normalize13b = function normalize13b (ws, N) {
    var carry = 0;
    for (var i = 0; i < N / 2; i++) {
      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +
        Math.round(ws[2 * i] / N) +
        carry;

      ws[i] = w & 0x3ffffff;

      if (w < 0x4000000) {
        carry = 0;
      } else {
        carry = w / 0x4000000 | 0;
      }
    }

    return ws;
  };

  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {
    var carry = 0;
    for (var i = 0; i < len; i++) {
      carry = carry + (ws[i] | 0);

      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;
      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;
    }

    // Pad with zeroes
    for (i = 2 * len; i < N; ++i) {
      rws[i] = 0;
    }

    assert(carry === 0);
    assert((carry & ~0x1fff) === 0);
  };

  FFTM.prototype.stub = function stub (N) {
    var ph = new Array(N);
    for (var i = 0; i < N; i++) {
      ph[i] = 0;
    }

    return ph;
  };

  FFTM.prototype.mulp = function mulp (x, y, out) {
    var N = 2 * this.guessLen13b(x.length, y.length);

    var rbt = this.makeRBT(N);

    var _ = this.stub(N);

    var rws = new Array(N);
    var rwst = new Array(N);
    var iwst = new Array(N);

    var nrws = new Array(N);
    var nrwst = new Array(N);
    var niwst = new Array(N);

    var rmws = out.words;
    rmws.length = N;

    this.convert13b(x.words, x.length, rws, N);
    this.convert13b(y.words, y.length, nrws, N);

    this.transform(rws, _, rwst, iwst, N, rbt);
    this.transform(nrws, _, nrwst, niwst, N, rbt);

    for (var i = 0; i < N; i++) {
      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];
      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];
      rwst[i] = rx;
    }

    this.conjugate(rwst, iwst, N);
    this.transform(rwst, iwst, rmws, _, N, rbt);
    this.conjugate(rmws, _, N);
    this.normalize13b(rmws, N);

    out.negative = x.negative ^ y.negative;
    out.length = x.length + y.length;
    return out.strip();
  };

  // Multiply `this` by `num`
  BN.prototype.mul = function mul (num) {
    var out = new BN(null);
    out.words = new Array(this.length + num.length);
    return this.mulTo(num, out);
  };

  // Multiply employing FFT
  BN.prototype.mulf = function mulf (num) {
    var out = new BN(null);
    out.words = new Array(this.length + num.length);
    return jumboMulTo(this, num, out);
  };

  // In-place Multiplication
  BN.prototype.imul = function imul (num) {
    return this.clone().mulTo(num, this);
  };

  BN.prototype.imuln = function imuln (num) {
    assert(typeof num === 'number');
    assert(num < 0x4000000);

    // Carry
    var carry = 0;
    for (var i = 0; i < this.length; i++) {
      var w = (this.words[i] | 0) * num;
      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);
      carry >>= 26;
      carry += (w / 0x4000000) | 0;
      // NOTE: lo is 27bit maximum
      carry += lo >>> 26;
      this.words[i] = lo & 0x3ffffff;
    }

    if (carry !== 0) {
      this.words[i] = carry;
      this.length++;
    }

    return this;
  };

  BN.prototype.muln = function muln (num) {
    return this.clone().imuln(num);
  };

  // `this` * `this`
  BN.prototype.sqr = function sqr () {
    return this.mul(this);
  };

  // `this` * `this` in-place
  BN.prototype.isqr = function isqr () {
    return this.imul(this.clone());
  };

  // Math.pow(`this`, `num`)
  BN.prototype.pow = function pow (num) {
    var w = toBitArray(num);
    if (w.length === 0) return new BN(1);

    // Skip leading zeroes
    var res = this;
    for (var i = 0; i < w.length; i++, res = res.sqr()) {
      if (w[i] !== 0) break;
    }

    if (++i < w.length) {
      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {
        if (w[i] === 0) continue;

        res = res.mul(q);
      }
    }

    return res;
  };

  // Shift-left in-place
  BN.prototype.iushln = function iushln (bits) {
    assert(typeof bits === 'number' && bits >= 0);
    var r = bits % 26;
    var s = (bits - r) / 26;
    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);
    var i;

    if (r !== 0) {
      var carry = 0;

      for (i = 0; i < this.length; i++) {
        var newCarry = this.words[i] & carryMask;
        var c = ((this.words[i] | 0) - newCarry) << r;
        this.words[i] = c | carry;
        carry = newCarry >>> (26 - r);
      }

      if (carry) {
        this.words[i] = carry;
        this.length++;
      }
    }

    if (s !== 0) {
      for (i = this.length - 1; i >= 0; i--) {
        this.words[i + s] = this.words[i];
      }

      for (i = 0; i < s; i++) {
        this.words[i] = 0;
      }

      this.length += s;
    }

    return this.strip();
  };

  BN.prototype.ishln = function ishln (bits) {
    // TODO(indutny): implement me
    assert(this.negative === 0);
    return this.iushln(bits);
  };

  // Shift-right in-place
  // NOTE: `hint` is a lowest bit before trailing zeroes
  // NOTE: if `extended` is present - it will be filled with destroyed bits
  BN.prototype.iushrn = function iushrn (bits, hint, extended) {
    assert(typeof bits === 'number' && bits >= 0);
    var h;
    if (hint) {
      h = (hint - (hint % 26)) / 26;
    } else {
      h = 0;
    }

    var r = bits % 26;
    var s = Math.min((bits - r) / 26, this.length);
    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);
    var maskedWords = extended;

    h -= s;
    h = Math.max(0, h);

    // Extended mode, copy masked part
    if (maskedWords) {
      for (var i = 0; i < s; i++) {
        maskedWords.words[i] = this.words[i];
      }
      maskedWords.length = s;
    }

    if (s === 0) {
      // No-op, we should not move anything at all
    } else if (this.length > s) {
      this.length -= s;
      for (i = 0; i < this.length; i++) {
        this.words[i] = this.words[i + s];
      }
    } else {
      this.words[0] = 0;
      this.length = 1;
    }

    var carry = 0;
    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {
      var word = this.words[i] | 0;
      this.words[i] = (carry << (26 - r)) | (word >>> r);
      carry = word & mask;
    }

    // Push carried bits as a mask
    if (maskedWords && carry !== 0) {
      maskedWords.words[maskedWords.length++] = carry;
    }

    if (this.length === 0) {
      this.words[0] = 0;
      this.length = 1;
    }

    return this.strip();
  };

  BN.prototype.ishrn = function ishrn (bits, hint, extended) {
    // TODO(indutny): implement me
    assert(this.negative === 0);
    return this.iushrn(bits, hint, extended);
  };

  // Shift-left
  BN.prototype.shln = function shln (bits) {
    return this.clone().ishln(bits);
  };

  BN.prototype.ushln = function ushln (bits) {
    return this.clone().iushln(bits);
  };

  // Shift-right
  BN.prototype.shrn = function shrn (bits) {
    return this.clone().ishrn(bits);
  };

  BN.prototype.ushrn = function ushrn (bits) {
    return this.clone().iushrn(bits);
  };

  // Test if n bit is set
  BN.prototype.testn = function testn (bit) {
    assert(typeof bit === 'number' && bit >= 0);
    var r = bit % 26;
    var s = (bit - r) / 26;
    var q = 1 << r;

    // Fast case: bit is much higher than all existing words
    if (this.length <= s) return false;

    // Check bit and return
    var w = this.words[s];

    return !!(w & q);
  };

  // Return only lowers bits of number (in-place)
  BN.prototype.imaskn = function imaskn (bits) {
    assert(typeof bits === 'number' && bits >= 0);
    var r = bits % 26;
    var s = (bits - r) / 26;

    assert(this.negative === 0, 'imaskn works only with positive numbers');

    if (this.length <= s) {
      return this;
    }

    if (r !== 0) {
      s++;
    }
    this.length = Math.min(s, this.length);

    if (r !== 0) {
      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);
      this.words[this.length - 1] &= mask;
    }

    return this.strip();
  };

  // Return only lowers bits of number
  BN.prototype.maskn = function maskn (bits) {
    return this.clone().imaskn(bits);
  };

  // Add plain number `num` to `this`
  BN.prototype.iaddn = function iaddn (num) {
    assert(typeof num === 'number');
    assert(num < 0x4000000);
    if (num < 0) return this.isubn(-num);

    // Possible sign change
    if (this.negative !== 0) {
      if (this.length === 1 && (this.words[0] | 0) < num) {
        this.words[0] = num - (this.words[0] | 0);
        this.negative = 0;
        return this;
      }

      this.negative = 0;
      this.isubn(num);
      this.negative = 1;
      return this;
    }

    // Add without checks
    return this._iaddn(num);
  };

  BN.prototype._iaddn = function _iaddn (num) {
    this.words[0] += num;

    // Carry
    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {
      this.words[i] -= 0x4000000;
      if (i === this.length - 1) {
        this.words[i + 1] = 1;
      } else {
        this.words[i + 1]++;
      }
    }
    this.length = Math.max(this.length, i + 1);

    return this;
  };

  // Subtract plain number `num` from `this`
  BN.prototype.isubn = function isubn (num) {
    assert(typeof num === 'number');
    assert(num < 0x4000000);
    if (num < 0) return this.iaddn(-num);

    if (this.negative !== 0) {
      this.negative = 0;
      this.iaddn(num);
      this.negative = 1;
      return this;
    }

    this.words[0] -= num;

    if (this.length === 1 && this.words[0] < 0) {
      this.words[0] = -this.words[0];
      this.negative = 1;
    } else {
      // Carry
      for (var i = 0; i < this.length && this.words[i] < 0; i++) {
        this.words[i] += 0x4000000;
        this.words[i + 1] -= 1;
      }
    }

    return this.strip();
  };

  BN.prototype.addn = function addn (num) {
    return this.clone().iaddn(num);
  };

  BN.prototype.subn = function subn (num) {
    return this.clone().isubn(num);
  };

  BN.prototype.iabs = function iabs () {
    this.negative = 0;

    return this;
  };

  BN.prototype.abs = function abs () {
    return this.clone().iabs();
  };

  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {
    var len = num.length + shift;
    var i;

    this._expand(len);

    var w;
    var carry = 0;
    for (i = 0; i < num.length; i++) {
      w = (this.words[i + shift] | 0) + carry;
      var right = (num.words[i] | 0) * mul;
      w -= right & 0x3ffffff;
      carry = (w >> 26) - ((right / 0x4000000) | 0);
      this.words[i + shift] = w & 0x3ffffff;
    }
    for (; i < this.length - shift; i++) {
      w = (this.words[i + shift] | 0) + carry;
      carry = w >> 26;
      this.words[i + shift] = w & 0x3ffffff;
    }

    if (carry === 0) return this.strip();

    // Subtraction overflow
    assert(carry === -1);
    carry = 0;
    for (i = 0; i < this.length; i++) {
      w = -(this.words[i] | 0) + carry;
      carry = w >> 26;
      this.words[i] = w & 0x3ffffff;
    }
    this.negative = 1;

    return this.strip();
  };

  BN.prototype._wordDiv = function _wordDiv (num, mode) {
    var shift = this.length - num.length;

    var a = this.clone();
    var b = num;

    // Normalize
    var bhi = b.words[b.length - 1] | 0;
    var bhiBits = this._countBits(bhi);
    shift = 26 - bhiBits;
    if (shift !== 0) {
      b = b.ushln(shift);
      a.iushln(shift);
      bhi = b.words[b.length - 1] | 0;
    }

    // Initialize quotient
    var m = a.length - b.length;
    var q;

    if (mode !== 'mod') {
      q = new BN(null);
      q.length = m + 1;
      q.words = new Array(q.length);
      for (var i = 0; i < q.length; i++) {
        q.words[i] = 0;
      }
    }

    var diff = a.clone()._ishlnsubmul(b, 1, m);
    if (diff.negative === 0) {
      a = diff;
      if (q) {
        q.words[m] = 1;
      }
    }

    for (var j = m - 1; j >= 0; j--) {
      var qj = (a.words[b.length + j] | 0) * 0x4000000 +
        (a.words[b.length + j - 1] | 0);

      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max
      // (0x7ffffff)
      qj = Math.min((qj / bhi) | 0, 0x3ffffff);

      a._ishlnsubmul(b, qj, j);
      while (a.negative !== 0) {
        qj--;
        a.negative = 0;
        a._ishlnsubmul(b, 1, j);
        if (!a.isZero()) {
          a.negative ^= 1;
        }
      }
      if (q) {
        q.words[j] = qj;
      }
    }
    if (q) {
      q.strip();
    }
    a.strip();

    // Denormalize
    if (mode !== 'div' && shift !== 0) {
      a.iushrn(shift);
    }

    return {
      div: q || null,
      mod: a
    };
  };

  // NOTE: 1) `mode` can be set to `mod` to request mod only,
  //       to `div` to request div only, or be absent to
  //       request both div & mod
  //       2) `positive` is true if unsigned mod is requested
  BN.prototype.divmod = function divmod (num, mode, positive) {
    assert(!num.isZero());

    if (this.isZero()) {
      return {
        div: new BN(0),
        mod: new BN(0)
      };
    }

    var div, mod, res;
    if (this.negative !== 0 && num.negative === 0) {
      res = this.neg().divmod(num, mode);

      if (mode !== 'mod') {
        div = res.div.neg();
      }

      if (mode !== 'div') {
        mod = res.mod.neg();
        if (positive && mod.negative !== 0) {
          mod.iadd(num);
        }
      }

      return {
        div: div,
        mod: mod
      };
    }

    if (this.negative === 0 && num.negative !== 0) {
      res = this.divmod(num.neg(), mode);

      if (mode !== 'mod') {
        div = res.div.neg();
      }

      return {
        div: div,
        mod: res.mod
      };
    }

    if ((this.negative & num.negative) !== 0) {
      res = this.neg().divmod(num.neg(), mode);

      if (mode !== 'div') {
        mod = res.mod.neg();
        if (positive && mod.negative !== 0) {
          mod.isub(num);
        }
      }

      return {
        div: res.div,
        mod: mod
      };
    }

    // Both numbers are positive at this point

    // Strip both numbers to approximate shift value
    if (num.length > this.length || this.cmp(num) < 0) {
      return {
        div: new BN(0),
        mod: this
      };
    }

    // Very short reduction
    if (num.length === 1) {
      if (mode === 'div') {
        return {
          div: this.divn(num.words[0]),
          mod: null
        };
      }

      if (mode === 'mod') {
        return {
          div: null,
          mod: new BN(this.modn(num.words[0]))
        };
      }

      return {
        div: this.divn(num.words[0]),
        mod: new BN(this.modn(num.words[0]))
      };
    }

    return this._wordDiv(num, mode);
  };

  // Find `this` / `num`
  BN.prototype.div = function div (num) {
    return this.divmod(num, 'div', false).div;
  };

  // Find `this` % `num`
  BN.prototype.mod = function mod (num) {
    return this.divmod(num, 'mod', false).mod;
  };

  BN.prototype.umod = function umod (num) {
    return this.divmod(num, 'mod', true).mod;
  };

  // Find Round(`this` / `num`)
  BN.prototype.divRound = function divRound (num) {
    var dm = this.divmod(num);

    // Fast case - exact division
    if (dm.mod.isZero()) return dm.div;

    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;

    var half = num.ushrn(1);
    var r2 = num.andln(1);
    var cmp = mod.cmp(half);

    // Round down
    if (cmp < 0 || r2 === 1 && cmp === 0) return dm.div;

    // Round up
    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);
  };

  BN.prototype.modn = function modn (num) {
    assert(num <= 0x3ffffff);
    var p = (1 << 26) % num;

    var acc = 0;
    for (var i = this.length - 1; i >= 0; i--) {
      acc = (p * acc + (this.words[i] | 0)) % num;
    }

    return acc;
  };

  // In-place division by number
  BN.prototype.idivn = function idivn (num) {
    assert(num <= 0x3ffffff);

    var carry = 0;
    for (var i = this.length - 1; i >= 0; i--) {
      var w = (this.words[i] | 0) + carry * 0x4000000;
      this.words[i] = (w / num) | 0;
      carry = w % num;
    }

    return this.strip();
  };

  BN.prototype.divn = function divn (num) {
    return this.clone().idivn(num);
  };

  BN.prototype.egcd = function egcd (p) {
    assert(p.negative === 0);
    assert(!p.isZero());

    var x = this;
    var y = p.clone();

    if (x.negative !== 0) {
      x = x.umod(p);
    } else {
      x = x.clone();
    }

    // A * x + B * y = x
    var A = new BN(1);
    var B = new BN(0);

    // C * x + D * y = y
    var C = new BN(0);
    var D = new BN(1);

    var g = 0;

    while (x.isEven() && y.isEven()) {
      x.iushrn(1);
      y.iushrn(1);
      ++g;
    }

    var yp = y.clone();
    var xp = x.clone();

    while (!x.isZero()) {
      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);
      if (i > 0) {
        x.iushrn(i);
        while (i-- > 0) {
          if (A.isOdd() || B.isOdd()) {
            A.iadd(yp);
            B.isub(xp);
          }

          A.iushrn(1);
          B.iushrn(1);
        }
      }

      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);
      if (j > 0) {
        y.iushrn(j);
        while (j-- > 0) {
          if (C.isOdd() || D.isOdd()) {
            C.iadd(yp);
            D.isub(xp);
          }

          C.iushrn(1);
          D.iushrn(1);
        }
      }

      if (x.cmp(y) >= 0) {
        x.isub(y);
        A.isub(C);
        B.isub(D);
      } else {
        y.isub(x);
        C.isub(A);
        D.isub(B);
      }
    }

    return {
      a: C,
      b: D,
      gcd: y.iushln(g)
    };
  };

  // This is reduced incarnation of the binary EEA
  // above, designated to invert members of the
  // _prime_ fields F(p) at a maximal speed
  BN.prototype._invmp = function _invmp (p) {
    assert(p.negative === 0);
    assert(!p.isZero());

    var a = this;
    var b = p.clone();

    if (a.negative !== 0) {
      a = a.umod(p);
    } else {
      a = a.clone();
    }

    var x1 = new BN(1);
    var x2 = new BN(0);

    var delta = b.clone();

    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {
      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);
      if (i > 0) {
        a.iushrn(i);
        while (i-- > 0) {
          if (x1.isOdd()) {
            x1.iadd(delta);
          }

          x1.iushrn(1);
        }
      }

      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);
      if (j > 0) {
        b.iushrn(j);
        while (j-- > 0) {
          if (x2.isOdd()) {
            x2.iadd(delta);
          }

          x2.iushrn(1);
        }
      }

      if (a.cmp(b) >= 0) {
        a.isub(b);
        x1.isub(x2);
      } else {
        b.isub(a);
        x2.isub(x1);
      }
    }

    var res;
    if (a.cmpn(1) === 0) {
      res = x1;
    } else {
      res = x2;
    }

    if (res.cmpn(0) < 0) {
      res.iadd(p);
    }

    return res;
  };

  BN.prototype.gcd = function gcd (num) {
    if (this.isZero()) return num.abs();
    if (num.isZero()) return this.abs();

    var a = this.clone();
    var b = num.clone();
    a.negative = 0;
    b.negative = 0;

    // Remove common factor of two
    for (var shift = 0; a.isEven() && b.isEven(); shift++) {
      a.iushrn(1);
      b.iushrn(1);
    }

    do {
      while (a.isEven()) {
        a.iushrn(1);
      }
      while (b.isEven()) {
        b.iushrn(1);
      }

      var r = a.cmp(b);
      if (r < 0) {
        // Swap `a` and `b` to make `a` always bigger than `b`
        var t = a;
        a = b;
        b = t;
      } else if (r === 0 || b.cmpn(1) === 0) {
        break;
      }

      a.isub(b);
    } while (true);

    return b.iushln(shift);
  };

  // Invert number in the field F(num)
  BN.prototype.invm = function invm (num) {
    return this.egcd(num).a.umod(num);
  };

  BN.prototype.isEven = function isEven () {
    return (this.words[0] & 1) === 0;
  };

  BN.prototype.isOdd = function isOdd () {
    return (this.words[0] & 1) === 1;
  };

  // And first word and num
  BN.prototype.andln = function andln (num) {
    return this.words[0] & num;
  };

  // Increment at the bit position in-line
  BN.prototype.bincn = function bincn (bit) {
    assert(typeof bit === 'number');
    var r = bit % 26;
    var s = (bit - r) / 26;
    var q = 1 << r;

    // Fast case: bit is much higher than all existing words
    if (this.length <= s) {
      this._expand(s + 1);
      this.words[s] |= q;
      return this;
    }

    // Add bit and propagate, if needed
    var carry = q;
    for (var i = s; carry !== 0 && i < this.length; i++) {
      var w = this.words[i] | 0;
      w += carry;
      carry = w >>> 26;
      w &= 0x3ffffff;
      this.words[i] = w;
    }
    if (carry !== 0) {
      this.words[i] = carry;
      this.length++;
    }
    return this;
  };

  BN.prototype.isZero = function isZero () {
    return this.length === 1 && this.words[0] === 0;
  };

  BN.prototype.cmpn = function cmpn (num) {
    var negative = num < 0;

    if (this.negative !== 0 && !negative) return -1;
    if (this.negative === 0 && negative) return 1;

    this.strip();

    var res;
    if (this.length > 1) {
      res = 1;
    } else {
      if (negative) {
        num = -num;
      }

      assert(num <= 0x3ffffff, 'Number is too big');

      var w = this.words[0] | 0;
      res = w === num ? 0 : w < num ? -1 : 1;
    }
    if (this.negative !== 0) return -res | 0;
    return res;
  };

  // Compare two numbers and return:
  // 1 - if `this` > `num`
  // 0 - if `this` == `num`
  // -1 - if `this` < `num`
  BN.prototype.cmp = function cmp (num) {
    if (this.negative !== 0 && num.negative === 0) return -1;
    if (this.negative === 0 && num.negative !== 0) return 1;

    var res = this.ucmp(num);
    if (this.negative !== 0) return -res | 0;
    return res;
  };

  // Unsigned comparison
  BN.prototype.ucmp = function ucmp (num) {
    // At this point both numbers have the same sign
    if (this.length > num.length) return 1;
    if (this.length < num.length) return -1;

    var res = 0;
    for (var i = this.length - 1; i >= 0; i--) {
      var a = this.words[i] | 0;
      var b = num.words[i] | 0;

      if (a === b) continue;
      if (a < b) {
        res = -1;
      } else if (a > b) {
        res = 1;
      }
      break;
    }
    return res;
  };

  BN.prototype.gtn = function gtn (num) {
    return this.cmpn(num) === 1;
  };

  BN.prototype.gt = function gt (num) {
    return this.cmp(num) === 1;
  };

  BN.prototype.gten = function gten (num) {
    return this.cmpn(num) >= 0;
  };

  BN.prototype.gte = function gte (num) {
    return this.cmp(num) >= 0;
  };

  BN.prototype.ltn = function ltn (num) {
    return this.cmpn(num) === -1;
  };

  BN.prototype.lt = function lt (num) {
    return this.cmp(num) === -1;
  };

  BN.prototype.lten = function lten (num) {
    return this.cmpn(num) <= 0;
  };

  BN.prototype.lte = function lte (num) {
    return this.cmp(num) <= 0;
  };

  BN.prototype.eqn = function eqn (num) {
    return this.cmpn(num) === 0;
  };

  BN.prototype.eq = function eq (num) {
    return this.cmp(num) === 0;
  };

  //
  // A reduce context, could be using montgomery or something better, depending
  // on the `m` itself.
  //
  BN.red = function red (num) {
    return new Red(num);
  };

  BN.prototype.toRed = function toRed (ctx) {
    assert(!this.red, 'Already a number in reduction context');
    assert(this.negative === 0, 'red works only with positives');
    return ctx.convertTo(this)._forceRed(ctx);
  };

  BN.prototype.fromRed = function fromRed () {
    assert(this.red, 'fromRed works only with numbers in reduction context');
    return this.red.convertFrom(this);
  };

  BN.prototype._forceRed = function _forceRed (ctx) {
    this.red = ctx;
    return this;
  };

  BN.prototype.forceRed = function forceRed (ctx) {
    assert(!this.red, 'Already a number in reduction context');
    return this._forceRed(ctx);
  };

  BN.prototype.redAdd = function redAdd (num) {
    assert(this.red, 'redAdd works only with red numbers');
    return this.red.add(this, num);
  };

  BN.prototype.redIAdd = function redIAdd (num) {
    assert(this.red, 'redIAdd works only with red numbers');
    return this.red.iadd(this, num);
  };

  BN.prototype.redSub = function redSub (num) {
    assert(this.red, 'redSub works only with red numbers');
    return this.red.sub(this, num);
  };

  BN.prototype.redISub = function redISub (num) {
    assert(this.red, 'redISub works only with red numbers');
    return this.red.isub(this, num);
  };

  BN.prototype.redShl = function redShl (num) {
    assert(this.red, 'redShl works only with red numbers');
    return this.red.shl(this, num);
  };

  BN.prototype.redMul = function redMul (num) {
    assert(this.red, 'redMul works only with red numbers');
    this.red._verify2(this, num);
    return this.red.mul(this, num);
  };

  BN.prototype.redIMul = function redIMul (num) {
    assert(this.red, 'redMul works only with red numbers');
    this.red._verify2(this, num);
    return this.red.imul(this, num);
  };

  BN.prototype.redSqr = function redSqr () {
    assert(this.red, 'redSqr works only with red numbers');
    this.red._verify1(this);
    return this.red.sqr(this);
  };

  BN.prototype.redISqr = function redISqr () {
    assert(this.red, 'redISqr works only with red numbers');
    this.red._verify1(this);
    return this.red.isqr(this);
  };

  // Square root over p
  BN.prototype.redSqrt = function redSqrt () {
    assert(this.red, 'redSqrt works only with red numbers');
    this.red._verify1(this);
    return this.red.sqrt(this);
  };

  BN.prototype.redInvm = function redInvm () {
    assert(this.red, 'redInvm works only with red numbers');
    this.red._verify1(this);
    return this.red.invm(this);
  };

  // Return negative clone of `this` % `red modulo`
  BN.prototype.redNeg = function redNeg () {
    assert(this.red, 'redNeg works only with red numbers');
    this.red._verify1(this);
    return this.red.neg(this);
  };

  BN.prototype.redPow = function redPow (num) {
    assert(this.red && !num.red, 'redPow(normalNum)');
    this.red._verify1(this);
    return this.red.pow(this, num);
  };

  // Prime numbers with efficient reduction
  var primes = {
    k256: null,
    p224: null,
    p192: null,
    p25519: null
  };

  // Pseudo-Mersenne prime
  function MPrime (name, p) {
    // P = 2 ^ N - K
    this.name = name;
    this.p = new BN(p, 16);
    this.n = this.p.bitLength();
    this.k = new BN(1).iushln(this.n).isub(this.p);

    this.tmp = this._tmp();
  }

  MPrime.prototype._tmp = function _tmp () {
    var tmp = new BN(null);
    tmp.words = new Array(Math.ceil(this.n / 13));
    return tmp;
  };

  MPrime.prototype.ireduce = function ireduce (num) {
    // Assumes that `num` is less than `P^2`
    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)
    var r = num;
    var rlen;

    do {
      this.split(r, this.tmp);
      r = this.imulK(r);
      r = r.iadd(this.tmp);
      rlen = r.bitLength();
    } while (rlen > this.n);

    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);
    if (cmp === 0) {
      r.words[0] = 0;
      r.length = 1;
    } else if (cmp > 0) {
      r.isub(this.p);
    } else {
      r.strip();
    }

    return r;
  };

  MPrime.prototype.split = function split (input, out) {
    input.iushrn(this.n, 0, out);
  };

  MPrime.prototype.imulK = function imulK (num) {
    return num.imul(this.k);
  };

  function K256 () {
    MPrime.call(
      this,
      'k256',
      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');
  }
  inherits(K256, MPrime);

  K256.prototype.split = function split (input, output) {
    // 256 = 9 * 26 + 22
    var mask = 0x3fffff;

    var outLen = Math.min(input.length, 9);
    for (var i = 0; i < outLen; i++) {
      output.words[i] = input.words[i];
    }
    output.length = outLen;

    if (input.length <= 9) {
      input.words[0] = 0;
      input.length = 1;
      return;
    }

    // Shift by 9 limbs
    var prev = input.words[9];
    output.words[output.length++] = prev & mask;

    for (i = 10; i < input.length; i++) {
      var next = input.words[i] | 0;
      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);
      prev = next;
    }
    prev >>>= 22;
    input.words[i - 10] = prev;
    if (prev === 0 && input.length > 10) {
      input.length -= 10;
    } else {
      input.length -= 9;
    }
  };

  K256.prototype.imulK = function imulK (num) {
    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]
    num.words[num.length] = 0;
    num.words[num.length + 1] = 0;
    num.length += 2;

    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390
    var lo = 0;
    for (var i = 0; i < num.length; i++) {
      var w = num.words[i] | 0;
      lo += w * 0x3d1;
      num.words[i] = lo & 0x3ffffff;
      lo = w * 0x40 + ((lo / 0x4000000) | 0);
    }

    // Fast length reduction
    if (num.words[num.length - 1] === 0) {
      num.length--;
      if (num.words[num.length - 1] === 0) {
        num.length--;
      }
    }
    return num;
  };

  function P224 () {
    MPrime.call(
      this,
      'p224',
      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');
  }
  inherits(P224, MPrime);

  function P192 () {
    MPrime.call(
      this,
      'p192',
      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');
  }
  inherits(P192, MPrime);

  function P25519 () {
    // 2 ^ 255 - 19
    MPrime.call(
      this,
      '25519',
      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');
  }
  inherits(P25519, MPrime);

  P25519.prototype.imulK = function imulK (num) {
    // K = 0x13
    var carry = 0;
    for (var i = 0; i < num.length; i++) {
      var hi = (num.words[i] | 0) * 0x13 + carry;
      var lo = hi & 0x3ffffff;
      hi >>>= 26;

      num.words[i] = lo;
      carry = hi;
    }
    if (carry !== 0) {
      num.words[num.length++] = carry;
    }
    return num;
  };

  // Exported mostly for testing purposes, use plain name instead
  BN._prime = function prime (name) {
    // Cached version of prime
    if (primes[name]) return primes[name];

    var prime;
    if (name === 'k256') {
      prime = new K256();
    } else if (name === 'p224') {
      prime = new P224();
    } else if (name === 'p192') {
      prime = new P192();
    } else if (name === 'p25519') {
      prime = new P25519();
    } else {
      throw new Error('Unknown prime ' + name);
    }
    primes[name] = prime;

    return prime;
  };

  //
  // Base reduction engine
  //
  function Red (m) {
    if (typeof m === 'string') {
      var prime = BN._prime(m);
      this.m = prime.p;
      this.prime = prime;
    } else {
      assert(m.gtn(1), 'modulus must be greater than 1');
      this.m = m;
      this.prime = null;
    }
  }

  Red.prototype._verify1 = function _verify1 (a) {
    assert(a.negative === 0, 'red works only with positives');
    assert(a.red, 'red works only with red numbers');
  };

  Red.prototype._verify2 = function _verify2 (a, b) {
    assert((a.negative | b.negative) === 0, 'red works only with positives');
    assert(a.red && a.red === b.red,
      'red works only with red numbers');
  };

  Red.prototype.imod = function imod (a) {
    if (this.prime) return this.prime.ireduce(a)._forceRed(this);
    return a.umod(this.m)._forceRed(this);
  };

  Red.prototype.neg = function neg (a) {
    if (a.isZero()) {
      return a.clone();
    }

    return this.m.sub(a)._forceRed(this);
  };

  Red.prototype.add = function add (a, b) {
    this._verify2(a, b);

    var res = a.add(b);
    if (res.cmp(this.m) >= 0) {
      res.isub(this.m);
    }
    return res._forceRed(this);
  };

  Red.prototype.iadd = function iadd (a, b) {
    this._verify2(a, b);

    var res = a.iadd(b);
    if (res.cmp(this.m) >= 0) {
      res.isub(this.m);
    }
    return res;
  };

  Red.prototype.sub = function sub (a, b) {
    this._verify2(a, b);

    var res = a.sub(b);
    if (res.cmpn(0) < 0) {
      res.iadd(this.m);
    }
    return res._forceRed(this);
  };

  Red.prototype.isub = function isub (a, b) {
    this._verify2(a, b);

    var res = a.isub(b);
    if (res.cmpn(0) < 0) {
      res.iadd(this.m);
    }
    return res;
  };

  Red.prototype.shl = function shl (a, num) {
    this._verify1(a);
    return this.imod(a.ushln(num));
  };

  Red.prototype.imul = function imul (a, b) {
    this._verify2(a, b);
    return this.imod(a.imul(b));
  };

  Red.prototype.mul = function mul (a, b) {
    this._verify2(a, b);
    return this.imod(a.mul(b));
  };

  Red.prototype.isqr = function isqr (a) {
    return this.imul(a, a.clone());
  };

  Red.prototype.sqr = function sqr (a) {
    return this.mul(a, a);
  };

  Red.prototype.sqrt = function sqrt (a) {
    if (a.isZero()) return a.clone();

    var mod3 = this.m.andln(3);
    assert(mod3 % 2 === 1);

    // Fast case
    if (mod3 === 3) {
      var pow = this.m.add(new BN(1)).iushrn(2);
      return this.pow(a, pow);
    }

    // Tonelli-Shanks algorithm (Totally unoptimized and slow)
    //
    // Find Q and S, that Q * 2 ^ S = (P - 1)
    var q = this.m.subn(1);
    var s = 0;
    while (!q.isZero() && q.andln(1) === 0) {
      s++;
      q.iushrn(1);
    }
    assert(!q.isZero());

    var one = new BN(1).toRed(this);
    var nOne = one.redNeg();

    // Find quadratic non-residue
    // NOTE: Max is such because of generalized Riemann hypothesis.
    var lpow = this.m.subn(1).iushrn(1);
    var z = this.m.bitLength();
    z = new BN(2 * z * z).toRed(this);

    while (this.pow(z, lpow).cmp(nOne) !== 0) {
      z.redIAdd(nOne);
    }

    var c = this.pow(z, q);
    var r = this.pow(a, q.addn(1).iushrn(1));
    var t = this.pow(a, q);
    var m = s;
    while (t.cmp(one) !== 0) {
      var tmp = t;
      for (var i = 0; tmp.cmp(one) !== 0; i++) {
        tmp = tmp.redSqr();
      }
      assert(i < m);
      var b = this.pow(c, new BN(1).iushln(m - i - 1));

      r = r.redMul(b);
      c = b.redSqr();
      t = t.redMul(c);
      m = i;
    }

    return r;
  };

  Red.prototype.invm = function invm (a) {
    var inv = a._invmp(this.m);
    if (inv.negative !== 0) {
      inv.negative = 0;
      return this.imod(inv).redNeg();
    } else {
      return this.imod(inv);
    }
  };

  Red.prototype.pow = function pow (a, num) {
    if (num.isZero()) return new BN(1).toRed(this);
    if (num.cmpn(1) === 0) return a.clone();

    var windowSize = 4;
    var wnd = new Array(1 << windowSize);
    wnd[0] = new BN(1).toRed(this);
    wnd[1] = a;
    for (var i = 2; i < wnd.length; i++) {
      wnd[i] = this.mul(wnd[i - 1], a);
    }

    var res = wnd[0];
    var current = 0;
    var currentLen = 0;
    var start = num.bitLength() % 26;
    if (start === 0) {
      start = 26;
    }

    for (i = num.length - 1; i >= 0; i--) {
      var word = num.words[i];
      for (var j = start - 1; j >= 0; j--) {
        var bit = (word >> j) & 1;
        if (res !== wnd[0]) {
          res = this.sqr(res);
        }

        if (bit === 0 && current === 0) {
          currentLen = 0;
          continue;
        }

        current <<= 1;
        current |= bit;
        currentLen++;
        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;

        res = this.mul(res, wnd[current]);
        currentLen = 0;
        current = 0;
      }
      start = 26;
    }

    return res;
  };

  Red.prototype.convertTo = function convertTo (num) {
    var r = num.umod(this.m);

    return r === num ? r.clone() : r;
  };

  Red.prototype.convertFrom = function convertFrom (num) {
    var res = num.clone();
    res.red = null;
    return res;
  };

  //
  // Montgomery method engine
  //

  BN.mont = function mont (num) {
    return new Mont(num);
  };

  function Mont (m) {
    Red.call(this, m);

    this.shift = this.m.bitLength();
    if (this.shift % 26 !== 0) {
      this.shift += 26 - (this.shift % 26);
    }

    this.r = new BN(1).iushln(this.shift);
    this.r2 = this.imod(this.r.sqr());
    this.rinv = this.r._invmp(this.m);

    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);
    this.minv = this.minv.umod(this.r);
    this.minv = this.r.sub(this.minv);
  }
  inherits(Mont, Red);

  Mont.prototype.convertTo = function convertTo (num) {
    return this.imod(num.ushln(this.shift));
  };

  Mont.prototype.convertFrom = function convertFrom (num) {
    var r = this.imod(num.mul(this.rinv));
    r.red = null;
    return r;
  };

  Mont.prototype.imul = function imul (a, b) {
    if (a.isZero() || b.isZero()) {
      a.words[0] = 0;
      a.length = 1;
      return a;
    }

    var t = a.imul(b);
    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);
    var u = t.isub(c).iushrn(this.shift);
    var res = u;

    if (u.cmp(this.m) >= 0) {
      res = u.isub(this.m);
    } else if (u.cmpn(0) < 0) {
      res = u.iadd(this.m);
    }

    return res._forceRed(this);
  };

  Mont.prototype.mul = function mul (a, b) {
    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);

    var t = a.mul(b);
    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);
    var u = t.isub(c).iushrn(this.shift);
    var res = u;
    if (u.cmp(this.m) >= 0) {
      res = u.isub(this.m);
    } else if (u.cmpn(0) < 0) {
      res = u.iadd(this.m);
    }

    return res._forceRed(this);
  };

  Mont.prototype.invm = function invm (a) {
    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R
    var res = this.imod(a._invmp(this.m).mul(this.r2));
    return res._forceRed(this);
  };
})( false || module, this);

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../.4.31.0@webpack/buildin/module.js */ "./node_modules/.4.31.0@webpack/buildin/module.js")(module)))

/***/ }),

/***/ "./node_modules/.4.31.0@webpack/buildin/global.js":
/*!***********************************!*\
  !*** (webpack)/buildin/global.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports) {

var g;

// This works in non-strict mode
g = (function() {
	return this;
})();

try {
	// This works if eval is allowed (see CSP)
	g = g || new Function("return this")();
} catch (e) {
	// This works if the window reference is available
	if (typeof window === "object") g = window;
}

// g can still be undefined, but nothing to do about it...
// We return undefined, instead of nothing here, so it's
// easier to handle this case. if(!global) { ...}

module.exports = g;


/***/ }),

/***/ "./node_modules/.4.31.0@webpack/buildin/module.js":
/*!***********************************!*\
  !*** (webpack)/buildin/module.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = function(module) {
	if (!module.webpackPolyfill) {
		module.deprecate = function() {};
		module.paths = [];
		// module.parent = undefined by default
		if (!module.children) module.children = [];
		Object.defineProperty(module, "loaded", {
			enumerable: true,
			get: function() {
				return module.l;
			}
		});
		Object.defineProperty(module, "id", {
			enumerable: true,
			get: function() {
				return module.i;
			}
		});
		module.webpackPolyfill = 1;
	}
	return module;
};


/***/ }),

/***/ "./node_modules/.4.9.1@buffer/index.js":
/*!*********************************************!*\
  !*** ./node_modules/.4.9.1@buffer/index.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(global) {/*!
 * The buffer module from node.js, for the browser.
 *
 * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>
 * @license  MIT
 */
/* eslint-disable no-proto */



var base64 = __webpack_require__(/*! base64-js */ "./node_modules/.1.3.0@base64-js/index.js")
var ieee754 = __webpack_require__(/*! ieee754 */ "./node_modules/.1.1.13@ieee754/index.js")
var isArray = __webpack_require__(/*! isarray */ "./node_modules/.1.0.0@isarray/index.js")

exports.Buffer = Buffer
exports.SlowBuffer = SlowBuffer
exports.INSPECT_MAX_BYTES = 50

/**
 * If `Buffer.TYPED_ARRAY_SUPPORT`:
 *   === true    Use Uint8Array implementation (fastest)
 *   === false   Use Object implementation (most compatible, even IE6)
 *
 * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,
 * Opera 11.6+, iOS 4.2+.
 *
 * Due to various browser bugs, sometimes the Object implementation will be used even
 * when the browser supports typed arrays.
 *
 * Note:
 *
 *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,
 *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.
 *
 *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.
 *
 *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of
 *     incorrect length in some situations.

 * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they
 * get the Object implementation, which is slower but behaves correctly.
 */
Buffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined
  ? global.TYPED_ARRAY_SUPPORT
  : typedArraySupport()

/*
 * Export kMaxLength after typed array support is determined.
 */
exports.kMaxLength = kMaxLength()

function typedArraySupport () {
  try {
    var arr = new Uint8Array(1)
    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}
    return arr.foo() === 42 && // typed array instances can be augmented
        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`
        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`
  } catch (e) {
    return false
  }
}

function kMaxLength () {
  return Buffer.TYPED_ARRAY_SUPPORT
    ? 0x7fffffff
    : 0x3fffffff
}

function createBuffer (that, length) {
  if (kMaxLength() < length) {
    throw new RangeError('Invalid typed array length')
  }
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    // Return an augmented `Uint8Array` instance, for best performance
    that = new Uint8Array(length)
    that.__proto__ = Buffer.prototype
  } else {
    // Fallback: Return an object instance of the Buffer class
    if (that === null) {
      that = new Buffer(length)
    }
    that.length = length
  }

  return that
}

/**
 * The Buffer constructor returns instances of `Uint8Array` that have their
 * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of
 * `Uint8Array`, so the returned instances will have all the node `Buffer` methods
 * and the `Uint8Array` methods. Square bracket notation works as expected -- it
 * returns a single octet.
 *
 * The `Uint8Array` prototype remains unmodified.
 */

function Buffer (arg, encodingOrOffset, length) {
  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {
    return new Buffer(arg, encodingOrOffset, length)
  }

  // Common case.
  if (typeof arg === 'number') {
    if (typeof encodingOrOffset === 'string') {
      throw new Error(
        'If encoding is specified then the first argument must be a string'
      )
    }
    return allocUnsafe(this, arg)
  }
  return from(this, arg, encodingOrOffset, length)
}

Buffer.poolSize = 8192 // not used by this implementation

// TODO: Legacy, not needed anymore. Remove in next major version.
Buffer._augment = function (arr) {
  arr.__proto__ = Buffer.prototype
  return arr
}

function from (that, value, encodingOrOffset, length) {
  if (typeof value === 'number') {
    throw new TypeError('"value" argument must not be a number')
  }

  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {
    return fromArrayBuffer(that, value, encodingOrOffset, length)
  }

  if (typeof value === 'string') {
    return fromString(that, value, encodingOrOffset)
  }

  return fromObject(that, value)
}

/**
 * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError
 * if value is a number.
 * Buffer.from(str[, encoding])
 * Buffer.from(array)
 * Buffer.from(buffer)
 * Buffer.from(arrayBuffer[, byteOffset[, length]])
 **/
Buffer.from = function (value, encodingOrOffset, length) {
  return from(null, value, encodingOrOffset, length)
}

if (Buffer.TYPED_ARRAY_SUPPORT) {
  Buffer.prototype.__proto__ = Uint8Array.prototype
  Buffer.__proto__ = Uint8Array
  if (typeof Symbol !== 'undefined' && Symbol.species &&
      Buffer[Symbol.species] === Buffer) {
    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97
    Object.defineProperty(Buffer, Symbol.species, {
      value: null,
      configurable: true
    })
  }
}

function assertSize (size) {
  if (typeof size !== 'number') {
    throw new TypeError('"size" argument must be a number')
  } else if (size < 0) {
    throw new RangeError('"size" argument must not be negative')
  }
}

function alloc (that, size, fill, encoding) {
  assertSize(size)
  if (size <= 0) {
    return createBuffer(that, size)
  }
  if (fill !== undefined) {
    // Only pay attention to encoding if it's a string. This
    // prevents accidentally sending in a number that would
    // be interpretted as a start offset.
    return typeof encoding === 'string'
      ? createBuffer(that, size).fill(fill, encoding)
      : createBuffer(that, size).fill(fill)
  }
  return createBuffer(that, size)
}

/**
 * Creates a new filled Buffer instance.
 * alloc(size[, fill[, encoding]])
 **/
Buffer.alloc = function (size, fill, encoding) {
  return alloc(null, size, fill, encoding)
}

function allocUnsafe (that, size) {
  assertSize(size)
  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)
  if (!Buffer.TYPED_ARRAY_SUPPORT) {
    for (var i = 0; i < size; ++i) {
      that[i] = 0
    }
  }
  return that
}

/**
 * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.
 * */
Buffer.allocUnsafe = function (size) {
  return allocUnsafe(null, size)
}
/**
 * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.
 */
Buffer.allocUnsafeSlow = function (size) {
  return allocUnsafe(null, size)
}

function fromString (that, string, encoding) {
  if (typeof encoding !== 'string' || encoding === '') {
    encoding = 'utf8'
  }

  if (!Buffer.isEncoding(encoding)) {
    throw new TypeError('"encoding" must be a valid string encoding')
  }

  var length = byteLength(string, encoding) | 0
  that = createBuffer(that, length)

  var actual = that.write(string, encoding)

  if (actual !== length) {
    // Writing a hex string, for example, that contains invalid characters will
    // cause everything after the first invalid character to be ignored. (e.g.
    // 'abxxcd' will be treated as 'ab')
    that = that.slice(0, actual)
  }

  return that
}

function fromArrayLike (that, array) {
  var length = array.length < 0 ? 0 : checked(array.length) | 0
  that = createBuffer(that, length)
  for (var i = 0; i < length; i += 1) {
    that[i] = array[i] & 255
  }
  return that
}

function fromArrayBuffer (that, array, byteOffset, length) {
  array.byteLength // this throws if `array` is not a valid ArrayBuffer

  if (byteOffset < 0 || array.byteLength < byteOffset) {
    throw new RangeError('\'offset\' is out of bounds')
  }

  if (array.byteLength < byteOffset + (length || 0)) {
    throw new RangeError('\'length\' is out of bounds')
  }

  if (byteOffset === undefined && length === undefined) {
    array = new Uint8Array(array)
  } else if (length === undefined) {
    array = new Uint8Array(array, byteOffset)
  } else {
    array = new Uint8Array(array, byteOffset, length)
  }

  if (Buffer.TYPED_ARRAY_SUPPORT) {
    // Return an augmented `Uint8Array` instance, for best performance
    that = array
    that.__proto__ = Buffer.prototype
  } else {
    // Fallback: Return an object instance of the Buffer class
    that = fromArrayLike(that, array)
  }
  return that
}

function fromObject (that, obj) {
  if (Buffer.isBuffer(obj)) {
    var len = checked(obj.length) | 0
    that = createBuffer(that, len)

    if (that.length === 0) {
      return that
    }

    obj.copy(that, 0, 0, len)
    return that
  }

  if (obj) {
    if ((typeof ArrayBuffer !== 'undefined' &&
        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {
      if (typeof obj.length !== 'number' || isnan(obj.length)) {
        return createBuffer(that, 0)
      }
      return fromArrayLike(that, obj)
    }

    if (obj.type === 'Buffer' && isArray(obj.data)) {
      return fromArrayLike(that, obj.data)
    }
  }

  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')
}

function checked (length) {
  // Note: cannot use `length < kMaxLength()` here because that fails when
  // length is NaN (which is otherwise coerced to zero.)
  if (length >= kMaxLength()) {
    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +
                         'size: 0x' + kMaxLength().toString(16) + ' bytes')
  }
  return length | 0
}

function SlowBuffer (length) {
  if (+length != length) { // eslint-disable-line eqeqeq
    length = 0
  }
  return Buffer.alloc(+length)
}

Buffer.isBuffer = function isBuffer (b) {
  return !!(b != null && b._isBuffer)
}

Buffer.compare = function compare (a, b) {
  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {
    throw new TypeError('Arguments must be Buffers')
  }

  if (a === b) return 0

  var x = a.length
  var y = b.length

  for (var i = 0, len = Math.min(x, y); i < len; ++i) {
    if (a[i] !== b[i]) {
      x = a[i]
      y = b[i]
      break
    }
  }

  if (x < y) return -1
  if (y < x) return 1
  return 0
}

Buffer.isEncoding = function isEncoding (encoding) {
  switch (String(encoding).toLowerCase()) {
    case 'hex':
    case 'utf8':
    case 'utf-8':
    case 'ascii':
    case 'latin1':
    case 'binary':
    case 'base64':
    case 'ucs2':
    case 'ucs-2':
    case 'utf16le':
    case 'utf-16le':
      return true
    default:
      return false
  }
}

Buffer.concat = function concat (list, length) {
  if (!isArray(list)) {
    throw new TypeError('"list" argument must be an Array of Buffers')
  }

  if (list.length === 0) {
    return Buffer.alloc(0)
  }

  var i
  if (length === undefined) {
    length = 0
    for (i = 0; i < list.length; ++i) {
      length += list[i].length
    }
  }

  var buffer = Buffer.allocUnsafe(length)
  var pos = 0
  for (i = 0; i < list.length; ++i) {
    var buf = list[i]
    if (!Buffer.isBuffer(buf)) {
      throw new TypeError('"list" argument must be an Array of Buffers')
    }
    buf.copy(buffer, pos)
    pos += buf.length
  }
  return buffer
}

function byteLength (string, encoding) {
  if (Buffer.isBuffer(string)) {
    return string.length
  }
  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&
      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {
    return string.byteLength
  }
  if (typeof string !== 'string') {
    string = '' + string
  }

  var len = string.length
  if (len === 0) return 0

  // Use a for loop to avoid recursion
  var loweredCase = false
  for (;;) {
    switch (encoding) {
      case 'ascii':
      case 'latin1':
      case 'binary':
        return len
      case 'utf8':
      case 'utf-8':
      case undefined:
        return utf8ToBytes(string).length
      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return len * 2
      case 'hex':
        return len >>> 1
      case 'base64':
        return base64ToBytes(string).length
      default:
        if (loweredCase) return utf8ToBytes(string).length // assume utf8
        encoding = ('' + encoding).toLowerCase()
        loweredCase = true
    }
  }
}
Buffer.byteLength = byteLength

function slowToString (encoding, start, end) {
  var loweredCase = false

  // No need to verify that "this.length <= MAX_UINT32" since it's a read-only
  // property of a typed array.

  // This behaves neither like String nor Uint8Array in that we set start/end
  // to their upper/lower bounds if the value passed is out of range.
  // undefined is handled specially as per ECMA-262 6th Edition,
  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.
  if (start === undefined || start < 0) {
    start = 0
  }
  // Return early if start > this.length. Done here to prevent potential uint32
  // coercion fail below.
  if (start > this.length) {
    return ''
  }

  if (end === undefined || end > this.length) {
    end = this.length
  }

  if (end <= 0) {
    return ''
  }

  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.
  end >>>= 0
  start >>>= 0

  if (end <= start) {
    return ''
  }

  if (!encoding) encoding = 'utf8'

  while (true) {
    switch (encoding) {
      case 'hex':
        return hexSlice(this, start, end)

      case 'utf8':
      case 'utf-8':
        return utf8Slice(this, start, end)

      case 'ascii':
        return asciiSlice(this, start, end)

      case 'latin1':
      case 'binary':
        return latin1Slice(this, start, end)

      case 'base64':
        return base64Slice(this, start, end)

      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return utf16leSlice(this, start, end)

      default:
        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)
        encoding = (encoding + '').toLowerCase()
        loweredCase = true
    }
  }
}

// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect
// Buffer instances.
Buffer.prototype._isBuffer = true

function swap (b, n, m) {
  var i = b[n]
  b[n] = b[m]
  b[m] = i
}

Buffer.prototype.swap16 = function swap16 () {
  var len = this.length
  if (len % 2 !== 0) {
    throw new RangeError('Buffer size must be a multiple of 16-bits')
  }
  for (var i = 0; i < len; i += 2) {
    swap(this, i, i + 1)
  }
  return this
}

Buffer.prototype.swap32 = function swap32 () {
  var len = this.length
  if (len % 4 !== 0) {
    throw new RangeError('Buffer size must be a multiple of 32-bits')
  }
  for (var i = 0; i < len; i += 4) {
    swap(this, i, i + 3)
    swap(this, i + 1, i + 2)
  }
  return this
}

Buffer.prototype.swap64 = function swap64 () {
  var len = this.length
  if (len % 8 !== 0) {
    throw new RangeError('Buffer size must be a multiple of 64-bits')
  }
  for (var i = 0; i < len; i += 8) {
    swap(this, i, i + 7)
    swap(this, i + 1, i + 6)
    swap(this, i + 2, i + 5)
    swap(this, i + 3, i + 4)
  }
  return this
}

Buffer.prototype.toString = function toString () {
  var length = this.length | 0
  if (length === 0) return ''
  if (arguments.length === 0) return utf8Slice(this, 0, length)
  return slowToString.apply(this, arguments)
}

Buffer.prototype.equals = function equals (b) {
  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')
  if (this === b) return true
  return Buffer.compare(this, b) === 0
}

Buffer.prototype.inspect = function inspect () {
  var str = ''
  var max = exports.INSPECT_MAX_BYTES
  if (this.length > 0) {
    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')
    if (this.length > max) str += ' ... '
  }
  return '<Buffer ' + str + '>'
}

Buffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {
  if (!Buffer.isBuffer(target)) {
    throw new TypeError('Argument must be a Buffer')
  }

  if (start === undefined) {
    start = 0
  }
  if (end === undefined) {
    end = target ? target.length : 0
  }
  if (thisStart === undefined) {
    thisStart = 0
  }
  if (thisEnd === undefined) {
    thisEnd = this.length
  }

  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {
    throw new RangeError('out of range index')
  }

  if (thisStart >= thisEnd && start >= end) {
    return 0
  }
  if (thisStart >= thisEnd) {
    return -1
  }
  if (start >= end) {
    return 1
  }

  start >>>= 0
  end >>>= 0
  thisStart >>>= 0
  thisEnd >>>= 0

  if (this === target) return 0

  var x = thisEnd - thisStart
  var y = end - start
  var len = Math.min(x, y)

  var thisCopy = this.slice(thisStart, thisEnd)
  var targetCopy = target.slice(start, end)

  for (var i = 0; i < len; ++i) {
    if (thisCopy[i] !== targetCopy[i]) {
      x = thisCopy[i]
      y = targetCopy[i]
      break
    }
  }

  if (x < y) return -1
  if (y < x) return 1
  return 0
}

// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,
// OR the last index of `val` in `buffer` at offset <= `byteOffset`.
//
// Arguments:
// - buffer - a Buffer to search
// - val - a string, Buffer, or number
// - byteOffset - an index into `buffer`; will be clamped to an int32
// - encoding - an optional encoding, relevant is val is a string
// - dir - true for indexOf, false for lastIndexOf
function bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {
  // Empty buffer means no match
  if (buffer.length === 0) return -1

  // Normalize byteOffset
  if (typeof byteOffset === 'string') {
    encoding = byteOffset
    byteOffset = 0
  } else if (byteOffset > 0x7fffffff) {
    byteOffset = 0x7fffffff
  } else if (byteOffset < -0x80000000) {
    byteOffset = -0x80000000
  }
  byteOffset = +byteOffset  // Coerce to Number.
  if (isNaN(byteOffset)) {
    // byteOffset: it it's undefined, null, NaN, "foo", etc, search whole buffer
    byteOffset = dir ? 0 : (buffer.length - 1)
  }

  // Normalize byteOffset: negative offsets start from the end of the buffer
  if (byteOffset < 0) byteOffset = buffer.length + byteOffset
  if (byteOffset >= buffer.length) {
    if (dir) return -1
    else byteOffset = buffer.length - 1
  } else if (byteOffset < 0) {
    if (dir) byteOffset = 0
    else return -1
  }

  // Normalize val
  if (typeof val === 'string') {
    val = Buffer.from(val, encoding)
  }

  // Finally, search either indexOf (if dir is true) or lastIndexOf
  if (Buffer.isBuffer(val)) {
    // Special case: looking for empty string/buffer always fails
    if (val.length === 0) {
      return -1
    }
    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)
  } else if (typeof val === 'number') {
    val = val & 0xFF // Search for a byte value [0-255]
    if (Buffer.TYPED_ARRAY_SUPPORT &&
        typeof Uint8Array.prototype.indexOf === 'function') {
      if (dir) {
        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)
      } else {
        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)
      }
    }
    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)
  }

  throw new TypeError('val must be string, number or Buffer')
}

function arrayIndexOf (arr, val, byteOffset, encoding, dir) {
  var indexSize = 1
  var arrLength = arr.length
  var valLength = val.length

  if (encoding !== undefined) {
    encoding = String(encoding).toLowerCase()
    if (encoding === 'ucs2' || encoding === 'ucs-2' ||
        encoding === 'utf16le' || encoding === 'utf-16le') {
      if (arr.length < 2 || val.length < 2) {
        return -1
      }
      indexSize = 2
      arrLength /= 2
      valLength /= 2
      byteOffset /= 2
    }
  }

  function read (buf, i) {
    if (indexSize === 1) {
      return buf[i]
    } else {
      return buf.readUInt16BE(i * indexSize)
    }
  }

  var i
  if (dir) {
    var foundIndex = -1
    for (i = byteOffset; i < arrLength; i++) {
      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {
        if (foundIndex === -1) foundIndex = i
        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize
      } else {
        if (foundIndex !== -1) i -= i - foundIndex
        foundIndex = -1
      }
    }
  } else {
    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength
    for (i = byteOffset; i >= 0; i--) {
      var found = true
      for (var j = 0; j < valLength; j++) {
        if (read(arr, i + j) !== read(val, j)) {
          found = false
          break
        }
      }
      if (found) return i
    }
  }

  return -1
}

Buffer.prototype.includes = function includes (val, byteOffset, encoding) {
  return this.indexOf(val, byteOffset, encoding) !== -1
}

Buffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {
  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)
}

Buffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {
  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)
}

function hexWrite (buf, string, offset, length) {
  offset = Number(offset) || 0
  var remaining = buf.length - offset
  if (!length) {
    length = remaining
  } else {
    length = Number(length)
    if (length > remaining) {
      length = remaining
    }
  }

  // must be an even number of digits
  var strLen = string.length
  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')

  if (length > strLen / 2) {
    length = strLen / 2
  }
  for (var i = 0; i < length; ++i) {
    var parsed = parseInt(string.substr(i * 2, 2), 16)
    if (isNaN(parsed)) return i
    buf[offset + i] = parsed
  }
  return i
}

function utf8Write (buf, string, offset, length) {
  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)
}

function asciiWrite (buf, string, offset, length) {
  return blitBuffer(asciiToBytes(string), buf, offset, length)
}

function latin1Write (buf, string, offset, length) {
  return asciiWrite(buf, string, offset, length)
}

function base64Write (buf, string, offset, length) {
  return blitBuffer(base64ToBytes(string), buf, offset, length)
}

function ucs2Write (buf, string, offset, length) {
  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)
}

Buffer.prototype.write = function write (string, offset, length, encoding) {
  // Buffer#write(string)
  if (offset === undefined) {
    encoding = 'utf8'
    length = this.length
    offset = 0
  // Buffer#write(string, encoding)
  } else if (length === undefined && typeof offset === 'string') {
    encoding = offset
    length = this.length
    offset = 0
  // Buffer#write(string, offset[, length][, encoding])
  } else if (isFinite(offset)) {
    offset = offset | 0
    if (isFinite(length)) {
      length = length | 0
      if (encoding === undefined) encoding = 'utf8'
    } else {
      encoding = length
      length = undefined
    }
  // legacy write(string, encoding, offset, length) - remove in v0.13
  } else {
    throw new Error(
      'Buffer.write(string, encoding, offset[, length]) is no longer supported'
    )
  }

  var remaining = this.length - offset
  if (length === undefined || length > remaining) length = remaining

  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {
    throw new RangeError('Attempt to write outside buffer bounds')
  }

  if (!encoding) encoding = 'utf8'

  var loweredCase = false
  for (;;) {
    switch (encoding) {
      case 'hex':
        return hexWrite(this, string, offset, length)

      case 'utf8':
      case 'utf-8':
        return utf8Write(this, string, offset, length)

      case 'ascii':
        return asciiWrite(this, string, offset, length)

      case 'latin1':
      case 'binary':
        return latin1Write(this, string, offset, length)

      case 'base64':
        // Warning: maxLength not taken into account in base64Write
        return base64Write(this, string, offset, length)

      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return ucs2Write(this, string, offset, length)

      default:
        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)
        encoding = ('' + encoding).toLowerCase()
        loweredCase = true
    }
  }
}

Buffer.prototype.toJSON = function toJSON () {
  return {
    type: 'Buffer',
    data: Array.prototype.slice.call(this._arr || this, 0)
  }
}

function base64Slice (buf, start, end) {
  if (start === 0 && end === buf.length) {
    return base64.fromByteArray(buf)
  } else {
    return base64.fromByteArray(buf.slice(start, end))
  }
}

function utf8Slice (buf, start, end) {
  end = Math.min(buf.length, end)
  var res = []

  var i = start
  while (i < end) {
    var firstByte = buf[i]
    var codePoint = null
    var bytesPerSequence = (firstByte > 0xEF) ? 4
      : (firstByte > 0xDF) ? 3
      : (firstByte > 0xBF) ? 2
      : 1

    if (i + bytesPerSequence <= end) {
      var secondByte, thirdByte, fourthByte, tempCodePoint

      switch (bytesPerSequence) {
        case 1:
          if (firstByte < 0x80) {
            codePoint = firstByte
          }
          break
        case 2:
          secondByte = buf[i + 1]
          if ((secondByte & 0xC0) === 0x80) {
            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)
            if (tempCodePoint > 0x7F) {
              codePoint = tempCodePoint
            }
          }
          break
        case 3:
          secondByte = buf[i + 1]
          thirdByte = buf[i + 2]
          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {
            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)
            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {
              codePoint = tempCodePoint
            }
          }
          break
        case 4:
          secondByte = buf[i + 1]
          thirdByte = buf[i + 2]
          fourthByte = buf[i + 3]
          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {
            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)
            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {
              codePoint = tempCodePoint
            }
          }
      }
    }

    if (codePoint === null) {
      // we did not generate a valid codePoint so insert a
      // replacement char (U+FFFD) and advance only 1 byte
      codePoint = 0xFFFD
      bytesPerSequence = 1
    } else if (codePoint > 0xFFFF) {
      // encode to utf16 (surrogate pair dance)
      codePoint -= 0x10000
      res.push(codePoint >>> 10 & 0x3FF | 0xD800)
      codePoint = 0xDC00 | codePoint & 0x3FF
    }

    res.push(codePoint)
    i += bytesPerSequence
  }

  return decodeCodePointsArray(res)
}

// Based on http://stackoverflow.com/a/22747272/680742, the browser with
// the lowest limit is Chrome, with 0x10000 args.
// We go 1 magnitude less, for safety
var MAX_ARGUMENTS_LENGTH = 0x1000

function decodeCodePointsArray (codePoints) {
  var len = codePoints.length
  if (len <= MAX_ARGUMENTS_LENGTH) {
    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()
  }

  // Decode in chunks to avoid "call stack size exceeded".
  var res = ''
  var i = 0
  while (i < len) {
    res += String.fromCharCode.apply(
      String,
      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)
    )
  }
  return res
}

function asciiSlice (buf, start, end) {
  var ret = ''
  end = Math.min(buf.length, end)

  for (var i = start; i < end; ++i) {
    ret += String.fromCharCode(buf[i] & 0x7F)
  }
  return ret
}

function latin1Slice (buf, start, end) {
  var ret = ''
  end = Math.min(buf.length, end)

  for (var i = start; i < end; ++i) {
    ret += String.fromCharCode(buf[i])
  }
  return ret
}

function hexSlice (buf, start, end) {
  var len = buf.length

  if (!start || start < 0) start = 0
  if (!end || end < 0 || end > len) end = len

  var out = ''
  for (var i = start; i < end; ++i) {
    out += toHex(buf[i])
  }
  return out
}

function utf16leSlice (buf, start, end) {
  var bytes = buf.slice(start, end)
  var res = ''
  for (var i = 0; i < bytes.length; i += 2) {
    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)
  }
  return res
}

Buffer.prototype.slice = function slice (start, end) {
  var len = this.length
  start = ~~start
  end = end === undefined ? len : ~~end

  if (start < 0) {
    start += len
    if (start < 0) start = 0
  } else if (start > len) {
    start = len
  }

  if (end < 0) {
    end += len
    if (end < 0) end = 0
  } else if (end > len) {
    end = len
  }

  if (end < start) end = start

  var newBuf
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    newBuf = this.subarray(start, end)
    newBuf.__proto__ = Buffer.prototype
  } else {
    var sliceLen = end - start
    newBuf = new Buffer(sliceLen, undefined)
    for (var i = 0; i < sliceLen; ++i) {
      newBuf[i] = this[i + start]
    }
  }

  return newBuf
}

/*
 * Need to make sure that buffer isn't trying to write out of bounds.
 */
function checkOffset (offset, ext, length) {
  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')
  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')
}

Buffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) checkOffset(offset, byteLength, this.length)

  var val = this[offset]
  var mul = 1
  var i = 0
  while (++i < byteLength && (mul *= 0x100)) {
    val += this[offset + i] * mul
  }

  return val
}

Buffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) {
    checkOffset(offset, byteLength, this.length)
  }

  var val = this[offset + --byteLength]
  var mul = 1
  while (byteLength > 0 && (mul *= 0x100)) {
    val += this[offset + --byteLength] * mul
  }

  return val
}

Buffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 1, this.length)
  return this[offset]
}

Buffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 2, this.length)
  return this[offset] | (this[offset + 1] << 8)
}

Buffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 2, this.length)
  return (this[offset] << 8) | this[offset + 1]
}

Buffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)

  return ((this[offset]) |
      (this[offset + 1] << 8) |
      (this[offset + 2] << 16)) +
      (this[offset + 3] * 0x1000000)
}

Buffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)

  return (this[offset] * 0x1000000) +
    ((this[offset + 1] << 16) |
    (this[offset + 2] << 8) |
    this[offset + 3])
}

Buffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) checkOffset(offset, byteLength, this.length)

  var val = this[offset]
  var mul = 1
  var i = 0
  while (++i < byteLength && (mul *= 0x100)) {
    val += this[offset + i] * mul
  }
  mul *= 0x80

  if (val >= mul) val -= Math.pow(2, 8 * byteLength)

  return val
}

Buffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) checkOffset(offset, byteLength, this.length)

  var i = byteLength
  var mul = 1
  var val = this[offset + --i]
  while (i > 0 && (mul *= 0x100)) {
    val += this[offset + --i] * mul
  }
  mul *= 0x80

  if (val >= mul) val -= Math.pow(2, 8 * byteLength)

  return val
}

Buffer.prototype.readInt8 = function readInt8 (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 1, this.length)
  if (!(this[offset] & 0x80)) return (this[offset])
  return ((0xff - this[offset] + 1) * -1)
}

Buffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 2, this.length)
  var val = this[offset] | (this[offset + 1] << 8)
  return (val & 0x8000) ? val | 0xFFFF0000 : val
}

Buffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 2, this.length)
  var val = this[offset + 1] | (this[offset] << 8)
  return (val & 0x8000) ? val | 0xFFFF0000 : val
}

Buffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)

  return (this[offset]) |
    (this[offset + 1] << 8) |
    (this[offset + 2] << 16) |
    (this[offset + 3] << 24)
}

Buffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)

  return (this[offset] << 24) |
    (this[offset + 1] << 16) |
    (this[offset + 2] << 8) |
    (this[offset + 3])
}

Buffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)
  return ieee754.read(this, offset, true, 23, 4)
}

Buffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)
  return ieee754.read(this, offset, false, 23, 4)
}

Buffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 8, this.length)
  return ieee754.read(this, offset, true, 52, 8)
}

Buffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 8, this.length)
  return ieee754.read(this, offset, false, 52, 8)
}

function checkInt (buf, value, offset, ext, max, min) {
  if (!Buffer.isBuffer(buf)) throw new TypeError('"buffer" argument must be a Buffer instance')
  if (value > max || value < min) throw new RangeError('"value" argument is out of bounds')
  if (offset + ext > buf.length) throw new RangeError('Index out of range')
}

Buffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) {
    var maxBytes = Math.pow(2, 8 * byteLength) - 1
    checkInt(this, value, offset, byteLength, maxBytes, 0)
  }

  var mul = 1
  var i = 0
  this[offset] = value & 0xFF
  while (++i < byteLength && (mul *= 0x100)) {
    this[offset + i] = (value / mul) & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) {
    var maxBytes = Math.pow(2, 8 * byteLength) - 1
    checkInt(this, value, offset, byteLength, maxBytes, 0)
  }

  var i = byteLength - 1
  var mul = 1
  this[offset + i] = value & 0xFF
  while (--i >= 0 && (mul *= 0x100)) {
    this[offset + i] = (value / mul) & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)
  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)
  this[offset] = (value & 0xff)
  return offset + 1
}

function objectWriteUInt16 (buf, value, offset, littleEndian) {
  if (value < 0) value = 0xffff + value + 1
  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {
    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>
      (littleEndian ? i : 1 - i) * 8
  }
}

Buffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value & 0xff)
    this[offset + 1] = (value >>> 8)
  } else {
    objectWriteUInt16(this, value, offset, true)
  }
  return offset + 2
}

Buffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value >>> 8)
    this[offset + 1] = (value & 0xff)
  } else {
    objectWriteUInt16(this, value, offset, false)
  }
  return offset + 2
}

function objectWriteUInt32 (buf, value, offset, littleEndian) {
  if (value < 0) value = 0xffffffff + value + 1
  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {
    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff
  }
}

Buffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset + 3] = (value >>> 24)
    this[offset + 2] = (value >>> 16)
    this[offset + 1] = (value >>> 8)
    this[offset] = (value & 0xff)
  } else {
    objectWriteUInt32(this, value, offset, true)
  }
  return offset + 4
}

Buffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value >>> 24)
    this[offset + 1] = (value >>> 16)
    this[offset + 2] = (value >>> 8)
    this[offset + 3] = (value & 0xff)
  } else {
    objectWriteUInt32(this, value, offset, false)
  }
  return offset + 4
}

Buffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) {
    var limit = Math.pow(2, 8 * byteLength - 1)

    checkInt(this, value, offset, byteLength, limit - 1, -limit)
  }

  var i = 0
  var mul = 1
  var sub = 0
  this[offset] = value & 0xFF
  while (++i < byteLength && (mul *= 0x100)) {
    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {
      sub = 1
    }
    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) {
    var limit = Math.pow(2, 8 * byteLength - 1)

    checkInt(this, value, offset, byteLength, limit - 1, -limit)
  }

  var i = byteLength - 1
  var mul = 1
  var sub = 0
  this[offset + i] = value & 0xFF
  while (--i >= 0 && (mul *= 0x100)) {
    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {
      sub = 1
    }
    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)
  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)
  if (value < 0) value = 0xff + value + 1
  this[offset] = (value & 0xff)
  return offset + 1
}

Buffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value & 0xff)
    this[offset + 1] = (value >>> 8)
  } else {
    objectWriteUInt16(this, value, offset, true)
  }
  return offset + 2
}

Buffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value >>> 8)
    this[offset + 1] = (value & 0xff)
  } else {
    objectWriteUInt16(this, value, offset, false)
  }
  return offset + 2
}

Buffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value & 0xff)
    this[offset + 1] = (value >>> 8)
    this[offset + 2] = (value >>> 16)
    this[offset + 3] = (value >>> 24)
  } else {
    objectWriteUInt32(this, value, offset, true)
  }
  return offset + 4
}

Buffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)
  if (value < 0) value = 0xffffffff + value + 1
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value >>> 24)
    this[offset + 1] = (value >>> 16)
    this[offset + 2] = (value >>> 8)
    this[offset + 3] = (value & 0xff)
  } else {
    objectWriteUInt32(this, value, offset, false)
  }
  return offset + 4
}

function checkIEEE754 (buf, value, offset, ext, max, min) {
  if (offset + ext > buf.length) throw new RangeError('Index out of range')
  if (offset < 0) throw new RangeError('Index out of range')
}

function writeFloat (buf, value, offset, littleEndian, noAssert) {
  if (!noAssert) {
    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)
  }
  ieee754.write(buf, value, offset, littleEndian, 23, 4)
  return offset + 4
}

Buffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {
  return writeFloat(this, value, offset, true, noAssert)
}

Buffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {
  return writeFloat(this, value, offset, false, noAssert)
}

function writeDouble (buf, value, offset, littleEndian, noAssert) {
  if (!noAssert) {
    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)
  }
  ieee754.write(buf, value, offset, littleEndian, 52, 8)
  return offset + 8
}

Buffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {
  return writeDouble(this, value, offset, true, noAssert)
}

Buffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {
  return writeDouble(this, value, offset, false, noAssert)
}

// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)
Buffer.prototype.copy = function copy (target, targetStart, start, end) {
  if (!start) start = 0
  if (!end && end !== 0) end = this.length
  if (targetStart >= target.length) targetStart = target.length
  if (!targetStart) targetStart = 0
  if (end > 0 && end < start) end = start

  // Copy 0 bytes; we're done
  if (end === start) return 0
  if (target.length === 0 || this.length === 0) return 0

  // Fatal error conditions
  if (targetStart < 0) {
    throw new RangeError('targetStart out of bounds')
  }
  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')
  if (end < 0) throw new RangeError('sourceEnd out of bounds')

  // Are we oob?
  if (end > this.length) end = this.length
  if (target.length - targetStart < end - start) {
    end = target.length - targetStart + start
  }

  var len = end - start
  var i

  if (this === target && start < targetStart && targetStart < end) {
    // descending copy from end
    for (i = len - 1; i >= 0; --i) {
      target[i + targetStart] = this[i + start]
    }
  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {
    // ascending copy from start
    for (i = 0; i < len; ++i) {
      target[i + targetStart] = this[i + start]
    }
  } else {
    Uint8Array.prototype.set.call(
      target,
      this.subarray(start, start + len),
      targetStart
    )
  }

  return len
}

// Usage:
//    buffer.fill(number[, offset[, end]])
//    buffer.fill(buffer[, offset[, end]])
//    buffer.fill(string[, offset[, end]][, encoding])
Buffer.prototype.fill = function fill (val, start, end, encoding) {
  // Handle string cases:
  if (typeof val === 'string') {
    if (typeof start === 'string') {
      encoding = start
      start = 0
      end = this.length
    } else if (typeof end === 'string') {
      encoding = end
      end = this.length
    }
    if (val.length === 1) {
      var code = val.charCodeAt(0)
      if (code < 256) {
        val = code
      }
    }
    if (encoding !== undefined && typeof encoding !== 'string') {
      throw new TypeError('encoding must be a string')
    }
    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {
      throw new TypeError('Unknown encoding: ' + encoding)
    }
  } else if (typeof val === 'number') {
    val = val & 255
  }

  // Invalid ranges are not set to a default, so can range check early.
  if (start < 0 || this.length < start || this.length < end) {
    throw new RangeError('Out of range index')
  }

  if (end <= start) {
    return this
  }

  start = start >>> 0
  end = end === undefined ? this.length : end >>> 0

  if (!val) val = 0

  var i
  if (typeof val === 'number') {
    for (i = start; i < end; ++i) {
      this[i] = val
    }
  } else {
    var bytes = Buffer.isBuffer(val)
      ? val
      : utf8ToBytes(new Buffer(val, encoding).toString())
    var len = bytes.length
    for (i = 0; i < end - start; ++i) {
      this[i + start] = bytes[i % len]
    }
  }

  return this
}

// HELPER FUNCTIONS
// ================

var INVALID_BASE64_RE = /[^+\/0-9A-Za-z-_]/g

function base64clean (str) {
  // Node strips out invalid characters like \n and \t from the string, base64-js does not
  str = stringtrim(str).replace(INVALID_BASE64_RE, '')
  // Node converts strings with length < 2 to ''
  if (str.length < 2) return ''
  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not
  while (str.length % 4 !== 0) {
    str = str + '='
  }
  return str
}

function stringtrim (str) {
  if (str.trim) return str.trim()
  return str.replace(/^\s+|\s+$/g, '')
}

function toHex (n) {
  if (n < 16) return '0' + n.toString(16)
  return n.toString(16)
}

function utf8ToBytes (string, units) {
  units = units || Infinity
  var codePoint
  var length = string.length
  var leadSurrogate = null
  var bytes = []

  for (var i = 0; i < length; ++i) {
    codePoint = string.charCodeAt(i)

    // is surrogate component
    if (codePoint > 0xD7FF && codePoint < 0xE000) {
      // last char was a lead
      if (!leadSurrogate) {
        // no lead yet
        if (codePoint > 0xDBFF) {
          // unexpected trail
          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
          continue
        } else if (i + 1 === length) {
          // unpaired lead
          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
          continue
        }

        // valid lead
        leadSurrogate = codePoint

        continue
      }

      // 2 leads in a row
      if (codePoint < 0xDC00) {
        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
        leadSurrogate = codePoint
        continue
      }

      // valid surrogate pair
      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000
    } else if (leadSurrogate) {
      // valid bmp char, but last char was a lead
      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
    }

    leadSurrogate = null

    // encode utf8
    if (codePoint < 0x80) {
      if ((units -= 1) < 0) break
      bytes.push(codePoint)
    } else if (codePoint < 0x800) {
      if ((units -= 2) < 0) break
      bytes.push(
        codePoint >> 0x6 | 0xC0,
        codePoint & 0x3F | 0x80
      )
    } else if (codePoint < 0x10000) {
      if ((units -= 3) < 0) break
      bytes.push(
        codePoint >> 0xC | 0xE0,
        codePoint >> 0x6 & 0x3F | 0x80,
        codePoint & 0x3F | 0x80
      )
    } else if (codePoint < 0x110000) {
      if ((units -= 4) < 0) break
      bytes.push(
        codePoint >> 0x12 | 0xF0,
        codePoint >> 0xC & 0x3F | 0x80,
        codePoint >> 0x6 & 0x3F | 0x80,
        codePoint & 0x3F | 0x80
      )
    } else {
      throw new Error('Invalid code point')
    }
  }

  return bytes
}

function asciiToBytes (str) {
  var byteArray = []
  for (var i = 0; i < str.length; ++i) {
    // Node's code seems to be doing this and not & 0x7F..
    byteArray.push(str.charCodeAt(i) & 0xFF)
  }
  return byteArray
}

function utf16leToBytes (str, units) {
  var c, hi, lo
  var byteArray = []
  for (var i = 0; i < str.length; ++i) {
    if ((units -= 2) < 0) break

    c = str.charCodeAt(i)
    hi = c >> 8
    lo = c % 256
    byteArray.push(lo)
    byteArray.push(hi)
  }

  return byteArray
}

function base64ToBytes (str) {
  return base64.toByteArray(base64clean(str))
}

function blitBuffer (src, dst, offset, length) {
  for (var i = 0; i < length; ++i) {
    if ((i + offset >= dst.length) || (i >= src.length)) break
    dst[i + offset] = src[i]
  }
  return i
}

function isnan (val) {
  return val !== val // eslint-disable-line no-self-compare
}

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../.4.31.0@webpack/buildin/global.js */ "./node_modules/.4.31.0@webpack/buildin/global.js")))

/***/ }),

/***/ "./node_modules/.5.0.3@diffie-hellman/browser.js":
/*!*******************************************************!*\
  !*** ./node_modules/.5.0.3@diffie-hellman/browser.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var generatePrime = __webpack_require__(/*! ./lib/generatePrime */ "./node_modules/.5.0.3@diffie-hellman/lib/generatePrime.js")
var primes = __webpack_require__(/*! ./lib/primes.json */ "./node_modules/.5.0.3@diffie-hellman/lib/primes.json")

var DH = __webpack_require__(/*! ./lib/dh */ "./node_modules/.5.0.3@diffie-hellman/lib/dh.js")

function getDiffieHellman (mod) {
  var prime = new Buffer(primes[mod].prime, 'hex')
  var gen = new Buffer(primes[mod].gen, 'hex')

  return new DH(prime, gen)
}

var ENCODINGS = {
  'binary': true, 'hex': true, 'base64': true
}

function createDiffieHellman (prime, enc, generator, genc) {
  if (Buffer.isBuffer(enc) || ENCODINGS[enc] === undefined) {
    return createDiffieHellman(prime, 'binary', enc, generator)
  }

  enc = enc || 'binary'
  genc = genc || 'binary'
  generator = generator || new Buffer([2])

  if (!Buffer.isBuffer(generator)) {
    generator = new Buffer(generator, genc)
  }

  if (typeof prime === 'number') {
    return new DH(generatePrime(prime, generator), generator, true)
  }

  if (!Buffer.isBuffer(prime)) {
    prime = new Buffer(prime, enc)
  }

  return new DH(prime, generator, true)
}

exports.DiffieHellmanGroup = exports.createDiffieHellmanGroup = exports.getDiffieHellman = getDiffieHellman
exports.createDiffieHellman = exports.DiffieHellman = createDiffieHellman


/***/ }),

/***/ "./node_modules/.5.0.3@diffie-hellman/lib/dh.js":
/*!******************************************************!*\
  !*** ./node_modules/.5.0.3@diffie-hellman/lib/dh.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var BN = __webpack_require__(/*! bn.js */ "./node_modules/.4.11.8@bn.js/lib/bn.js");
var MillerRabin = __webpack_require__(/*! miller-rabin */ "./node_modules/.4.0.1@miller-rabin/lib/mr.js");
var millerRabin = new MillerRabin();
var TWENTYFOUR = new BN(24);
var ELEVEN = new BN(11);
var TEN = new BN(10);
var THREE = new BN(3);
var SEVEN = new BN(7);
var primes = __webpack_require__(/*! ./generatePrime */ "./node_modules/.5.0.3@diffie-hellman/lib/generatePrime.js");
var randomBytes = __webpack_require__(/*! randombytes */ "./node_modules/.2.1.0@randombytes/browser.js");
module.exports = DH;

function setPublicKey(pub, enc) {
  enc = enc || 'utf8';
  if (!Buffer.isBuffer(pub)) {
    pub = new Buffer(pub, enc);
  }
  this._pub = new BN(pub);
  return this;
}

function setPrivateKey(priv, enc) {
  enc = enc || 'utf8';
  if (!Buffer.isBuffer(priv)) {
    priv = new Buffer(priv, enc);
  }
  this._priv = new BN(priv);
  return this;
}

var primeCache = {};
function checkPrime(prime, generator) {
  var gen = generator.toString('hex');
  var hex = [gen, prime.toString(16)].join('_');
  if (hex in primeCache) {
    return primeCache[hex];
  }
  var error = 0;

  if (prime.isEven() ||
    !primes.simpleSieve ||
    !primes.fermatTest(prime) ||
    !millerRabin.test(prime)) {
    //not a prime so +1
    error += 1;

    if (gen === '02' || gen === '05') {
      // we'd be able to check the generator
      // it would fail so +8
      error += 8;
    } else {
      //we wouldn't be able to test the generator
      // so +4
      error += 4;
    }
    primeCache[hex] = error;
    return error;
  }
  if (!millerRabin.test(prime.shrn(1))) {
    //not a safe prime
    error += 2;
  }
  var rem;
  switch (gen) {
    case '02':
      if (prime.mod(TWENTYFOUR).cmp(ELEVEN)) {
        // unsuidable generator
        error += 8;
      }
      break;
    case '05':
      rem = prime.mod(TEN);
      if (rem.cmp(THREE) && rem.cmp(SEVEN)) {
        // prime mod 10 needs to equal 3 or 7
        error += 8;
      }
      break;
    default:
      error += 4;
  }
  primeCache[hex] = error;
  return error;
}

function DH(prime, generator, malleable) {
  this.setGenerator(generator);
  this.__prime = new BN(prime);
  this._prime = BN.mont(this.__prime);
  this._primeLen = prime.length;
  this._pub = undefined;
  this._priv = undefined;
  this._primeCode = undefined;
  if (malleable) {
    this.setPublicKey = setPublicKey;
    this.setPrivateKey = setPrivateKey;
  } else {
    this._primeCode = 8;
  }
}
Object.defineProperty(DH.prototype, 'verifyError', {
  enumerable: true,
  get: function () {
    if (typeof this._primeCode !== 'number') {
      this._primeCode = checkPrime(this.__prime, this.__gen);
    }
    return this._primeCode;
  }
});
DH.prototype.generateKeys = function () {
  if (!this._priv) {
    this._priv = new BN(randomBytes(this._primeLen));
  }
  this._pub = this._gen.toRed(this._prime).redPow(this._priv).fromRed();
  return this.getPublicKey();
};

DH.prototype.computeSecret = function (other) {
  other = new BN(other);
  other = other.toRed(this._prime);
  var secret = other.redPow(this._priv).fromRed();
  var out = new Buffer(secret.toArray());
  var prime = this.getPrime();
  if (out.length < prime.length) {
    var front = new Buffer(prime.length - out.length);
    front.fill(0);
    out = Buffer.concat([front, out]);
  }
  return out;
};

DH.prototype.getPublicKey = function getPublicKey(enc) {
  return formatReturnValue(this._pub, enc);
};

DH.prototype.getPrivateKey = function getPrivateKey(enc) {
  return formatReturnValue(this._priv, enc);
};

DH.prototype.getPrime = function (enc) {
  return formatReturnValue(this.__prime, enc);
};

DH.prototype.getGenerator = function (enc) {
  return formatReturnValue(this._gen, enc);
};

DH.prototype.setGenerator = function (gen, enc) {
  enc = enc || 'utf8';
  if (!Buffer.isBuffer(gen)) {
    gen = new Buffer(gen, enc);
  }
  this.__gen = gen;
  this._gen = new BN(gen);
  return this;
};

function formatReturnValue(bn, enc) {
  var buf = new Buffer(bn.toArray());
  if (!enc) {
    return buf;
  } else {
    return buf.toString(enc);
  }
}


/***/ }),

/***/ "./node_modules/.5.0.3@diffie-hellman/lib/generatePrime.js":
/*!*****************************************************************!*\
  !*** ./node_modules/.5.0.3@diffie-hellman/lib/generatePrime.js ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var randomBytes = __webpack_require__(/*! randombytes */ "./node_modules/.2.1.0@randombytes/browser.js");
module.exports = findPrime;
findPrime.simpleSieve = simpleSieve;
findPrime.fermatTest = fermatTest;
var BN = __webpack_require__(/*! bn.js */ "./node_modules/.4.11.8@bn.js/lib/bn.js");
var TWENTYFOUR = new BN(24);
var MillerRabin = __webpack_require__(/*! miller-rabin */ "./node_modules/.4.0.1@miller-rabin/lib/mr.js");
var millerRabin = new MillerRabin();
var ONE = new BN(1);
var TWO = new BN(2);
var FIVE = new BN(5);
var SIXTEEN = new BN(16);
var EIGHT = new BN(8);
var TEN = new BN(10);
var THREE = new BN(3);
var SEVEN = new BN(7);
var ELEVEN = new BN(11);
var FOUR = new BN(4);
var TWELVE = new BN(12);
var primes = null;

function _getPrimes() {
  if (primes !== null)
    return primes;

  var limit = 0x100000;
  var res = [];
  res[0] = 2;
  for (var i = 1, k = 3; k < limit; k += 2) {
    var sqrt = Math.ceil(Math.sqrt(k));
    for (var j = 0; j < i && res[j] <= sqrt; j++)
      if (k % res[j] === 0)
        break;

    if (i !== j && res[j] <= sqrt)
      continue;

    res[i++] = k;
  }
  primes = res;
  return res;
}

function simpleSieve(p) {
  var primes = _getPrimes();

  for (var i = 0; i < primes.length; i++)
    if (p.modn(primes[i]) === 0) {
      if (p.cmpn(primes[i]) === 0) {
        return true;
      } else {
        return false;
      }
    }

  return true;
}

function fermatTest(p) {
  var red = BN.mont(p);
  return TWO.toRed(red).redPow(p.subn(1)).fromRed().cmpn(1) === 0;
}

function findPrime(bits, gen) {
  if (bits < 16) {
    // this is what openssl does
    if (gen === 2 || gen === 5) {
      return new BN([0x8c, 0x7b]);
    } else {
      return new BN([0x8c, 0x27]);
    }
  }
  gen = new BN(gen);

  var num, n2;

  while (true) {
    num = new BN(randomBytes(Math.ceil(bits / 8)));
    while (num.bitLength() > bits) {
      num.ishrn(1);
    }
    if (num.isEven()) {
      num.iadd(ONE);
    }
    if (!num.testn(1)) {
      num.iadd(TWO);
    }
    if (!gen.cmp(TWO)) {
      while (num.mod(TWENTYFOUR).cmp(ELEVEN)) {
        num.iadd(FOUR);
      }
    } else if (!gen.cmp(FIVE)) {
      while (num.mod(TEN).cmp(THREE)) {
        num.iadd(FOUR);
      }
    }
    n2 = num.shrn(1);
    if (simpleSieve(n2) && simpleSieve(num) &&
      fermatTest(n2) && fermatTest(num) &&
      millerRabin.test(n2) && millerRabin.test(num)) {
      return num;
    }
  }

}


/***/ }),

/***/ "./node_modules/.5.0.3@diffie-hellman/lib/primes.json":
/*!************************************************************!*\
  !*** ./node_modules/.5.0.3@diffie-hellman/lib/primes.json ***!
  \************************************************************/
/*! exports provided: modp1, modp2, modp5, modp14, modp15, modp16, modp17, modp18, default */
/***/ (function(module) {

module.exports = {"modp1":{"gen":"02","prime":"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a63a3620ffffffffffffffff"},"modp2":{"gen":"02","prime":"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece65381ffffffffffffffff"},"modp5":{"gen":"02","prime":"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca237327ffffffffffffffff"},"modp14":{"gen":"02","prime":"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aacaa68ffffffffffffffff"},"modp15":{"gen":"02","prime":"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aaac42dad33170d04507a33a85521abdf1cba64ecfb850458dbef0a8aea71575d060c7db3970f85a6e1e4c7abf5ae8cdb0933d71e8c94e04a25619dcee3d2261ad2ee6bf12ffa06d98a0864d87602733ec86a64521f2b18177b200cbbe117577a615d6c770988c0bad946e208e24fa074e5ab3143db5bfce0fd108e4b82d120a93ad2caffffffffffffffff"},"modp16":{"gen":"02","prime":"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aaac42dad33170d04507a33a85521abdf1cba64ecfb850458dbef0a8aea71575d060c7db3970f85a6e1e4c7abf5ae8cdb0933d71e8c94e04a25619dcee3d2261ad2ee6bf12ffa06d98a0864d87602733ec86a64521f2b18177b200cbbe117577a615d6c770988c0bad946e208e24fa074e5ab3143db5bfce0fd108e4b82d120a92108011a723c12a787e6d788719a10bdba5b2699c327186af4e23c1a946834b6150bda2583e9ca2ad44ce8dbbbc2db04de8ef92e8efc141fbecaa6287c59474e6bc05d99b2964fa090c3a2233ba186515be7ed1f612970cee2d7afb81bdd762170481cd0069127d5b05aa993b4ea988d8fddc186ffb7dc90a6c08f4df435c934063199ffffffffffffffff"},"modp17":{"gen":"02","prime":"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aaac42dad33170d04507a33a85521abdf1cba64ecfb850458dbef0a8aea71575d060c7db3970f85a6e1e4c7abf5ae8cdb0933d71e8c94e04a25619dcee3d2261ad2ee6bf12ffa06d98a0864d87602733ec86a64521f2b18177b200cbbe117577a615d6c770988c0bad946e208e24fa074e5ab3143db5bfce0fd108e4b82d120a92108011a723c12a787e6d788719a10bdba5b2699c327186af4e23c1a946834b6150bda2583e9ca2ad44ce8dbbbc2db04de8ef92e8efc141fbecaa6287c59474e6bc05d99b2964fa090c3a2233ba186515be7ed1f612970cee2d7afb81bdd762170481cd0069127d5b05aa993b4ea988d8fddc186ffb7dc90a6c08f4df435c93402849236c3fab4d27c7026c1d4dcb2602646dec9751e763dba37bdf8ff9406ad9e530ee5db382f413001aeb06a53ed9027d831179727b0865a8918da3edbebcf9b14ed44ce6cbaced4bb1bdb7f1447e6cc254b332051512bd7af426fb8f401378cd2bf5983ca01c64b92ecf032ea15d1721d03f482d7ce6e74fef6d55e702f46980c82b5a84031900b1c9e59e7c97fbec7e8f323a97a7e36cc88be0f1d45b7ff585ac54bd407b22b4154aacc8f6d7ebf48e1d814cc5ed20f8037e0a79715eef29be32806a1d58bb7c5da76f550aa3d8a1fbff0eb19ccb1a313d55cda56c9ec2ef29632387fe8d76e3c0468043e8f663f4860ee12bf2d5b0b7474d6e694f91e6dcc4024ffffffffffffffff"},"modp18":{"gen":"02","prime":"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aaac42dad33170d04507a33a85521abdf1cba64ecfb850458dbef0a8aea71575d060c7db3970f85a6e1e4c7abf5ae8cdb0933d71e8c94e04a25619dcee3d2261ad2ee6bf12ffa06d98a0864d87602733ec86a64521f2b18177b200cbbe117577a615d6c770988c0bad946e208e24fa074e5ab3143db5bfce0fd108e4b82d120a92108011a723c12a787e6d788719a10bdba5b2699c327186af4e23c1a946834b6150bda2583e9ca2ad44ce8dbbbc2db04de8ef92e8efc141fbecaa6287c59474e6bc05d99b2964fa090c3a2233ba186515be7ed1f612970cee2d7afb81bdd762170481cd0069127d5b05aa993b4ea988d8fddc186ffb7dc90a6c08f4df435c93402849236c3fab4d27c7026c1d4dcb2602646dec9751e763dba37bdf8ff9406ad9e530ee5db382f413001aeb06a53ed9027d831179727b0865a8918da3edbebcf9b14ed44ce6cbaced4bb1bdb7f1447e6cc254b332051512bd7af426fb8f401378cd2bf5983ca01c64b92ecf032ea15d1721d03f482d7ce6e74fef6d55e702f46980c82b5a84031900b1c9e59e7c97fbec7e8f323a97a7e36cc88be0f1d45b7ff585ac54bd407b22b4154aacc8f6d7ebf48e1d814cc5ed20f8037e0a79715eef29be32806a1d58bb7c5da76f550aa3d8a1fbff0eb19ccb1a313d55cda56c9ec2ef29632387fe8d76e3c0468043e8f663f4860ee12bf2d5b0b7474d6e694f91e6dbe115974a3926f12fee5e438777cb6a932df8cd8bec4d073b931ba3bc832b68d9dd300741fa7bf8afc47ed2576f6936ba424663aab639c5ae4f5683423b4742bf1c978238f16cbe39d652de3fdb8befc848ad922222e04a4037c0713eb57a81a23f0c73473fc646cea306b4bcbc8862f8385ddfa9d4b7fa2c087e879683303ed5bdd3a062b3cf5b3a278a66d2a13f83f44f82ddf310ee074ab6a364597e899a0255dc164f31cc50846851df9ab48195ded7ea1b1d510bd7ee74d73faf36bc31ecfa268359046f4eb879f924009438b481c6cd7889a002ed5ee382bc9190da6fc026e479558e4475677e9aa9e3050e2765694dfc81f56e880b96e7160c980dd98edd3dfffffffffffffffff"}};

/***/ }),

/***/ "./node_modules/.5.1.2@safe-buffer/index.js":
/*!**************************************************!*\
  !*** ./node_modules/.5.1.2@safe-buffer/index.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/* eslint-disable node/no-deprecated-api */
var buffer = __webpack_require__(/*! buffer */ "./node_modules/.4.9.1@buffer/index.js")
var Buffer = buffer.Buffer

// alternative to using Object.keys for old browsers
function copyProps (src, dst) {
  for (var key in src) {
    dst[key] = src[key]
  }
}
if (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {
  module.exports = buffer
} else {
  // Copy properties from require('buffer')
  copyProps(buffer, exports)
  exports.Buffer = SafeBuffer
}

function SafeBuffer (arg, encodingOrOffset, length) {
  return Buffer(arg, encodingOrOffset, length)
}

// Copy static methods from Buffer
copyProps(Buffer, SafeBuffer)

SafeBuffer.from = function (arg, encodingOrOffset, length) {
  if (typeof arg === 'number') {
    throw new TypeError('Argument must not be a number')
  }
  return Buffer(arg, encodingOrOffset, length)
}

SafeBuffer.alloc = function (size, fill, encoding) {
  if (typeof size !== 'number') {
    throw new TypeError('Argument must be a number')
  }
  var buf = Buffer(size)
  if (fill !== undefined) {
    if (typeof encoding === 'string') {
      buf.fill(fill, encoding)
    } else {
      buf.fill(fill)
    }
  } else {
    buf.fill(0)
  }
  return buf
}

SafeBuffer.allocUnsafe = function (size) {
  if (typeof size !== 'number') {
    throw new TypeError('Argument must be a number')
  }
  return Buffer(size)
}

SafeBuffer.allocUnsafeSlow = function (size) {
  if (typeof size !== 'number') {
    throw new TypeError('Argument must be a number')
  }
  return buffer.SlowBuffer(size)
}


/***/ }),

/***/ "./node_modules/.5.1.4@parse-asn1/aesid.json":
/*!***************************************************!*\
  !*** ./node_modules/.5.1.4@parse-asn1/aesid.json ***!
  \***************************************************/
/*! exports provided: 2.16.840.1.101.3.4.1.1, 2.16.840.1.101.3.4.1.2, 2.16.840.1.101.3.4.1.3, 2.16.840.1.101.3.4.1.4, 2.16.840.1.101.3.4.1.21, 2.16.840.1.101.3.4.1.22, 2.16.840.1.101.3.4.1.23, 2.16.840.1.101.3.4.1.24, 2.16.840.1.101.3.4.1.41, 2.16.840.1.101.3.4.1.42, 2.16.840.1.101.3.4.1.43, 2.16.840.1.101.3.4.1.44, default */
/***/ (function(module) {

module.exports = {"2.16.840.1.101.3.4.1.1":"aes-128-ecb","2.16.840.1.101.3.4.1.2":"aes-128-cbc","2.16.840.1.101.3.4.1.3":"aes-128-ofb","2.16.840.1.101.3.4.1.4":"aes-128-cfb","2.16.840.1.101.3.4.1.21":"aes-192-ecb","2.16.840.1.101.3.4.1.22":"aes-192-cbc","2.16.840.1.101.3.4.1.23":"aes-192-ofb","2.16.840.1.101.3.4.1.24":"aes-192-cfb","2.16.840.1.101.3.4.1.41":"aes-256-ecb","2.16.840.1.101.3.4.1.42":"aes-256-cbc","2.16.840.1.101.3.4.1.43":"aes-256-ofb","2.16.840.1.101.3.4.1.44":"aes-256-cfb"};

/***/ }),

/***/ "./node_modules/.5.1.4@parse-asn1/asn1.js":
/*!************************************************!*\
  !*** ./node_modules/.5.1.4@parse-asn1/asn1.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
// from https://github.com/indutny/self-signed/blob/gh-pages/lib/asn1.js
// Fedor, you are amazing.


var asn1 = __webpack_require__(/*! asn1.js */ "./node_modules/.4.10.1@asn1.js/lib/asn1.js")

exports.certificate = __webpack_require__(/*! ./certificate */ "./node_modules/.5.1.4@parse-asn1/certificate.js")

var RSAPrivateKey = asn1.define('RSAPrivateKey', function () {
  this.seq().obj(
    this.key('version').int(),
    this.key('modulus').int(),
    this.key('publicExponent').int(),
    this.key('privateExponent').int(),
    this.key('prime1').int(),
    this.key('prime2').int(),
    this.key('exponent1').int(),
    this.key('exponent2').int(),
    this.key('coefficient').int()
  )
})
exports.RSAPrivateKey = RSAPrivateKey

var RSAPublicKey = asn1.define('RSAPublicKey', function () {
  this.seq().obj(
    this.key('modulus').int(),
    this.key('publicExponent').int()
  )
})
exports.RSAPublicKey = RSAPublicKey

var PublicKey = asn1.define('SubjectPublicKeyInfo', function () {
  this.seq().obj(
    this.key('algorithm').use(AlgorithmIdentifier),
    this.key('subjectPublicKey').bitstr()
  )
})
exports.PublicKey = PublicKey

var AlgorithmIdentifier = asn1.define('AlgorithmIdentifier', function () {
  this.seq().obj(
    this.key('algorithm').objid(),
    this.key('none').null_().optional(),
    this.key('curve').objid().optional(),
    this.key('params').seq().obj(
      this.key('p').int(),
      this.key('q').int(),
      this.key('g').int()
    ).optional()
  )
})

var PrivateKeyInfo = asn1.define('PrivateKeyInfo', function () {
  this.seq().obj(
    this.key('version').int(),
    this.key('algorithm').use(AlgorithmIdentifier),
    this.key('subjectPrivateKey').octstr()
  )
})
exports.PrivateKey = PrivateKeyInfo
var EncryptedPrivateKeyInfo = asn1.define('EncryptedPrivateKeyInfo', function () {
  this.seq().obj(
    this.key('algorithm').seq().obj(
      this.key('id').objid(),
      this.key('decrypt').seq().obj(
        this.key('kde').seq().obj(
          this.key('id').objid(),
          this.key('kdeparams').seq().obj(
            this.key('salt').octstr(),
            this.key('iters').int()
          )
        ),
        this.key('cipher').seq().obj(
          this.key('algo').objid(),
          this.key('iv').octstr()
        )
      )
    ),
    this.key('subjectPrivateKey').octstr()
  )
})

exports.EncryptedPrivateKey = EncryptedPrivateKeyInfo

var DSAPrivateKey = asn1.define('DSAPrivateKey', function () {
  this.seq().obj(
    this.key('version').int(),
    this.key('p').int(),
    this.key('q').int(),
    this.key('g').int(),
    this.key('pub_key').int(),
    this.key('priv_key').int()
  )
})
exports.DSAPrivateKey = DSAPrivateKey

exports.DSAparam = asn1.define('DSAparam', function () {
  this.int()
})

var ECPrivateKey = asn1.define('ECPrivateKey', function () {
  this.seq().obj(
    this.key('version').int(),
    this.key('privateKey').octstr(),
    this.key('parameters').optional().explicit(0).use(ECParameters),
    this.key('publicKey').optional().explicit(1).bitstr()
  )
})
exports.ECPrivateKey = ECPrivateKey

var ECParameters = asn1.define('ECParameters', function () {
  this.choice({
    namedCurve: this.objid()
  })
})

exports.signature = asn1.define('signature', function () {
  this.seq().obj(
    this.key('r').int(),
    this.key('s').int()
  )
})


/***/ }),

/***/ "./node_modules/.5.1.4@parse-asn1/certificate.js":
/*!*******************************************************!*\
  !*** ./node_modules/.5.1.4@parse-asn1/certificate.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
// from https://github.com/Rantanen/node-dtls/blob/25a7dc861bda38cfeac93a723500eea4f0ac2e86/Certificate.js
// thanks to @Rantanen



var asn = __webpack_require__(/*! asn1.js */ "./node_modules/.4.10.1@asn1.js/lib/asn1.js")

var Time = asn.define('Time', function () {
  this.choice({
    utcTime: this.utctime(),
    generalTime: this.gentime()
  })
})

var AttributeTypeValue = asn.define('AttributeTypeValue', function () {
  this.seq().obj(
    this.key('type').objid(),
    this.key('value').any()
  )
})

var AlgorithmIdentifier = asn.define('AlgorithmIdentifier', function () {
  this.seq().obj(
    this.key('algorithm').objid(),
    this.key('parameters').optional(),
    this.key('curve').objid().optional()
  )
})

var SubjectPublicKeyInfo = asn.define('SubjectPublicKeyInfo', function () {
  this.seq().obj(
    this.key('algorithm').use(AlgorithmIdentifier),
    this.key('subjectPublicKey').bitstr()
  )
})

var RelativeDistinguishedName = asn.define('RelativeDistinguishedName', function () {
  this.setof(AttributeTypeValue)
})

var RDNSequence = asn.define('RDNSequence', function () {
  this.seqof(RelativeDistinguishedName)
})

var Name = asn.define('Name', function () {
  this.choice({
    rdnSequence: this.use(RDNSequence)
  })
})

var Validity = asn.define('Validity', function () {
  this.seq().obj(
    this.key('notBefore').use(Time),
    this.key('notAfter').use(Time)
  )
})

var Extension = asn.define('Extension', function () {
  this.seq().obj(
    this.key('extnID').objid(),
    this.key('critical').bool().def(false),
    this.key('extnValue').octstr()
  )
})

var TBSCertificate = asn.define('TBSCertificate', function () {
  this.seq().obj(
    this.key('version').explicit(0).int().optional(),
    this.key('serialNumber').int(),
    this.key('signature').use(AlgorithmIdentifier),
    this.key('issuer').use(Name),
    this.key('validity').use(Validity),
    this.key('subject').use(Name),
    this.key('subjectPublicKeyInfo').use(SubjectPublicKeyInfo),
    this.key('issuerUniqueID').implicit(1).bitstr().optional(),
    this.key('subjectUniqueID').implicit(2).bitstr().optional(),
    this.key('extensions').explicit(3).seqof(Extension).optional()
  )
})

var X509Certificate = asn.define('X509Certificate', function () {
  this.seq().obj(
    this.key('tbsCertificate').use(TBSCertificate),
    this.key('signatureAlgorithm').use(AlgorithmIdentifier),
    this.key('signatureValue').bitstr()
  )
})

module.exports = X509Certificate


/***/ }),

/***/ "./node_modules/.5.1.4@parse-asn1/fixProc.js":
/*!***************************************************!*\
  !*** ./node_modules/.5.1.4@parse-asn1/fixProc.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// adapted from https://github.com/apatil/pemstrip
var findProc = /Proc-Type: 4,ENCRYPTED[\n\r]+DEK-Info: AES-((?:128)|(?:192)|(?:256))-CBC,([0-9A-H]+)[\n\r]+([0-9A-z\n\r\+\/\=]+)[\n\r]+/m
var startRegex = /^-----BEGIN ((?:.*? KEY)|CERTIFICATE)-----/m
var fullRegex = /^-----BEGIN ((?:.*? KEY)|CERTIFICATE)-----([0-9A-z\n\r\+\/\=]+)-----END \1-----$/m
var evp = __webpack_require__(/*! evp_bytestokey */ "./node_modules/.1.0.3@evp_bytestokey/index.js")
var ciphers = __webpack_require__(/*! browserify-aes */ "./node_modules/.1.2.0@browserify-aes/browser.js")
var Buffer = __webpack_require__(/*! safe-buffer */ "./node_modules/.5.1.2@safe-buffer/index.js").Buffer
module.exports = function (okey, password) {
  var key = okey.toString()
  var match = key.match(findProc)
  var decrypted
  if (!match) {
    var match2 = key.match(fullRegex)
    decrypted = new Buffer(match2[2].replace(/[\r\n]/g, ''), 'base64')
  } else {
    var suite = 'aes' + match[1]
    var iv = Buffer.from(match[2], 'hex')
    var cipherText = Buffer.from(match[3].replace(/[\r\n]/g, ''), 'base64')
    var cipherKey = evp(password, iv.slice(0, 8), parseInt(match[1], 10)).key
    var out = []
    var cipher = ciphers.createDecipheriv(suite, cipherKey, iv)
    out.push(cipher.update(cipherText))
    out.push(cipher.final())
    decrypted = Buffer.concat(out)
  }
  var tag = key.match(startRegex)[1]
  return {
    tag: tag,
    data: decrypted
  }
}


/***/ }),

/***/ "./node_modules/.5.1.4@parse-asn1/index.js":
/*!*************************************************!*\
  !*** ./node_modules/.5.1.4@parse-asn1/index.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var asn1 = __webpack_require__(/*! ./asn1 */ "./node_modules/.5.1.4@parse-asn1/asn1.js")
var aesid = __webpack_require__(/*! ./aesid.json */ "./node_modules/.5.1.4@parse-asn1/aesid.json")
var fixProc = __webpack_require__(/*! ./fixProc */ "./node_modules/.5.1.4@parse-asn1/fixProc.js")
var ciphers = __webpack_require__(/*! browserify-aes */ "./node_modules/.1.2.0@browserify-aes/browser.js")
var compat = __webpack_require__(/*! pbkdf2 */ "./node_modules/.3.0.17@pbkdf2/browser.js")
var Buffer = __webpack_require__(/*! safe-buffer */ "./node_modules/.5.1.2@safe-buffer/index.js").Buffer
module.exports = parseKeys

function parseKeys (buffer) {
  var password
  if (typeof buffer === 'object' && !Buffer.isBuffer(buffer)) {
    password = buffer.passphrase
    buffer = buffer.key
  }
  if (typeof buffer === 'string') {
    buffer = Buffer.from(buffer)
  }

  var stripped = fixProc(buffer, password)

  var type = stripped.tag
  var data = stripped.data
  var subtype, ndata
  switch (type) {
    case 'CERTIFICATE':
      ndata = asn1.certificate.decode(data, 'der').tbsCertificate.subjectPublicKeyInfo
      // falls through
    case 'PUBLIC KEY':
      if (!ndata) {
        ndata = asn1.PublicKey.decode(data, 'der')
      }
      subtype = ndata.algorithm.algorithm.join('.')
      switch (subtype) {
        case '1.2.840.113549.1.1.1':
          return asn1.RSAPublicKey.decode(ndata.subjectPublicKey.data, 'der')
        case '1.2.840.10045.2.1':
          ndata.subjectPrivateKey = ndata.subjectPublicKey
          return {
            type: 'ec',
            data: ndata
          }
        case '1.2.840.10040.4.1':
          ndata.algorithm.params.pub_key = asn1.DSAparam.decode(ndata.subjectPublicKey.data, 'der')
          return {
            type: 'dsa',
            data: ndata.algorithm.params
          }
        default: throw new Error('unknown key id ' + subtype)
      }
      throw new Error('unknown key type ' + type)
    case 'ENCRYPTED PRIVATE KEY':
      data = asn1.EncryptedPrivateKey.decode(data, 'der')
      data = decrypt(data, password)
      // falls through
    case 'PRIVATE KEY':
      ndata = asn1.PrivateKey.decode(data, 'der')
      subtype = ndata.algorithm.algorithm.join('.')
      switch (subtype) {
        case '1.2.840.113549.1.1.1':
          return asn1.RSAPrivateKey.decode(ndata.subjectPrivateKey, 'der')
        case '1.2.840.10045.2.1':
          return {
            curve: ndata.algorithm.curve,
            privateKey: asn1.ECPrivateKey.decode(ndata.subjectPrivateKey, 'der').privateKey
          }
        case '1.2.840.10040.4.1':
          ndata.algorithm.params.priv_key = asn1.DSAparam.decode(ndata.subjectPrivateKey, 'der')
          return {
            type: 'dsa',
            params: ndata.algorithm.params
          }
        default: throw new Error('unknown key id ' + subtype)
      }
      throw new Error('unknown key type ' + type)
    case 'RSA PUBLIC KEY':
      return asn1.RSAPublicKey.decode(data, 'der')
    case 'RSA PRIVATE KEY':
      return asn1.RSAPrivateKey.decode(data, 'der')
    case 'DSA PRIVATE KEY':
      return {
        type: 'dsa',
        params: asn1.DSAPrivateKey.decode(data, 'der')
      }
    case 'EC PRIVATE KEY':
      data = asn1.ECPrivateKey.decode(data, 'der')
      return {
        curve: data.parameters.value,
        privateKey: data.privateKey
      }
    default: throw new Error('unknown key type ' + type)
  }
}
parseKeys.signature = asn1.signature
function decrypt (data, password) {
  var salt = data.algorithm.decrypt.kde.kdeparams.salt
  var iters = parseInt(data.algorithm.decrypt.kde.kdeparams.iters.toString(), 10)
  var algo = aesid[data.algorithm.decrypt.cipher.algo.join('.')]
  var iv = data.algorithm.decrypt.cipher.iv
  var cipherText = data.subjectPrivateKey
  var keylen = parseInt(algo.split('-')[1], 10) / 8
  var key = compat.pbkdf2Sync(password, salt, iters, keylen, 'sha1')
  var cipher = ciphers.createDecipheriv(algo, key, iv)
  var out = []
  out.push(cipher.update(cipherText))
  out.push(cipher.final())
  return Buffer.concat(out)
}


/***/ }),

/***/ "./node_modules/.6.4.1@elliptic/lib/elliptic.js":
/*!******************************************************!*\
  !*** ./node_modules/.6.4.1@elliptic/lib/elliptic.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var elliptic = exports;

elliptic.version = __webpack_require__(/*! ../package.json */ "./node_modules/.6.4.1@elliptic/package.json").version;
elliptic.utils = __webpack_require__(/*! ./elliptic/utils */ "./node_modules/.6.4.1@elliptic/lib/elliptic/utils.js");
elliptic.rand = __webpack_require__(/*! brorand */ "./node_modules/.1.1.0@brorand/index.js");
elliptic.curve = __webpack_require__(/*! ./elliptic/curve */ "./node_modules/.6.4.1@elliptic/lib/elliptic/curve/index.js");
elliptic.curves = __webpack_require__(/*! ./elliptic/curves */ "./node_modules/.6.4.1@elliptic/lib/elliptic/curves.js");

// Protocols
elliptic.ec = __webpack_require__(/*! ./elliptic/ec */ "./node_modules/.6.4.1@elliptic/lib/elliptic/ec/index.js");
elliptic.eddsa = __webpack_require__(/*! ./elliptic/eddsa */ "./node_modules/.6.4.1@elliptic/lib/elliptic/eddsa/index.js");


/***/ }),

/***/ "./node_modules/.6.4.1@elliptic/lib/elliptic/curve/base.js":
/*!*****************************************************************!*\
  !*** ./node_modules/.6.4.1@elliptic/lib/elliptic/curve/base.js ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var BN = __webpack_require__(/*! bn.js */ "./node_modules/.4.11.8@bn.js/lib/bn.js");
var elliptic = __webpack_require__(/*! ../../elliptic */ "./node_modules/.6.4.1@elliptic/lib/elliptic.js");
var utils = elliptic.utils;
var getNAF = utils.getNAF;
var getJSF = utils.getJSF;
var assert = utils.assert;

function BaseCurve(type, conf) {
  this.type = type;
  this.p = new BN(conf.p, 16);

  // Use Montgomery, when there is no fast reduction for the prime
  this.red = conf.prime ? BN.red(conf.prime) : BN.mont(this.p);

  // Useful for many curves
  this.zero = new BN(0).toRed(this.red);
  this.one = new BN(1).toRed(this.red);
  this.two = new BN(2).toRed(this.red);

  // Curve configuration, optional
  this.n = conf.n && new BN(conf.n, 16);
  this.g = conf.g && this.pointFromJSON(conf.g, conf.gRed);

  // Temporary arrays
  this._wnafT1 = new Array(4);
  this._wnafT2 = new Array(4);
  this._wnafT3 = new Array(4);
  this._wnafT4 = new Array(4);

  // Generalized Greg Maxwell's trick
  var adjustCount = this.n && this.p.div(this.n);
  if (!adjustCount || adjustCount.cmpn(100) > 0) {
    this.redN = null;
  } else {
    this._maxwellTrick = true;
    this.redN = this.n.toRed(this.red);
  }
}
module.exports = BaseCurve;

BaseCurve.prototype.point = function point() {
  throw new Error('Not implemented');
};

BaseCurve.prototype.validate = function validate() {
  throw new Error('Not implemented');
};

BaseCurve.prototype._fixedNafMul = function _fixedNafMul(p, k) {
  assert(p.precomputed);
  var doubles = p._getDoubles();

  var naf = getNAF(k, 1);
  var I = (1 << (doubles.step + 1)) - (doubles.step % 2 === 0 ? 2 : 1);
  I /= 3;

  // Translate into more windowed form
  var repr = [];
  for (var j = 0; j < naf.length; j += doubles.step) {
    var nafW = 0;
    for (var k = j + doubles.step - 1; k >= j; k--)
      nafW = (nafW << 1) + naf[k];
    repr.push(nafW);
  }

  var a = this.jpoint(null, null, null);
  var b = this.jpoint(null, null, null);
  for (var i = I; i > 0; i--) {
    for (var j = 0; j < repr.length; j++) {
      var nafW = repr[j];
      if (nafW === i)
        b = b.mixedAdd(doubles.points[j]);
      else if (nafW === -i)
        b = b.mixedAdd(doubles.points[j].neg());
    }
    a = a.add(b);
  }
  return a.toP();
};

BaseCurve.prototype._wnafMul = function _wnafMul(p, k) {
  var w = 4;

  // Precompute window
  var nafPoints = p._getNAFPoints(w);
  w = nafPoints.wnd;
  var wnd = nafPoints.points;

  // Get NAF form
  var naf = getNAF(k, w);

  // Add `this`*(N+1) for every w-NAF index
  var acc = this.jpoint(null, null, null);
  for (var i = naf.length - 1; i >= 0; i--) {
    // Count zeroes
    for (var k = 0; i >= 0 && naf[i] === 0; i--)
      k++;
    if (i >= 0)
      k++;
    acc = acc.dblp(k);

    if (i < 0)
      break;
    var z = naf[i];
    assert(z !== 0);
    if (p.type === 'affine') {
      // J +- P
      if (z > 0)
        acc = acc.mixedAdd(wnd[(z - 1) >> 1]);
      else
        acc = acc.mixedAdd(wnd[(-z - 1) >> 1].neg());
    } else {
      // J +- J
      if (z > 0)
        acc = acc.add(wnd[(z - 1) >> 1]);
      else
        acc = acc.add(wnd[(-z - 1) >> 1].neg());
    }
  }
  return p.type === 'affine' ? acc.toP() : acc;
};

BaseCurve.prototype._wnafMulAdd = function _wnafMulAdd(defW,
                                                       points,
                                                       coeffs,
                                                       len,
                                                       jacobianResult) {
  var wndWidth = this._wnafT1;
  var wnd = this._wnafT2;
  var naf = this._wnafT3;

  // Fill all arrays
  var max = 0;
  for (var i = 0; i < len; i++) {
    var p = points[i];
    var nafPoints = p._getNAFPoints(defW);
    wndWidth[i] = nafPoints.wnd;
    wnd[i] = nafPoints.points;
  }

  // Comb small window NAFs
  for (var i = len - 1; i >= 1; i -= 2) {
    var a = i - 1;
    var b = i;
    if (wndWidth[a] !== 1 || wndWidth[b] !== 1) {
      naf[a] = getNAF(coeffs[a], wndWidth[a]);
      naf[b] = getNAF(coeffs[b], wndWidth[b]);
      max = Math.max(naf[a].length, max);
      max = Math.max(naf[b].length, max);
      continue;
    }

    var comb = [
      points[a], /* 1 */
      null, /* 3 */
      null, /* 5 */
      points[b] /* 7 */
    ];

    // Try to avoid Projective points, if possible
    if (points[a].y.cmp(points[b].y) === 0) {
      comb[1] = points[a].add(points[b]);
      comb[2] = points[a].toJ().mixedAdd(points[b].neg());
    } else if (points[a].y.cmp(points[b].y.redNeg()) === 0) {
      comb[1] = points[a].toJ().mixedAdd(points[b]);
      comb[2] = points[a].add(points[b].neg());
    } else {
      comb[1] = points[a].toJ().mixedAdd(points[b]);
      comb[2] = points[a].toJ().mixedAdd(points[b].neg());
    }

    var index = [
      -3, /* -1 -1 */
      -1, /* -1 0 */
      -5, /* -1 1 */
      -7, /* 0 -1 */
      0, /* 0 0 */
      7, /* 0 1 */
      5, /* 1 -1 */
      1, /* 1 0 */
      3  /* 1 1 */
    ];

    var jsf = getJSF(coeffs[a], coeffs[b]);
    max = Math.max(jsf[0].length, max);
    naf[a] = new Array(max);
    naf[b] = new Array(max);
    for (var j = 0; j < max; j++) {
      var ja = jsf[0][j] | 0;
      var jb = jsf[1][j] | 0;

      naf[a][j] = index[(ja + 1) * 3 + (jb + 1)];
      naf[b][j] = 0;
      wnd[a] = comb;
    }
  }

  var acc = this.jpoint(null, null, null);
  var tmp = this._wnafT4;
  for (var i = max; i >= 0; i--) {
    var k = 0;

    while (i >= 0) {
      var zero = true;
      for (var j = 0; j < len; j++) {
        tmp[j] = naf[j][i] | 0;
        if (tmp[j] !== 0)
          zero = false;
      }
      if (!zero)
        break;
      k++;
      i--;
    }
    if (i >= 0)
      k++;
    acc = acc.dblp(k);
    if (i < 0)
      break;

    for (var j = 0; j < len; j++) {
      var z = tmp[j];
      var p;
      if (z === 0)
        continue;
      else if (z > 0)
        p = wnd[j][(z - 1) >> 1];
      else if (z < 0)
        p = wnd[j][(-z - 1) >> 1].neg();

      if (p.type === 'affine')
        acc = acc.mixedAdd(p);
      else
        acc = acc.add(p);
    }
  }
  // Zeroify references
  for (var i = 0; i < len; i++)
    wnd[i] = null;

  if (jacobianResult)
    return acc;
  else
    return acc.toP();
};

function BasePoint(curve, type) {
  this.curve = curve;
  this.type = type;
  this.precomputed = null;
}
BaseCurve.BasePoint = BasePoint;

BasePoint.prototype.eq = function eq(/*other*/) {
  throw new Error('Not implemented');
};

BasePoint.prototype.validate = function validate() {
  return this.curve.validate(this);
};

BaseCurve.prototype.decodePoint = function decodePoint(bytes, enc) {
  bytes = utils.toArray(bytes, enc);

  var len = this.p.byteLength();

  // uncompressed, hybrid-odd, hybrid-even
  if ((bytes[0] === 0x04 || bytes[0] === 0x06 || bytes[0] === 0x07) &&
      bytes.length - 1 === 2 * len) {
    if (bytes[0] === 0x06)
      assert(bytes[bytes.length - 1] % 2 === 0);
    else if (bytes[0] === 0x07)
      assert(bytes[bytes.length - 1] % 2 === 1);

    var res =  this.point(bytes.slice(1, 1 + len),
                          bytes.slice(1 + len, 1 + 2 * len));

    return res;
  } else if ((bytes[0] === 0x02 || bytes[0] === 0x03) &&
              bytes.length - 1 === len) {
    return this.pointFromX(bytes.slice(1, 1 + len), bytes[0] === 0x03);
  }
  throw new Error('Unknown point format');
};

BasePoint.prototype.encodeCompressed = function encodeCompressed(enc) {
  return this.encode(enc, true);
};

BasePoint.prototype._encode = function _encode(compact) {
  var len = this.curve.p.byteLength();
  var x = this.getX().toArray('be', len);

  if (compact)
    return [ this.getY().isEven() ? 0x02 : 0x03 ].concat(x);

  return [ 0x04 ].concat(x, this.getY().toArray('be', len)) ;
};

BasePoint.prototype.encode = function encode(enc, compact) {
  return utils.encode(this._encode(compact), enc);
};

BasePoint.prototype.precompute = function precompute(power) {
  if (this.precomputed)
    return this;

  var precomputed = {
    doubles: null,
    naf: null,
    beta: null
  };
  precomputed.naf = this._getNAFPoints(8);
  precomputed.doubles = this._getDoubles(4, power);
  precomputed.beta = this._getBeta();
  this.precomputed = precomputed;

  return this;
};

BasePoint.prototype._hasDoubles = function _hasDoubles(k) {
  if (!this.precomputed)
    return false;

  var doubles = this.precomputed.doubles;
  if (!doubles)
    return false;

  return doubles.points.length >= Math.ceil((k.bitLength() + 1) / doubles.step);
};

BasePoint.prototype._getDoubles = function _getDoubles(step, power) {
  if (this.precomputed && this.precomputed.doubles)
    return this.precomputed.doubles;

  var doubles = [ this ];
  var acc = this;
  for (var i = 0; i < power; i += step) {
    for (var j = 0; j < step; j++)
      acc = acc.dbl();
    doubles.push(acc);
  }
  return {
    step: step,
    points: doubles
  };
};

BasePoint.prototype._getNAFPoints = function _getNAFPoints(wnd) {
  if (this.precomputed && this.precomputed.naf)
    return this.precomputed.naf;

  var res = [ this ];
  var max = (1 << wnd) - 1;
  var dbl = max === 1 ? null : this.dbl();
  for (var i = 1; i < max; i++)
    res[i] = res[i - 1].add(dbl);
  return {
    wnd: wnd,
    points: res
  };
};

BasePoint.prototype._getBeta = function _getBeta() {
  return null;
};

BasePoint.prototype.dblp = function dblp(k) {
  var r = this;
  for (var i = 0; i < k; i++)
    r = r.dbl();
  return r;
};


/***/ }),

/***/ "./node_modules/.6.4.1@elliptic/lib/elliptic/curve/edwards.js":
/*!********************************************************************!*\
  !*** ./node_modules/.6.4.1@elliptic/lib/elliptic/curve/edwards.js ***!
  \********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var curve = __webpack_require__(/*! ../curve */ "./node_modules/.6.4.1@elliptic/lib/elliptic/curve/index.js");
var elliptic = __webpack_require__(/*! ../../elliptic */ "./node_modules/.6.4.1@elliptic/lib/elliptic.js");
var BN = __webpack_require__(/*! bn.js */ "./node_modules/.4.11.8@bn.js/lib/bn.js");
var inherits = __webpack_require__(/*! inherits */ "./node_modules/.2.0.3@inherits/inherits_browser.js");
var Base = curve.base;

var assert = elliptic.utils.assert;

function EdwardsCurve(conf) {
  // NOTE: Important as we are creating point in Base.call()
  this.twisted = (conf.a | 0) !== 1;
  this.mOneA = this.twisted && (conf.a | 0) === -1;
  this.extended = this.mOneA;

  Base.call(this, 'edwards', conf);

  this.a = new BN(conf.a, 16).umod(this.red.m);
  this.a = this.a.toRed(this.red);
  this.c = new BN(conf.c, 16).toRed(this.red);
  this.c2 = this.c.redSqr();
  this.d = new BN(conf.d, 16).toRed(this.red);
  this.dd = this.d.redAdd(this.d);

  assert(!this.twisted || this.c.fromRed().cmpn(1) === 0);
  this.oneC = (conf.c | 0) === 1;
}
inherits(EdwardsCurve, Base);
module.exports = EdwardsCurve;

EdwardsCurve.prototype._mulA = function _mulA(num) {
  if (this.mOneA)
    return num.redNeg();
  else
    return this.a.redMul(num);
};

EdwardsCurve.prototype._mulC = function _mulC(num) {
  if (this.oneC)
    return num;
  else
    return this.c.redMul(num);
};

// Just for compatibility with Short curve
EdwardsCurve.prototype.jpoint = function jpoint(x, y, z, t) {
  return this.point(x, y, z, t);
};

EdwardsCurve.prototype.pointFromX = function pointFromX(x, odd) {
  x = new BN(x, 16);
  if (!x.red)
    x = x.toRed(this.red);

  var x2 = x.redSqr();
  var rhs = this.c2.redSub(this.a.redMul(x2));
  var lhs = this.one.redSub(this.c2.redMul(this.d).redMul(x2));

  var y2 = rhs.redMul(lhs.redInvm());
  var y = y2.redSqrt();
  if (y.redSqr().redSub(y2).cmp(this.zero) !== 0)
    throw new Error('invalid point');

  var isOdd = y.fromRed().isOdd();
  if (odd && !isOdd || !odd && isOdd)
    y = y.redNeg();

  return this.point(x, y);
};

EdwardsCurve.prototype.pointFromY = function pointFromY(y, odd) {
  y = new BN(y, 16);
  if (!y.red)
    y = y.toRed(this.red);

  // x^2 = (y^2 - c^2) / (c^2 d y^2 - a)
  var y2 = y.redSqr();
  var lhs = y2.redSub(this.c2);
  var rhs = y2.redMul(this.d).redMul(this.c2).redSub(this.a);
  var x2 = lhs.redMul(rhs.redInvm());

  if (x2.cmp(this.zero) === 0) {
    if (odd)
      throw new Error('invalid point');
    else
      return this.point(this.zero, y);
  }

  var x = x2.redSqrt();
  if (x.redSqr().redSub(x2).cmp(this.zero) !== 0)
    throw new Error('invalid point');

  if (x.fromRed().isOdd() !== odd)
    x = x.redNeg();

  return this.point(x, y);
};

EdwardsCurve.prototype.validate = function validate(point) {
  if (point.isInfinity())
    return true;

  // Curve: A * X^2 + Y^2 = C^2 * (1 + D * X^2 * Y^2)
  point.normalize();

  var x2 = point.x.redSqr();
  var y2 = point.y.redSqr();
  var lhs = x2.redMul(this.a).redAdd(y2);
  var rhs = this.c2.redMul(this.one.redAdd(this.d.redMul(x2).redMul(y2)));

  return lhs.cmp(rhs) === 0;
};

function Point(curve, x, y, z, t) {
  Base.BasePoint.call(this, curve, 'projective');
  if (x === null && y === null && z === null) {
    this.x = this.curve.zero;
    this.y = this.curve.one;
    this.z = this.curve.one;
    this.t = this.curve.zero;
    this.zOne = true;
  } else {
    this.x = new BN(x, 16);
    this.y = new BN(y, 16);
    this.z = z ? new BN(z, 16) : this.curve.one;
    this.t = t && new BN(t, 16);
    if (!this.x.red)
      this.x = this.x.toRed(this.curve.red);
    if (!this.y.red)
      this.y = this.y.toRed(this.curve.red);
    if (!this.z.red)
      this.z = this.z.toRed(this.curve.red);
    if (this.t && !this.t.red)
      this.t = this.t.toRed(this.curve.red);
    this.zOne = this.z === this.curve.one;

    // Use extended coordinates
    if (this.curve.extended && !this.t) {
      this.t = this.x.redMul(this.y);
      if (!this.zOne)
        this.t = this.t.redMul(this.z.redInvm());
    }
  }
}
inherits(Point, Base.BasePoint);

EdwardsCurve.prototype.pointFromJSON = function pointFromJSON(obj) {
  return Point.fromJSON(this, obj);
};

EdwardsCurve.prototype.point = function point(x, y, z, t) {
  return new Point(this, x, y, z, t);
};

Point.fromJSON = function fromJSON(curve, obj) {
  return new Point(curve, obj[0], obj[1], obj[2]);
};

Point.prototype.inspect = function inspect() {
  if (this.isInfinity())
    return '<EC Point Infinity>';
  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) +
      ' y: ' + this.y.fromRed().toString(16, 2) +
      ' z: ' + this.z.fromRed().toString(16, 2) + '>';
};

Point.prototype.isInfinity = function isInfinity() {
  // XXX This code assumes that zero is always zero in red
  return this.x.cmpn(0) === 0 &&
    (this.y.cmp(this.z) === 0 ||
    (this.zOne && this.y.cmp(this.curve.c) === 0));
};

Point.prototype._extDbl = function _extDbl() {
  // hyperelliptic.org/EFD/g1p/auto-twisted-extended-1.html
  //     #doubling-dbl-2008-hwcd
  // 4M + 4S

  // A = X1^2
  var a = this.x.redSqr();
  // B = Y1^2
  var b = this.y.redSqr();
  // C = 2 * Z1^2
  var c = this.z.redSqr();
  c = c.redIAdd(c);
  // D = a * A
  var d = this.curve._mulA(a);
  // E = (X1 + Y1)^2 - A - B
  var e = this.x.redAdd(this.y).redSqr().redISub(a).redISub(b);
  // G = D + B
  var g = d.redAdd(b);
  // F = G - C
  var f = g.redSub(c);
  // H = D - B
  var h = d.redSub(b);
  // X3 = E * F
  var nx = e.redMul(f);
  // Y3 = G * H
  var ny = g.redMul(h);
  // T3 = E * H
  var nt = e.redMul(h);
  // Z3 = F * G
  var nz = f.redMul(g);
  return this.curve.point(nx, ny, nz, nt);
};

Point.prototype._projDbl = function _projDbl() {
  // hyperelliptic.org/EFD/g1p/auto-twisted-projective.html
  //     #doubling-dbl-2008-bbjlp
  //     #doubling-dbl-2007-bl
  // and others
  // Generally 3M + 4S or 2M + 4S

  // B = (X1 + Y1)^2
  var b = this.x.redAdd(this.y).redSqr();
  // C = X1^2
  var c = this.x.redSqr();
  // D = Y1^2
  var d = this.y.redSqr();

  var nx;
  var ny;
  var nz;
  if (this.curve.twisted) {
    // E = a * C
    var e = this.curve._mulA(c);
    // F = E + D
    var f = e.redAdd(d);
    if (this.zOne) {
      // X3 = (B - C - D) * (F - 2)
      nx = b.redSub(c).redSub(d).redMul(f.redSub(this.curve.two));
      // Y3 = F * (E - D)
      ny = f.redMul(e.redSub(d));
      // Z3 = F^2 - 2 * F
      nz = f.redSqr().redSub(f).redSub(f);
    } else {
      // H = Z1^2
      var h = this.z.redSqr();
      // J = F - 2 * H
      var j = f.redSub(h).redISub(h);
      // X3 = (B-C-D)*J
      nx = b.redSub(c).redISub(d).redMul(j);
      // Y3 = F * (E - D)
      ny = f.redMul(e.redSub(d));
      // Z3 = F * J
      nz = f.redMul(j);
    }
  } else {
    // E = C + D
    var e = c.redAdd(d);
    // H = (c * Z1)^2
    var h = this.curve._mulC(this.z).redSqr();
    // J = E - 2 * H
    var j = e.redSub(h).redSub(h);
    // X3 = c * (B - E) * J
    nx = this.curve._mulC(b.redISub(e)).redMul(j);
    // Y3 = c * E * (C - D)
    ny = this.curve._mulC(e).redMul(c.redISub(d));
    // Z3 = E * J
    nz = e.redMul(j);
  }
  return this.curve.point(nx, ny, nz);
};

Point.prototype.dbl = function dbl() {
  if (this.isInfinity())
    return this;

  // Double in extended coordinates
  if (this.curve.extended)
    return this._extDbl();
  else
    return this._projDbl();
};

Point.prototype._extAdd = function _extAdd(p) {
  // hyperelliptic.org/EFD/g1p/auto-twisted-extended-1.html
  //     #addition-add-2008-hwcd-3
  // 8M

  // A = (Y1 - X1) * (Y2 - X2)
  var a = this.y.redSub(this.x).redMul(p.y.redSub(p.x));
  // B = (Y1 + X1) * (Y2 + X2)
  var b = this.y.redAdd(this.x).redMul(p.y.redAdd(p.x));
  // C = T1 * k * T2
  var c = this.t.redMul(this.curve.dd).redMul(p.t);
  // D = Z1 * 2 * Z2
  var d = this.z.redMul(p.z.redAdd(p.z));
  // E = B - A
  var e = b.redSub(a);
  // F = D - C
  var f = d.redSub(c);
  // G = D + C
  var g = d.redAdd(c);
  // H = B + A
  var h = b.redAdd(a);
  // X3 = E * F
  var nx = e.redMul(f);
  // Y3 = G * H
  var ny = g.redMul(h);
  // T3 = E * H
  var nt = e.redMul(h);
  // Z3 = F * G
  var nz = f.redMul(g);
  return this.curve.point(nx, ny, nz, nt);
};

Point.prototype._projAdd = function _projAdd(p) {
  // hyperelliptic.org/EFD/g1p/auto-twisted-projective.html
  //     #addition-add-2008-bbjlp
  //     #addition-add-2007-bl
  // 10M + 1S

  // A = Z1 * Z2
  var a = this.z.redMul(p.z);
  // B = A^2
  var b = a.redSqr();
  // C = X1 * X2
  var c = this.x.redMul(p.x);
  // D = Y1 * Y2
  var d = this.y.redMul(p.y);
  // E = d * C * D
  var e = this.curve.d.redMul(c).redMul(d);
  // F = B - E
  var f = b.redSub(e);
  // G = B + E
  var g = b.redAdd(e);
  // X3 = A * F * ((X1 + Y1) * (X2 + Y2) - C - D)
  var tmp = this.x.redAdd(this.y).redMul(p.x.redAdd(p.y)).redISub(c).redISub(d);
  var nx = a.redMul(f).redMul(tmp);
  var ny;
  var nz;
  if (this.curve.twisted) {
    // Y3 = A * G * (D - a * C)
    ny = a.redMul(g).redMul(d.redSub(this.curve._mulA(c)));
    // Z3 = F * G
    nz = f.redMul(g);
  } else {
    // Y3 = A * G * (D - C)
    ny = a.redMul(g).redMul(d.redSub(c));
    // Z3 = c * F * G
    nz = this.curve._mulC(f).redMul(g);
  }
  return this.curve.point(nx, ny, nz);
};

Point.prototype.add = function add(p) {
  if (this.isInfinity())
    return p;
  if (p.isInfinity())
    return this;

  if (this.curve.extended)
    return this._extAdd(p);
  else
    return this._projAdd(p);
};

Point.prototype.mul = function mul(k) {
  if (this._hasDoubles(k))
    return this.curve._fixedNafMul(this, k);
  else
    return this.curve._wnafMul(this, k);
};

Point.prototype.mulAdd = function mulAdd(k1, p, k2) {
  return this.curve._wnafMulAdd(1, [ this, p ], [ k1, k2 ], 2, false);
};

Point.prototype.jmulAdd = function jmulAdd(k1, p, k2) {
  return this.curve._wnafMulAdd(1, [ this, p ], [ k1, k2 ], 2, true);
};

Point.prototype.normalize = function normalize() {
  if (this.zOne)
    return this;

  // Normalize coordinates
  var zi = this.z.redInvm();
  this.x = this.x.redMul(zi);
  this.y = this.y.redMul(zi);
  if (this.t)
    this.t = this.t.redMul(zi);
  this.z = this.curve.one;
  this.zOne = true;
  return this;
};

Point.prototype.neg = function neg() {
  return this.curve.point(this.x.redNeg(),
                          this.y,
                          this.z,
                          this.t && this.t.redNeg());
};

Point.prototype.getX = function getX() {
  this.normalize();
  return this.x.fromRed();
};

Point.prototype.getY = function getY() {
  this.normalize();
  return this.y.fromRed();
};

Point.prototype.eq = function eq(other) {
  return this === other ||
         this.getX().cmp(other.getX()) === 0 &&
         this.getY().cmp(other.getY()) === 0;
};

Point.prototype.eqXToP = function eqXToP(x) {
  var rx = x.toRed(this.curve.red).redMul(this.z);
  if (this.x.cmp(rx) === 0)
    return true;

  var xc = x.clone();
  var t = this.curve.redN.redMul(this.z);
  for (;;) {
    xc.iadd(this.curve.n);
    if (xc.cmp(this.curve.p) >= 0)
      return false;

    rx.redIAdd(t);
    if (this.x.cmp(rx) === 0)
      return true;
  }
};

// Compatibility with BaseCurve
Point.prototype.toP = Point.prototype.normalize;
Point.prototype.mixedAdd = Point.prototype.add;


/***/ }),

/***/ "./node_modules/.6.4.1@elliptic/lib/elliptic/curve/index.js":
/*!******************************************************************!*\
  !*** ./node_modules/.6.4.1@elliptic/lib/elliptic/curve/index.js ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var curve = exports;

curve.base = __webpack_require__(/*! ./base */ "./node_modules/.6.4.1@elliptic/lib/elliptic/curve/base.js");
curve.short = __webpack_require__(/*! ./short */ "./node_modules/.6.4.1@elliptic/lib/elliptic/curve/short.js");
curve.mont = __webpack_require__(/*! ./mont */ "./node_modules/.6.4.1@elliptic/lib/elliptic/curve/mont.js");
curve.edwards = __webpack_require__(/*! ./edwards */ "./node_modules/.6.4.1@elliptic/lib/elliptic/curve/edwards.js");


/***/ }),

/***/ "./node_modules/.6.4.1@elliptic/lib/elliptic/curve/mont.js":
/*!*****************************************************************!*\
  !*** ./node_modules/.6.4.1@elliptic/lib/elliptic/curve/mont.js ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var curve = __webpack_require__(/*! ../curve */ "./node_modules/.6.4.1@elliptic/lib/elliptic/curve/index.js");
var BN = __webpack_require__(/*! bn.js */ "./node_modules/.4.11.8@bn.js/lib/bn.js");
var inherits = __webpack_require__(/*! inherits */ "./node_modules/.2.0.3@inherits/inherits_browser.js");
var Base = curve.base;

var elliptic = __webpack_require__(/*! ../../elliptic */ "./node_modules/.6.4.1@elliptic/lib/elliptic.js");
var utils = elliptic.utils;

function MontCurve(conf) {
  Base.call(this, 'mont', conf);

  this.a = new BN(conf.a, 16).toRed(this.red);
  this.b = new BN(conf.b, 16).toRed(this.red);
  this.i4 = new BN(4).toRed(this.red).redInvm();
  this.two = new BN(2).toRed(this.red);
  this.a24 = this.i4.redMul(this.a.redAdd(this.two));
}
inherits(MontCurve, Base);
module.exports = MontCurve;

MontCurve.prototype.validate = function validate(point) {
  var x = point.normalize().x;
  var x2 = x.redSqr();
  var rhs = x2.redMul(x).redAdd(x2.redMul(this.a)).redAdd(x);
  var y = rhs.redSqrt();

  return y.redSqr().cmp(rhs) === 0;
};

function Point(curve, x, z) {
  Base.BasePoint.call(this, curve, 'projective');
  if (x === null && z === null) {
    this.x = this.curve.one;
    this.z = this.curve.zero;
  } else {
    this.x = new BN(x, 16);
    this.z = new BN(z, 16);
    if (!this.x.red)
      this.x = this.x.toRed(this.curve.red);
    if (!this.z.red)
      this.z = this.z.toRed(this.curve.red);
  }
}
inherits(Point, Base.BasePoint);

MontCurve.prototype.decodePoint = function decodePoint(bytes, enc) {
  return this.point(utils.toArray(bytes, enc), 1);
};

MontCurve.prototype.point = function point(x, z) {
  return new Point(this, x, z);
};

MontCurve.prototype.pointFromJSON = function pointFromJSON(obj) {
  return Point.fromJSON(this, obj);
};

Point.prototype.precompute = function precompute() {
  // No-op
};

Point.prototype._encode = function _encode() {
  return this.getX().toArray('be', this.curve.p.byteLength());
};

Point.fromJSON = function fromJSON(curve, obj) {
  return new Point(curve, obj[0], obj[1] || curve.one);
};

Point.prototype.inspect = function inspect() {
  if (this.isInfinity())
    return '<EC Point Infinity>';
  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) +
      ' z: ' + this.z.fromRed().toString(16, 2) + '>';
};

Point.prototype.isInfinity = function isInfinity() {
  // XXX This code assumes that zero is always zero in red
  return this.z.cmpn(0) === 0;
};

Point.prototype.dbl = function dbl() {
  // http://hyperelliptic.org/EFD/g1p/auto-montgom-xz.html#doubling-dbl-1987-m-3
  // 2M + 2S + 4A

  // A = X1 + Z1
  var a = this.x.redAdd(this.z);
  // AA = A^2
  var aa = a.redSqr();
  // B = X1 - Z1
  var b = this.x.redSub(this.z);
  // BB = B^2
  var bb = b.redSqr();
  // C = AA - BB
  var c = aa.redSub(bb);
  // X3 = AA * BB
  var nx = aa.redMul(bb);
  // Z3 = C * (BB + A24 * C)
  var nz = c.redMul(bb.redAdd(this.curve.a24.redMul(c)));
  return this.curve.point(nx, nz);
};

Point.prototype.add = function add() {
  throw new Error('Not supported on Montgomery curve');
};

Point.prototype.diffAdd = function diffAdd(p, diff) {
  // http://hyperelliptic.org/EFD/g1p/auto-montgom-xz.html#diffadd-dadd-1987-m-3
  // 4M + 2S + 6A

  // A = X2 + Z2
  var a = this.x.redAdd(this.z);
  // B = X2 - Z2
  var b = this.x.redSub(this.z);
  // C = X3 + Z3
  var c = p.x.redAdd(p.z);
  // D = X3 - Z3
  var d = p.x.redSub(p.z);
  // DA = D * A
  var da = d.redMul(a);
  // CB = C * B
  var cb = c.redMul(b);
  // X5 = Z1 * (DA + CB)^2
  var nx = diff.z.redMul(da.redAdd(cb).redSqr());
  // Z5 = X1 * (DA - CB)^2
  var nz = diff.x.redMul(da.redISub(cb).redSqr());
  return this.curve.point(nx, nz);
};

Point.prototype.mul = function mul(k) {
  var t = k.clone();
  var a = this; // (N / 2) * Q + Q
  var b = this.curve.point(null, null); // (N / 2) * Q
  var c = this; // Q

  for (var bits = []; t.cmpn(0) !== 0; t.iushrn(1))
    bits.push(t.andln(1));

  for (var i = bits.length - 1; i >= 0; i--) {
    if (bits[i] === 0) {
      // N * Q + Q = ((N / 2) * Q + Q)) + (N / 2) * Q
      a = a.diffAdd(b, c);
      // N * Q = 2 * ((N / 2) * Q + Q))
      b = b.dbl();
    } else {
      // N * Q = ((N / 2) * Q + Q) + ((N / 2) * Q)
      b = a.diffAdd(b, c);
      // N * Q + Q = 2 * ((N / 2) * Q + Q)
      a = a.dbl();
    }
  }
  return b;
};

Point.prototype.mulAdd = function mulAdd() {
  throw new Error('Not supported on Montgomery curve');
};

Point.prototype.jumlAdd = function jumlAdd() {
  throw new Error('Not supported on Montgomery curve');
};

Point.prototype.eq = function eq(other) {
  return this.getX().cmp(other.getX()) === 0;
};

Point.prototype.normalize = function normalize() {
  this.x = this.x.redMul(this.z.redInvm());
  this.z = this.curve.one;
  return this;
};

Point.prototype.getX = function getX() {
  // Normalize coordinates
  this.normalize();

  return this.x.fromRed();
};


/***/ }),

/***/ "./node_modules/.6.4.1@elliptic/lib/elliptic/curve/short.js":
/*!******************************************************************!*\
  !*** ./node_modules/.6.4.1@elliptic/lib/elliptic/curve/short.js ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var curve = __webpack_require__(/*! ../curve */ "./node_modules/.6.4.1@elliptic/lib/elliptic/curve/index.js");
var elliptic = __webpack_require__(/*! ../../elliptic */ "./node_modules/.6.4.1@elliptic/lib/elliptic.js");
var BN = __webpack_require__(/*! bn.js */ "./node_modules/.4.11.8@bn.js/lib/bn.js");
var inherits = __webpack_require__(/*! inherits */ "./node_modules/.2.0.3@inherits/inherits_browser.js");
var Base = curve.base;

var assert = elliptic.utils.assert;

function ShortCurve(conf) {
  Base.call(this, 'short', conf);

  this.a = new BN(conf.a, 16).toRed(this.red);
  this.b = new BN(conf.b, 16).toRed(this.red);
  this.tinv = this.two.redInvm();

  this.zeroA = this.a.fromRed().cmpn(0) === 0;
  this.threeA = this.a.fromRed().sub(this.p).cmpn(-3) === 0;

  // If the curve is endomorphic, precalculate beta and lambda
  this.endo = this._getEndomorphism(conf);
  this._endoWnafT1 = new Array(4);
  this._endoWnafT2 = new Array(4);
}
inherits(ShortCurve, Base);
module.exports = ShortCurve;

ShortCurve.prototype._getEndomorphism = function _getEndomorphism(conf) {
  // No efficient endomorphism
  if (!this.zeroA || !this.g || !this.n || this.p.modn(3) !== 1)
    return;

  // Compute beta and lambda, that lambda * P = (beta * Px; Py)
  var beta;
  var lambda;
  if (conf.beta) {
    beta = new BN(conf.beta, 16).toRed(this.red);
  } else {
    var betas = this._getEndoRoots(this.p);
    // Choose the smallest beta
    beta = betas[0].cmp(betas[1]) < 0 ? betas[0] : betas[1];
    beta = beta.toRed(this.red);
  }
  if (conf.lambda) {
    lambda = new BN(conf.lambda, 16);
  } else {
    // Choose the lambda that is matching selected beta
    var lambdas = this._getEndoRoots(this.n);
    if (this.g.mul(lambdas[0]).x.cmp(this.g.x.redMul(beta)) === 0) {
      lambda = lambdas[0];
    } else {
      lambda = lambdas[1];
      assert(this.g.mul(lambda).x.cmp(this.g.x.redMul(beta)) === 0);
    }
  }

  // Get basis vectors, used for balanced length-two representation
  var basis;
  if (conf.basis) {
    basis = conf.basis.map(function(vec) {
      return {
        a: new BN(vec.a, 16),
        b: new BN(vec.b, 16)
      };
    });
  } else {
    basis = this._getEndoBasis(lambda);
  }

  return {
    beta: beta,
    lambda: lambda,
    basis: basis
  };
};

ShortCurve.prototype._getEndoRoots = function _getEndoRoots(num) {
  // Find roots of for x^2 + x + 1 in F
  // Root = (-1 +- Sqrt(-3)) / 2
  //
  var red = num === this.p ? this.red : BN.mont(num);
  var tinv = new BN(2).toRed(red).redInvm();
  var ntinv = tinv.redNeg();

  var s = new BN(3).toRed(red).redNeg().redSqrt().redMul(tinv);

  var l1 = ntinv.redAdd(s).fromRed();
  var l2 = ntinv.redSub(s).fromRed();
  return [ l1, l2 ];
};

ShortCurve.prototype._getEndoBasis = function _getEndoBasis(lambda) {
  // aprxSqrt >= sqrt(this.n)
  var aprxSqrt = this.n.ushrn(Math.floor(this.n.bitLength() / 2));

  // 3.74
  // Run EGCD, until r(L + 1) < aprxSqrt
  var u = lambda;
  var v = this.n.clone();
  var x1 = new BN(1);
  var y1 = new BN(0);
  var x2 = new BN(0);
  var y2 = new BN(1);

  // NOTE: all vectors are roots of: a + b * lambda = 0 (mod n)
  var a0;
  var b0;
  // First vector
  var a1;
  var b1;
  // Second vector
  var a2;
  var b2;

  var prevR;
  var i = 0;
  var r;
  var x;
  while (u.cmpn(0) !== 0) {
    var q = v.div(u);
    r = v.sub(q.mul(u));
    x = x2.sub(q.mul(x1));
    var y = y2.sub(q.mul(y1));

    if (!a1 && r.cmp(aprxSqrt) < 0) {
      a0 = prevR.neg();
      b0 = x1;
      a1 = r.neg();
      b1 = x;
    } else if (a1 && ++i === 2) {
      break;
    }
    prevR = r;

    v = u;
    u = r;
    x2 = x1;
    x1 = x;
    y2 = y1;
    y1 = y;
  }
  a2 = r.neg();
  b2 = x;

  var len1 = a1.sqr().add(b1.sqr());
  var len2 = a2.sqr().add(b2.sqr());
  if (len2.cmp(len1) >= 0) {
    a2 = a0;
    b2 = b0;
  }

  // Normalize signs
  if (a1.negative) {
    a1 = a1.neg();
    b1 = b1.neg();
  }
  if (a2.negative) {
    a2 = a2.neg();
    b2 = b2.neg();
  }

  return [
    { a: a1, b: b1 },
    { a: a2, b: b2 }
  ];
};

ShortCurve.prototype._endoSplit = function _endoSplit(k) {
  var basis = this.endo.basis;
  var v1 = basis[0];
  var v2 = basis[1];

  var c1 = v2.b.mul(k).divRound(this.n);
  var c2 = v1.b.neg().mul(k).divRound(this.n);

  var p1 = c1.mul(v1.a);
  var p2 = c2.mul(v2.a);
  var q1 = c1.mul(v1.b);
  var q2 = c2.mul(v2.b);

  // Calculate answer
  var k1 = k.sub(p1).sub(p2);
  var k2 = q1.add(q2).neg();
  return { k1: k1, k2: k2 };
};

ShortCurve.prototype.pointFromX = function pointFromX(x, odd) {
  x = new BN(x, 16);
  if (!x.red)
    x = x.toRed(this.red);

  var y2 = x.redSqr().redMul(x).redIAdd(x.redMul(this.a)).redIAdd(this.b);
  var y = y2.redSqrt();
  if (y.redSqr().redSub(y2).cmp(this.zero) !== 0)
    throw new Error('invalid point');

  // XXX Is there any way to tell if the number is odd without converting it
  // to non-red form?
  var isOdd = y.fromRed().isOdd();
  if (odd && !isOdd || !odd && isOdd)
    y = y.redNeg();

  return this.point(x, y);
};

ShortCurve.prototype.validate = function validate(point) {
  if (point.inf)
    return true;

  var x = point.x;
  var y = point.y;

  var ax = this.a.redMul(x);
  var rhs = x.redSqr().redMul(x).redIAdd(ax).redIAdd(this.b);
  return y.redSqr().redISub(rhs).cmpn(0) === 0;
};

ShortCurve.prototype._endoWnafMulAdd =
    function _endoWnafMulAdd(points, coeffs, jacobianResult) {
  var npoints = this._endoWnafT1;
  var ncoeffs = this._endoWnafT2;
  for (var i = 0; i < points.length; i++) {
    var split = this._endoSplit(coeffs[i]);
    var p = points[i];
    var beta = p._getBeta();

    if (split.k1.negative) {
      split.k1.ineg();
      p = p.neg(true);
    }
    if (split.k2.negative) {
      split.k2.ineg();
      beta = beta.neg(true);
    }

    npoints[i * 2] = p;
    npoints[i * 2 + 1] = beta;
    ncoeffs[i * 2] = split.k1;
    ncoeffs[i * 2 + 1] = split.k2;
  }
  var res = this._wnafMulAdd(1, npoints, ncoeffs, i * 2, jacobianResult);

  // Clean-up references to points and coefficients
  for (var j = 0; j < i * 2; j++) {
    npoints[j] = null;
    ncoeffs[j] = null;
  }
  return res;
};

function Point(curve, x, y, isRed) {
  Base.BasePoint.call(this, curve, 'affine');
  if (x === null && y === null) {
    this.x = null;
    this.y = null;
    this.inf = true;
  } else {
    this.x = new BN(x, 16);
    this.y = new BN(y, 16);
    // Force redgomery representation when loading from JSON
    if (isRed) {
      this.x.forceRed(this.curve.red);
      this.y.forceRed(this.curve.red);
    }
    if (!this.x.red)
      this.x = this.x.toRed(this.curve.red);
    if (!this.y.red)
      this.y = this.y.toRed(this.curve.red);
    this.inf = false;
  }
}
inherits(Point, Base.BasePoint);

ShortCurve.prototype.point = function point(x, y, isRed) {
  return new Point(this, x, y, isRed);
};

ShortCurve.prototype.pointFromJSON = function pointFromJSON(obj, red) {
  return Point.fromJSON(this, obj, red);
};

Point.prototype._getBeta = function _getBeta() {
  if (!this.curve.endo)
    return;

  var pre = this.precomputed;
  if (pre && pre.beta)
    return pre.beta;

  var beta = this.curve.point(this.x.redMul(this.curve.endo.beta), this.y);
  if (pre) {
    var curve = this.curve;
    var endoMul = function(p) {
      return curve.point(p.x.redMul(curve.endo.beta), p.y);
    };
    pre.beta = beta;
    beta.precomputed = {
      beta: null,
      naf: pre.naf && {
        wnd: pre.naf.wnd,
        points: pre.naf.points.map(endoMul)
      },
      doubles: pre.doubles && {
        step: pre.doubles.step,
        points: pre.doubles.points.map(endoMul)
      }
    };
  }
  return beta;
};

Point.prototype.toJSON = function toJSON() {
  if (!this.precomputed)
    return [ this.x, this.y ];

  return [ this.x, this.y, this.precomputed && {
    doubles: this.precomputed.doubles && {
      step: this.precomputed.doubles.step,
      points: this.precomputed.doubles.points.slice(1)
    },
    naf: this.precomputed.naf && {
      wnd: this.precomputed.naf.wnd,
      points: this.precomputed.naf.points.slice(1)
    }
  } ];
};

Point.fromJSON = function fromJSON(curve, obj, red) {
  if (typeof obj === 'string')
    obj = JSON.parse(obj);
  var res = curve.point(obj[0], obj[1], red);
  if (!obj[2])
    return res;

  function obj2point(obj) {
    return curve.point(obj[0], obj[1], red);
  }

  var pre = obj[2];
  res.precomputed = {
    beta: null,
    doubles: pre.doubles && {
      step: pre.doubles.step,
      points: [ res ].concat(pre.doubles.points.map(obj2point))
    },
    naf: pre.naf && {
      wnd: pre.naf.wnd,
      points: [ res ].concat(pre.naf.points.map(obj2point))
    }
  };
  return res;
};

Point.prototype.inspect = function inspect() {
  if (this.isInfinity())
    return '<EC Point Infinity>';
  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) +
      ' y: ' + this.y.fromRed().toString(16, 2) + '>';
};

Point.prototype.isInfinity = function isInfinity() {
  return this.inf;
};

Point.prototype.add = function add(p) {
  // O + P = P
  if (this.inf)
    return p;

  // P + O = P
  if (p.inf)
    return this;

  // P + P = 2P
  if (this.eq(p))
    return this.dbl();

  // P + (-P) = O
  if (this.neg().eq(p))
    return this.curve.point(null, null);

  // P + Q = O
  if (this.x.cmp(p.x) === 0)
    return this.curve.point(null, null);

  var c = this.y.redSub(p.y);
  if (c.cmpn(0) !== 0)
    c = c.redMul(this.x.redSub(p.x).redInvm());
  var nx = c.redSqr().redISub(this.x).redISub(p.x);
  var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);
  return this.curve.point(nx, ny);
};

Point.prototype.dbl = function dbl() {
  if (this.inf)
    return this;

  // 2P = O
  var ys1 = this.y.redAdd(this.y);
  if (ys1.cmpn(0) === 0)
    return this.curve.point(null, null);

  var a = this.curve.a;

  var x2 = this.x.redSqr();
  var dyinv = ys1.redInvm();
  var c = x2.redAdd(x2).redIAdd(x2).redIAdd(a).redMul(dyinv);

  var nx = c.redSqr().redISub(this.x.redAdd(this.x));
  var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);
  return this.curve.point(nx, ny);
};

Point.prototype.getX = function getX() {
  return this.x.fromRed();
};

Point.prototype.getY = function getY() {
  return this.y.fromRed();
};

Point.prototype.mul = function mul(k) {
  k = new BN(k, 16);

  if (this._hasDoubles(k))
    return this.curve._fixedNafMul(this, k);
  else if (this.curve.endo)
    return this.curve._endoWnafMulAdd([ this ], [ k ]);
  else
    return this.curve._wnafMul(this, k);
};

Point.prototype.mulAdd = function mulAdd(k1, p2, k2) {
  var points = [ this, p2 ];
  var coeffs = [ k1, k2 ];
  if (this.curve.endo)
    return this.curve._endoWnafMulAdd(points, coeffs);
  else
    return this.curve._wnafMulAdd(1, points, coeffs, 2);
};

Point.prototype.jmulAdd = function jmulAdd(k1, p2, k2) {
  var points = [ this, p2 ];
  var coeffs = [ k1, k2 ];
  if (this.curve.endo)
    return this.curve._endoWnafMulAdd(points, coeffs, true);
  else
    return this.curve._wnafMulAdd(1, points, coeffs, 2, true);
};

Point.prototype.eq = function eq(p) {
  return this === p ||
         this.inf === p.inf &&
             (this.inf || this.x.cmp(p.x) === 0 && this.y.cmp(p.y) === 0);
};

Point.prototype.neg = function neg(_precompute) {
  if (this.inf)
    return this;

  var res = this.curve.point(this.x, this.y.redNeg());
  if (_precompute && this.precomputed) {
    var pre = this.precomputed;
    var negate = function(p) {
      return p.neg();
    };
    res.precomputed = {
      naf: pre.naf && {
        wnd: pre.naf.wnd,
        points: pre.naf.points.map(negate)
      },
      doubles: pre.doubles && {
        step: pre.doubles.step,
        points: pre.doubles.points.map(negate)
      }
    };
  }
  return res;
};

Point.prototype.toJ = function toJ() {
  if (this.inf)
    return this.curve.jpoint(null, null, null);

  var res = this.curve.jpoint(this.x, this.y, this.curve.one);
  return res;
};

function JPoint(curve, x, y, z) {
  Base.BasePoint.call(this, curve, 'jacobian');
  if (x === null && y === null && z === null) {
    this.x = this.curve.one;
    this.y = this.curve.one;
    this.z = new BN(0);
  } else {
    this.x = new BN(x, 16);
    this.y = new BN(y, 16);
    this.z = new BN(z, 16);
  }
  if (!this.x.red)
    this.x = this.x.toRed(this.curve.red);
  if (!this.y.red)
    this.y = this.y.toRed(this.curve.red);
  if (!this.z.red)
    this.z = this.z.toRed(this.curve.red);

  this.zOne = this.z === this.curve.one;
}
inherits(JPoint, Base.BasePoint);

ShortCurve.prototype.jpoint = function jpoint(x, y, z) {
  return new JPoint(this, x, y, z);
};

JPoint.prototype.toP = function toP() {
  if (this.isInfinity())
    return this.curve.point(null, null);

  var zinv = this.z.redInvm();
  var zinv2 = zinv.redSqr();
  var ax = this.x.redMul(zinv2);
  var ay = this.y.redMul(zinv2).redMul(zinv);

  return this.curve.point(ax, ay);
};

JPoint.prototype.neg = function neg() {
  return this.curve.jpoint(this.x, this.y.redNeg(), this.z);
};

JPoint.prototype.add = function add(p) {
  // O + P = P
  if (this.isInfinity())
    return p;

  // P + O = P
  if (p.isInfinity())
    return this;

  // 12M + 4S + 7A
  var pz2 = p.z.redSqr();
  var z2 = this.z.redSqr();
  var u1 = this.x.redMul(pz2);
  var u2 = p.x.redMul(z2);
  var s1 = this.y.redMul(pz2.redMul(p.z));
  var s2 = p.y.redMul(z2.redMul(this.z));

  var h = u1.redSub(u2);
  var r = s1.redSub(s2);
  if (h.cmpn(0) === 0) {
    if (r.cmpn(0) !== 0)
      return this.curve.jpoint(null, null, null);
    else
      return this.dbl();
  }

  var h2 = h.redSqr();
  var h3 = h2.redMul(h);
  var v = u1.redMul(h2);

  var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);
  var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));
  var nz = this.z.redMul(p.z).redMul(h);

  return this.curve.jpoint(nx, ny, nz);
};

JPoint.prototype.mixedAdd = function mixedAdd(p) {
  // O + P = P
  if (this.isInfinity())
    return p.toJ();

  // P + O = P
  if (p.isInfinity())
    return this;

  // 8M + 3S + 7A
  var z2 = this.z.redSqr();
  var u1 = this.x;
  var u2 = p.x.redMul(z2);
  var s1 = this.y;
  var s2 = p.y.redMul(z2).redMul(this.z);

  var h = u1.redSub(u2);
  var r = s1.redSub(s2);
  if (h.cmpn(0) === 0) {
    if (r.cmpn(0) !== 0)
      return this.curve.jpoint(null, null, null);
    else
      return this.dbl();
  }

  var h2 = h.redSqr();
  var h3 = h2.redMul(h);
  var v = u1.redMul(h2);

  var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);
  var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));
  var nz = this.z.redMul(h);

  return this.curve.jpoint(nx, ny, nz);
};

JPoint.prototype.dblp = function dblp(pow) {
  if (pow === 0)
    return this;
  if (this.isInfinity())
    return this;
  if (!pow)
    return this.dbl();

  if (this.curve.zeroA || this.curve.threeA) {
    var r = this;
    for (var i = 0; i < pow; i++)
      r = r.dbl();
    return r;
  }

  // 1M + 2S + 1A + N * (4S + 5M + 8A)
  // N = 1 => 6M + 6S + 9A
  var a = this.curve.a;
  var tinv = this.curve.tinv;

  var jx = this.x;
  var jy = this.y;
  var jz = this.z;
  var jz4 = jz.redSqr().redSqr();

  // Reuse results
  var jyd = jy.redAdd(jy);
  for (var i = 0; i < pow; i++) {
    var jx2 = jx.redSqr();
    var jyd2 = jyd.redSqr();
    var jyd4 = jyd2.redSqr();
    var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));

    var t1 = jx.redMul(jyd2);
    var nx = c.redSqr().redISub(t1.redAdd(t1));
    var t2 = t1.redISub(nx);
    var dny = c.redMul(t2);
    dny = dny.redIAdd(dny).redISub(jyd4);
    var nz = jyd.redMul(jz);
    if (i + 1 < pow)
      jz4 = jz4.redMul(jyd4);

    jx = nx;
    jz = nz;
    jyd = dny;
  }

  return this.curve.jpoint(jx, jyd.redMul(tinv), jz);
};

JPoint.prototype.dbl = function dbl() {
  if (this.isInfinity())
    return this;

  if (this.curve.zeroA)
    return this._zeroDbl();
  else if (this.curve.threeA)
    return this._threeDbl();
  else
    return this._dbl();
};

JPoint.prototype._zeroDbl = function _zeroDbl() {
  var nx;
  var ny;
  var nz;
  // Z = 1
  if (this.zOne) {
    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html
    //     #doubling-mdbl-2007-bl
    // 1M + 5S + 14A

    // XX = X1^2
    var xx = this.x.redSqr();
    // YY = Y1^2
    var yy = this.y.redSqr();
    // YYYY = YY^2
    var yyyy = yy.redSqr();
    // S = 2 * ((X1 + YY)^2 - XX - YYYY)
    var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);
    s = s.redIAdd(s);
    // M = 3 * XX + a; a = 0
    var m = xx.redAdd(xx).redIAdd(xx);
    // T = M ^ 2 - 2*S
    var t = m.redSqr().redISub(s).redISub(s);

    // 8 * YYYY
    var yyyy8 = yyyy.redIAdd(yyyy);
    yyyy8 = yyyy8.redIAdd(yyyy8);
    yyyy8 = yyyy8.redIAdd(yyyy8);

    // X3 = T
    nx = t;
    // Y3 = M * (S - T) - 8 * YYYY
    ny = m.redMul(s.redISub(t)).redISub(yyyy8);
    // Z3 = 2*Y1
    nz = this.y.redAdd(this.y);
  } else {
    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html
    //     #doubling-dbl-2009-l
    // 2M + 5S + 13A

    // A = X1^2
    var a = this.x.redSqr();
    // B = Y1^2
    var b = this.y.redSqr();
    // C = B^2
    var c = b.redSqr();
    // D = 2 * ((X1 + B)^2 - A - C)
    var d = this.x.redAdd(b).redSqr().redISub(a).redISub(c);
    d = d.redIAdd(d);
    // E = 3 * A
    var e = a.redAdd(a).redIAdd(a);
    // F = E^2
    var f = e.redSqr();

    // 8 * C
    var c8 = c.redIAdd(c);
    c8 = c8.redIAdd(c8);
    c8 = c8.redIAdd(c8);

    // X3 = F - 2 * D
    nx = f.redISub(d).redISub(d);
    // Y3 = E * (D - X3) - 8 * C
    ny = e.redMul(d.redISub(nx)).redISub(c8);
    // Z3 = 2 * Y1 * Z1
    nz = this.y.redMul(this.z);
    nz = nz.redIAdd(nz);
  }

  return this.curve.jpoint(nx, ny, nz);
};

JPoint.prototype._threeDbl = function _threeDbl() {
  var nx;
  var ny;
  var nz;
  // Z = 1
  if (this.zOne) {
    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html
    //     #doubling-mdbl-2007-bl
    // 1M + 5S + 15A

    // XX = X1^2
    var xx = this.x.redSqr();
    // YY = Y1^2
    var yy = this.y.redSqr();
    // YYYY = YY^2
    var yyyy = yy.redSqr();
    // S = 2 * ((X1 + YY)^2 - XX - YYYY)
    var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);
    s = s.redIAdd(s);
    // M = 3 * XX + a
    var m = xx.redAdd(xx).redIAdd(xx).redIAdd(this.curve.a);
    // T = M^2 - 2 * S
    var t = m.redSqr().redISub(s).redISub(s);
    // X3 = T
    nx = t;
    // Y3 = M * (S - T) - 8 * YYYY
    var yyyy8 = yyyy.redIAdd(yyyy);
    yyyy8 = yyyy8.redIAdd(yyyy8);
    yyyy8 = yyyy8.redIAdd(yyyy8);
    ny = m.redMul(s.redISub(t)).redISub(yyyy8);
    // Z3 = 2 * Y1
    nz = this.y.redAdd(this.y);
  } else {
    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html#doubling-dbl-2001-b
    // 3M + 5S

    // delta = Z1^2
    var delta = this.z.redSqr();
    // gamma = Y1^2
    var gamma = this.y.redSqr();
    // beta = X1 * gamma
    var beta = this.x.redMul(gamma);
    // alpha = 3 * (X1 - delta) * (X1 + delta)
    var alpha = this.x.redSub(delta).redMul(this.x.redAdd(delta));
    alpha = alpha.redAdd(alpha).redIAdd(alpha);
    // X3 = alpha^2 - 8 * beta
    var beta4 = beta.redIAdd(beta);
    beta4 = beta4.redIAdd(beta4);
    var beta8 = beta4.redAdd(beta4);
    nx = alpha.redSqr().redISub(beta8);
    // Z3 = (Y1 + Z1)^2 - gamma - delta
    nz = this.y.redAdd(this.z).redSqr().redISub(gamma).redISub(delta);
    // Y3 = alpha * (4 * beta - X3) - 8 * gamma^2
    var ggamma8 = gamma.redSqr();
    ggamma8 = ggamma8.redIAdd(ggamma8);
    ggamma8 = ggamma8.redIAdd(ggamma8);
    ggamma8 = ggamma8.redIAdd(ggamma8);
    ny = alpha.redMul(beta4.redISub(nx)).redISub(ggamma8);
  }

  return this.curve.jpoint(nx, ny, nz);
};

JPoint.prototype._dbl = function _dbl() {
  var a = this.curve.a;

  // 4M + 6S + 10A
  var jx = this.x;
  var jy = this.y;
  var jz = this.z;
  var jz4 = jz.redSqr().redSqr();

  var jx2 = jx.redSqr();
  var jy2 = jy.redSqr();

  var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));

  var jxd4 = jx.redAdd(jx);
  jxd4 = jxd4.redIAdd(jxd4);
  var t1 = jxd4.redMul(jy2);
  var nx = c.redSqr().redISub(t1.redAdd(t1));
  var t2 = t1.redISub(nx);

  var jyd8 = jy2.redSqr();
  jyd8 = jyd8.redIAdd(jyd8);
  jyd8 = jyd8.redIAdd(jyd8);
  jyd8 = jyd8.redIAdd(jyd8);
  var ny = c.redMul(t2).redISub(jyd8);
  var nz = jy.redAdd(jy).redMul(jz);

  return this.curve.jpoint(nx, ny, nz);
};

JPoint.prototype.trpl = function trpl() {
  if (!this.curve.zeroA)
    return this.dbl().add(this);

  // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html#tripling-tpl-2007-bl
  // 5M + 10S + ...

  // XX = X1^2
  var xx = this.x.redSqr();
  // YY = Y1^2
  var yy = this.y.redSqr();
  // ZZ = Z1^2
  var zz = this.z.redSqr();
  // YYYY = YY^2
  var yyyy = yy.redSqr();
  // M = 3 * XX + a * ZZ2; a = 0
  var m = xx.redAdd(xx).redIAdd(xx);
  // MM = M^2
  var mm = m.redSqr();
  // E = 6 * ((X1 + YY)^2 - XX - YYYY) - MM
  var e = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);
  e = e.redIAdd(e);
  e = e.redAdd(e).redIAdd(e);
  e = e.redISub(mm);
  // EE = E^2
  var ee = e.redSqr();
  // T = 16*YYYY
  var t = yyyy.redIAdd(yyyy);
  t = t.redIAdd(t);
  t = t.redIAdd(t);
  t = t.redIAdd(t);
  // U = (M + E)^2 - MM - EE - T
  var u = m.redIAdd(e).redSqr().redISub(mm).redISub(ee).redISub(t);
  // X3 = 4 * (X1 * EE - 4 * YY * U)
  var yyu4 = yy.redMul(u);
  yyu4 = yyu4.redIAdd(yyu4);
  yyu4 = yyu4.redIAdd(yyu4);
  var nx = this.x.redMul(ee).redISub(yyu4);
  nx = nx.redIAdd(nx);
  nx = nx.redIAdd(nx);
  // Y3 = 8 * Y1 * (U * (T - U) - E * EE)
  var ny = this.y.redMul(u.redMul(t.redISub(u)).redISub(e.redMul(ee)));
  ny = ny.redIAdd(ny);
  ny = ny.redIAdd(ny);
  ny = ny.redIAdd(ny);
  // Z3 = (Z1 + E)^2 - ZZ - EE
  var nz = this.z.redAdd(e).redSqr().redISub(zz).redISub(ee);

  return this.curve.jpoint(nx, ny, nz);
};

JPoint.prototype.mul = function mul(k, kbase) {
  k = new BN(k, kbase);

  return this.curve._wnafMul(this, k);
};

JPoint.prototype.eq = function eq(p) {
  if (p.type === 'affine')
    return this.eq(p.toJ());

  if (this === p)
    return true;

  // x1 * z2^2 == x2 * z1^2
  var z2 = this.z.redSqr();
  var pz2 = p.z.redSqr();
  if (this.x.redMul(pz2).redISub(p.x.redMul(z2)).cmpn(0) !== 0)
    return false;

  // y1 * z2^3 == y2 * z1^3
  var z3 = z2.redMul(this.z);
  var pz3 = pz2.redMul(p.z);
  return this.y.redMul(pz3).redISub(p.y.redMul(z3)).cmpn(0) === 0;
};

JPoint.prototype.eqXToP = function eqXToP(x) {
  var zs = this.z.redSqr();
  var rx = x.toRed(this.curve.red).redMul(zs);
  if (this.x.cmp(rx) === 0)
    return true;

  var xc = x.clone();
  var t = this.curve.redN.redMul(zs);
  for (;;) {
    xc.iadd(this.curve.n);
    if (xc.cmp(this.curve.p) >= 0)
      return false;

    rx.redIAdd(t);
    if (this.x.cmp(rx) === 0)
      return true;
  }
};

JPoint.prototype.inspect = function inspect() {
  if (this.isInfinity())
    return '<EC JPoint Infinity>';
  return '<EC JPoint x: ' + this.x.toString(16, 2) +
      ' y: ' + this.y.toString(16, 2) +
      ' z: ' + this.z.toString(16, 2) + '>';
};

JPoint.prototype.isInfinity = function isInfinity() {
  // XXX This code assumes that zero is always zero in red
  return this.z.cmpn(0) === 0;
};


/***/ }),

/***/ "./node_modules/.6.4.1@elliptic/lib/elliptic/curves.js":
/*!*************************************************************!*\
  !*** ./node_modules/.6.4.1@elliptic/lib/elliptic/curves.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var curves = exports;

var hash = __webpack_require__(/*! hash.js */ "./node_modules/.1.1.7@hash.js/lib/hash.js");
var elliptic = __webpack_require__(/*! ../elliptic */ "./node_modules/.6.4.1@elliptic/lib/elliptic.js");

var assert = elliptic.utils.assert;

function PresetCurve(options) {
  if (options.type === 'short')
    this.curve = new elliptic.curve.short(options);
  else if (options.type === 'edwards')
    this.curve = new elliptic.curve.edwards(options);
  else
    this.curve = new elliptic.curve.mont(options);
  this.g = this.curve.g;
  this.n = this.curve.n;
  this.hash = options.hash;

  assert(this.g.validate(), 'Invalid curve');
  assert(this.g.mul(this.n).isInfinity(), 'Invalid curve, G*N != O');
}
curves.PresetCurve = PresetCurve;

function defineCurve(name, options) {
  Object.defineProperty(curves, name, {
    configurable: true,
    enumerable: true,
    get: function() {
      var curve = new PresetCurve(options);
      Object.defineProperty(curves, name, {
        configurable: true,
        enumerable: true,
        value: curve
      });
      return curve;
    }
  });
}

defineCurve('p192', {
  type: 'short',
  prime: 'p192',
  p: 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff',
  a: 'ffffffff ffffffff ffffffff fffffffe ffffffff fffffffc',
  b: '64210519 e59c80e7 0fa7e9ab 72243049 feb8deec c146b9b1',
  n: 'ffffffff ffffffff ffffffff 99def836 146bc9b1 b4d22831',
  hash: hash.sha256,
  gRed: false,
  g: [
    '188da80e b03090f6 7cbf20eb 43a18800 f4ff0afd 82ff1012',
    '07192b95 ffc8da78 631011ed 6b24cdd5 73f977a1 1e794811'
  ]
});

defineCurve('p224', {
  type: 'short',
  prime: 'p224',
  p: 'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001',
  a: 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff fffffffe',
  b: 'b4050a85 0c04b3ab f5413256 5044b0b7 d7bfd8ba 270b3943 2355ffb4',
  n: 'ffffffff ffffffff ffffffff ffff16a2 e0b8f03e 13dd2945 5c5c2a3d',
  hash: hash.sha256,
  gRed: false,
  g: [
    'b70e0cbd 6bb4bf7f 321390b9 4a03c1d3 56c21122 343280d6 115c1d21',
    'bd376388 b5f723fb 4c22dfe6 cd4375a0 5a074764 44d58199 85007e34'
  ]
});

defineCurve('p256', {
  type: 'short',
  prime: null,
  p: 'ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff ffffffff',
  a: 'ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff fffffffc',
  b: '5ac635d8 aa3a93e7 b3ebbd55 769886bc 651d06b0 cc53b0f6 3bce3c3e 27d2604b',
  n: 'ffffffff 00000000 ffffffff ffffffff bce6faad a7179e84 f3b9cac2 fc632551',
  hash: hash.sha256,
  gRed: false,
  g: [
    '6b17d1f2 e12c4247 f8bce6e5 63a440f2 77037d81 2deb33a0 f4a13945 d898c296',
    '4fe342e2 fe1a7f9b 8ee7eb4a 7c0f9e16 2bce3357 6b315ece cbb64068 37bf51f5'
  ]
});

defineCurve('p384', {
  type: 'short',
  prime: null,
  p: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +
     'fffffffe ffffffff 00000000 00000000 ffffffff',
  a: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +
     'fffffffe ffffffff 00000000 00000000 fffffffc',
  b: 'b3312fa7 e23ee7e4 988e056b e3f82d19 181d9c6e fe814112 0314088f ' +
     '5013875a c656398d 8a2ed19d 2a85c8ed d3ec2aef',
  n: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff c7634d81 ' +
     'f4372ddf 581a0db2 48b0a77a ecec196a ccc52973',
  hash: hash.sha384,
  gRed: false,
  g: [
    'aa87ca22 be8b0537 8eb1c71e f320ad74 6e1d3b62 8ba79b98 59f741e0 82542a38 ' +
    '5502f25d bf55296c 3a545e38 72760ab7',
    '3617de4a 96262c6f 5d9e98bf 9292dc29 f8f41dbd 289a147c e9da3113 b5f0b8c0 ' +
    '0a60b1ce 1d7e819d 7a431d7c 90ea0e5f'
  ]
});

defineCurve('p521', {
  type: 'short',
  prime: null,
  p: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +
     'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +
     'ffffffff ffffffff ffffffff ffffffff ffffffff',
  a: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +
     'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +
     'ffffffff ffffffff ffffffff ffffffff fffffffc',
  b: '00000051 953eb961 8e1c9a1f 929a21a0 b68540ee a2da725b ' +
     '99b315f3 b8b48991 8ef109e1 56193951 ec7e937b 1652c0bd ' +
     '3bb1bf07 3573df88 3d2c34f1 ef451fd4 6b503f00',
  n: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +
     'ffffffff ffffffff fffffffa 51868783 bf2f966b 7fcc0148 ' +
     'f709a5d0 3bb5c9b8 899c47ae bb6fb71e 91386409',
  hash: hash.sha512,
  gRed: false,
  g: [
    '000000c6 858e06b7 0404e9cd 9e3ecb66 2395b442 9c648139 ' +
    '053fb521 f828af60 6b4d3dba a14b5e77 efe75928 fe1dc127 ' +
    'a2ffa8de 3348b3c1 856a429b f97e7e31 c2e5bd66',
    '00000118 39296a78 9a3bc004 5c8a5fb4 2c7d1bd9 98f54449 ' +
    '579b4468 17afbd17 273e662c 97ee7299 5ef42640 c550b901 ' +
    '3fad0761 353c7086 a272c240 88be9476 9fd16650'
  ]
});

defineCurve('curve25519', {
  type: 'mont',
  prime: 'p25519',
  p: '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed',
  a: '76d06',
  b: '1',
  n: '1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed',
  hash: hash.sha256,
  gRed: false,
  g: [
    '9'
  ]
});

defineCurve('ed25519', {
  type: 'edwards',
  prime: 'p25519',
  p: '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed',
  a: '-1',
  c: '1',
  // -121665 * (121666^(-1)) (mod P)
  d: '52036cee2b6ffe73 8cc740797779e898 00700a4d4141d8ab 75eb4dca135978a3',
  n: '1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed',
  hash: hash.sha256,
  gRed: false,
  g: [
    '216936d3cd6e53fec0a4e231fdd6dc5c692cc7609525a7b2c9562d608f25d51a',

    // 4/5
    '6666666666666666666666666666666666666666666666666666666666666658'
  ]
});

var pre;
try {
  pre = __webpack_require__(/*! ./precomputed/secp256k1 */ "./node_modules/.6.4.1@elliptic/lib/elliptic/precomputed/secp256k1.js");
} catch (e) {
  pre = undefined;
}

defineCurve('secp256k1', {
  type: 'short',
  prime: 'k256',
  p: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f',
  a: '0',
  b: '7',
  n: 'ffffffff ffffffff ffffffff fffffffe baaedce6 af48a03b bfd25e8c d0364141',
  h: '1',
  hash: hash.sha256,

  // Precomputed endomorphism
  beta: '7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee',
  lambda: '5363ad4cc05c30e0a5261c028812645a122e22ea20816678df02967c1b23bd72',
  basis: [
    {
      a: '3086d221a7d46bcde86c90e49284eb15',
      b: '-e4437ed6010e88286f547fa90abfe4c3'
    },
    {
      a: '114ca50f7a8e2f3f657c1108d9d44cfd8',
      b: '3086d221a7d46bcde86c90e49284eb15'
    }
  ],

  gRed: false,
  g: [
    '79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798',
    '483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8',
    pre
  ]
});


/***/ }),

/***/ "./node_modules/.6.4.1@elliptic/lib/elliptic/ec/index.js":
/*!***************************************************************!*\
  !*** ./node_modules/.6.4.1@elliptic/lib/elliptic/ec/index.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var BN = __webpack_require__(/*! bn.js */ "./node_modules/.4.11.8@bn.js/lib/bn.js");
var HmacDRBG = __webpack_require__(/*! hmac-drbg */ "./node_modules/.1.0.1@hmac-drbg/lib/hmac-drbg.js");
var elliptic = __webpack_require__(/*! ../../elliptic */ "./node_modules/.6.4.1@elliptic/lib/elliptic.js");
var utils = elliptic.utils;
var assert = utils.assert;

var KeyPair = __webpack_require__(/*! ./key */ "./node_modules/.6.4.1@elliptic/lib/elliptic/ec/key.js");
var Signature = __webpack_require__(/*! ./signature */ "./node_modules/.6.4.1@elliptic/lib/elliptic/ec/signature.js");

function EC(options) {
  if (!(this instanceof EC))
    return new EC(options);

  // Shortcut `elliptic.ec(curve-name)`
  if (typeof options === 'string') {
    assert(elliptic.curves.hasOwnProperty(options), 'Unknown curve ' + options);

    options = elliptic.curves[options];
  }

  // Shortcut for `elliptic.ec(elliptic.curves.curveName)`
  if (options instanceof elliptic.curves.PresetCurve)
    options = { curve: options };

  this.curve = options.curve.curve;
  this.n = this.curve.n;
  this.nh = this.n.ushrn(1);
  this.g = this.curve.g;

  // Point on curve
  this.g = options.curve.g;
  this.g.precompute(options.curve.n.bitLength() + 1);

  // Hash for function for DRBG
  this.hash = options.hash || options.curve.hash;
}
module.exports = EC;

EC.prototype.keyPair = function keyPair(options) {
  return new KeyPair(this, options);
};

EC.prototype.keyFromPrivate = function keyFromPrivate(priv, enc) {
  return KeyPair.fromPrivate(this, priv, enc);
};

EC.prototype.keyFromPublic = function keyFromPublic(pub, enc) {
  return KeyPair.fromPublic(this, pub, enc);
};

EC.prototype.genKeyPair = function genKeyPair(options) {
  if (!options)
    options = {};

  // Instantiate Hmac_DRBG
  var drbg = new HmacDRBG({
    hash: this.hash,
    pers: options.pers,
    persEnc: options.persEnc || 'utf8',
    entropy: options.entropy || elliptic.rand(this.hash.hmacStrength),
    entropyEnc: options.entropy && options.entropyEnc || 'utf8',
    nonce: this.n.toArray()
  });

  var bytes = this.n.byteLength();
  var ns2 = this.n.sub(new BN(2));
  do {
    var priv = new BN(drbg.generate(bytes));
    if (priv.cmp(ns2) > 0)
      continue;

    priv.iaddn(1);
    return this.keyFromPrivate(priv);
  } while (true);
};

EC.prototype._truncateToN = function truncateToN(msg, truncOnly) {
  var delta = msg.byteLength() * 8 - this.n.bitLength();
  if (delta > 0)
    msg = msg.ushrn(delta);
  if (!truncOnly && msg.cmp(this.n) >= 0)
    return msg.sub(this.n);
  else
    return msg;
};

EC.prototype.sign = function sign(msg, key, enc, options) {
  if (typeof enc === 'object') {
    options = enc;
    enc = null;
  }
  if (!options)
    options = {};

  key = this.keyFromPrivate(key, enc);
  msg = this._truncateToN(new BN(msg, 16));

  // Zero-extend key to provide enough entropy
  var bytes = this.n.byteLength();
  var bkey = key.getPrivate().toArray('be', bytes);

  // Zero-extend nonce to have the same byte size as N
  var nonce = msg.toArray('be', bytes);

  // Instantiate Hmac_DRBG
  var drbg = new HmacDRBG({
    hash: this.hash,
    entropy: bkey,
    nonce: nonce,
    pers: options.pers,
    persEnc: options.persEnc || 'utf8'
  });

  // Number of bytes to generate
  var ns1 = this.n.sub(new BN(1));

  for (var iter = 0; true; iter++) {
    var k = options.k ?
        options.k(iter) :
        new BN(drbg.generate(this.n.byteLength()));
    k = this._truncateToN(k, true);
    if (k.cmpn(1) <= 0 || k.cmp(ns1) >= 0)
      continue;

    var kp = this.g.mul(k);
    if (kp.isInfinity())
      continue;

    var kpX = kp.getX();
    var r = kpX.umod(this.n);
    if (r.cmpn(0) === 0)
      continue;

    var s = k.invm(this.n).mul(r.mul(key.getPrivate()).iadd(msg));
    s = s.umod(this.n);
    if (s.cmpn(0) === 0)
      continue;

    var recoveryParam = (kp.getY().isOdd() ? 1 : 0) |
                        (kpX.cmp(r) !== 0 ? 2 : 0);

    // Use complement of `s`, if it is > `n / 2`
    if (options.canonical && s.cmp(this.nh) > 0) {
      s = this.n.sub(s);
      recoveryParam ^= 1;
    }

    return new Signature({ r: r, s: s, recoveryParam: recoveryParam });
  }
};

EC.prototype.verify = function verify(msg, signature, key, enc) {
  msg = this._truncateToN(new BN(msg, 16));
  key = this.keyFromPublic(key, enc);
  signature = new Signature(signature, 'hex');

  // Perform primitive values validation
  var r = signature.r;
  var s = signature.s;
  if (r.cmpn(1) < 0 || r.cmp(this.n) >= 0)
    return false;
  if (s.cmpn(1) < 0 || s.cmp(this.n) >= 0)
    return false;

  // Validate signature
  var sinv = s.invm(this.n);
  var u1 = sinv.mul(msg).umod(this.n);
  var u2 = sinv.mul(r).umod(this.n);

  if (!this.curve._maxwellTrick) {
    var p = this.g.mulAdd(u1, key.getPublic(), u2);
    if (p.isInfinity())
      return false;

    return p.getX().umod(this.n).cmp(r) === 0;
  }

  // NOTE: Greg Maxwell's trick, inspired by:
  // https://git.io/vad3K

  var p = this.g.jmulAdd(u1, key.getPublic(), u2);
  if (p.isInfinity())
    return false;

  // Compare `p.x` of Jacobian point with `r`,
  // this will do `p.x == r * p.z^2` instead of multiplying `p.x` by the
  // inverse of `p.z^2`
  return p.eqXToP(r);
};

EC.prototype.recoverPubKey = function(msg, signature, j, enc) {
  assert((3 & j) === j, 'The recovery param is more than two bits');
  signature = new Signature(signature, enc);

  var n = this.n;
  var e = new BN(msg);
  var r = signature.r;
  var s = signature.s;

  // A set LSB signifies that the y-coordinate is odd
  var isYOdd = j & 1;
  var isSecondKey = j >> 1;
  if (r.cmp(this.curve.p.umod(this.curve.n)) >= 0 && isSecondKey)
    throw new Error('Unable to find sencond key candinate');

  // 1.1. Let x = r + jn.
  if (isSecondKey)
    r = this.curve.pointFromX(r.add(this.curve.n), isYOdd);
  else
    r = this.curve.pointFromX(r, isYOdd);

  var rInv = signature.r.invm(n);
  var s1 = n.sub(e).mul(rInv).umod(n);
  var s2 = s.mul(rInv).umod(n);

  // 1.6.1 Compute Q = r^-1 (sR -  eG)
  //               Q = r^-1 (sR + -eG)
  return this.g.mulAdd(s1, r, s2);
};

EC.prototype.getKeyRecoveryParam = function(e, signature, Q, enc) {
  signature = new Signature(signature, enc);
  if (signature.recoveryParam !== null)
    return signature.recoveryParam;

  for (var i = 0; i < 4; i++) {
    var Qprime;
    try {
      Qprime = this.recoverPubKey(e, signature, i);
    } catch (e) {
      continue;
    }

    if (Qprime.eq(Q))
      return i;
  }
  throw new Error('Unable to find valid recovery factor');
};


/***/ }),

/***/ "./node_modules/.6.4.1@elliptic/lib/elliptic/ec/key.js":
/*!*************************************************************!*\
  !*** ./node_modules/.6.4.1@elliptic/lib/elliptic/ec/key.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var BN = __webpack_require__(/*! bn.js */ "./node_modules/.4.11.8@bn.js/lib/bn.js");
var elliptic = __webpack_require__(/*! ../../elliptic */ "./node_modules/.6.4.1@elliptic/lib/elliptic.js");
var utils = elliptic.utils;
var assert = utils.assert;

function KeyPair(ec, options) {
  this.ec = ec;
  this.priv = null;
  this.pub = null;

  // KeyPair(ec, { priv: ..., pub: ... })
  if (options.priv)
    this._importPrivate(options.priv, options.privEnc);
  if (options.pub)
    this._importPublic(options.pub, options.pubEnc);
}
module.exports = KeyPair;

KeyPair.fromPublic = function fromPublic(ec, pub, enc) {
  if (pub instanceof KeyPair)
    return pub;

  return new KeyPair(ec, {
    pub: pub,
    pubEnc: enc
  });
};

KeyPair.fromPrivate = function fromPrivate(ec, priv, enc) {
  if (priv instanceof KeyPair)
    return priv;

  return new KeyPair(ec, {
    priv: priv,
    privEnc: enc
  });
};

KeyPair.prototype.validate = function validate() {
  var pub = this.getPublic();

  if (pub.isInfinity())
    return { result: false, reason: 'Invalid public key' };
  if (!pub.validate())
    return { result: false, reason: 'Public key is not a point' };
  if (!pub.mul(this.ec.curve.n).isInfinity())
    return { result: false, reason: 'Public key * N != O' };

  return { result: true, reason: null };
};

KeyPair.prototype.getPublic = function getPublic(compact, enc) {
  // compact is optional argument
  if (typeof compact === 'string') {
    enc = compact;
    compact = null;
  }

  if (!this.pub)
    this.pub = this.ec.g.mul(this.priv);

  if (!enc)
    return this.pub;

  return this.pub.encode(enc, compact);
};

KeyPair.prototype.getPrivate = function getPrivate(enc) {
  if (enc === 'hex')
    return this.priv.toString(16, 2);
  else
    return this.priv;
};

KeyPair.prototype._importPrivate = function _importPrivate(key, enc) {
  this.priv = new BN(key, enc || 16);

  // Ensure that the priv won't be bigger than n, otherwise we may fail
  // in fixed multiplication method
  this.priv = this.priv.umod(this.ec.curve.n);
};

KeyPair.prototype._importPublic = function _importPublic(key, enc) {
  if (key.x || key.y) {
    // Montgomery points only have an `x` coordinate.
    // Weierstrass/Edwards points on the other hand have both `x` and
    // `y` coordinates.
    if (this.ec.curve.type === 'mont') {
      assert(key.x, 'Need x coordinate');
    } else if (this.ec.curve.type === 'short' ||
               this.ec.curve.type === 'edwards') {
      assert(key.x && key.y, 'Need both x and y coordinate');
    }
    this.pub = this.ec.curve.point(key.x, key.y);
    return;
  }
  this.pub = this.ec.curve.decodePoint(key, enc);
};

// ECDH
KeyPair.prototype.derive = function derive(pub) {
  return pub.mul(this.priv).getX();
};

// ECDSA
KeyPair.prototype.sign = function sign(msg, enc, options) {
  return this.ec.sign(msg, this, enc, options);
};

KeyPair.prototype.verify = function verify(msg, signature) {
  return this.ec.verify(msg, signature, this);
};

KeyPair.prototype.inspect = function inspect() {
  return '<Key priv: ' + (this.priv && this.priv.toString(16, 2)) +
         ' pub: ' + (this.pub && this.pub.inspect()) + ' >';
};


/***/ }),

/***/ "./node_modules/.6.4.1@elliptic/lib/elliptic/ec/signature.js":
/*!*******************************************************************!*\
  !*** ./node_modules/.6.4.1@elliptic/lib/elliptic/ec/signature.js ***!
  \*******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var BN = __webpack_require__(/*! bn.js */ "./node_modules/.4.11.8@bn.js/lib/bn.js");

var elliptic = __webpack_require__(/*! ../../elliptic */ "./node_modules/.6.4.1@elliptic/lib/elliptic.js");
var utils = elliptic.utils;
var assert = utils.assert;

function Signature(options, enc) {
  if (options instanceof Signature)
    return options;

  if (this._importDER(options, enc))
    return;

  assert(options.r && options.s, 'Signature without r or s');
  this.r = new BN(options.r, 16);
  this.s = new BN(options.s, 16);
  if (options.recoveryParam === undefined)
    this.recoveryParam = null;
  else
    this.recoveryParam = options.recoveryParam;
}
module.exports = Signature;

function Position() {
  this.place = 0;
}

function getLength(buf, p) {
  var initial = buf[p.place++];
  if (!(initial & 0x80)) {
    return initial;
  }
  var octetLen = initial & 0xf;
  var val = 0;
  for (var i = 0, off = p.place; i < octetLen; i++, off++) {
    val <<= 8;
    val |= buf[off];
  }
  p.place = off;
  return val;
}

function rmPadding(buf) {
  var i = 0;
  var len = buf.length - 1;
  while (!buf[i] && !(buf[i + 1] & 0x80) && i < len) {
    i++;
  }
  if (i === 0) {
    return buf;
  }
  return buf.slice(i);
}

Signature.prototype._importDER = function _importDER(data, enc) {
  data = utils.toArray(data, enc);
  var p = new Position();
  if (data[p.place++] !== 0x30) {
    return false;
  }
  var len = getLength(data, p);
  if ((len + p.place) !== data.length) {
    return false;
  }
  if (data[p.place++] !== 0x02) {
    return false;
  }
  var rlen = getLength(data, p);
  var r = data.slice(p.place, rlen + p.place);
  p.place += rlen;
  if (data[p.place++] !== 0x02) {
    return false;
  }
  var slen = getLength(data, p);
  if (data.length !== slen + p.place) {
    return false;
  }
  var s = data.slice(p.place, slen + p.place);
  if (r[0] === 0 && (r[1] & 0x80)) {
    r = r.slice(1);
  }
  if (s[0] === 0 && (s[1] & 0x80)) {
    s = s.slice(1);
  }

  this.r = new BN(r);
  this.s = new BN(s);
  this.recoveryParam = null;

  return true;
};

function constructLength(arr, len) {
  if (len < 0x80) {
    arr.push(len);
    return;
  }
  var octets = 1 + (Math.log(len) / Math.LN2 >>> 3);
  arr.push(octets | 0x80);
  while (--octets) {
    arr.push((len >>> (octets << 3)) & 0xff);
  }
  arr.push(len);
}

Signature.prototype.toDER = function toDER(enc) {
  var r = this.r.toArray();
  var s = this.s.toArray();

  // Pad values
  if (r[0] & 0x80)
    r = [ 0 ].concat(r);
  // Pad values
  if (s[0] & 0x80)
    s = [ 0 ].concat(s);

  r = rmPadding(r);
  s = rmPadding(s);

  while (!s[0] && !(s[1] & 0x80)) {
    s = s.slice(1);
  }
  var arr = [ 0x02 ];
  constructLength(arr, r.length);
  arr = arr.concat(r);
  arr.push(0x02);
  constructLength(arr, s.length);
  var backHalf = arr.concat(s);
  var res = [ 0x30 ];
  constructLength(res, backHalf.length);
  res = res.concat(backHalf);
  return utils.encode(res, enc);
};


/***/ }),

/***/ "./node_modules/.6.4.1@elliptic/lib/elliptic/eddsa/index.js":
/*!******************************************************************!*\
  !*** ./node_modules/.6.4.1@elliptic/lib/elliptic/eddsa/index.js ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var hash = __webpack_require__(/*! hash.js */ "./node_modules/.1.1.7@hash.js/lib/hash.js");
var elliptic = __webpack_require__(/*! ../../elliptic */ "./node_modules/.6.4.1@elliptic/lib/elliptic.js");
var utils = elliptic.utils;
var assert = utils.assert;
var parseBytes = utils.parseBytes;
var KeyPair = __webpack_require__(/*! ./key */ "./node_modules/.6.4.1@elliptic/lib/elliptic/eddsa/key.js");
var Signature = __webpack_require__(/*! ./signature */ "./node_modules/.6.4.1@elliptic/lib/elliptic/eddsa/signature.js");

function EDDSA(curve) {
  assert(curve === 'ed25519', 'only tested with ed25519 so far');

  if (!(this instanceof EDDSA))
    return new EDDSA(curve);

  var curve = elliptic.curves[curve].curve;
  this.curve = curve;
  this.g = curve.g;
  this.g.precompute(curve.n.bitLength() + 1);

  this.pointClass = curve.point().constructor;
  this.encodingLength = Math.ceil(curve.n.bitLength() / 8);
  this.hash = hash.sha512;
}

module.exports = EDDSA;

/**
* @param {Array|String} message - message bytes
* @param {Array|String|KeyPair} secret - secret bytes or a keypair
* @returns {Signature} - signature
*/
EDDSA.prototype.sign = function sign(message, secret) {
  message = parseBytes(message);
  var key = this.keyFromSecret(secret);
  var r = this.hashInt(key.messagePrefix(), message);
  var R = this.g.mul(r);
  var Rencoded = this.encodePoint(R);
  var s_ = this.hashInt(Rencoded, key.pubBytes(), message)
               .mul(key.priv());
  var S = r.add(s_).umod(this.curve.n);
  return this.makeSignature({ R: R, S: S, Rencoded: Rencoded });
};

/**
* @param {Array} message - message bytes
* @param {Array|String|Signature} sig - sig bytes
* @param {Array|String|Point|KeyPair} pub - public key
* @returns {Boolean} - true if public key matches sig of message
*/
EDDSA.prototype.verify = function verify(message, sig, pub) {
  message = parseBytes(message);
  sig = this.makeSignature(sig);
  var key = this.keyFromPublic(pub);
  var h = this.hashInt(sig.Rencoded(), key.pubBytes(), message);
  var SG = this.g.mul(sig.S());
  var RplusAh = sig.R().add(key.pub().mul(h));
  return RplusAh.eq(SG);
};

EDDSA.prototype.hashInt = function hashInt() {
  var hash = this.hash();
  for (var i = 0; i < arguments.length; i++)
    hash.update(arguments[i]);
  return utils.intFromLE(hash.digest()).umod(this.curve.n);
};

EDDSA.prototype.keyFromPublic = function keyFromPublic(pub) {
  return KeyPair.fromPublic(this, pub);
};

EDDSA.prototype.keyFromSecret = function keyFromSecret(secret) {
  return KeyPair.fromSecret(this, secret);
};

EDDSA.prototype.makeSignature = function makeSignature(sig) {
  if (sig instanceof Signature)
    return sig;
  return new Signature(this, sig);
};

/**
* * https://tools.ietf.org/html/draft-josefsson-eddsa-ed25519-03#section-5.2
*
* EDDSA defines methods for encoding and decoding points and integers. These are
* helper convenience methods, that pass along to utility functions implied
* parameters.
*
*/
EDDSA.prototype.encodePoint = function encodePoint(point) {
  var enc = point.getY().toArray('le', this.encodingLength);
  enc[this.encodingLength - 1] |= point.getX().isOdd() ? 0x80 : 0;
  return enc;
};

EDDSA.prototype.decodePoint = function decodePoint(bytes) {
  bytes = utils.parseBytes(bytes);

  var lastIx = bytes.length - 1;
  var normed = bytes.slice(0, lastIx).concat(bytes[lastIx] & ~0x80);
  var xIsOdd = (bytes[lastIx] & 0x80) !== 0;

  var y = utils.intFromLE(normed);
  return this.curve.pointFromY(y, xIsOdd);
};

EDDSA.prototype.encodeInt = function encodeInt(num) {
  return num.toArray('le', this.encodingLength);
};

EDDSA.prototype.decodeInt = function decodeInt(bytes) {
  return utils.intFromLE(bytes);
};

EDDSA.prototype.isPoint = function isPoint(val) {
  return val instanceof this.pointClass;
};


/***/ }),

/***/ "./node_modules/.6.4.1@elliptic/lib/elliptic/eddsa/key.js":
/*!****************************************************************!*\
  !*** ./node_modules/.6.4.1@elliptic/lib/elliptic/eddsa/key.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var elliptic = __webpack_require__(/*! ../../elliptic */ "./node_modules/.6.4.1@elliptic/lib/elliptic.js");
var utils = elliptic.utils;
var assert = utils.assert;
var parseBytes = utils.parseBytes;
var cachedProperty = utils.cachedProperty;

/**
* @param {EDDSA} eddsa - instance
* @param {Object} params - public/private key parameters
*
* @param {Array<Byte>} [params.secret] - secret seed bytes
* @param {Point} [params.pub] - public key point (aka `A` in eddsa terms)
* @param {Array<Byte>} [params.pub] - public key point encoded as bytes
*
*/
function KeyPair(eddsa, params) {
  this.eddsa = eddsa;
  this._secret = parseBytes(params.secret);
  if (eddsa.isPoint(params.pub))
    this._pub = params.pub;
  else
    this._pubBytes = parseBytes(params.pub);
}

KeyPair.fromPublic = function fromPublic(eddsa, pub) {
  if (pub instanceof KeyPair)
    return pub;
  return new KeyPair(eddsa, { pub: pub });
};

KeyPair.fromSecret = function fromSecret(eddsa, secret) {
  if (secret instanceof KeyPair)
    return secret;
  return new KeyPair(eddsa, { secret: secret });
};

KeyPair.prototype.secret = function secret() {
  return this._secret;
};

cachedProperty(KeyPair, 'pubBytes', function pubBytes() {
  return this.eddsa.encodePoint(this.pub());
});

cachedProperty(KeyPair, 'pub', function pub() {
  if (this._pubBytes)
    return this.eddsa.decodePoint(this._pubBytes);
  return this.eddsa.g.mul(this.priv());
});

cachedProperty(KeyPair, 'privBytes', function privBytes() {
  var eddsa = this.eddsa;
  var hash = this.hash();
  var lastIx = eddsa.encodingLength - 1;

  var a = hash.slice(0, eddsa.encodingLength);
  a[0] &= 248;
  a[lastIx] &= 127;
  a[lastIx] |= 64;

  return a;
});

cachedProperty(KeyPair, 'priv', function priv() {
  return this.eddsa.decodeInt(this.privBytes());
});

cachedProperty(KeyPair, 'hash', function hash() {
  return this.eddsa.hash().update(this.secret()).digest();
});

cachedProperty(KeyPair, 'messagePrefix', function messagePrefix() {
  return this.hash().slice(this.eddsa.encodingLength);
});

KeyPair.prototype.sign = function sign(message) {
  assert(this._secret, 'KeyPair can only verify');
  return this.eddsa.sign(message, this);
};

KeyPair.prototype.verify = function verify(message, sig) {
  return this.eddsa.verify(message, sig, this);
};

KeyPair.prototype.getSecret = function getSecret(enc) {
  assert(this._secret, 'KeyPair is public only');
  return utils.encode(this.secret(), enc);
};

KeyPair.prototype.getPublic = function getPublic(enc) {
  return utils.encode(this.pubBytes(), enc);
};

module.exports = KeyPair;


/***/ }),

/***/ "./node_modules/.6.4.1@elliptic/lib/elliptic/eddsa/signature.js":
/*!**********************************************************************!*\
  !*** ./node_modules/.6.4.1@elliptic/lib/elliptic/eddsa/signature.js ***!
  \**********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var BN = __webpack_require__(/*! bn.js */ "./node_modules/.4.11.8@bn.js/lib/bn.js");
var elliptic = __webpack_require__(/*! ../../elliptic */ "./node_modules/.6.4.1@elliptic/lib/elliptic.js");
var utils = elliptic.utils;
var assert = utils.assert;
var cachedProperty = utils.cachedProperty;
var parseBytes = utils.parseBytes;

/**
* @param {EDDSA} eddsa - eddsa instance
* @param {Array<Bytes>|Object} sig -
* @param {Array<Bytes>|Point} [sig.R] - R point as Point or bytes
* @param {Array<Bytes>|bn} [sig.S] - S scalar as bn or bytes
* @param {Array<Bytes>} [sig.Rencoded] - R point encoded
* @param {Array<Bytes>} [sig.Sencoded] - S scalar encoded
*/
function Signature(eddsa, sig) {
  this.eddsa = eddsa;

  if (typeof sig !== 'object')
    sig = parseBytes(sig);

  if (Array.isArray(sig)) {
    sig = {
      R: sig.slice(0, eddsa.encodingLength),
      S: sig.slice(eddsa.encodingLength)
    };
  }

  assert(sig.R && sig.S, 'Signature without R or S');

  if (eddsa.isPoint(sig.R))
    this._R = sig.R;
  if (sig.S instanceof BN)
    this._S = sig.S;

  this._Rencoded = Array.isArray(sig.R) ? sig.R : sig.Rencoded;
  this._Sencoded = Array.isArray(sig.S) ? sig.S : sig.Sencoded;
}

cachedProperty(Signature, 'S', function S() {
  return this.eddsa.decodeInt(this.Sencoded());
});

cachedProperty(Signature, 'R', function R() {
  return this.eddsa.decodePoint(this.Rencoded());
});

cachedProperty(Signature, 'Rencoded', function Rencoded() {
  return this.eddsa.encodePoint(this.R());
});

cachedProperty(Signature, 'Sencoded', function Sencoded() {
  return this.eddsa.encodeInt(this.S());
});

Signature.prototype.toBytes = function toBytes() {
  return this.Rencoded().concat(this.Sencoded());
};

Signature.prototype.toHex = function toHex() {
  return utils.encode(this.toBytes(), 'hex').toUpperCase();
};

module.exports = Signature;


/***/ }),

/***/ "./node_modules/.6.4.1@elliptic/lib/elliptic/precomputed/secp256k1.js":
/*!****************************************************************************!*\
  !*** ./node_modules/.6.4.1@elliptic/lib/elliptic/precomputed/secp256k1.js ***!
  \****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = {
  doubles: {
    step: 4,
    points: [
      [
        'e60fce93b59e9ec53011aabc21c23e97b2a31369b87a5ae9c44ee89e2a6dec0a',
        'f7e3507399e595929db99f34f57937101296891e44d23f0be1f32cce69616821'
      ],
      [
        '8282263212c609d9ea2a6e3e172de238d8c39cabd5ac1ca10646e23fd5f51508',
        '11f8a8098557dfe45e8256e830b60ace62d613ac2f7b17bed31b6eaff6e26caf'
      ],
      [
        '175e159f728b865a72f99cc6c6fc846de0b93833fd2222ed73fce5b551e5b739',
        'd3506e0d9e3c79eba4ef97a51ff71f5eacb5955add24345c6efa6ffee9fed695'
      ],
      [
        '363d90d447b00c9c99ceac05b6262ee053441c7e55552ffe526bad8f83ff4640',
        '4e273adfc732221953b445397f3363145b9a89008199ecb62003c7f3bee9de9'
      ],
      [
        '8b4b5f165df3c2be8c6244b5b745638843e4a781a15bcd1b69f79a55dffdf80c',
        '4aad0a6f68d308b4b3fbd7813ab0da04f9e336546162ee56b3eff0c65fd4fd36'
      ],
      [
        '723cbaa6e5db996d6bf771c00bd548c7b700dbffa6c0e77bcb6115925232fcda',
        '96e867b5595cc498a921137488824d6e2660a0653779494801dc069d9eb39f5f'
      ],
      [
        'eebfa4d493bebf98ba5feec812c2d3b50947961237a919839a533eca0e7dd7fa',
        '5d9a8ca3970ef0f269ee7edaf178089d9ae4cdc3a711f712ddfd4fdae1de8999'
      ],
      [
        '100f44da696e71672791d0a09b7bde459f1215a29b3c03bfefd7835b39a48db0',
        'cdd9e13192a00b772ec8f3300c090666b7ff4a18ff5195ac0fbd5cd62bc65a09'
      ],
      [
        'e1031be262c7ed1b1dc9227a4a04c017a77f8d4464f3b3852c8acde6e534fd2d',
        '9d7061928940405e6bb6a4176597535af292dd419e1ced79a44f18f29456a00d'
      ],
      [
        'feea6cae46d55b530ac2839f143bd7ec5cf8b266a41d6af52d5e688d9094696d',
        'e57c6b6c97dce1bab06e4e12bf3ecd5c981c8957cc41442d3155debf18090088'
      ],
      [
        'da67a91d91049cdcb367be4be6ffca3cfeed657d808583de33fa978bc1ec6cb1',
        '9bacaa35481642bc41f463f7ec9780e5dec7adc508f740a17e9ea8e27a68be1d'
      ],
      [
        '53904faa0b334cdda6e000935ef22151ec08d0f7bb11069f57545ccc1a37b7c0',
        '5bc087d0bc80106d88c9eccac20d3c1c13999981e14434699dcb096b022771c8'
      ],
      [
        '8e7bcd0bd35983a7719cca7764ca906779b53a043a9b8bcaeff959f43ad86047',
        '10b7770b2a3da4b3940310420ca9514579e88e2e47fd68b3ea10047e8460372a'
      ],
      [
        '385eed34c1cdff21e6d0818689b81bde71a7f4f18397e6690a841e1599c43862',
        '283bebc3e8ea23f56701de19e9ebf4576b304eec2086dc8cc0458fe5542e5453'
      ],
      [
        '6f9d9b803ecf191637c73a4413dfa180fddf84a5947fbc9c606ed86c3fac3a7',
        '7c80c68e603059ba69b8e2a30e45c4d47ea4dd2f5c281002d86890603a842160'
      ],
      [
        '3322d401243c4e2582a2147c104d6ecbf774d163db0f5e5313b7e0e742d0e6bd',
        '56e70797e9664ef5bfb019bc4ddaf9b72805f63ea2873af624f3a2e96c28b2a0'
      ],
      [
        '85672c7d2de0b7da2bd1770d89665868741b3f9af7643397721d74d28134ab83',
        '7c481b9b5b43b2eb6374049bfa62c2e5e77f17fcc5298f44c8e3094f790313a6'
      ],
      [
        '948bf809b1988a46b06c9f1919413b10f9226c60f668832ffd959af60c82a0a',
        '53a562856dcb6646dc6b74c5d1c3418c6d4dff08c97cd2bed4cb7f88d8c8e589'
      ],
      [
        '6260ce7f461801c34f067ce0f02873a8f1b0e44dfc69752accecd819f38fd8e8',
        'bc2da82b6fa5b571a7f09049776a1ef7ecd292238051c198c1a84e95b2b4ae17'
      ],
      [
        'e5037de0afc1d8d43d8348414bbf4103043ec8f575bfdc432953cc8d2037fa2d',
        '4571534baa94d3b5f9f98d09fb990bddbd5f5b03ec481f10e0e5dc841d755bda'
      ],
      [
        'e06372b0f4a207adf5ea905e8f1771b4e7e8dbd1c6a6c5b725866a0ae4fce725',
        '7a908974bce18cfe12a27bb2ad5a488cd7484a7787104870b27034f94eee31dd'
      ],
      [
        '213c7a715cd5d45358d0bbf9dc0ce02204b10bdde2a3f58540ad6908d0559754',
        '4b6dad0b5ae462507013ad06245ba190bb4850f5f36a7eeddff2c27534b458f2'
      ],
      [
        '4e7c272a7af4b34e8dbb9352a5419a87e2838c70adc62cddf0cc3a3b08fbd53c',
        '17749c766c9d0b18e16fd09f6def681b530b9614bff7dd33e0b3941817dcaae6'
      ],
      [
        'fea74e3dbe778b1b10f238ad61686aa5c76e3db2be43057632427e2840fb27b6',
        '6e0568db9b0b13297cf674deccb6af93126b596b973f7b77701d3db7f23cb96f'
      ],
      [
        '76e64113f677cf0e10a2570d599968d31544e179b760432952c02a4417bdde39',
        'c90ddf8dee4e95cf577066d70681f0d35e2a33d2b56d2032b4b1752d1901ac01'
      ],
      [
        'c738c56b03b2abe1e8281baa743f8f9a8f7cc643df26cbee3ab150242bcbb891',
        '893fb578951ad2537f718f2eacbfbbbb82314eef7880cfe917e735d9699a84c3'
      ],
      [
        'd895626548b65b81e264c7637c972877d1d72e5f3a925014372e9f6588f6c14b',
        'febfaa38f2bc7eae728ec60818c340eb03428d632bb067e179363ed75d7d991f'
      ],
      [
        'b8da94032a957518eb0f6433571e8761ceffc73693e84edd49150a564f676e03',
        '2804dfa44805a1e4d7c99cc9762808b092cc584d95ff3b511488e4e74efdf6e7'
      ],
      [
        'e80fea14441fb33a7d8adab9475d7fab2019effb5156a792f1a11778e3c0df5d',
        'eed1de7f638e00771e89768ca3ca94472d155e80af322ea9fcb4291b6ac9ec78'
      ],
      [
        'a301697bdfcd704313ba48e51d567543f2a182031efd6915ddc07bbcc4e16070',
        '7370f91cfb67e4f5081809fa25d40f9b1735dbf7c0a11a130c0d1a041e177ea1'
      ],
      [
        '90ad85b389d6b936463f9d0512678de208cc330b11307fffab7ac63e3fb04ed4',
        'e507a3620a38261affdcbd9427222b839aefabe1582894d991d4d48cb6ef150'
      ],
      [
        '8f68b9d2f63b5f339239c1ad981f162ee88c5678723ea3351b7b444c9ec4c0da',
        '662a9f2dba063986de1d90c2b6be215dbbea2cfe95510bfdf23cbf79501fff82'
      ],
      [
        'e4f3fb0176af85d65ff99ff9198c36091f48e86503681e3e6686fd5053231e11',
        '1e63633ad0ef4f1c1661a6d0ea02b7286cc7e74ec951d1c9822c38576feb73bc'
      ],
      [
        '8c00fa9b18ebf331eb961537a45a4266c7034f2f0d4e1d0716fb6eae20eae29e',
        'efa47267fea521a1a9dc343a3736c974c2fadafa81e36c54e7d2a4c66702414b'
      ],
      [
        'e7a26ce69dd4829f3e10cec0a9e98ed3143d084f308b92c0997fddfc60cb3e41',
        '2a758e300fa7984b471b006a1aafbb18d0a6b2c0420e83e20e8a9421cf2cfd51'
      ],
      [
        'b6459e0ee3662ec8d23540c223bcbdc571cbcb967d79424f3cf29eb3de6b80ef',
        '67c876d06f3e06de1dadf16e5661db3c4b3ae6d48e35b2ff30bf0b61a71ba45'
      ],
      [
        'd68a80c8280bb840793234aa118f06231d6f1fc67e73c5a5deda0f5b496943e8',
        'db8ba9fff4b586d00c4b1f9177b0e28b5b0e7b8f7845295a294c84266b133120'
      ],
      [
        '324aed7df65c804252dc0270907a30b09612aeb973449cea4095980fc28d3d5d',
        '648a365774b61f2ff130c0c35aec1f4f19213b0c7e332843967224af96ab7c84'
      ],
      [
        '4df9c14919cde61f6d51dfdbe5fee5dceec4143ba8d1ca888e8bd373fd054c96',
        '35ec51092d8728050974c23a1d85d4b5d506cdc288490192ebac06cad10d5d'
      ],
      [
        '9c3919a84a474870faed8a9c1cc66021523489054d7f0308cbfc99c8ac1f98cd',
        'ddb84f0f4a4ddd57584f044bf260e641905326f76c64c8e6be7e5e03d4fc599d'
      ],
      [
        '6057170b1dd12fdf8de05f281d8e06bb91e1493a8b91d4cc5a21382120a959e5',
        '9a1af0b26a6a4807add9a2daf71df262465152bc3ee24c65e899be932385a2a8'
      ],
      [
        'a576df8e23a08411421439a4518da31880cef0fba7d4df12b1a6973eecb94266',
        '40a6bf20e76640b2c92b97afe58cd82c432e10a7f514d9f3ee8be11ae1b28ec8'
      ],
      [
        '7778a78c28dec3e30a05fe9629de8c38bb30d1f5cf9a3a208f763889be58ad71',
        '34626d9ab5a5b22ff7098e12f2ff580087b38411ff24ac563b513fc1fd9f43ac'
      ],
      [
        '928955ee637a84463729fd30e7afd2ed5f96274e5ad7e5cb09eda9c06d903ac',
        'c25621003d3f42a827b78a13093a95eeac3d26efa8a8d83fc5180e935bcd091f'
      ],
      [
        '85d0fef3ec6db109399064f3a0e3b2855645b4a907ad354527aae75163d82751',
        '1f03648413a38c0be29d496e582cf5663e8751e96877331582c237a24eb1f962'
      ],
      [
        'ff2b0dce97eece97c1c9b6041798b85dfdfb6d8882da20308f5404824526087e',
        '493d13fef524ba188af4c4dc54d07936c7b7ed6fb90e2ceb2c951e01f0c29907'
      ],
      [
        '827fbbe4b1e880ea9ed2b2e6301b212b57f1ee148cd6dd28780e5e2cf856e241',
        'c60f9c923c727b0b71bef2c67d1d12687ff7a63186903166d605b68baec293ec'
      ],
      [
        'eaa649f21f51bdbae7be4ae34ce6e5217a58fdce7f47f9aa7f3b58fa2120e2b3',
        'be3279ed5bbbb03ac69a80f89879aa5a01a6b965f13f7e59d47a5305ba5ad93d'
      ],
      [
        'e4a42d43c5cf169d9391df6decf42ee541b6d8f0c9a137401e23632dda34d24f',
        '4d9f92e716d1c73526fc99ccfb8ad34ce886eedfa8d8e4f13a7f7131deba9414'
      ],
      [
        '1ec80fef360cbdd954160fadab352b6b92b53576a88fea4947173b9d4300bf19',
        'aeefe93756b5340d2f3a4958a7abbf5e0146e77f6295a07b671cdc1cc107cefd'
      ],
      [
        '146a778c04670c2f91b00af4680dfa8bce3490717d58ba889ddb5928366642be',
        'b318e0ec3354028add669827f9d4b2870aaa971d2f7e5ed1d0b297483d83efd0'
      ],
      [
        'fa50c0f61d22e5f07e3acebb1aa07b128d0012209a28b9776d76a8793180eef9',
        '6b84c6922397eba9b72cd2872281a68a5e683293a57a213b38cd8d7d3f4f2811'
      ],
      [
        'da1d61d0ca721a11b1a5bf6b7d88e8421a288ab5d5bba5220e53d32b5f067ec2',
        '8157f55a7c99306c79c0766161c91e2966a73899d279b48a655fba0f1ad836f1'
      ],
      [
        'a8e282ff0c9706907215ff98e8fd416615311de0446f1e062a73b0610d064e13',
        '7f97355b8db81c09abfb7f3c5b2515888b679a3e50dd6bd6cef7c73111f4cc0c'
      ],
      [
        '174a53b9c9a285872d39e56e6913cab15d59b1fa512508c022f382de8319497c',
        'ccc9dc37abfc9c1657b4155f2c47f9e6646b3a1d8cb9854383da13ac079afa73'
      ],
      [
        '959396981943785c3d3e57edf5018cdbe039e730e4918b3d884fdff09475b7ba',
        '2e7e552888c331dd8ba0386a4b9cd6849c653f64c8709385e9b8abf87524f2fd'
      ],
      [
        'd2a63a50ae401e56d645a1153b109a8fcca0a43d561fba2dbb51340c9d82b151',
        'e82d86fb6443fcb7565aee58b2948220a70f750af484ca52d4142174dcf89405'
      ],
      [
        '64587e2335471eb890ee7896d7cfdc866bacbdbd3839317b3436f9b45617e073',
        'd99fcdd5bf6902e2ae96dd6447c299a185b90a39133aeab358299e5e9faf6589'
      ],
      [
        '8481bde0e4e4d885b3a546d3e549de042f0aa6cea250e7fd358d6c86dd45e458',
        '38ee7b8cba5404dd84a25bf39cecb2ca900a79c42b262e556d64b1b59779057e'
      ],
      [
        '13464a57a78102aa62b6979ae817f4637ffcfed3c4b1ce30bcd6303f6caf666b',
        '69be159004614580ef7e433453ccb0ca48f300a81d0942e13f495a907f6ecc27'
      ],
      [
        'bc4a9df5b713fe2e9aef430bcc1dc97a0cd9ccede2f28588cada3a0d2d83f366',
        'd3a81ca6e785c06383937adf4b798caa6e8a9fbfa547b16d758d666581f33c1'
      ],
      [
        '8c28a97bf8298bc0d23d8c749452a32e694b65e30a9472a3954ab30fe5324caa',
        '40a30463a3305193378fedf31f7cc0eb7ae784f0451cb9459e71dc73cbef9482'
      ],
      [
        '8ea9666139527a8c1dd94ce4f071fd23c8b350c5a4bb33748c4ba111faccae0',
        '620efabbc8ee2782e24e7c0cfb95c5d735b783be9cf0f8e955af34a30e62b945'
      ],
      [
        'dd3625faef5ba06074669716bbd3788d89bdde815959968092f76cc4eb9a9787',
        '7a188fa3520e30d461da2501045731ca941461982883395937f68d00c644a573'
      ],
      [
        'f710d79d9eb962297e4f6232b40e8f7feb2bc63814614d692c12de752408221e',
        'ea98e67232d3b3295d3b535532115ccac8612c721851617526ae47a9c77bfc82'
      ]
    ]
  },
  naf: {
    wnd: 7,
    points: [
      [
        'f9308a019258c31049344f85f89d5229b531c845836f99b08601f113bce036f9',
        '388f7b0f632de8140fe337e62a37f3566500a99934c2231b6cb9fd7584b8e672'
      ],
      [
        '2f8bde4d1a07209355b4a7250a5c5128e88b84bddc619ab7cba8d569b240efe4',
        'd8ac222636e5e3d6d4dba9dda6c9c426f788271bab0d6840dca87d3aa6ac62d6'
      ],
      [
        '5cbdf0646e5db4eaa398f365f2ea7a0e3d419b7e0330e39ce92bddedcac4f9bc',
        '6aebca40ba255960a3178d6d861a54dba813d0b813fde7b5a5082628087264da'
      ],
      [
        'acd484e2f0c7f65309ad178a9f559abde09796974c57e714c35f110dfc27ccbe',
        'cc338921b0a7d9fd64380971763b61e9add888a4375f8e0f05cc262ac64f9c37'
      ],
      [
        '774ae7f858a9411e5ef4246b70c65aac5649980be5c17891bbec17895da008cb',
        'd984a032eb6b5e190243dd56d7b7b365372db1e2dff9d6a8301d74c9c953c61b'
      ],
      [
        'f28773c2d975288bc7d1d205c3748651b075fbc6610e58cddeeddf8f19405aa8',
        'ab0902e8d880a89758212eb65cdaf473a1a06da521fa91f29b5cb52db03ed81'
      ],
      [
        'd7924d4f7d43ea965a465ae3095ff41131e5946f3c85f79e44adbcf8e27e080e',
        '581e2872a86c72a683842ec228cc6defea40af2bd896d3a5c504dc9ff6a26b58'
      ],
      [
        'defdea4cdb677750a420fee807eacf21eb9898ae79b9768766e4faa04a2d4a34',
        '4211ab0694635168e997b0ead2a93daeced1f4a04a95c0f6cfb199f69e56eb77'
      ],
      [
        '2b4ea0a797a443d293ef5cff444f4979f06acfebd7e86d277475656138385b6c',
        '85e89bc037945d93b343083b5a1c86131a01f60c50269763b570c854e5c09b7a'
      ],
      [
        '352bbf4a4cdd12564f93fa332ce333301d9ad40271f8107181340aef25be59d5',
        '321eb4075348f534d59c18259dda3e1f4a1b3b2e71b1039c67bd3d8bcf81998c'
      ],
      [
        '2fa2104d6b38d11b0230010559879124e42ab8dfeff5ff29dc9cdadd4ecacc3f',
        '2de1068295dd865b64569335bd5dd80181d70ecfc882648423ba76b532b7d67'
      ],
      [
        '9248279b09b4d68dab21a9b066edda83263c3d84e09572e269ca0cd7f5453714',
        '73016f7bf234aade5d1aa71bdea2b1ff3fc0de2a887912ffe54a32ce97cb3402'
      ],
      [
        'daed4f2be3a8bf278e70132fb0beb7522f570e144bf615c07e996d443dee8729',
        'a69dce4a7d6c98e8d4a1aca87ef8d7003f83c230f3afa726ab40e52290be1c55'
      ],
      [
        'c44d12c7065d812e8acf28d7cbb19f9011ecd9e9fdf281b0e6a3b5e87d22e7db',
        '2119a460ce326cdc76c45926c982fdac0e106e861edf61c5a039063f0e0e6482'
      ],
      [
        '6a245bf6dc698504c89a20cfded60853152b695336c28063b61c65cbd269e6b4',
        'e022cf42c2bd4a708b3f5126f16a24ad8b33ba48d0423b6efd5e6348100d8a82'
      ],
      [
        '1697ffa6fd9de627c077e3d2fe541084ce13300b0bec1146f95ae57f0d0bd6a5',
        'b9c398f186806f5d27561506e4557433a2cf15009e498ae7adee9d63d01b2396'
      ],
      [
        '605bdb019981718b986d0f07e834cb0d9deb8360ffb7f61df982345ef27a7479',
        '2972d2de4f8d20681a78d93ec96fe23c26bfae84fb14db43b01e1e9056b8c49'
      ],
      [
        '62d14dab4150bf497402fdc45a215e10dcb01c354959b10cfe31c7e9d87ff33d',
        '80fc06bd8cc5b01098088a1950eed0db01aa132967ab472235f5642483b25eaf'
      ],
      [
        '80c60ad0040f27dade5b4b06c408e56b2c50e9f56b9b8b425e555c2f86308b6f',
        '1c38303f1cc5c30f26e66bad7fe72f70a65eed4cbe7024eb1aa01f56430bd57a'
      ],
      [
        '7a9375ad6167ad54aa74c6348cc54d344cc5dc9487d847049d5eabb0fa03c8fb',
        'd0e3fa9eca8726909559e0d79269046bdc59ea10c70ce2b02d499ec224dc7f7'
      ],
      [
        'd528ecd9b696b54c907a9ed045447a79bb408ec39b68df504bb51f459bc3ffc9',
        'eecf41253136e5f99966f21881fd656ebc4345405c520dbc063465b521409933'
      ],
      [
        '49370a4b5f43412ea25f514e8ecdad05266115e4a7ecb1387231808f8b45963',
        '758f3f41afd6ed428b3081b0512fd62a54c3f3afbb5b6764b653052a12949c9a'
      ],
      [
        '77f230936ee88cbbd73df930d64702ef881d811e0e1498e2f1c13eb1fc345d74',
        '958ef42a7886b6400a08266e9ba1b37896c95330d97077cbbe8eb3c7671c60d6'
      ],
      [
        'f2dac991cc4ce4b9ea44887e5c7c0bce58c80074ab9d4dbaeb28531b7739f530',
        'e0dedc9b3b2f8dad4da1f32dec2531df9eb5fbeb0598e4fd1a117dba703a3c37'
      ],
      [
        '463b3d9f662621fb1b4be8fbbe2520125a216cdfc9dae3debcba4850c690d45b',
        '5ed430d78c296c3543114306dd8622d7c622e27c970a1de31cb377b01af7307e'
      ],
      [
        'f16f804244e46e2a09232d4aff3b59976b98fac14328a2d1a32496b49998f247',
        'cedabd9b82203f7e13d206fcdf4e33d92a6c53c26e5cce26d6579962c4e31df6'
      ],
      [
        'caf754272dc84563b0352b7a14311af55d245315ace27c65369e15f7151d41d1',
        'cb474660ef35f5f2a41b643fa5e460575f4fa9b7962232a5c32f908318a04476'
      ],
      [
        '2600ca4b282cb986f85d0f1709979d8b44a09c07cb86d7c124497bc86f082120',
        '4119b88753c15bd6a693b03fcddbb45d5ac6be74ab5f0ef44b0be9475a7e4b40'
      ],
      [
        '7635ca72d7e8432c338ec53cd12220bc01c48685e24f7dc8c602a7746998e435',
        '91b649609489d613d1d5e590f78e6d74ecfc061d57048bad9e76f302c5b9c61'
      ],
      [
        '754e3239f325570cdbbf4a87deee8a66b7f2b33479d468fbc1a50743bf56cc18',
        '673fb86e5bda30fb3cd0ed304ea49a023ee33d0197a695d0c5d98093c536683'
      ],
      [
        'e3e6bd1071a1e96aff57859c82d570f0330800661d1c952f9fe2694691d9b9e8',
        '59c9e0bba394e76f40c0aa58379a3cb6a5a2283993e90c4167002af4920e37f5'
      ],
      [
        '186b483d056a033826ae73d88f732985c4ccb1f32ba35f4b4cc47fdcf04aa6eb',
        '3b952d32c67cf77e2e17446e204180ab21fb8090895138b4a4a797f86e80888b'
      ],
      [
        'df9d70a6b9876ce544c98561f4be4f725442e6d2b737d9c91a8321724ce0963f',
        '55eb2dafd84d6ccd5f862b785dc39d4ab157222720ef9da217b8c45cf2ba2417'
      ],
      [
        '5edd5cc23c51e87a497ca815d5dce0f8ab52554f849ed8995de64c5f34ce7143',
        'efae9c8dbc14130661e8cec030c89ad0c13c66c0d17a2905cdc706ab7399a868'
      ],
      [
        '290798c2b6476830da12fe02287e9e777aa3fba1c355b17a722d362f84614fba',
        'e38da76dcd440621988d00bcf79af25d5b29c094db2a23146d003afd41943e7a'
      ],
      [
        'af3c423a95d9f5b3054754efa150ac39cd29552fe360257362dfdecef4053b45',
        'f98a3fd831eb2b749a93b0e6f35cfb40c8cd5aa667a15581bc2feded498fd9c6'
      ],
      [
        '766dbb24d134e745cccaa28c99bf274906bb66b26dcf98df8d2fed50d884249a',
        '744b1152eacbe5e38dcc887980da38b897584a65fa06cedd2c924f97cbac5996'
      ],
      [
        '59dbf46f8c94759ba21277c33784f41645f7b44f6c596a58ce92e666191abe3e',
        'c534ad44175fbc300f4ea6ce648309a042ce739a7919798cd85e216c4a307f6e'
      ],
      [
        'f13ada95103c4537305e691e74e9a4a8dd647e711a95e73cb62dc6018cfd87b8',
        'e13817b44ee14de663bf4bc808341f326949e21a6a75c2570778419bdaf5733d'
      ],
      [
        '7754b4fa0e8aced06d4167a2c59cca4cda1869c06ebadfb6488550015a88522c',
        '30e93e864e669d82224b967c3020b8fa8d1e4e350b6cbcc537a48b57841163a2'
      ],
      [
        '948dcadf5990e048aa3874d46abef9d701858f95de8041d2a6828c99e2262519',
        'e491a42537f6e597d5d28a3224b1bc25df9154efbd2ef1d2cbba2cae5347d57e'
      ],
      [
        '7962414450c76c1689c7b48f8202ec37fb224cf5ac0bfa1570328a8a3d7c77ab',
        '100b610ec4ffb4760d5c1fc133ef6f6b12507a051f04ac5760afa5b29db83437'
      ],
      [
        '3514087834964b54b15b160644d915485a16977225b8847bb0dd085137ec47ca',
        'ef0afbb2056205448e1652c48e8127fc6039e77c15c2378b7e7d15a0de293311'
      ],
      [
        'd3cc30ad6b483e4bc79ce2c9dd8bc54993e947eb8df787b442943d3f7b527eaf',
        '8b378a22d827278d89c5e9be8f9508ae3c2ad46290358630afb34db04eede0a4'
      ],
      [
        '1624d84780732860ce1c78fcbfefe08b2b29823db913f6493975ba0ff4847610',
        '68651cf9b6da903e0914448c6cd9d4ca896878f5282be4c8cc06e2a404078575'
      ],
      [
        '733ce80da955a8a26902c95633e62a985192474b5af207da6df7b4fd5fc61cd4',
        'f5435a2bd2badf7d485a4d8b8db9fcce3e1ef8e0201e4578c54673bc1dc5ea1d'
      ],
      [
        '15d9441254945064cf1a1c33bbd3b49f8966c5092171e699ef258dfab81c045c',
        'd56eb30b69463e7234f5137b73b84177434800bacebfc685fc37bbe9efe4070d'
      ],
      [
        'a1d0fcf2ec9de675b612136e5ce70d271c21417c9d2b8aaaac138599d0717940',
        'edd77f50bcb5a3cab2e90737309667f2641462a54070f3d519212d39c197a629'
      ],
      [
        'e22fbe15c0af8ccc5780c0735f84dbe9a790badee8245c06c7ca37331cb36980',
        'a855babad5cd60c88b430a69f53a1a7a38289154964799be43d06d77d31da06'
      ],
      [
        '311091dd9860e8e20ee13473c1155f5f69635e394704eaa74009452246cfa9b3',
        '66db656f87d1f04fffd1f04788c06830871ec5a64feee685bd80f0b1286d8374'
      ],
      [
        '34c1fd04d301be89b31c0442d3e6ac24883928b45a9340781867d4232ec2dbdf',
        '9414685e97b1b5954bd46f730174136d57f1ceeb487443dc5321857ba73abee'
      ],
      [
        'f219ea5d6b54701c1c14de5b557eb42a8d13f3abbcd08affcc2a5e6b049b8d63',
        '4cb95957e83d40b0f73af4544cccf6b1f4b08d3c07b27fb8d8c2962a400766d1'
      ],
      [
        'd7b8740f74a8fbaab1f683db8f45de26543a5490bca627087236912469a0b448',
        'fa77968128d9c92ee1010f337ad4717eff15db5ed3c049b3411e0315eaa4593b'
      ],
      [
        '32d31c222f8f6f0ef86f7c98d3a3335ead5bcd32abdd94289fe4d3091aa824bf',
        '5f3032f5892156e39ccd3d7915b9e1da2e6dac9e6f26e961118d14b8462e1661'
      ],
      [
        '7461f371914ab32671045a155d9831ea8793d77cd59592c4340f86cbc18347b5',
        '8ec0ba238b96bec0cbdddcae0aa442542eee1ff50c986ea6b39847b3cc092ff6'
      ],
      [
        'ee079adb1df1860074356a25aa38206a6d716b2c3e67453d287698bad7b2b2d6',
        '8dc2412aafe3be5c4c5f37e0ecc5f9f6a446989af04c4e25ebaac479ec1c8c1e'
      ],
      [
        '16ec93e447ec83f0467b18302ee620f7e65de331874c9dc72bfd8616ba9da6b5',
        '5e4631150e62fb40d0e8c2a7ca5804a39d58186a50e497139626778e25b0674d'
      ],
      [
        'eaa5f980c245f6f038978290afa70b6bd8855897f98b6aa485b96065d537bd99',
        'f65f5d3e292c2e0819a528391c994624d784869d7e6ea67fb18041024edc07dc'
      ],
      [
        '78c9407544ac132692ee1910a02439958ae04877151342ea96c4b6b35a49f51',
        'f3e0319169eb9b85d5404795539a5e68fa1fbd583c064d2462b675f194a3ddb4'
      ],
      [
        '494f4be219a1a77016dcd838431aea0001cdc8ae7a6fc688726578d9702857a5',
        '42242a969283a5f339ba7f075e36ba2af925ce30d767ed6e55f4b031880d562c'
      ],
      [
        'a598a8030da6d86c6bc7f2f5144ea549d28211ea58faa70ebf4c1e665c1fe9b5',
        '204b5d6f84822c307e4b4a7140737aec23fc63b65b35f86a10026dbd2d864e6b'
      ],
      [
        'c41916365abb2b5d09192f5f2dbeafec208f020f12570a184dbadc3e58595997',
        '4f14351d0087efa49d245b328984989d5caf9450f34bfc0ed16e96b58fa9913'
      ],
      [
        '841d6063a586fa475a724604da03bc5b92a2e0d2e0a36acfe4c73a5514742881',
        '73867f59c0659e81904f9a1c7543698e62562d6744c169ce7a36de01a8d6154'
      ],
      [
        '5e95bb399a6971d376026947f89bde2f282b33810928be4ded112ac4d70e20d5',
        '39f23f366809085beebfc71181313775a99c9aed7d8ba38b161384c746012865'
      ],
      [
        '36e4641a53948fd476c39f8a99fd974e5ec07564b5315d8bf99471bca0ef2f66',
        'd2424b1b1abe4eb8164227b085c9aa9456ea13493fd563e06fd51cf5694c78fc'
      ],
      [
        '336581ea7bfbbb290c191a2f507a41cf5643842170e914faeab27c2c579f726',
        'ead12168595fe1be99252129b6e56b3391f7ab1410cd1e0ef3dcdcabd2fda224'
      ],
      [
        '8ab89816dadfd6b6a1f2634fcf00ec8403781025ed6890c4849742706bd43ede',
        '6fdcef09f2f6d0a044e654aef624136f503d459c3e89845858a47a9129cdd24e'
      ],
      [
        '1e33f1a746c9c5778133344d9299fcaa20b0938e8acff2544bb40284b8c5fb94',
        '60660257dd11b3aa9c8ed618d24edff2306d320f1d03010e33a7d2057f3b3b6'
      ],
      [
        '85b7c1dcb3cec1b7ee7f30ded79dd20a0ed1f4cc18cbcfcfa410361fd8f08f31',
        '3d98a9cdd026dd43f39048f25a8847f4fcafad1895d7a633c6fed3c35e999511'
      ],
      [
        '29df9fbd8d9e46509275f4b125d6d45d7fbe9a3b878a7af872a2800661ac5f51',
        'b4c4fe99c775a606e2d8862179139ffda61dc861c019e55cd2876eb2a27d84b'
      ],
      [
        'a0b1cae06b0a847a3fea6e671aaf8adfdfe58ca2f768105c8082b2e449fce252',
        'ae434102edde0958ec4b19d917a6a28e6b72da1834aff0e650f049503a296cf2'
      ],
      [
        '4e8ceafb9b3e9a136dc7ff67e840295b499dfb3b2133e4ba113f2e4c0e121e5',
        'cf2174118c8b6d7a4b48f6d534ce5c79422c086a63460502b827ce62a326683c'
      ],
      [
        'd24a44e047e19b6f5afb81c7ca2f69080a5076689a010919f42725c2b789a33b',
        '6fb8d5591b466f8fc63db50f1c0f1c69013f996887b8244d2cdec417afea8fa3'
      ],
      [
        'ea01606a7a6c9cdd249fdfcfacb99584001edd28abbab77b5104e98e8e3b35d4',
        '322af4908c7312b0cfbfe369f7a7b3cdb7d4494bc2823700cfd652188a3ea98d'
      ],
      [
        'af8addbf2b661c8a6c6328655eb96651252007d8c5ea31be4ad196de8ce2131f',
        '6749e67c029b85f52a034eafd096836b2520818680e26ac8f3dfbcdb71749700'
      ],
      [
        'e3ae1974566ca06cc516d47e0fb165a674a3dabcfca15e722f0e3450f45889',
        '2aeabe7e4531510116217f07bf4d07300de97e4874f81f533420a72eeb0bd6a4'
      ],
      [
        '591ee355313d99721cf6993ffed1e3e301993ff3ed258802075ea8ced397e246',
        'b0ea558a113c30bea60fc4775460c7901ff0b053d25ca2bdeee98f1a4be5d196'
      ],
      [
        '11396d55fda54c49f19aa97318d8da61fa8584e47b084945077cf03255b52984',
        '998c74a8cd45ac01289d5833a7beb4744ff536b01b257be4c5767bea93ea57a4'
      ],
      [
        '3c5d2a1ba39c5a1790000738c9e0c40b8dcdfd5468754b6405540157e017aa7a',
        'b2284279995a34e2f9d4de7396fc18b80f9b8b9fdd270f6661f79ca4c81bd257'
      ],
      [
        'cc8704b8a60a0defa3a99a7299f2e9c3fbc395afb04ac078425ef8a1793cc030',
        'bdd46039feed17881d1e0862db347f8cf395b74fc4bcdc4e940b74e3ac1f1b13'
      ],
      [
        'c533e4f7ea8555aacd9777ac5cad29b97dd4defccc53ee7ea204119b2889b197',
        '6f0a256bc5efdf429a2fb6242f1a43a2d9b925bb4a4b3a26bb8e0f45eb596096'
      ],
      [
        'c14f8f2ccb27d6f109f6d08d03cc96a69ba8c34eec07bbcf566d48e33da6593',
        'c359d6923bb398f7fd4473e16fe1c28475b740dd098075e6c0e8649113dc3a38'
      ],
      [
        'a6cbc3046bc6a450bac24789fa17115a4c9739ed75f8f21ce441f72e0b90e6ef',
        '21ae7f4680e889bb130619e2c0f95a360ceb573c70603139862afd617fa9b9f'
      ],
      [
        '347d6d9a02c48927ebfb86c1359b1caf130a3c0267d11ce6344b39f99d43cc38',
        '60ea7f61a353524d1c987f6ecec92f086d565ab687870cb12689ff1e31c74448'
      ],
      [
        'da6545d2181db8d983f7dcb375ef5866d47c67b1bf31c8cf855ef7437b72656a',
        '49b96715ab6878a79e78f07ce5680c5d6673051b4935bd897fea824b77dc208a'
      ],
      [
        'c40747cc9d012cb1a13b8148309c6de7ec25d6945d657146b9d5994b8feb1111',
        '5ca560753be2a12fc6de6caf2cb489565db936156b9514e1bb5e83037e0fa2d4'
      ],
      [
        '4e42c8ec82c99798ccf3a610be870e78338c7f713348bd34c8203ef4037f3502',
        '7571d74ee5e0fb92a7a8b33a07783341a5492144cc54bcc40a94473693606437'
      ],
      [
        '3775ab7089bc6af823aba2e1af70b236d251cadb0c86743287522a1b3b0dedea',
        'be52d107bcfa09d8bcb9736a828cfa7fac8db17bf7a76a2c42ad961409018cf7'
      ],
      [
        'cee31cbf7e34ec379d94fb814d3d775ad954595d1314ba8846959e3e82f74e26',
        '8fd64a14c06b589c26b947ae2bcf6bfa0149ef0be14ed4d80f448a01c43b1c6d'
      ],
      [
        'b4f9eaea09b6917619f6ea6a4eb5464efddb58fd45b1ebefcdc1a01d08b47986',
        '39e5c9925b5a54b07433a4f18c61726f8bb131c012ca542eb24a8ac07200682a'
      ],
      [
        'd4263dfc3d2df923a0179a48966d30ce84e2515afc3dccc1b77907792ebcc60e',
        '62dfaf07a0f78feb30e30d6295853ce189e127760ad6cf7fae164e122a208d54'
      ],
      [
        '48457524820fa65a4f8d35eb6930857c0032acc0a4a2de422233eeda897612c4',
        '25a748ab367979d98733c38a1fa1c2e7dc6cc07db2d60a9ae7a76aaa49bd0f77'
      ],
      [
        'dfeeef1881101f2cb11644f3a2afdfc2045e19919152923f367a1767c11cceda',
        'ecfb7056cf1de042f9420bab396793c0c390bde74b4bbdff16a83ae09a9a7517'
      ],
      [
        '6d7ef6b17543f8373c573f44e1f389835d89bcbc6062ced36c82df83b8fae859',
        'cd450ec335438986dfefa10c57fea9bcc521a0959b2d80bbf74b190dca712d10'
      ],
      [
        'e75605d59102a5a2684500d3b991f2e3f3c88b93225547035af25af66e04541f',
        'f5c54754a8f71ee540b9b48728473e314f729ac5308b06938360990e2bfad125'
      ],
      [
        'eb98660f4c4dfaa06a2be453d5020bc99a0c2e60abe388457dd43fefb1ed620c',
        '6cb9a8876d9cb8520609af3add26cd20a0a7cd8a9411131ce85f44100099223e'
      ],
      [
        '13e87b027d8514d35939f2e6892b19922154596941888336dc3563e3b8dba942',
        'fef5a3c68059a6dec5d624114bf1e91aac2b9da568d6abeb2570d55646b8adf1'
      ],
      [
        'ee163026e9fd6fe017c38f06a5be6fc125424b371ce2708e7bf4491691e5764a',
        '1acb250f255dd61c43d94ccc670d0f58f49ae3fa15b96623e5430da0ad6c62b2'
      ],
      [
        'b268f5ef9ad51e4d78de3a750c2dc89b1e626d43505867999932e5db33af3d80',
        '5f310d4b3c99b9ebb19f77d41c1dee018cf0d34fd4191614003e945a1216e423'
      ],
      [
        'ff07f3118a9df035e9fad85eb6c7bfe42b02f01ca99ceea3bf7ffdba93c4750d',
        '438136d603e858a3a5c440c38eccbaddc1d2942114e2eddd4740d098ced1f0d8'
      ],
      [
        '8d8b9855c7c052a34146fd20ffb658bea4b9f69e0d825ebec16e8c3ce2b526a1',
        'cdb559eedc2d79f926baf44fb84ea4d44bcf50fee51d7ceb30e2e7f463036758'
      ],
      [
        '52db0b5384dfbf05bfa9d472d7ae26dfe4b851ceca91b1eba54263180da32b63',
        'c3b997d050ee5d423ebaf66a6db9f57b3180c902875679de924b69d84a7b375'
      ],
      [
        'e62f9490d3d51da6395efd24e80919cc7d0f29c3f3fa48c6fff543becbd43352',
        '6d89ad7ba4876b0b22c2ca280c682862f342c8591f1daf5170e07bfd9ccafa7d'
      ],
      [
        '7f30ea2476b399b4957509c88f77d0191afa2ff5cb7b14fd6d8e7d65aaab1193',
        'ca5ef7d4b231c94c3b15389a5f6311e9daff7bb67b103e9880ef4bff637acaec'
      ],
      [
        '5098ff1e1d9f14fb46a210fada6c903fef0fb7b4a1dd1d9ac60a0361800b7a00',
        '9731141d81fc8f8084d37c6e7542006b3ee1b40d60dfe5362a5b132fd17ddc0'
      ],
      [
        '32b78c7de9ee512a72895be6b9cbefa6e2f3c4ccce445c96b9f2c81e2778ad58',
        'ee1849f513df71e32efc3896ee28260c73bb80547ae2275ba497237794c8753c'
      ],
      [
        'e2cb74fddc8e9fbcd076eef2a7c72b0ce37d50f08269dfc074b581550547a4f7',
        'd3aa2ed71c9dd2247a62df062736eb0baddea9e36122d2be8641abcb005cc4a4'
      ],
      [
        '8438447566d4d7bedadc299496ab357426009a35f235cb141be0d99cd10ae3a8',
        'c4e1020916980a4da5d01ac5e6ad330734ef0d7906631c4f2390426b2edd791f'
      ],
      [
        '4162d488b89402039b584c6fc6c308870587d9c46f660b878ab65c82c711d67e',
        '67163e903236289f776f22c25fb8a3afc1732f2b84b4e95dbda47ae5a0852649'
      ],
      [
        '3fad3fa84caf0f34f0f89bfd2dcf54fc175d767aec3e50684f3ba4a4bf5f683d',
        'cd1bc7cb6cc407bb2f0ca647c718a730cf71872e7d0d2a53fa20efcdfe61826'
      ],
      [
        '674f2600a3007a00568c1a7ce05d0816c1fb84bf1370798f1c69532faeb1a86b',
        '299d21f9413f33b3edf43b257004580b70db57da0b182259e09eecc69e0d38a5'
      ],
      [
        'd32f4da54ade74abb81b815ad1fb3b263d82d6c692714bcff87d29bd5ee9f08f',
        'f9429e738b8e53b968e99016c059707782e14f4535359d582fc416910b3eea87'
      ],
      [
        '30e4e670435385556e593657135845d36fbb6931f72b08cb1ed954f1e3ce3ff6',
        '462f9bce619898638499350113bbc9b10a878d35da70740dc695a559eb88db7b'
      ],
      [
        'be2062003c51cc3004682904330e4dee7f3dcd10b01e580bf1971b04d4cad297',
        '62188bc49d61e5428573d48a74e1c655b1c61090905682a0d5558ed72dccb9bc'
      ],
      [
        '93144423ace3451ed29e0fb9ac2af211cb6e84a601df5993c419859fff5df04a',
        '7c10dfb164c3425f5c71a3f9d7992038f1065224f72bb9d1d902a6d13037b47c'
      ],
      [
        'b015f8044f5fcbdcf21ca26d6c34fb8197829205c7b7d2a7cb66418c157b112c',
        'ab8c1e086d04e813744a655b2df8d5f83b3cdc6faa3088c1d3aea1454e3a1d5f'
      ],
      [
        'd5e9e1da649d97d89e4868117a465a3a4f8a18de57a140d36b3f2af341a21b52',
        '4cb04437f391ed73111a13cc1d4dd0db1693465c2240480d8955e8592f27447a'
      ],
      [
        'd3ae41047dd7ca065dbf8ed77b992439983005cd72e16d6f996a5316d36966bb',
        'bd1aeb21ad22ebb22a10f0303417c6d964f8cdd7df0aca614b10dc14d125ac46'
      ],
      [
        '463e2763d885f958fc66cdd22800f0a487197d0a82e377b49f80af87c897b065',
        'bfefacdb0e5d0fd7df3a311a94de062b26b80c61fbc97508b79992671ef7ca7f'
      ],
      [
        '7985fdfd127c0567c6f53ec1bb63ec3158e597c40bfe747c83cddfc910641917',
        '603c12daf3d9862ef2b25fe1de289aed24ed291e0ec6708703a5bd567f32ed03'
      ],
      [
        '74a1ad6b5f76e39db2dd249410eac7f99e74c59cb83d2d0ed5ff1543da7703e9',
        'cc6157ef18c9c63cd6193d83631bbea0093e0968942e8c33d5737fd790e0db08'
      ],
      [
        '30682a50703375f602d416664ba19b7fc9bab42c72747463a71d0896b22f6da3',
        '553e04f6b018b4fa6c8f39e7f311d3176290d0e0f19ca73f17714d9977a22ff8'
      ],
      [
        '9e2158f0d7c0d5f26c3791efefa79597654e7a2b2464f52b1ee6c1347769ef57',
        '712fcdd1b9053f09003a3481fa7762e9ffd7c8ef35a38509e2fbf2629008373'
      ],
      [
        '176e26989a43c9cfeba4029c202538c28172e566e3c4fce7322857f3be327d66',
        'ed8cc9d04b29eb877d270b4878dc43c19aefd31f4eee09ee7b47834c1fa4b1c3'
      ],
      [
        '75d46efea3771e6e68abb89a13ad747ecf1892393dfc4f1b7004788c50374da8',
        '9852390a99507679fd0b86fd2b39a868d7efc22151346e1a3ca4726586a6bed8'
      ],
      [
        '809a20c67d64900ffb698c4c825f6d5f2310fb0451c869345b7319f645605721',
        '9e994980d9917e22b76b061927fa04143d096ccc54963e6a5ebfa5f3f8e286c1'
      ],
      [
        '1b38903a43f7f114ed4500b4eac7083fdefece1cf29c63528d563446f972c180',
        '4036edc931a60ae889353f77fd53de4a2708b26b6f5da72ad3394119daf408f9'
      ]
    ]
  }
};


/***/ }),

/***/ "./node_modules/.6.4.1@elliptic/lib/elliptic/utils.js":
/*!************************************************************!*\
  !*** ./node_modules/.6.4.1@elliptic/lib/elliptic/utils.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = exports;
var BN = __webpack_require__(/*! bn.js */ "./node_modules/.4.11.8@bn.js/lib/bn.js");
var minAssert = __webpack_require__(/*! minimalistic-assert */ "./node_modules/.1.0.1@minimalistic-assert/index.js");
var minUtils = __webpack_require__(/*! minimalistic-crypto-utils */ "./node_modules/.1.0.1@minimalistic-crypto-utils/lib/utils.js");

utils.assert = minAssert;
utils.toArray = minUtils.toArray;
utils.zero2 = minUtils.zero2;
utils.toHex = minUtils.toHex;
utils.encode = minUtils.encode;

// Represent num in a w-NAF form
function getNAF(num, w) {
  var naf = [];
  var ws = 1 << (w + 1);
  var k = num.clone();
  while (k.cmpn(1) >= 0) {
    var z;
    if (k.isOdd()) {
      var mod = k.andln(ws - 1);
      if (mod > (ws >> 1) - 1)
        z = (ws >> 1) - mod;
      else
        z = mod;
      k.isubn(z);
    } else {
      z = 0;
    }
    naf.push(z);

    // Optimization, shift by word if possible
    var shift = (k.cmpn(0) !== 0 && k.andln(ws - 1) === 0) ? (w + 1) : 1;
    for (var i = 1; i < shift; i++)
      naf.push(0);
    k.iushrn(shift);
  }

  return naf;
}
utils.getNAF = getNAF;

// Represent k1, k2 in a Joint Sparse Form
function getJSF(k1, k2) {
  var jsf = [
    [],
    []
  ];

  k1 = k1.clone();
  k2 = k2.clone();
  var d1 = 0;
  var d2 = 0;
  while (k1.cmpn(-d1) > 0 || k2.cmpn(-d2) > 0) {

    // First phase
    var m14 = (k1.andln(3) + d1) & 3;
    var m24 = (k2.andln(3) + d2) & 3;
    if (m14 === 3)
      m14 = -1;
    if (m24 === 3)
      m24 = -1;
    var u1;
    if ((m14 & 1) === 0) {
      u1 = 0;
    } else {
      var m8 = (k1.andln(7) + d1) & 7;
      if ((m8 === 3 || m8 === 5) && m24 === 2)
        u1 = -m14;
      else
        u1 = m14;
    }
    jsf[0].push(u1);

    var u2;
    if ((m24 & 1) === 0) {
      u2 = 0;
    } else {
      var m8 = (k2.andln(7) + d2) & 7;
      if ((m8 === 3 || m8 === 5) && m14 === 2)
        u2 = -m24;
      else
        u2 = m24;
    }
    jsf[1].push(u2);

    // Second phase
    if (2 * d1 === u1 + 1)
      d1 = 1 - d1;
    if (2 * d2 === u2 + 1)
      d2 = 1 - d2;
    k1.iushrn(1);
    k2.iushrn(1);
  }

  return jsf;
}
utils.getJSF = getJSF;

function cachedProperty(obj, name, computer) {
  var key = '_' + name;
  obj.prototype[name] = function cachedProperty() {
    return this[key] !== undefined ? this[key] :
           this[key] = computer.call(this);
  };
}
utils.cachedProperty = cachedProperty;

function parseBytes(bytes) {
  return typeof bytes === 'string' ? utils.toArray(bytes, 'hex') :
                                     bytes;
}
utils.parseBytes = parseBytes;

function intFromLE(bytes) {
  return new BN(bytes, 'hex', 'le');
}
utils.intFromLE = intFromLE;



/***/ }),

/***/ "./node_modules/.6.4.1@elliptic/package.json":
/*!***************************************************!*\
  !*** ./node_modules/.6.4.1@elliptic/package.json ***!
  \***************************************************/
/*! exports provided: name, version, description, main, files, scripts, repository, keywords, author, license, bugs, homepage, devDependencies, dependencies, _from, _resolved, default */
/***/ (function(module) {

module.exports = {"name":"elliptic","version":"6.4.1","description":"EC cryptography","main":"lib/elliptic.js","files":["lib"],"scripts":{"jscs":"jscs benchmarks/*.js lib/*.js lib/**/*.js lib/**/**/*.js test/index.js","jshint":"jscs benchmarks/*.js lib/*.js lib/**/*.js lib/**/**/*.js test/index.js","lint":"npm run jscs && npm run jshint","unit":"istanbul test _mocha --reporter=spec test/index.js","test":"npm run lint && npm run unit","version":"grunt dist && git add dist/"},"repository":{"type":"git","url":"git@github.com:indutny/elliptic"},"keywords":["EC","Elliptic","curve","Cryptography"],"author":"Fedor Indutny <fedor@indutny.com>","license":"MIT","bugs":{"url":"https://github.com/indutny/elliptic/issues"},"homepage":"https://github.com/indutny/elliptic","devDependencies":{"brfs":"^1.4.3","coveralls":"^2.11.3","grunt":"^0.4.5","grunt-browserify":"^5.0.0","grunt-cli":"^1.2.0","grunt-contrib-connect":"^1.0.0","grunt-contrib-copy":"^1.0.0","grunt-contrib-uglify":"^1.0.1","grunt-mocha-istanbul":"^3.0.1","grunt-saucelabs":"^8.6.2","istanbul":"^0.4.2","jscs":"^2.9.0","jshint":"^2.6.0","mocha":"^2.1.0"},"dependencies":{"bn.js":"^4.4.0","brorand":"^1.0.1","hash.js":"^1.0.0","hmac-drbg":"^1.0.0","inherits":"^2.0.1","minimalistic-assert":"^1.0.0","minimalistic-crypto-utils":"^1.0.0"},"_from":"elliptic@6.4.1","_resolved":"https://registry.npm.taobao.org/elliptic/download/elliptic-6.4.1.tgz"};

/***/ }),

/***/ "./src/Decode.ts":
/*!***********************!*\
  !*** ./src/Decode.ts ***!
  \***********************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
// @ts-ignore
var opus = __webpack_require__(/*! ../lib/libopus */ "./lib/libopus.js");
class Decode {
    constructor(format) {
        this.format = format;
        this.buflen = 4096;
        this.buf = opus._malloc(this.buflen);
        this.outlen = 4096;
        this.outbuf = opus._malloc(this.outlen * this.format.channelsPerFrame * 4);
        this.f32 = this.outbuf >> 2;
        this.opus = opus._opus_decoder_create(this.format.sampleRate, this.format.channelsPerFrame, this.buf);
    }
    decodePacket(packet) {
        if (this.buflen < packet.length) {
            this.buf = opus._realloc(this.buf, packet.length);
            this.buflen = packet.length;
        }
        opus.HEAPU8.set(packet, this.buf);
        // console.log(packet);
        // console.log(this.opus, this.buf, packet.length, this.outbuf, this.outlen, 0);
        var len = opus._opus_decode_float(this.opus, this.buf, packet.length, this.outbuf, this.outlen, 0);
        if (len < 0)
            throw new Error("Opus decoding error: " + len);
        var samples = opus.HEAPF32.subarray(this.f32, this.f32 + len * this.format.channelsPerFrame);
        return new Float32Array(samples);
    }
    destory() {
        opus._free(this.buf);
        opus._free(this.outbuf);
        opus._opus_decoder_destroy(this.opus);
        this.buf = null;
        this.outbuf = null;
        this.opus = null;
    }
}
exports.default = Decode;


/***/ }),

/***/ "./src/Player.ts":
/*!***********************!*\
  !*** ./src/Player.ts ***!
  \***********************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const Decode_1 = __webpack_require__(/*! ./Decode */ "./src/Decode.ts");
const Webaudio_1 = __webpack_require__(/*! ./Webaudio */ "./src/Webaudio.ts");
const events_1 = __webpack_require__(/*! events */ "./node_modules/.3.0.0@events/events.js");
class Player extends events_1.EventEmitter {
    constructor() {
        super();
        this.format = {
            formatID: 'opus',
            sampleRate: 48000,
            channelsPerFrame: 2,
            floatingPoint: true
        };
        this.queue = [];
        this.decode = new Decode_1.default(this.format);
    }
    play() {
        this.webaudio = new Webaudio_1.default(this.format);
        this.webaudio.on('refill', this.onRiff.bind(this));
    }
    onRiff(buffer) {
        // console.log("onRiff");
        let bufferOffset = 0;
        if (!this.cacheFrame) {
            this.cacheFrame = this.queue.shift();
            this.cacheFrameOffset = 0;
        }
        while (this.cacheFrame && bufferOffset < buffer.length) {
            let max = Math.min(this.cacheFrame.length - this.cacheFrameOffset, buffer.length - bufferOffset);
            for (let i = 0; i < max; i++) {
                // @ts-ignore
                buffer[bufferOffset++] = this.cacheFrame[this.cacheFrameOffset++];
            }
            if (this.cacheFrameOffset === this.cacheFrame.length) {
                this.cacheFrame = this.queue.shift();
                this.cacheFrameOffset = 0;
            }
        }
        this.queue = [];
    }
    readPacket(packet) {
        try {
            let decodedPacket = this.decode.decodePacket(packet);
            this.queue.push(decodedPacket);
        }
        catch (error) {
            this.emit('error', error);
        }
    }
}
exports.default = Player;


/***/ }),

/***/ "./src/Webaudio.ts":
/*!*************************!*\
  !*** ./src/Webaudio.ts ***!
  \*************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const events_1 = __webpack_require__(/*! events */ "./node_modules/.3.0.0@events/events.js");
class Webaudio extends events_1.EventEmitter {
    constructor(format) {
        super();
        this.format = format;
        this.sampleRate = this.format.sampleRate;
        this.channels = this.format.channelsPerFrame;
        // @ts-ignore
        const AudioCtx = window.AudioContext || window.webkitAudioContext;
        this.context = new AudioCtx();
        this.bufferSize = Math.ceil(4096 * this.channels);
        this.bufferSize += this.bufferSize % this.channels;
        var createProcessor;
        const audioProcessorSupported = AudioCtx && (typeof AudioCtx.prototype[createProcessor = 'createScriptProcessor'] === 'function' ||
            typeof AudioCtx.prototype[createProcessor = 'createJavaScriptNode'] === 'function');
        if (!audioProcessorSupported) {
            throw Error('Audio processor dose supported');
        }
        // @ts-ignore
        this.node = this.context[createProcessor](4096, this.channels, this.channels);
        this.node.onaudioprocess = this.refill.bind(this);
        this.node.connect(this.context.destination);
    }
    refill(event) {
        // console.log("riff");
        let outputBuffer = event.outputBuffer;
        let channelCount = outputBuffer.numberOfChannels;
        let channels = new Array(channelCount);
        for (let i = 0; i < channelCount; i++) {
            channels[i] = outputBuffer.getChannelData(i);
        }
        let data = new Float32Array(this.bufferSize);
        this.emit('refill', data);
        for (let j = 0; j < outputBuffer.length; j++) {
            for (let k = 0; k < channelCount; k++) {
                channels[k][j] = data[j * channelCount + k];
            }
        }
        // console.log(channels);
    }
    destroy() {
        return this.node.disconnect(0);
    }
}
exports.default = Webaudio;


/***/ }),

/***/ "./src/index.ts":
/*!**********************!*\
  !*** ./src/index.ts ***!
  \**********************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const Player_1 = __webpack_require__(/*! ./Player */ "./src/Player.ts");
exports.default = Player_1.default;


/***/ }),

/***/ 0:
/*!**********************!*\
  !*** util (ignored) ***!
  \**********************/
/*! no static exports found */
/***/ (function(module, exports) {

/* (ignored) */

/***/ }),

/***/ 1:
/*!**********************!*\
  !*** util (ignored) ***!
  \**********************/
/*! no static exports found */
/***/ (function(module, exports) {

/* (ignored) */

/***/ }),

/***/ 2:
/*!************************!*\
  !*** buffer (ignored) ***!
  \************************/
/*! no static exports found */
/***/ (function(module, exports) {

/* (ignored) */

/***/ }),

/***/ 3:
/*!************************!*\
  !*** crypto (ignored) ***!
  \************************/
/*! no static exports found */
/***/ (function(module, exports) {

/* (ignored) */

/***/ }),

/***/ "fs":
/*!*********************!*\
  !*** external "fs" ***!
  \*********************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = __WEBPACK_EXTERNAL_MODULE_fs__;

/***/ })

/******/ })["default"];
});
//# sourceMappingURL=out.js.map